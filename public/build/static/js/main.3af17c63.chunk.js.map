{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","actions/types.js","Components/StoreInventory/StoreInventory.jsx","game_modules/store.js","game_modules/days.js","game_modules/supplies.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/SupplierBuyButton/SupplierBuyButton.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","Components/Days/Days.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","game_modules/main.js","Containers/StartScreen/StartScreen.jsx","Utilities/userPutRequests.js","Containers/ProfileViewer/ProfileViewer.jsx","Components/MobileStoreHeadbar/MobileStoreHeadbar.jsx","Utilities/mobileScreens.js","Components/MobileMenu/MobileMenu.jsx","Containers/MobileGameScreen/MobileGameScreen.jsx","Utilities/screenInfo.js","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/suppliesReducer.js","reducers/profileReducer.js","reducers/appStateReducer.js","reducers/mobileMenuReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","itemTypeIndex","itemPrototypeIndex","lastIndex","Item","payload","type","name","value","prototypeId","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","getItemType","getItemPrototypeId","getItemTypeIndex","createTestPotion","lvl","healing","getItemTypes","storeInventory","inventory","composeInventory","composedInventory","forEach","gameItems","itemId","markup","addItem","undefined","newStoreItem","getStoreInventory","updateStoreInventory","store","dispatch","dispatchStoreInventory","getComposedInventory","getFilteredInventory","newFilter","toLowerCase","filter","getFilteredStoreItems","markupFilteredStoreItems","newMarkup","markupAmount","inventoryItem","markupStoreItem","markupById","markupPrototypes","markupByPrototype","StoreInventory","props","state","timer","delay","markupIntensity","valence","increaseMarkup","bind","repeat","onMouseDown","onMouseUp","markupOut","handleMobileFocus","handleOneIncrement","handlePrototypeIncrement","getInventoryItems","getIncrementOneButtons","getIncrementAllButtons","newInventory","JSON","parse","stringify","gameInventory","setInventory","setState","e","refBtnClasses","target","classList","contains","repeatPayload","setTimeout","clearTimeout","posNeg","toggleStoreUpdateStatus","itemsPayload","className","onTouchStart","onTouchEnd","mobileDetail","mobileItemDetail","mobilItemeDetail","setMobileDetail","setMobileItemDetail","window","setStoreMobileDetail","setStoreMobileDetailItem","filteredInventory","length","filterActive","storeFilter","map","composedPrice","Math","floor","key","isMobile","React","Component","connect","storeState","inventoryCount","storeNeedsUpdate","needsUpdate","app","detail","itemDetail","gameStore","gold","chargeGold","amount","getName","setName","newName","getStartingGold","getGold","setGold","newGold","updateGold","dispatchStoreGold","days","day","getDay","setDay","newDay","resetDay","supplies","suppliesPool","supplyLevel","itemTypesArr","Object","values","itemTypeCount","itemSpawnCount","fetchItemArrForSupplyPool","a","typeToFetch","maxLvl","fetchURL","fetch","possibleItems","json","getItemForSupplyPool","newItems","then","itemsOfLevel","dispatchSpawned","catch","err","spawnSupply","typeIndex","random","typeToSpawn","newSupplyArr","Array","isArray","Items","getSupplies","fillSupplies","i","dispatchReady","fillSupplyPool","typeItem","depleteSupply","supplyIndex","indexOf","splice","setSupplyLevel","suppliers","currentId","Supplier","offerings","prototype","rankFavorites","bestOfferings","offeringsCount","sort","off1","off2","rankedOfferings","sellItem","price","itemIndex","dispatchSuppliers","newSuppliers","fetchSuppliers","initSuppliers","getSuppliers","initializeSuppliers","maxSuppliers","next","drainSuppliers","pushIndex","newSupplier","supplierPayload","thisSupplier","supplier","takeSupplierTurn","remainingSupplies","supplyTypes","supplyValues","remainingSupply","supplyItem","currentSupplier","supplierCount","remSupply","remNum","supplierTries","thisIndex","taken","supplierIndex","favorites","thisSupply","takeSupplies","dispatchSupplyReady","refSupplier","sellPayload","updateSuppliers","fetchUser","axios","get","res","data","import_nickname","nickname","fetchGold","fetchDay","Store","mobileMultiplier","getMobileDetail","componentDidMount","toggleFilter","getFilter","handleFilter","getIncrementButtons","handleIncrease","handleDecrease","currentType","setStoreFilter","refBtn","defaultValue","onChange","itemType","newValue","setStoreFilterActive","inventoryComponent","storeName","role","aria-label","onClick","setStoreGold","SupplierBuyButton","getSuppllierInventory","handlePurchase","ids","storeGold","sellId","gameSuppliers","gameStoreInventory","initialized","thisInventory","inventoryGroups","valueGroups","typeGroups","idGroups","composedItems","entries","count","item1","item2","nameA","toUpperCase","nameB","findIndex","offering","composedValue","supplierClass","supplyReady","ready","Suppliers","componentDidUpdate","supplySpawned","gameSupplies","suppliersInitialized","gameSupplier","setSuppliersInitialized","supplierContainerClass","spacerClass","isPc","currentSuppliers","suppliersDisplay","renderSupplier","ref","node","container","suppliersClass","spawned","Days","handleNextDay","currentDay","mobileDropdown","setMobileDropdown","mobileMenu","dropdown","Details","GameScreen","Title","main","init","startingGold","getGameLevel","StartScreen","edited","handleStart","handleNameInput","game","setStarted","charCode","htmlFor","val","setStoreName","onKeyPress","started","gameState","auth","userPutRequests","makeRequest","putRoute","putBody","subBody","putRes","method","headers","body","ProfileViewer","handleClose","handleSubmit","updateUser","profileActive","setProfileActive","preventDefault","FormData","newNickname","newImportNickname","newId","action","onSubmit","placeholder","maxLength","class","defaultChecked","profile","active","MobileStoreHeadbar","mobileScreens","currentScreen","currentIndex","screens","allScreens","screenMap","screen","screenN","getCurrentScreen","nextScreen","previousScreen","getScreens","getAllScreens","setScreen","newScreen","screenIndex","updateScreen","dispatchMobileScreen","MobileMenu","handlePrevious","handleNext","handleDropdown","handleScreenChange","getMobileDropdown","mobileScreen","MobileGameScreen","screenInfo","isFullscreen","height","width","orientation","docDimensions","document","querySelector","getBoundingClientRect","setScreenInfo","dispatchIsPc","dispatchIsMobile","getIsPc","getIsMobile","setElementFullScreen","element","ele","fullscreen","fullscreenElement","dispatchFullscreen","MenuBar","mobileOpen","handleProfileActive","getLoginContainer","renderProfileLink","renderLogin","renderEditorLink","handleMobileOpen","href","mobileOffsetStyle","menuOffsets","style","getMobileMenu","App","getMainView","getProfileViewer","actions","initialState","storeUpdate","intitialState","combineReducers","updates","newCount","newStatus","number","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3af17c63.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let itemTypeIndex = {};\n  let itemPrototypeIndex = {};\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value, prototypeId } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.prototypeId = prototypeId;\n    this.id = lastIndex;\n    itemTypeIndex[lastIndex] = type;\n    itemPrototypeIndex[lastIndex] = prototypeId;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload, prototypeId } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value, prototypeId: prototypeId }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    getItemType(id) {\n      if (itemTypeIndex[id] !== null) {\n        return itemTypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemPrototypeId(id) {\n      if (itemPrototypeIndex[id] !== null) {\n        return itemPrototypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemTypeIndex() {\n      return itemTypeIndex;\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    }\n  }\n}());\n\nexport default items;","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_INVENTORY } from '../actions/types';\n\n// game module imports\nimport gameItems from './items';\n\nconst storeInventory = (function(){\n  // {\n  //   itemId: Number,\n  //   markup: number\n  // }\n  let inventory = [];\n\n  const maxMarkup = 4000;\n\n  const dispatchStoreInventory = function() {\n    const payload = {\n      type: SET_STORE_INVENTORY,\n      inventory: inventory\n    }\n    store.dispatch(payload);\n  }\n\n  const composeInventory = function() {\n    let composedInventory = [];\n      inventory.forEach(item => {\n        let thisItem = gameItems.getItem(item.itemId);\n        composedInventory.push({ ...thisItem, markup: item.markup });\n      });\n      return composedInventory;\n  }\n\n  const filterInventory = function(filter) {\n    let filteredInventory = composeInventory().filter(item => item.type === filter);\n    return filteredInventory;\n  }\n\n  const filterStoreItems = function(filter) {\n    let filteredIds = inventory.filter(item => {\n      return storeInventory.getItemType(item.itemId) === filter\n    });\n    return filteredIds;\n  }\n\n  const markupFilteredItems = function(filter, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (filter.toLowerCase() === 'all' || gameItems.getItemType(inventoryItem.itemId) === filter) {\n        inventoryItem.markup += newMarkup;\n        if (inventoryItem.markup > maxMarkup) {\n          inventoryItem.markup = maxMarkup;\n        }\n        if (inventoryItem.markup < 0) {\n          inventoryItem.markup = 0;\n        }\n      }\n    });\n  }\n\n  const markupById = function(id, newMarkup) {\n    const targetItem = inventory.find(item => item.itemId === id);\n    targetItem.markup += newMarkup;\n  }\n\n  const markupByPrototype = function(prototypeId, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (gameItems.getItemPrototypeId(inventoryItem.itemId) === prototypeId) {\n        inventoryItem.markup += newMarkup;\n      }\n      if (inventoryItem.markup > maxMarkup) {\n        inventoryItem.markup = maxMarkup;\n      }\n      if (inventoryItem.markup < 0) {\n        inventoryItem.markup = 0;\n      }\n    })\n  }\n\n  return {\n    addItem: function(id) {\n      if (id === null || id === undefined) {\n        return false;\n      }\n      const newStoreItem = { itemId: id,\n        markup: 150\n      }\n      inventory.push(newStoreItem);\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    },\n\n    updateStoreInventory: function() {\n      dispatchStoreInventory();\n    },\n\n    getComposedInventory: function() {\n      return composeInventory();\n    },\n\n    getFilteredInventory: function(newFilter) {\n      if (!newFilter || newFilter.toLowerCase() === 'all') {\n        return composeInventory();\n      }\n      else {\n        return filterInventory(newFilter);\n      }\n    },\n    \n    getFilteredStoreItems: function(newFilter) {\n      return filterStoreItems(newFilter);\n    },\n\n    markupFilteredStoreItems: function(payload) {\n      let { filter:newFilter, markup:markupAmount } = payload;\n      markupFilteredItems(newFilter, markupAmount);\n    },\n    \n    markupStoreItem: function(payload) {\n      let { id, markup:markupAmount} = payload;\n      markupById(id, markupAmount);\n    },\n\n    markupPrototypes: function(payload) {\n      let { prototypeId, markup: markupAmount } = payload;\n      markupByPrototype(prototypeId, markupAmount);\n    }\n  }\n}());\n\nexport default storeInventory;","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = \"SET_STORE_INVENTORY\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_SUPPLY_READY = \"SET_SUPPLY_READY\";\nexport const SET_SUPPLY_SPAWNED = \"SET_SUPPLY_SPAWNED\";\nexport const SET_STORE_FILTER = \"SET_STORE_FILTER\";\nexport const SET_STORE_FILTER_ACTIVE = \"SET_STORE_FILTER_ACTIVE\";\nexport const SET_STORE_UPDATE_STATUS = \"SET_STORE_UPDATE_STATUS\";\nexport const SET_PROFILE_ACTIVE =\"SET_PROFILE_ACTIVE\";\nexport const SET_IS_FULLSCREEN = \"SET_IS_FULLSCREEN\";\nexport const SET_IS_PC = \"SET_IS_PC\";\nexport const SET_IS_MOBILE = \"SET_IS_MOBILE\";\nexport const SET_MOBILE_SCREEN = \"SET_MOBILE_SCREEN\";\nexport const SET_SUPPLIERS_INITIALIZED = \"SET_SUPPLIERS_INITIALIZED\";\nexport const SET_MOBILE_DROPDOWN = \"SET_MOBILE_DROPDOWN\";\nexport const SET_STORE_MOBILE_DETAIL = \"SET_STORE_MOBILE_DETAIL\";\nexport const SET_STORE_MOBILE_DETAIL_ITEM = \"SET_STORE_MOBILE_DETAIL_ITEM\";","import React from 'react';\nimport './StoreInventory.css';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../../actions/types';\n\nimport gameInventory from '../../game_modules/storeInventory';\n// import storeItems from '../../game_modules/items';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n    \n    this.handleMobileFocus = this.handleMobileFocus.bind(this);\n    this.handleOneIncrement = this.handleOneIncrement.bind(this);\n    this.handlePrototypeIncrement = this.handlePrototypeIncrement.bind(this);\n    this.getInventoryItems = this.getInventoryItems.bind(this);\n    this.getIncrementOneButtons = this.getIncrementOneButtons.bind(this);\n    this.getIncrementAllButtons = this.getIncrementAllButtons.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(gameInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  increaseMarkup() {\n    this.setState({\n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  onMouseDown(payload) {\n    const { e } = payload;\n    let id = null, prototypeId = null;\n    if (payload.id !== null) {\n      id = payload.id;\n    }\n    if (payload.prototypeId !== null) {\n      prototypeId = payload.prototypeId;\n    }\n    const refBtnClasses = e.target.classList;\n    if (refBtnClasses.contains(\"decreaseOne\") ||\n      refBtnClasses.contains(\"minusOne\") ||\n      refBtnClasses.contains(\"decreaseProto\") ||\n      refBtnClasses.contains(\"minusProto\")) {\n        this.valence = -1;\n    }\n    if (refBtnClasses.contains(\"increaseOne\") ||\n      refBtnClasses.contains(\"plusOne\") ||\n      refBtnClasses.contains(\"increaseProto\") ||\n      refBtnClasses.contains(\"plusProto\")) {\n        this.valence = 1;\n    }\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.repeat(repeatPayload);\n  }\n\n  repeat(payload) {\n    let { id, prototypeId } = payload;\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.increaseMarkup();\n    if (id !== undefined) {\n      this.handleOneIncrement(id);\n    }\n    if (prototypeId !== undefined) {\n      this.handlePrototypeIncrement(prototypeId);\n    }\n    this.timer = setTimeout(() => this.repeat(repeatPayload), this.delay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleOneIncrement(id) {\n    const posNeg = this.valence;\n    const itemPayload = {\n      id: id,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupStoreItem(itemPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handlePrototypeIncrement(prototypeId) {\n    const posNeg = this.valence;\n    const itemsPayload = {\n      prototypeId: prototypeId,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupPrototypes(itemsPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementOneButtons(id) {\n    return (\n      <div className=\"incrementButtons incrementOneSet\">\n        <div className=\"decreaseOne incrementButton button\"\n          onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n          onMouseUp={this.onMouseUp}\n          onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n          onTouchEnd={this.onMouseUp}>\n          <span className=\"incrementIcon minusOne\">-</span>\n        </div>\n        <div className=\"increaseOne incrementButton button\"\n          onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n          onMouseUp={this.onMouseUp}\n          onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n          onTouchEnd={this.onMouseUp}>\n          <span className=\"incrementIcon plusOne\">+</span>\n        </div>\n      </div>\n    )\n  }\n\n  getIncrementAllButtons(prototypeId) {\n    return (\n      <div className=\"incrementButtons incrementAllSet\">\n        <div className=\"decreaseProto incrementButtonWide button\"\n          onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n          onMouseUp={this.onMouseUp}\n          onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n          onTouchEnd={this.onMouseUp}>\n          <span className=\"incrementIcon minusProto\">--</span>\n        </div>\n        <div className=\"increaseProto incrementButtonWide button\"\n          onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n          onMouseUp={this.onMouseUp}\n          onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n          onTouchEnd={this.onMouseUp}>\n          <span className=\"incrementIcon plusProto\">++</span>\n        </div>\n      </div>\n    )\n  }\n\n  handleMobileFocus(item) {\n    console.log('handleMobileFocus');\n    console.log(this.props.mobileDetail);\n    if (this.props.mobileItemDetail && this.props.mobilItemeDetail.id === item.id) {\n      this.props.setMobileDetail(false);\n      this.props.setMobileItemDetail(null);\n      window.inventory = undefined;\n    } else {\n      this.props.setStoreMobileDetail(true);\n      this.props.setStoreMobileDetailItem(item);\n      window.inventory = this;\n    }\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      let filteredInventory;\n      if (!this.props.filterActive || this.props.storeFilter === 'all') {\n        filteredInventory = gameInventory.getComposedInventory();\n      } else {\n        filteredInventory = gameInventory.getFilteredInventory(this.props.storeFilter);\n      }\n      return (\n        <div>{filteredInventory.map(item => {\n          const composedPrice = Math.floor(item.value * (1 + (item.markup / 1000)));\n          return (\n            <div className=\"InventoryItem itemBackground\" \n              key={item.id}\n              onTouchStart={() => this.handleMobileFocus(item)}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              {this.props.isMobile ? '' : this.getIncrementOneButtons(item.id)}\n              {this.props.isMobile ? '' : this.getIncrementAllButtons(item.prototypeId)}\n              <div className=\"ItemValueGroup\">\n                <span className=\"InventoryItemValue\"><span className=\"CoinSymbol\">&#x2689; </span>{composedPrice}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory,\n    inventoryCount: state.storeState.inventoryCount,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS }),\n    setStoreMobileDetail: (detail) => dispatch({ type: SET_STORE_MOBILE_DETAIL, detail: detail }),\n    setStoreMobileDetailItem: (itemDetail) => dispatch({ type: SET_STORE_MOBILE_DETAIL_ITEM, itemDetail: itemDetail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_GOLD } from '../actions/types';\n\nconst gameStore = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n\n  const dispatchStoreGold = function() {\n    const payload = {\n      type: SET_STORE_GOLD,\n      amount: gold\n    }\n    store.dispatch(payload);\n  }\n  \n  return {\n    chargeGold: function(amount) {\n      if (gold < amount) {\n        console.log('attempted to charge more gold than vendor owns')\n        return false;\n      }\n      gold -= amount;\n    },\n    getName: function() {\n      return name;\n    },\n\n    setName: function(newName) {\n      name = newName;\n    },\n\n    getStartingGold: function() {\n      return startingGold;\n    },\n\n    getGold: function() {\n      return gold;\n    },\n\n    setGold: function(newGold) {\n      gold = newGold;\n    },\n    updateGold: function() {\n      dispatchStoreGold();\n    }\n  }\n}());\n\nexport default gameStore;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  let suppliesPool = {};\n  let supplyLevel = 1;\n\n  const itemTypesArr = Object.values(ItemTypes);\n  const itemTypeCount = itemTypesArr.length;\n  let itemSpawnCount = 0;\n\n  const dailySupplies = 10;\n\n  const dispatchReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSpawned = function(value) {\n    const payload = {\n      type: SET_SUPPLY_SPAWNED,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  // fill supply pool\n  const fetchSupplyPool = function() {\n    // produce array of type strings and choose one at random\n    itemSpawnCount = 0;\n    itemTypesArr.forEach(typeItem => {\n      if (suppliesPool[typeItem] == null) {\n        suppliesPool[typeItem] = [];\n      }\n      suppliesPool[typeItem].length = 0;\n    });\n\n    getItemForSupplyPool();\n    return true;\n  }\n\n  // fetch an item from backend\n  const fetchItemArrForSupplyPool = async function() {\n    let lvl = supplyLevel;\n    if (!lvl) return;\n\n    let typeToFetch = itemTypesArr[itemSpawnCount];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  // take an item that was fetched from backend and create it\n  // with item constructors and put it into state\n  const getItemForSupplyPool = function() {\n    if (itemSpawnCount >= itemTypeCount) {\n      return;\n    }\n    let newItems;\n    fetchItemArrForSupplyPool()\n      .then(itemsOfLevel => {\n        newItems = itemsOfLevel;\n      \n        // initialize field on pool if need be\n        if (suppliesPool[itemTypesArr[itemSpawnCount]] === null) {\n          suppliesPool[itemTypesArr[itemSpawnCount]] = [];\n        }\n        // push item id into supplies\n        suppliesPool[itemTypesArr[itemSpawnCount]].push(newItems);\n\n        itemSpawnCount++;\n        if (itemSpawnCount === itemTypeCount) {\n          dispatchSpawned(true);\n        }\n        getItemForSupplyPool();\n        return true;\n      }).catch(err => console.log(err));\n  }\n\n  const spawnSupply = function() {\n    // produce array of type strings and choose one at random\n    let typeIndex = Math.floor(Math.random() * itemTypesArr.length);\n    let typeToSpawn = itemTypesArr[typeIndex];\n    const newSupplyArr = suppliesPool[typeToSpawn];\n    let randomChoice = Math.floor(Math.random() * newSupplyArr.length);\n    let newItem = newSupplyArr[randomChoice];\n\n    if (Array.isArray(newItem)) {\n      newItem = newItem[0];\n    }\n\n    // compose payload for Item constructor\n    let itemPayload = {};\n    itemPayload.level = newItem.level;\n    switch(newItem.item.type) {\n      case ItemTypes.potion:\n        itemPayload.type = newItem.type;\n        break;\n      case ItemTypes.weapon:\n        itemPayload.damage = newItem.damage;\n        break;\n      case ItemTypes.armor:\n        itemPayload.armor = newItem.armor;\n        break;\n      default:\n        break;\n    }\n    let payload = {};\n    payload.itemPayload = itemPayload;\n    payload.type = newItem.item.type;\n    payload.name = newItem.item.name;\n    payload.value = newItem.item.value;\n    payload.prototypeId = newItem.item.id;\n\n    // create item and add to total inventory in Items module\n    let itemId = Items.createItem(payload);\n    supplies.push(itemId);\n\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function() {\n      for (let i = 0; i < dailySupplies; i++) {\n        spawnSupply();\n      }\n      dispatchReady(true);\n    },\n    fillSupplyPool: function() {\n      fetchSupplyPool();\n    },\n    depleteSupply: function(id) {\n      let supplyIndex = supplies.indexOf(id);\n      if (supplyIndex >= 0) {\n        let chosenSupply = supplies.splice(supplyIndex, 1);\n        return chosenSupply;\n      }\n    },\n    setSupplyLevel: function(lvl) {\n      supplyLevel = lvl;\n    }\n  }\n}());\n\nexport default supplies;","// game imports\nimport supplies from './supplies';\nimport items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLIERS, SET_SUPPLY_READY } from '../actions/types';\n\nconst suppliers = (function(){\n\n  let suppliers = [];\n\n  let currentId = 0;\n\n  const startingGold = 1000;\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n    this.inventory = [];\n    this.id = currentId;\n    currentId++;\n  }\n\n  Supplier.prototype.rankFavorites = function() {\n    let bestOfferings = [];\n    const offeringsCount = this.offerings.length;\n    for (let i = 0; i < offeringsCount; i++) {\n      bestOfferings.push(this.offerings[i]);\n    }\n    bestOfferings.sort((off1, off2) => {\n      return off1.markup - off2.markup;\n    });\n    this.rankedOfferings = bestOfferings;\n  }\n\n  Supplier.prototype.sellItem = function(payload) {\n    let { id, price } = payload;\n\n    const itemIndex = this.inventory.indexOf(id);\n    if (!itemIndex && itemIndex !== 0) {\n      return false;\n    }\n\n    this.inventory.splice(itemIndex, 1);\n    this.gold += price;\n\n    return true;\n  }\n\n  const dispatchSuppliers = function(newSuppliers) {\n    const payload = {\n      type: SET_SUPPLIERS,\n      payload: newSuppliers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSupplyReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers;\n      try {\n        initSuppliers = await fetch('/suppliers');\n      } catch (err) {\n        console.log(err);\n      }\n      if (initSuppliers) {\n        initSuppliers = initSuppliers.json();\n      }\n      return initSuppliers;\n  }\n\n  const getSuppliers = function*() {\n    yield fetchSuppliers();\n  }\n\n  const takeSupplies = function() {\n    // copy supplies to local array\n    const remainingSupplies = JSON.parse(JSON.stringify(supplies.getSupplies()));\n    let supplyTypes = [];\n    let supplyValues = [];\n    remainingSupplies.forEach(remainingSupply => {\n      const supplyItem = items.getItem(remainingSupply);\n      supplyTypes.push(supplyItem.type);\n      supplyValues.push(supplyItem.value);\n    });\n    let currentSupplier = 0;\n    const supplierCount = suppliers.length;\n    // loop through each supply item\n    remainingSupplies.forEach((remSupply, remNum) => {\n      // create an order based on last supplier to take an\n      // item and proceeded sequentially to include all\n      // suppliers\n      let supplierTries = [];\n      for (let i = 0; i < supplierCount; i++) {\n        let thisIndex = currentSupplier + i;\n        if (thisIndex >= supplierCount) {\n          thisIndex -= supplierCount;\n        }\n        supplierTries.push(thisIndex);\n      }\n      let taken = false;\n      \n      // check with each supplier if type of current supply is\n      // in their offerings\n      supplierTries.forEach(supplierIndex => {\n        let favorites = suppliers[supplierIndex].rankedOfferings;\n        for (let fave of favorites) {\n          // if type of supplier's offering equals type of this supply\n          if (fave.type === supplyTypes[remNum]) {\n            if (!taken && suppliers[supplierIndex].gold >= supplyValues[remNum]) {\n              // if supplier inventory not initialized, set to empty array\n              if (suppliers[supplierIndex].inventory === null) {\n                suppliers[supplierIndex].inventory = [];\n              }\n\n              // remove item from supply\n              let thisSupply = supplies.depleteSupply(remSupply);\n              if (Array.isArray(thisSupply)) {\n                thisSupply = thisSupply[0];\n              }\n\n              suppliers[supplierIndex].gold -= supplyValues[remNum];\n\n              // put item in supplier's inventory\n              suppliers[supplierIndex].inventory.push(thisSupply);\n\n              // mark item taken;\n              taken = true;\n              currentSupplier = supplierIndex + 1;\n              if (currentSupplier > supplierCount) {\n                currentSupplier = 0;\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      const gGetSuppliers = getSuppliers();\n      gGetSuppliers.next().value\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              thisSupplier.gold = startingGold;\n              suppliers.push(thisSupplier);\n            }\n            suppliers.forEach(supplier => supplier.rankFavorites());\n            dispatchSuppliers(suppliers);\n            return suppliers;\n          }\n        });\n    },\n    getSuppliers: function() {\n      return suppliers;\n    },\n    takeSupplierTurn: function() {\n      takeSupplies();\n      dispatchSuppliers(suppliers);\n      dispatchSupplyReady(false);\n    },\n    sellItem: function (payload) {\n      const { id, itemId, price} = payload;\n      \n      const thisSupplier = suppliers.find(refSupplier => refSupplier.id === id);\n      if (!thisSupplier) {\n        return false;\n      }\n      const sellPayload = {\n        id: itemId,\n        price: price\n      }\n\n      const resSale = thisSupplier.sellItem(sellPayload);\n      if (!resSale) {\n        return false;\n      }\n      return true;\n    },\n    updateSuppliers: function() {\n      dispatchSuppliers(suppliers);\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, SET_STORE_GOLD, SET_DAY, SET_SUPPLIERS, SET_STORE_NAME } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n  if (res.data && res.data.import_nickname) {\n    dispatch({ type: SET_STORE_NAME, name: res.data.nickname});\n  }\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}","import React from 'react';\nimport './Store.css';\n\n// import game modules\n// import gameStore from '../../game_modules/store';\nimport gameInventory from '../../game_modules/storeInventory';\n\n\n// import components\nimport ItemTypes from '../../Utilities/itemTypes';\nimport StoreInventory from '../StoreInventory/StoreInventory';\n\n\n// redux imports\nimport { SET_STORE_GOLD,\n  SET_STORE_FILTER, \n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.mobileMultiplier = 2;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n\n    this.getMobileDetail = this.getMobileDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.getFilter = this.getFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.getIncrementButtons = this.getIncrementButtons.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }\n\n  handleFilter(e) {\n    let currentType = e.target.value;\n    this.props.setStoreFilter(currentType);\n  }\n\n  increaseMarkup() {\n    this.setState({ \n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  // Proccess mousedown event to start incremental markup\n  onMouseDown(e) {\n    const refBtn = e.target;\n    if (refBtn.classList.contains(\"decreaseAll\") ||\n      refBtn.classList.contains(\"minus\")) {\n      this.valence = -1;\n    }\n    if (refBtn.classList.contains(\"increaseAll\" ||\n      refBtn.classList.contains(\"plus\"))) {\n      this.valence = 1;\n    }\n    this.repeat();\n  }\n\n  repeat() {\n    this.increaseMarkup();\n    if (this.valence === -1) {\n      this.handleDecrease();\n    }\n    if (this.valence === 1) {\n      this.handleIncrease();\n    }\n    this.timer = setTimeout(this.repeat, this.delay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleIncrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: this.state.markup\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handleDecrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: (this.state.markup * -1)\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementButtons() {\n    if (!this.props.filterActive) return '';\n    return (\n      <div className=\"incrementButtons\">\n        <div className=\"decreaseAll incrementButton button\"\n          onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}\n          onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n          <span className=\"incrementIcon minus\">-</span>\n        </div>\n        <div className=\"increaseAll incrementButton button\"\n          onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}\n          onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n          <span className=\"incrementIcon plus\">+</span>\n        </div>\n      </div>\n    )\n  }\n\n  getFilter() {\n    if (!this.props.filterActive) return '';\n    const itemTypesArr = Object.values(ItemTypes);\n    return (\n      <select className=\"StoreItemTypeFilter\" \n        defaultValue={this.props.storeFilter}\n        onChange={this.handleFilter}>\n        <option value=\"all\">all</option>\n        {itemTypesArr.map(itemType => {\n          return (\n            <option value={itemType}>{itemType}</option>\n          )\n        })}\n      </select>\n    )\n  }\n\n  toggleFilter() {\n    const newValue = !this.props.filterActive;\n    this.props.setStoreFilterActive(newValue);\n  }\n\n  getMobileDetail() {\n    if (!this.props.isMobile) {\n      return '';\n    }\n    if (this.props.filterActive) {\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          {this.getIncrementButtons()}\n          {this.getFilter()}\n        </div>\n      )\n    }\n    if (this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          <div className=\"itemDetailName\">{this.props.mobileItemDetail.name}</div>\n          {inventoryComponent.getIncrementOneButtons(this.props.mobileItemDetail.id)}\n          {inventoryComponent.getIncrementAllButtons(this.props.mobileItemDetail.prototypeId)}\n        </div>\n      )\n    }\n    return (\n      <div className=\"MobileDetailContainer\"></div>\n    );\n  }\n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <div className=\"FilterGroup\">\n            {this.props.isMobile ? '' : this.getIncrementButtons()}\n            {this.props.isMobile ? '' : this.getFilter()}\n          </div>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\" onClick={this.toggleFilter}>&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n        </div>\n        <StoreInventory />\n        {this.getMobileDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold()),\n    setStoreFilter: (filter) => dispatch({ type: SET_STORE_FILTER, filter: filter }),\n    setStoreFilterActive: (value) => dispatch({ type: SET_STORE_FILTER_ACTIVE, value: value }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './SupplierBuyButton.css';\n\nclass SupplierBuyButton extends React.Component {\n  render() {\n    return (\n      <div className=\"SupplierBuyButton button\">\n        <div className=\"supplierBuyButtonIcon\">\n          buy\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SupplierBuyButton;","import React from 'react';\nimport './Supplier.css';\n\nimport SupplierBuyButton from '../SupplierBuyButton/SupplierBuyButton';\n\n// game module imports\nimport gameItems from '../../game_modules/items';\nimport gameSuppliers from '../../game_modules/suppliers'\nimport gameStore from '../../game_modules/store';\nimport gameStoreInventory from '../../game_modules/storeInventory';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n\nclass Supplier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppllierInventory = this.getSuppllierInventory.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handlePurchase(payload) {\n    const { ids, price } = payload;\n\n    if (price > this.props.storeGold) {\n      return;\n    }\n\n    // sell first item of object\n    const sellId = ids[0];\n    const sellPayload = {\n      id: this.props.supplier.id,\n      itemId: sellId,\n      price: price\n    }\n    let sellRes = gameSuppliers.sellItem(sellPayload);\n    if (!sellRes) {\n      return;\n    }\n\n    // transact sale for vendor\n    gameStore.chargeGold(price);\n    gameStoreInventory.addItem(sellId);\n\n    // update state\n    gameStore.updateGold();\n    gameStoreInventory.updateStoreInventory();\n    gameSuppliers.updateSuppliers();\n\n  }\n\n  getSuppllierInventory() {\n    if (!this.props.initialized) {\n      return ''\n    }\n    // get details on items from ids\n    let thisInventory = [];\n    this.props.supplier.inventory.forEach(id => {\n      let inventoryItem = gameItems.getItem(id);\n      thisInventory.push(inventoryItem);\n    });\n\n    // organize all items by item name\n    let inventoryGroups = {};\n    let valueGroups = {}\n    let typeGroups = {}\n    let idGroups = {}\n    thisInventory.forEach(item => {\n      if (!inventoryGroups[item.name]) {\n        inventoryGroups[item.name] = 1;\n        valueGroups[item.name] = item.value;\n        typeGroups[item.name] = item.type;\n        idGroups[item.name] = [item.id]\n      } else {\n        inventoryGroups[item.name] += 1;\n        idGroups[item.name].push(item.id);\n      }\n    });\n\n    // create array of composed items\n    let composedItems = []\n    for (const [key, value] of Object.entries(inventoryGroups)) {\n      let item = { name: key, count: value, type: typeGroups[key], value: valueGroups[key], ids: idGroups[key] };\n      composedItems.push(item);\n    }\n\n    composedItems.sort((item1, item2) => {\n      const nameA = item1.name.toUpperCase();\n      const nameB = item2.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return composedItems.map(item => {\n      const offerings = this.props.supplier.offerings;\n      const typeIndex = offerings.findIndex(offering => offering.type === item.type);\n      \n      let composedValue = item.value;\n      if (typeIndex !== -1) {\n        composedValue = composedValue * (1 + (offerings[typeIndex].markup / 1000));\n        composedValue = Math.floor(composedValue);\n      }\n\n      return (\n        <div className=\"SupplierInventoryItem itemBackground\" key={item.id}>\n          <span className=\"SupplierInventoryItemName\">{item.name} ({item.count})</span>\n          <div className=\"SupplierItemsValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{composedValue}</span>\n          </div>\n          <div className=\"BuyButtonContainer\" onClick={() => this.handlePurchase({ ids: item.ids, price: composedValue })}>\n              <SupplierBuyButton />\n            </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    let supplierClass = \"Supplier\";\n    if (this.props.isMobile) {\n      supplierClass += \" mobileSupplier\";\n    }\n    return (\n      <div className={supplierClass}>\n        <div className=\"SupplierName\">\n          {this.props.supplier.name}\n          <div className=\"SupplierValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{this.props.supplier.gold}</span>\n          </div>\n        </div>\n        <div className=\"supplierInventory\">\n          {this.getSuppllierInventory()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    supplyReady: state.supplies.ready,\n    storeGold: state.storeState.gold,\n    isMobile: state.app.isMobile\n  }\n}\n\nexport default connect(mapStateToProps)(Supplier);","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_SUPPLIERS_INITIALIZED } from '../../actions/types';\n\n// game imports\nimport gameSupplier from '../../game_modules/suppliers';\nimport gameSupplies from '../../game_modules/supplies';\n// import suppliers from '../../game_modules/suppliers';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppliers = this.getSuppliers.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateSuppliers = this.updateSuppliers.bind(this);\n  }\n\n  updateSuppliers() {\n    if (Array.isArray(this.props.suppliers) && this.props.supplySpawned) {\n      if (!this.props.supplyReady) {\n        gameSupplies.fillSupplies();\n      }\n    }\n    if (Array.isArray(this.props.suppliers) && this.props.supplyReady) {\n      if (!this.props.suppliersInitialized) {\n        gameSupplier.takeSupplierTurn();\n        this.props.setSuppliersInitialized(true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateSuppliers();\n  }\n\n  componentDidUpdate() {\n    this.updateSuppliers();\n  }\n\n  getSuppliers() {\n    let supplierContainerClass = \"suppliersContainer\";\n    let spacerClass = \"spacer\";\n    if (!this.props.isPc) {\n      supplierContainerClass += \" nonPcContainer\";\n    }\n    if (this.props.isMobile) {\n      supplierContainerClass += \" mobileContainer\";\n      spacerClass += \" mobileSpacer\";\n    }\n    let currentSuppliers = this.props.suppliers;\n    if (Array.isArray(currentSuppliers)) {\n      const suppliersDisplay = currentSuppliers.map(renderSupplier => {\n        return (<Supplier supplier={renderSupplier} initialized={this.props.suppliersInitialized}/>);\n      });\n\n      return (\n        <div className={supplierContainerClass}\n          ref={node => {\n            this.container = node;\n          }}>\n          {suppliersDisplay}\n          <div className={spacerClass}></div>\n        </div>\n      );\n    } else {\n      return 'no suppliers to render';\n    }\n    \n  }\n  \n  render() {\n    let suppliersClass = \"Suppliers\";\n    if (this.props.isMobile) {\n      suppliersClass += \" mobileSuppliers\";\n    }\n    if (!this.props.isPc && !this.props.isMobile) {\n      suppliersClass += \" tabletAdjust\";\n    }\n    return (\n      <div className={suppliersClass}>\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    supplyReady: state.supplies.ready,\n    supplySpawned: state.supplies.spawned,\n    isPc: state.app.isPc,\n    isMobile: state.app.isMobile,\n    suppliersInitialized: state.suppliers.initialized\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSuppliersInitialized: (value) => dispatch({ type: SET_SUPPLIERS_INITIALIZED, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Suppliers);","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days\">\n        <div className=\"DayTitle\">Day: {this.props.day}</div>\n        <div className=\"nextDay button\" onClick={this.handleNextDay}\n        >Finish Day</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay()),\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","import React from 'react';\nimport './Details.css';\n\nclass Details extends React.Component {\n  render() {\n    return (\n      <div className=\"Details\">\n        Details\n      </div>\n    )\n  }\n}\n\nexport default Details;","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import days from './days';\nimport gameStore from './store';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\n\nconst main = (function() {\n  \n  const maxSuppliers = 3;\n  let currentMaxLevel = 1;\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      gameStore.setName(payload.name);\n\n      const startingGold = gameStore.getStartingGold();\n      gameStore.setGold(startingGold);\n\n      supplies.setSupplyLevel(currentMaxLevel);\n      supplies.fillSupplyPool();\n      suppliers.initializeSuppliers(maxSuppliers);\n\n    },\n\n    getGameLevel: function() {\n      return currentMaxLevel;\n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false\n    }\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n    if (!this.props.edited) {\n      this.setState({ edited: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"StartScreen\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","const userPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default userPutRequests;","import React from 'react';\nimport './ProfileViewer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\nimport { fetchUser } from '../../actions'\n\n// utitlity imports\nimport userPutRequests from '../../Utilities/userPutRequests';\n\nclass ProfileViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  handleClose() {\n    if (this.props.profileActive) {\n      this.props.setProfileActive(false);\n    }\n  }\n\n  *updateUser(data) {\n    yield userPutRequests.makeRequest('user', data);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateUser = this.updateUser(data);\n    updateUser.next().value.then(() => {\n      this.props.fetchUser();\n      this.props.setProfileActive(false);\n    });\n  }\n  \n  render() {\n    let newNickname = '';\n    let newImportNickname = false;\n    let newId = null;\n    console.log(this.props.auth);\n\n    if (this.props.auth) {\n      newNickname = this.props.auth.nickname;\n      newImportNickname = this.props.auth.import_nickname;\n      newId = this.props.auth.id;\n    }\n\n    return (\n      <div className=\"ProfileViewer\">\n        <div className=\"ProfileForm\">\n          <form action={'/profile'}\n            className=\"input-fields-area\"\n            id=\"ProfileForm\"\n            method=\"POST\"\n            onSubmit={this.handleSubmit}>\n              <div className=\"input-group\">\n                <label className=\"item-label\" htmlFor=\"nickname\">Nickname</label>\n                <input type=\"text\" name=\"nickname\" id=\"nickname\" className=\"input-text\" placeholder=\"nickname\"\n                  maxLength=\"40\" defaultValue={newNickname}></input>\n              </div>\n              <div className=\"input-group\">\n                <input type=\"checkbox\" name=\"import_nickname\" id=\"import_nickname\" class=\"input-checkbox\" defaultChecked={newImportNickname} value={true}></input>\n                <label className=\"item-label\" htmlFor=\"import_nickname\">Import nickname as store name by default</label>\n              </div>\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"submit\" value=\"Update Profile\" className=\"button profile-submit\"></input>\n          </form>\n        </div>\n        <div className=\"CloseButton\"\n          onClick={this.handleClose}>\n            X\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    profileActive: state.profile.active,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value }),\n    fetchUser: () => dispatch(fetchUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewer);","import React from 'react';\nimport './MobileStoreHeadbar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass MobileStoreHeadbar extends React.Component {\n  render() {\n    return (\n      <div className=\"MobileStoreHeadbar\">\n        <h2 className=\"StoreName\">{this.props.storeName}</h2>\n        <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n  }\n}\n\nexport default connect(mapStateToProps)(MobileStoreHeadbar);","// redux imports\nimport { store } from '../index';\nimport { SET_MOBILE_SCREEN } from '../actions/types';\n\nconst mobileScreens = (function(){\n  let currentScreen = '';\n  let currentIndex = 0;\n  const screens = ['store', 'suppliers'];\n\n  const allScreens = {\n    store: 'store',\n    suppliers: 'suppliers'\n  }\n\n  let screenMap = {};\n\n  const mapScreens = function() {\n    screens.forEach((screen, screenN) => {\n      screenMap[screen] = screenN;\n    });\n  }\n\n  const dispatchMobileScreen = function() {\n    const payload = {\n      type: SET_MOBILE_SCREEN,\n      screen: currentScreen\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentScreen = screens[0];\n      currentIndex = 0;\n      mapScreens();\n    },\n\n    getCurrentScreen: function() {\n      return currentScreen;\n    },\n\n    nextScreen: function() {\n      currentIndex++;\n      if (currentIndex >= screens.length) {\n        currentIndex = 0;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    previousScreen: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = screens.length -1;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    getScreens: function() {\n      return screens;\n    },\n\n    getAllScreens: function() {\n      return allScreens;\n    },\n\n    setScreen: function(newScreen) {\n      const screenIndex = screenMap[newScreen];\n      if (screenIndex === null) {\n        return false;\n      } else {\n        currentIndex = screenIndex;\n        currentScreen = screens[screenIndex];\n        return true;\n      }\n    },\n\n    updateScreen: function() {\n      dispatchMobileScreen();\n    }\n  }\n}());\n\nexport default mobileScreens;","import React from 'react';\nimport './MobileMenu.css';\n\n// component imports\nimport Days from '../Days/Days';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.getMobileDropdown = this.getMobileDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    mobileScreens.init();\n  }\n  \n  handlePrevious() {\n    mobileScreens.previousScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleNext() {\n    mobileScreens.nextScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setMobileDropdown(!this.props.mobileDropdown)\n  }\n\n  handleScreenChange(newScreen) {\n    mobileScreens.setScreen(newScreen);\n    mobileScreens.updateScreen();\n    this.props.setMobileDropdown(false);\n  }\n\n  getMobileDropdown() {\n    const allScreens = mobileScreens.getScreens();\n    if (this.props.mobileDropdown) {\n      return (\n        <div className=\"MobileDropdown\">\n          <Days />\n          {allScreens.map(screen => {\n            return (\n              <div className=\"mobileDropdownOption\"\n                onClick={() => this.handleScreenChange(screen)}>{screen}</div>\n            )\n      })}\n      </div>)\n      \n    } else {\n      return false;\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileMenu\">\n        <span className=\"previousScreen screenArrow\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"mobileTitle\"\n          onClick={this.handleDropdown}>{this.props.mobileScreen}</span>\n        <span className=\"nextScreen screenArrow\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getMobileDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileMenu);","import React from 'react';\nimport './MobileGameScreen.css';\n\nimport Store from '../../Components/Store/Store';\nimport MobileStoreHeadbar from '../../Components/MobileStoreHeadbar/MobileStoreHeadbar';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport MobileMenu from '../../Components/MobileMenu/MobileMenu';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileGameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentScreen: 'store'\n    }\n  }\n\n  getCurrentScreen() {\n    const allScreens = mobileScreens.getAllScreens();\n    switch(this.props.mobileScreen) {\n      case allScreens.store:\n        return <Store />;\n      case allScreens.suppliers:\n        return (\n          <div>\n            <MobileStoreHeadbar />\n            <Suppliers />\n          </div>\n        \n        );\n      default:\n        return 'Nothing to display';\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileGameScreen\">\n        <MobileMenu />\n        {this.getCurrentScreen()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen\n  }\n}\n\nexport default connect(mapStateToProps)(MobileGameScreen);","import { store } from '../index';\nimport { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst screenInfo = (function(){\n  let isPc = true;\n  let isMobile = false;\n  let isFullscreen = true;\n\n  let height = 0;\n  let width = 0;\n  console.log(height, width);\n\n  const dispatchFullscreen = function() {\n    const payload = {\n      type: SET_IS_FULLSCREEN,\n      value: isFullscreen\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsPc = function() {\n    const payload = {\n      type: SET_IS_PC,\n      value: isPc\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsMobile = function() {\n    const payload = {\n      type: SET_IS_MOBILE,\n      value: isMobile\n    }\n    store.dispatch(payload);\n  }\n\n  const detectPc = function() {\n    const notPc = window.orientation > -1;\n    return !notPc;\n    \n  }\n\n  const setFullScreen = function(ele) {\n    isFullscreen = true;\n    document.fullscreen = true;\n    document.fullscreenElement = ele;\n  }\n\n  const setScreenInfo = function() {\n    const app = document.querySelector('.App');\n    const docDimensions = app.getBoundingClientRect();\n    height = docDimensions.height;\n    width = docDimensions.width;\n\n    if (width < 768) {\n      isMobile = true\n    } \n  }\n\n  return {\n    init: function() {\n      isPc = detectPc();\n      setScreenInfo();\n      dispatchIsPc();\n      dispatchIsMobile();\n    },\n    getIsPc: function() {\n      return isPc;\n    },\n    getIsMobile: function() {\n      return isMobile;\n    },\n    setElementFullScreen: function(element) {\n      setFullScreen(element);\n      dispatchFullscreen();\n    }\n  }\n}());\n\nexport default screenInfo;","import React from 'react';\nimport './MenuBar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mobileOpen: false\n    }\n\n    this.handleProfileActive = this.handleProfileActive.bind(this);\n    this.getLoginContainer = this.getLoginContainer.bind(this);\n    this.renderProfileLink = this.renderProfileLink.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n    this.handleMobileOpen = this.handleMobileOpen.bind(this);\n  }\n\n  handleProfileActive() {\n    if (!this.props.profileActive) {\n      this.props.setProfileActive(true);\n    }\n    this.handleMobileOpen();\n  }\n\n  handleMobileOpen() {\n    if (this.props.profileActive && !this.state.mobileOpen) {\n      return;\n    }\n    this.setState({ mobileOpen: !this.state.mobileOpen});\n  }\n\n  renderProfileLink() {\n    switch(this.props.auth) {\n      case null:\n        return '';\n      case false:\n        return '';\n      default:\n        return <li key=\"profile\" class=\"profileLink\" onClick={this.handleProfileActive}>profile</li>\n    }\n  }\n\n  renderLogin() {\n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\">login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner' && screenInfo.getIsPc()) {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n\n  getLoginContainer() {\n    if (this.props.isMobile) {\n      return (\n        <div className=\"hamburgerContainer\"\n          onClick={this.handleMobileOpen}>\n          <div className=\"hamburgerLine\"></div>\n          <div className=\"hamburgerLine\"></div>\n          <div className=\"hamburgerLine\"></div>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"LoginContainer\">\n        {this.renderProfileLink()}\n        {this.renderEditorLink()}\n        {this.renderLogin()}\n      </ul>\n    )\n  }\n\n  getMobileMenu() {\n    if (this.props.isMobile && this.state.mobileOpen) {\n      let mobileOffsetStyle = {};\n      let menuOffsets = 1;\n        if (this.props.auth) {\n          menuOffsets += 1;\n        }\n        mobileOffsetStyle.height = `calc(${(menuOffsets * 1.8)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px`;\n        \n      return (\n        <div className=\"mobileMenuContainer\"\n          onClick={this.handleMobileOpen}>\n          <ul className=\"LoginContainer mobileMenu\"\n            style={mobileOffsetStyle}\n            >\n            {this.renderProfileLink()}\n            {this.renderEditorLink()}\n            {this.renderLogin()}\n          </ul>\n        </div>\n        \n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        {this.getLoginContainer()}\n        {this.getMobileMenu()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\n// game module imports\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\nimport ProfileViewer from '../../Containers/ProfileViewer/ProfileViewer';\nimport MobileGameScreen from '../../Containers/MobileGameScreen/MobileGameScreen';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\n// component imports\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.getProfileViewer = this.getProfileViewer.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n    screenInfo.init();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      if (this.props.isMobile) {\n        return (\n          <MobileGameScreen />\n        )\n      } else {\n        return (\n          <GameScreen />\n        )\n      }\n    }\n  }\n\n  getProfileViewer() {\n    const profileStatus = this.props.profileActive;\n    if (profileStatus) {\n      return (\n        <ProfileViewer />\n      )\n    }\n  }  \n\n  render() {\n    return (\n      <div className=\"App\"\n        ref={ref => {\n          this.container = ref;\n        }}>\n        <MenuBar />\n        {this.getMainView()}\n        {this.getProfileViewer()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY,\n  SET_STORE_FILTER,\n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  filterActive: false,\n  filter: 'all',\n  needsUpdate: false,\n  inventory: [],\n  inventoryCount: 0,\n  mobileDetail: null,\n  mobileItemDetail: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      let newCount = state.inventoryCount;\n      if (Array.isArray(newInventory)) {\n        newCount = newInventory.length;\n      }\n      return {\n        ...state,\n        inventory: newInventory,\n        inventoryCount: newCount\n      }\n    case SET_STORE_FILTER_ACTIVE:\n      return {\n        ...state,\n        filterActive: action.value\n      }\n    case SET_STORE_FILTER:\n      return {\n        ...state,\n        filter: action.filter\n      }\n    case SET_STORE_UPDATE_STATUS:\n      const newStatus = !state.needsUpdate;\n      return {\n        ...state,\n        needsUpdate: newStatus\n      }\n    case SET_STORE_MOBILE_DETAIL:\n      return {\n        ...state,\n        mobileDetail: action.detail\n      }\n    case SET_STORE_MOBILE_DETAIL_ITEM:\n      return {\n        ...state,\n        mobileItemDetail: action.itemDetail\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS, SET_SUPPLIERS_INITIALIZED } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0,\n  initialized: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n      case SET_SUPPLIERS_INITIALIZED:\n        return {\n          ...state,\n          initialized: action.value\n        }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst initialState = {\n  ready: false,\n  spawned: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLY_READY:\n      return {\n        ...state,\n        ready: action.value\n      }\n    case SET_SUPPLY_SPAWNED:\n      return {\n        ...state,\n        spawned: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_PROFILE_ACTIVE } from '../actions/types';\n\nconst initialState = {\n  active: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFILE_ACTIVE:\n      return {\n        ...state,\n        active: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst initialState = {\n  isFullscreen: false,\n  isPc: true,\n  isMobile: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: action.value\n      }\n    case SET_IS_PC:\n      return {\n        ...state,\n        isPc: action.value\n      }\n    case SET_IS_MOBILE:\n      return {\n        ...state,\n        isMobile: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_MOBILE_SCREEN, SET_MOBILE_DROPDOWN } from '../actions/types';\n\nconst intitialState = {\n  screen: 'store',\n  dropdown: false\n}\n\nexport default function(state = intitialState, action) {\n  switch(action.type) {\n    case SET_MOBILE_SCREEN:\n      return {\n        ...state,\n        screen: action.screen\n      }\n    case SET_MOBILE_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\nimport suppliesReducer from './suppliesReducer';\nimport profileReducer from './profileReducer';\nimport appStateReducer from './appStateReducer';\nimport mobileMenuReducer from './mobileMenuReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer,\n  supplies: suppliesReducer,\n  profile: profileReducer,\n  app: appStateReducer,\n  mobileMenu: mobileMenuReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}