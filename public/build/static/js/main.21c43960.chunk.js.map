{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","actions/types.js","Components/StoreInventory/StoreInventory.jsx","game_modules/store.js","game_modules/days.js","game_modules/supplies.js","Utilities/fetcher.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/SupplierBuyButton/SupplierBuyButton.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","game_modules/gameConstants.js","game_modules/dungeon.js","game_modules/adventurers.js","game_modules/main.js","Components/Days/Days.jsx","Utilities/pcMenus.js","Utilities/pcDetailMenus.js","Components/DetailPCMenu/DetailPCMenu.jsx","Utilities/screenInfo.js","Utilities/breadcrumb.js","Utilities/mobileScreens.js","Components/Adventurer/Adventurer.jsx","Components/Adventurers/Adventurers.jsx","Components/AdventurerDetail/AdventurerDetail.jsx","Components/Dungeon/Dungeon.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","Containers/StartScreen/StartScreen.jsx","Utilities/userPutRequests.js","Containers/ProfileViewer/ProfileViewer.jsx","Components/MobileStoreHeadbar/MobileStoreHeadbar.jsx","Components/MobileMenu/MobileMenu.jsx","Containers/MobileGameScreen/MobileGameScreen.jsx","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/suppliesReducer.js","reducers/profileReducer.js","reducers/appStateReducer.js","reducers/mobileMenuReducer.js","reducers/adventurersReducer.js","reducers/pcDetailReducer.js","reducers/detailReducer.js","reducers/dungeonReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","itemTypeIndex","itemPrototypeIndex","lastIndex","Item","payload","type","name","value","prototypeId","rarity","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","getItemType","getItemPrototypeId","getItemTypeIndex","createTestPotion","lvl","healing","getItemTypes","storeInventory","inventory","composeInventory","composedInventory","forEach","gameItems","itemId","markup","addItem","undefined","newStoreItem","removeItem","filter","getStoreInventory","updateStoreInventory","store","dispatch","dispatchStoreInventory","getComposedInventory","getFilteredInventory","newFilter","toLowerCase","getFilteredStoreItems","markupFilteredStoreItems","newMarkup","markupAmount","inventoryItem","markupStoreItem","markupById","markupPrototypes","markupByPrototype","StoreInventory","props","state","timer","mobileMultiplier","delay","markupIntensity","valence","increaseMarkup","bind","repeat","onMouseDown","onMouseUp","markupOut","handleMobileFocus","handleOneIncrement","handlePrototypeIncrement","getInventoryItems","getIncrementOneButtons","getIncrementAllButtons","newInventory","JSON","parse","stringify","gameInventory","setInventory","setState","e","refBtnClasses","target","classList","contains","repeatPayload","totaldelay","setTimeout","clearTimeout","posNeg","toggleStoreUpdateStatus","itemsPayload","isPc","className","onTouchStart","onTouchEnd","mobileItem","mobileItemDetail","mobileDetail","setStoreMobileDetail","setStoreMobileDetailItem","window","filteredInventory","length","filterActive","storeFilter","map","composedPrice","Math","floor","itemClass","key","React","Component","connect","storeState","inventoryCount","storeNeedsUpdate","needsUpdate","isMobile","app","detail","itemDetail","gameStore","gold","chargeGold","amount","creditGold","getName","setName","newName","getStartingGold","getGold","setGold","newGold","updateGold","dispatchStoreGold","days","day","getDay","setDay","newDay","resetDay","supplies","suppliesPool","supplyLevel","itemTypesArr","Object","values","itemTypeCount","itemSpawnCount","fetchItemArrForSupplyPool","a","typeToFetch","maxLvl","fetchURL","fetch","possibleItems","json","getItemForSupplyPool","newItems","then","itemsOfLevel","dispatchSpawned","catch","err","spawnSupply","typeIndex","random","typeToSpawn","newSupplyArr","Array","isArray","Items","getSupplies","fillSupplies","i","dispatchReady","fillSupplyPool","typeItem","depleteSupply","supplyIndex","indexOf","splice","setSupplyLevel","fetcher","fetchRoute","routeName","response","suppliers","currentId","Supplier","offerings","prototype","rankFavorites","bestOfferings","offeringsCount","sort","off1","off2","rankedOfferings","sellItem","price","itemIndex","takeIncome","dispatchSuppliers","newSuppliers","fetchSuppliers","initSuppliers","getSuppliers","initializeSuppliers","maxSuppliers","next","drainSuppliers","pushIndex","newSupplier","supplierPayload","thisSupplier","supplier","takeSupplierTurn","remainingSupplies","supplyTypes","supplyValues","remainingSupply","supplyItem","currentSupplier","supplierCount","remSupply","remNum","supplierTries","thisIndex","taken","supplierIndex","favorites","thisSupply","takeSupplies","dispatchSupplyReady","refSupplier","sellPayload","takeSupplierIncomeTurns","updateSuppliers","fetchUser","axios","get","res","data","import_nickname","nickname","fetchGold","fetchDay","Store","getMobileDetail","componentDidMount","toggleFilter","getFilter","handleFilter","getIncrementButtons","handleIncrease","handleDecrease","currentType","setStoreFilter","refBtn","totalDelay","pc","defaultValue","onChange","itemType","newValue","setStoreFilterActive","inventoryComponent","storeName","role","aria-label","onClick","setStoreGold","SupplierBuyButton","getSuppllierInventory","handlePurchase","ids","storeGold","sellId","gameSuppliers","gameStoreInventory","initialized","thisInventory","inventoryGroups","valueGroups","typeGroups","idGroups","composedItems","entries","count","item1","item2","nameA","toUpperCase","nameB","findIndex","offering","composedValue","supplierClass","supplyReady","ready","Suppliers","componentDidUpdate","supplySpawned","gameSupplies","suppliersInitialized","gameSupplier","setSuppliersInitialized","supplierContainerClass","spacerClass","currentSuppliers","suppliersDisplay","renderSupplier","ref","node","container","suppliersClass","spawned","gameConstants","startingAdventurers","dailyAdventurers","adventurerStartingGold","dungeon","levels","adventurers","Level","number","boss","bossId","monstersMinLevel","monstersMaxLevel","tileAssignments","treasureDropList","treasures","monsters","monstersLoot","treasureListFetched","monstersFetched","monsterDropListItemsFetched","intialized","initialize","dispatchLevels","dispatchExploredLevel","fetchLevels","initLevels","getLevels","initializeLevels","newLevel","shift","levelPayload","boss_id","monsters_min_level","monsters_max_level","tile_assignments","dropList","thisLevel","level1","level2","updateLevels","getExploredLevel","receiveAdventurer","adventurerId","levelOne","addAdventurer","releaseAdventurer","adventurer","deleteAdventurer","Adventurer","strength","speed","cunning","intelligence","constitution","dungeonBehavior","townBehavior","adventurerClass","experience","hp","maxHp","equipment","inDungeon","informed","checkAccount","chargeAccount","unequipItem","slot","equipItem","getCurrentItemCount","protoId","protoCount","addCombatLog","message","combatLog","getCombatLog","dispatchAdventurers","newAdventurers","fetchAdventurers","initAdventurers","getAdventurers","initializeAdventurers","maxAdventurers","drainAdventurers","newAdventurer","adventurerPayload","dungeon_behavior","town_behavior","adventurer_class","thisAdventurer","updateAdventurers","takeAdventurerTurn","townAdventurer","totalFactor","use_tavern","totalCost","combatLogMessage","inventoryItems","composedItem","shoppingAdventurers","adventurerTurn","adventurerCount","adventurerTries","adventurerIndex","decisionFactor","itemProto","currentHoldings","willBuy","currentGear","totalPrice","playerStore","doShopping","dungeonAdventurer","enter_dungeon","main","init","startingGold","getGameLevel","performTurn","dispatchUpdate","Days","handleNextDay","currentDay","mobileDropdown","setMobileDropdown","mobileMenu","dropdown","pcMenus","pcDetailMenus","currentMenu","currentIndex","menus","menuMap","menu","menuN","getCurrentMenu","nextMenu","previousMenu","getMenus","setmenu","newMenu","menuIndex","updateMenu","dispatchPCMenu","DetailPCMenu","handlePrevious","handleNext","handleDropdown","handleMenuChange","getPCDropdown","pcDropdown","setPcDropdown","allMenus","pcDetailMenu","pcMenu","dungeonLevelExplored","exploredLevel","setPcDetailMenu","screenInfo","isFullscreen","dispatchFullscreen","orientation","docDimensions","document","querySelector","getBoundingClientRect","width","setScreenInfo","dispatchIsPc","dispatchIsMobile","getIsPc","getIsMobile","goFullScreen","App","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setFullScreen","leaveFullScreen","exitFullscreen","breadcrumb","breadcrumbs","Breadcrumb","displayPayload","scrollPos","dispatchDisplay","screen","popBreadcrumb","pop","addBreadcrumb","display","newCrumb","mobileScreens","currentScreen","screens","allScreens","screenMap","screenN","getCurrentScreen","nextScreen","previousScreen","getScreens","getAllScreens","setScreen","newScreen","screenIndex","updateScreen","dispatchMobileScreen","handleZoom","setDetailId","scrollY","scrollTop","screenPos","setMobileScreen","setPCDetail","adventurerClassColor","adventurerClassIconColor","classColors","thief","bard","soldier","classIcon","charAt","Adventurers","adventurerUpdate","update","AdventurerDetail","handleBack","adventurerInventory","adventurerCombatLog","logEntry","detailId","getInventory","Dungeon","Details","formTable","loadFormTable","getDetail","tempTable","menuTypes","detailUpdate","setDetailUpdate","GameScreen","Title","StartScreen","edited","handleStart","handleNameInput","game","setStarted","charCode","htmlFor","val","setStoreName","onKeyPress","started","gameState","auth","userPutRequests","makeRequest","putRoute","putBody","subBody","putRes","method","headers","body","ProfileViewer","handleClose","handleSubmit","updateUser","profileActive","setProfileActive","preventDefault","FormData","newNickname","newImportNickname","newId","action","onSubmit","placeholder","maxLength","class","defaultChecked","profile","active","MobileStoreHeadbar","MobileMenu","handleScreenChange","getMobileDropdown","mobileScreen","MobileGameScreen","MenuBar","mobileOpen","handleProfileActive","getLoginContainer","renderProfileLink","renderLogin","renderEditorLink","handleFullscreen","getFullScreenControls","handleMobileOpen","href","mobileOffsetStyle","menuOffsets","height","style","getMobileMenu","getMainView","getProfileViewer","actions","initialState","storeUpdate","intitialState","combineReducers","updates","newCount","newStatus","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.21c43960.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let itemTypeIndex = {};\n  let itemPrototypeIndex = {};\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value, prototypeId, rarity } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.prototypeId = prototypeId;\n    this.rarity = rarity;\n    this.id = lastIndex;\n    itemTypeIndex[lastIndex] = type;\n    itemPrototypeIndex[lastIndex] = prototypeId;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload, prototypeId, rarity } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value, prototypeId: prototypeId, rarity: rarity }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    getItemType(id) {\n      if (itemTypeIndex[id] !== null) {\n        return itemTypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemPrototypeId(id) {\n      if (itemPrototypeIndex[id] !== null) {\n        return itemPrototypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemTypeIndex() {\n      return itemTypeIndex;\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    }\n  }\n}());\n\nexport default items;","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_INVENTORY } from '../actions/types';\n\n// game module imports\nimport gameItems from './items';\n\nconst storeInventory = (function(){\n  // {\n  //   itemId: Number,\n  //   markup: number\n  // }\n  let inventory = [];\n\n  const maxMarkup = 4000;\n\n  const dispatchStoreInventory = function() {\n    const payload = {\n      type: SET_STORE_INVENTORY,\n      inventory: inventory\n    }\n    store.dispatch(payload);\n  }\n\n  const composeInventory = function() {\n    let composedInventory = [];\n      inventory.forEach(item => {\n        let thisItem = gameItems.getItem(item.itemId);\n        composedInventory.push({ ...thisItem, markup: item.markup });\n      });\n      return composedInventory;\n  }\n\n  const filterInventory = function(filter) {\n    let filteredInventory = composeInventory().filter(item => item.type === filter);\n    return filteredInventory;\n  }\n\n  const filterStoreItems = function(filter) {\n    let filteredIds = inventory.filter(item => {\n      return storeInventory.getItemType(item.itemId) === filter\n    });\n    return filteredIds;\n  }\n\n  const markupFilteredItems = function(filter, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (filter.toLowerCase() === 'all' || gameItems.getItemType(inventoryItem.itemId) === filter) {\n        inventoryItem.markup += newMarkup;\n        if (inventoryItem.markup > maxMarkup) {\n          inventoryItem.markup = maxMarkup;\n        }\n        if (inventoryItem.markup < 0) {\n          inventoryItem.markup = 0;\n        }\n      }\n    });\n  }\n\n  const markupById = function(id, newMarkup) {\n    const targetItem = inventory.find(item => item.itemId === id);\n    targetItem.markup += newMarkup;\n  }\n\n  const markupByPrototype = function(prototypeId, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (gameItems.getItemPrototypeId(inventoryItem.itemId) === prototypeId) {\n        inventoryItem.markup += newMarkup;\n      }\n      if (inventoryItem.markup > maxMarkup) {\n        inventoryItem.markup = maxMarkup;\n      }\n      if (inventoryItem.markup < 0) {\n        inventoryItem.markup = 0;\n      }\n    })\n  }\n\n  return {\n    addItem: function(id) {\n      if (id === null || id === undefined) {\n        return false;\n      }\n      const newStoreItem = { itemId: id,\n        markup: 150\n      }\n      inventory.push(newStoreItem);\n    },\n\n    removeItem: function(id) {\n      const foundItem = inventory.find(item => item.itemId === id);\n      if (foundItem) {\n        inventory = inventory.filter(item => item.itemId !== id);\n      }\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    },\n\n    updateStoreInventory: function() {\n      dispatchStoreInventory();\n    },\n\n    getComposedInventory: function() {\n      return composeInventory();\n    },\n\n    getFilteredInventory: function(newFilter) {\n      if (!newFilter || newFilter.toLowerCase() === 'all') {\n        return composeInventory();\n      }\n      else {\n        return filterInventory(newFilter);\n      }\n    },\n    \n    getFilteredStoreItems: function(newFilter) {\n      return filterStoreItems(newFilter);\n    },\n\n    markupFilteredStoreItems: function(payload) {\n      let { filter:newFilter, markup:markupAmount } = payload;\n      markupFilteredItems(newFilter, markupAmount);\n    },\n    \n    markupStoreItem: function(payload) {\n      let { id, markup:markupAmount} = payload;\n      markupById(id, markupAmount);\n    },\n\n    markupPrototypes: function(payload) {\n      let { prototypeId, markup: markupAmount } = payload;\n      markupByPrototype(prototypeId, markupAmount);\n    }\n  }\n}());\n\nexport default storeInventory;","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = \"SET_STORE_INVENTORY\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_SUPPLY_READY = \"SET_SUPPLY_READY\";\nexport const SET_SUPPLY_SPAWNED = \"SET_SUPPLY_SPAWNED\";\nexport const SET_STORE_FILTER = \"SET_STORE_FILTER\";\nexport const SET_STORE_FILTER_ACTIVE = \"SET_STORE_FILTER_ACTIVE\";\nexport const SET_STORE_UPDATE_STATUS = \"SET_STORE_UPDATE_STATUS\";\nexport const SET_PROFILE_ACTIVE =\"SET_PROFILE_ACTIVE\";\nexport const SET_IS_FULLSCREEN = \"SET_IS_FULLSCREEN\";\nexport const SET_IS_PC = \"SET_IS_PC\";\nexport const SET_IS_MOBILE = \"SET_IS_MOBILE\";\nexport const SET_MOBILE_SCREEN = \"SET_MOBILE_SCREEN\";\nexport const SET_SUPPLIERS_INITIALIZED = \"SET_SUPPLIERS_INITIALIZED\";\nexport const SET_MOBILE_DROPDOWN = \"SET_MOBILE_DROPDOWN\";\nexport const SET_STORE_MOBILE_DETAIL = \"SET_STORE_MOBILE_DETAIL\";\nexport const SET_STORE_MOBILE_DETAIL_ITEM = \"SET_STORE_MOBILE_DETAIL_ITEM\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_PC_DETAIL = \"SET_PC_DETAIL\";\nexport const SET_PC_DROPDOWN = \"SET_PC_DROPDOWN\";\nexport const SET_DETAIL_ID = \"SET_DETAIL_ID\";\nexport const SET_DETAIL_UPDATE = \"SET_DETAIL_UPDATE\";\nexport const SET_DUNGEON_LEVELS = \"SET_DUNGEON_LEVELS\";\nexport const SET_DUNGEON_LEVEL_EXPLORED = \"SET_DUNGEON_LEVEL_EXPLORED\";","import React from 'react';\nimport './StoreInventory.css';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../../actions/types';\n\nimport gameInventory from '../../game_modules/storeInventory';\n// import storeItems from '../../game_modules/items';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.mobileMultiplier = 2;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n    \n    this.handleMobileFocus = this.handleMobileFocus.bind(this);\n    this.handleOneIncrement = this.handleOneIncrement.bind(this);\n    this.handlePrototypeIncrement = this.handlePrototypeIncrement.bind(this);\n    this.getInventoryItems = this.getInventoryItems.bind(this);\n    this.getIncrementOneButtons = this.getIncrementOneButtons.bind(this);\n    this.getIncrementAllButtons = this.getIncrementAllButtons.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(gameInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  increaseMarkup() {\n    this.setState({\n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  onMouseDown(payload) {\n    const { e } = payload;\n    let id = null, prototypeId = null;\n    if (payload.id !== null) {\n      id = payload.id;\n    }\n    if (payload.prototypeId !== null) {\n      prototypeId = payload.prototypeId;\n    }\n    const refBtnClasses = e.target.classList;\n    if (refBtnClasses.contains(\"decreaseOne\") ||\n      refBtnClasses.contains(\"minusOne\") ||\n      refBtnClasses.contains(\"decreaseProto\") ||\n      refBtnClasses.contains(\"minusProto\")) {\n        this.valence = -1;\n    }\n    if (refBtnClasses.contains(\"increaseOne\") ||\n      refBtnClasses.contains(\"plusOne\") ||\n      refBtnClasses.contains(\"increaseProto\") ||\n      refBtnClasses.contains(\"plusProto\")) {\n        this.valence = 1;\n    }\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.repeat(repeatPayload);\n  }\n\n  repeat(payload) {\n    let { id, prototypeId } = payload;\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.increaseMarkup();\n    if (id !== undefined) {\n      this.handleOneIncrement(id);\n    }\n    if (prototypeId !== undefined) {\n      this.handlePrototypeIncrement(prototypeId);\n    }\n    let totaldelay = this.delay * this.mobileMultiplier;\n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(() => this.repeat(repeatPayload), totaldelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleOneIncrement(id) {\n    const posNeg = this.valence;\n    const itemPayload = {\n      id: id,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupStoreItem(itemPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handlePrototypeIncrement(prototypeId) {\n    const posNeg = this.valence;\n    const itemsPayload = {\n      prototypeId: prototypeId,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupPrototypes(itemsPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementOneButtons(id) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getIncrementAllButtons(prototypeId) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  handleMobileFocus(item) {\n    let mobileItem;\n    if (this.props.mobileItemDetail) {\n      mobileItem = this.props.mobileItemDetail;\n    }\n    if (this.props.mobileItemDetail && this.props.mobileDetail && mobileItem.id === item.id) {\n      this.props.setStoreMobileDetail(false);\n      this.props.setStoreMobileDetailItem(null);\n      window.inventory = undefined;\n    } else {\n      this.props.setStoreMobileDetail(true);\n      this.props.setStoreMobileDetailItem(item);\n      window.inventory = this;\n    }\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      let filteredInventory;\n      if (!this.props.filterActive || this.props.storeFilter === 'all') {\n        filteredInventory = gameInventory.getComposedInventory();\n      } else {\n        filteredInventory = gameInventory.getFilteredInventory(this.props.storeFilter);\n      }\n      return (\n        <div>{filteredInventory.map(item => {\n          const composedPrice = Math.floor(item.value * (1 + (item.markup / 1000)));\n          let itemClass = \"InventoryItem itemBackground\";\n          if (this.props.mobileDetail && item.id === this.props.mobileItemDetail.id) {\n            itemClass += \" activeMobileItem\";\n          }\n          return (\n            <div className={itemClass} \n              key={item.id}\n              onTouchStart={() => this.handleMobileFocus(item)}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              {this.props.isPc ? this.getIncrementOneButtons(item.id) : ''}\n              {this.props.isPc ? this.getIncrementAllButtons(item.prototypeId) : ''}\n              <div className=\"ItemValueGroup\">\n                <span className=\"InventoryItemValue\"><span className=\"CoinSymbol\">&#x2689; </span>{composedPrice}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory primary\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory,\n    inventoryCount: state.storeState.inventoryCount,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS }),\n    setStoreMobileDetail: (detail) => dispatch({ type: SET_STORE_MOBILE_DETAIL, detail: detail }),\n    setStoreMobileDetailItem: (itemDetail) => dispatch({ type: SET_STORE_MOBILE_DETAIL_ITEM, itemDetail: itemDetail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_GOLD } from '../actions/types';\n\nconst gameStore = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n\n  const dispatchStoreGold = function() {\n    const payload = {\n      type: SET_STORE_GOLD,\n      amount: gold\n    }\n    store.dispatch(payload);\n  }\n  \n  return {\n    chargeGold: function(amount) {\n      if (gold < amount) {\n        console.log('attempted to charge more gold than vendor owns')\n        return false;\n      }\n      gold -= amount;\n    },\n    creditGold: function(amount) {\n      gold += amount;\n    },\n    getName: function() {\n      return name;\n    },\n    setName: function(newName) {\n      name = newName;\n    },\n    getStartingGold: function() {\n      return startingGold;\n    },\n    getGold: function() {\n      return gold;\n    },\n    setGold: function(newGold) {\n      gold = newGold;\n    },\n    updateGold: function() {\n      dispatchStoreGold();\n    }\n  }\n}());\n\nexport default gameStore;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  let suppliesPool = {};\n  let supplyLevel = 1;\n\n  const itemTypesArr = Object.values(ItemTypes);\n  const itemTypeCount = itemTypesArr.length;\n  let itemSpawnCount = 0;\n\n  const dailySupplies = 10;\n\n  const dispatchReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSpawned = function(value) {\n    const payload = {\n      type: SET_SUPPLY_SPAWNED,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  // fill supply pool\n  const fetchSupplyPool = function() {\n    // produce array of type strings and choose one at random\n    itemSpawnCount = 0;\n    itemTypesArr.forEach(typeItem => {\n      if (suppliesPool[typeItem] == null) {\n        suppliesPool[typeItem] = [];\n      }\n      suppliesPool[typeItem].length = 0;\n    });\n\n    getItemForSupplyPool();\n    return true;\n  }\n\n  // fetch an item from backend\n  const fetchItemArrForSupplyPool = async function() {\n    let lvl = supplyLevel;\n    if (!lvl) return;\n\n    let typeToFetch = itemTypesArr[itemSpawnCount];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  // take an item that was fetched from backend and create it\n  // with item constructors and put it into state\n  const getItemForSupplyPool = function() {\n    if (itemSpawnCount >= itemTypeCount) {\n      return;\n    }\n    let newItems;\n    fetchItemArrForSupplyPool()\n      .then(itemsOfLevel => {\n        newItems = itemsOfLevel.filter(item => item.item.rarity === 1000);\n      \n        // initialize field on pool if need be\n        if (suppliesPool[itemTypesArr[itemSpawnCount]] === null) {\n          suppliesPool[itemTypesArr[itemSpawnCount]] = [];\n        }\n        // push item id into supplies\n        suppliesPool[itemTypesArr[itemSpawnCount]].push(newItems);\n\n        itemSpawnCount++;\n        if (itemSpawnCount === itemTypeCount) {\n          dispatchSpawned(true);\n        }\n        getItemForSupplyPool();\n        return true;\n      }).catch(err => console.log(err));\n  }\n\n  const spawnSupply = function() {\n    // produce array of type strings and choose one at random\n    let typeIndex = Math.floor(Math.random() * itemTypesArr.length);\n    let typeToSpawn = itemTypesArr[typeIndex];\n    const newSupplyArr = suppliesPool[typeToSpawn];\n    let randomChoice = Math.floor(Math.random() * newSupplyArr.length);\n    let newItem = newSupplyArr[randomChoice];\n\n    if (Array.isArray(newItem)) {\n      newItem = newItem[0];\n    }\n\n    // compose payload for Item constructor\n    let itemPayload = {};\n    itemPayload.level = newItem.level;\n    switch(newItem.item.type) {\n      case ItemTypes.potion:\n        itemPayload.type = newItem.type;\n        break;\n      case ItemTypes.weapon:\n        itemPayload.damage = newItem.damage;\n        break;\n      case ItemTypes.armor:\n        itemPayload.armor = newItem.armor;\n        break;\n      default:\n        break;\n    }\n    let payload = {};\n    payload.itemPayload = itemPayload;\n    payload.type = newItem.item.type;\n    payload.name = newItem.item.name;\n    payload.value = newItem.item.value;\n    payload.prototypeId = newItem.item.id;\n    payload.rarity = newItem.item.rarity;\n\n    // create item and add to total inventory in Items module\n    let itemId = Items.createItem(payload);\n    supplies.push(itemId);\n\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function() {\n      for (let i = 0; i < dailySupplies; i++) {\n        spawnSupply();\n      }\n      dispatchReady(true);\n    },\n    fillSupplyPool: function() {\n      fetchSupplyPool();\n    },\n    depleteSupply: function(id) {\n      let supplyIndex = supplies.indexOf(id);\n      if (supplyIndex >= 0) {\n        let chosenSupply = supplies.splice(supplyIndex, 1);\n        return chosenSupply;\n      }\n    },\n    setSupplyLevel: function(lvl) {\n      supplyLevel = lvl;\n    }\n  }\n}());\n\nexport default supplies;","const fetcher = (function(){\n  return {\n    fetchRoute: async function(routeName) {\n      let response;\n      try {\n        response = await fetch(`/${routeName}`);\n      } catch (err) {\n        console.log(err);\n      }\n      if (response) {\n        response = response.json();\n      }\n      return response;\n    }\n  }\n}());\n\nexport default fetcher;","// game imports\nimport supplies from './supplies';\nimport items from './items';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLIERS, SET_SUPPLY_READY } from '../actions/types';\n\nconst suppliers = (function(){\n\n  let suppliers = [];\n\n  let currentId = 0;\n\n  const startingGold = 1000;\n  const supplierIncome = 100;\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n    this.inventory = [];\n    this.id = currentId;\n    currentId++;\n  }\n\n  Supplier.prototype.rankFavorites = function() {\n    let bestOfferings = [];\n    const offeringsCount = this.offerings.length;\n    for (let i = 0; i < offeringsCount; i++) {\n      bestOfferings.push(this.offerings[i]);\n    }\n    bestOfferings.sort((off1, off2) => {\n      return off1.markup - off2.markup;\n    });\n    this.rankedOfferings = bestOfferings;\n  }\n\n  Supplier.prototype.sellItem = function(payload) {\n    let { id, price } = payload;\n\n    const itemIndex = this.inventory.indexOf(id);\n    if (!itemIndex && itemIndex !== 0) {\n      return false;\n    }\n\n    this.inventory.splice(itemIndex, 1);\n    this.gold += price;\n\n    return true;\n  }\n\n  Supplier.prototype.takeIncome = function() {\n    this.gold += supplierIncome;\n  }\n\n  const dispatchSuppliers = function(newSuppliers) {\n    const payload = {\n      type: SET_SUPPLIERS,\n      payload: newSuppliers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSupplyReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers = fetcher.fetchRoute('suppliers');\n      // try {\n      //   initSuppliers = await fetch('/suppliers');\n      // } catch (err) {\n      //   console.log(err);\n      // }\n      // if (initSuppliers) {\n      //   initSuppliers = initSuppliers.json();\n      // }\n      return initSuppliers;\n  }\n\n  const getSuppliers = function*() {\n    yield fetchSuppliers();\n  }\n\n  const takeSupplies = function() {\n    // copy supplies to local array\n    const remainingSupplies = JSON.parse(JSON.stringify(supplies.getSupplies()));\n    let supplyTypes = [];\n    let supplyValues = [];\n    remainingSupplies.forEach(remainingSupply => {\n      const supplyItem = items.getItem(remainingSupply);\n      supplyTypes.push(supplyItem.type);\n      supplyValues.push(supplyItem.value);\n    });\n    let currentSupplier = 0;\n    const supplierCount = suppliers.length;\n    // loop through each supply item\n    remainingSupplies.forEach((remSupply, remNum) => {\n      // create an order based on last supplier to take an\n      // item and proceeded sequentially to include all\n      // suppliers\n      let supplierTries = [];\n      for (let i = 0; i < supplierCount; i++) {\n        let thisIndex = currentSupplier + i;\n        if (thisIndex >= supplierCount) {\n          thisIndex -= supplierCount;\n        }\n        supplierTries.push(thisIndex);\n      }\n      let taken = false;\n      \n      // check with each supplier if type of current supply is\n      // in their offerings\n      supplierTries.forEach(supplierIndex => {\n        let favorites = suppliers[supplierIndex].rankedOfferings;\n        for (let fave of favorites) {\n          // if type of supplier's offering equals type of this supply\n          if (fave.type === supplyTypes[remNum]) {\n            if (!taken && suppliers[supplierIndex].gold >= supplyValues[remNum]) {\n              // if supplier inventory not initialized, set to empty array\n              if (suppliers[supplierIndex].inventory === null) {\n                suppliers[supplierIndex].inventory = [];\n              }\n\n              // remove item from supply\n              let thisSupply = supplies.depleteSupply(remSupply);\n              if (Array.isArray(thisSupply)) {\n                thisSupply = thisSupply[0];\n              }\n\n              suppliers[supplierIndex].gold -= supplyValues[remNum];\n\n              // put item in supplier's inventory\n              suppliers[supplierIndex].inventory.push(thisSupply);\n\n              // mark item taken;\n              taken = true;\n              currentSupplier = supplierIndex + 1;\n              if (currentSupplier > supplierCount) {\n                currentSupplier = 0;\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      const gGetSuppliers = getSuppliers();\n      gGetSuppliers.next().value\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              thisSupplier.gold = startingGold;\n              suppliers.push(thisSupplier);\n            }\n            suppliers.forEach(supplier => supplier.rankFavorites());\n            dispatchSuppliers(suppliers);\n            return suppliers;\n          }\n        });\n    },\n    getSuppliers: function() {\n      return suppliers;\n    },\n    takeSupplierTurn: function() {\n      takeSupplies();\n      dispatchSuppliers(suppliers);\n      dispatchSupplyReady(false);\n    },\n    sellItem: function (payload) {\n      const { id, itemId, price} = payload;\n      \n      const thisSupplier = suppliers.find(refSupplier => refSupplier.id === id);\n      if (!thisSupplier) {\n        return false;\n      }\n      const sellPayload = {\n        id: itemId,\n        price: price\n      }\n\n      const resSale = thisSupplier.sellItem(sellPayload);\n      if (!resSale) {\n        return false;\n      }\n      return true;\n    },\n    takeSupplierIncomeTurns: function() {\n      if (suppliers.length < 1) return;\n      suppliers.forEach(supplier => {\n        supplier.takeIncome();\n      })\n    },\n    updateSuppliers: function() {\n      dispatchSuppliers(suppliers);\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, \n  SET_STORE_GOLD, \n  SET_DAY, \n  SET_SUPPLIERS, \n  SET_STORE_NAME\n } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n  if (res.data && res.data.import_nickname) {\n    dispatch({ type: SET_STORE_NAME, name: res.data.nickname});\n  }\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}\n","import React from 'react';\nimport './Store.css';\n\n// import game modules\n// import gameStore from '../../game_modules/store';\nimport gameInventory from '../../game_modules/storeInventory';\n\n\n// import components\nimport ItemTypes from '../../Utilities/itemTypes';\nimport StoreInventory from '../StoreInventory/StoreInventory';\n\n\n// redux imports\nimport { SET_STORE_GOLD,\n  SET_STORE_FILTER, \n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.mobileMultiplier = 2;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n\n    this.getMobileDetail = this.getMobileDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.getFilter = this.getFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.getIncrementButtons = this.getIncrementButtons.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }\n\n  handleFilter(e) {\n    let currentType = e.target.value;\n    this.props.setStoreFilter(currentType);\n  }\n\n  increaseMarkup() {\n    this.setState({ \n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  // Proccess mousedown event to start incremental markup\n  onMouseDown(e) {\n    const refBtn = e.target;\n    if (refBtn.classList.contains(\"decreaseAll\") ||\n      refBtn.classList.contains(\"minus\")) {\n      this.valence = -1;\n    }\n    if (refBtn.classList.contains(\"increaseAll\" ||\n      refBtn.classList.contains(\"plus\"))) {\n      this.valence = 1;\n    }\n    this.repeat();\n  }\n\n  repeat() {\n    this.increaseMarkup();\n    if (this.valence === -1) {\n      this.handleDecrease();\n    }\n    if (this.valence === 1) {\n      this.handleIncrease();\n    }\n    let totalDelay = this.delay;\n    if (!this.props.pc) {\n      totalDelay *= this.mobileMultiplier;\n    } \n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(this.repeat, totalDelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleIncrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: this.state.markup\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handleDecrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: (this.state.markup * -1)\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementButtons() {\n    if (!this.props.filterActive) return '';\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getFilter() {\n    if (!this.props.filterActive) return '';\n    const itemTypesArr = Object.values(ItemTypes);\n    return (\n      <select className=\"StoreItemTypeFilter\" \n        defaultValue={this.props.storeFilter}\n        onChange={this.handleFilter}>\n        <option value=\"all\">all</option>\n        {itemTypesArr.map(itemType => {\n          return (\n            <option value={itemType}>{itemType}</option>\n          )\n        })}\n      </select>\n    )\n  }\n\n  toggleFilter() {\n    const newValue = !this.props.filterActive;\n    if (newValue && this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      inventoryComponent.handleMobileFocus(this.props.mobileItemDetail);\n    }\n    this.props.setStoreFilterActive(newValue);\n  }\n\n  getMobileDetail() {\n    if (this.props.isPc) {\n      return '';\n    }\n    if (this.props.filterActive && !this.props.mobileDetail) {\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          {this.getIncrementButtons()}\n          {this.getFilter()}\n        </div>\n      )\n    }\n    if (this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive primary-surface\">\n          <div className=\"itemDetailName\">{this.props.mobileItemDetail.name}</div>\n          {inventoryComponent.getIncrementOneButtons(this.props.mobileItemDetail.id)}\n          {inventoryComponent.getIncrementAllButtons(this.props.mobileItemDetail.prototypeId)}\n        </div>\n      )\n    }\n    return (\n      <div className=\"MobileDetailContainer\"></div>\n    );\n  }\n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar darkgrey\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <div className=\"FilterGroup\">\n            {this.props.isPc ? this.getIncrementButtons() : ''}\n            {this.props.isPc ? this.getFilter() : ''}\n          </div>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\" onClick={this.toggleFilter}>&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n        </div>\n        <StoreInventory />\n        {this.getMobileDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold()),\n    setStoreFilter: (filter) => dispatch({ type: SET_STORE_FILTER, filter: filter }),\n    setStoreFilterActive: (value) => dispatch({ type: SET_STORE_FILTER_ACTIVE, value: value }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './SupplierBuyButton.css';\n\nclass SupplierBuyButton extends React.Component {\n  render() {\n    return (\n      <div className=\"SupplierBuyButton button secondary\">\n        <div className=\"supplierBuyButtonIcon\">\n          buy\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SupplierBuyButton;","import React from 'react';\nimport './Supplier.css';\n\nimport SupplierBuyButton from '../SupplierBuyButton/SupplierBuyButton';\n\n// game module imports\nimport gameItems from '../../game_modules/items';\nimport gameSuppliers from '../../game_modules/suppliers'\nimport gameStore from '../../game_modules/store';\nimport gameStoreInventory from '../../game_modules/storeInventory';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n\nclass Supplier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppllierInventory = this.getSuppllierInventory.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handlePurchase(payload) {\n    const { ids, price } = payload;\n\n    if (price > this.props.storeGold) {\n      return;\n    }\n\n    // sell first item of object\n    const sellId = ids[0];\n    const sellPayload = {\n      id: this.props.supplier.id,\n      itemId: sellId,\n      price: price\n    }\n    let sellRes = gameSuppliers.sellItem(sellPayload);\n    if (!sellRes) {\n      return;\n    }\n\n    // transact sale for vendor\n    gameStore.chargeGold(price);\n    gameStoreInventory.addItem(sellId);\n\n    // update state\n    gameStore.updateGold();\n    gameStoreInventory.updateStoreInventory();\n    gameSuppliers.updateSuppliers();\n\n  }\n\n  getSuppllierInventory() {\n    if (!this.props.initialized) {\n      return ''\n    }\n    // get details on items from ids\n    let thisInventory = [];\n    this.props.supplier.inventory.forEach(id => {\n      let inventoryItem = gameItems.getItem(id);\n      thisInventory.push(inventoryItem);\n    });\n\n    // organize all items by item name\n    let inventoryGroups = {};\n    let valueGroups = {}\n    let typeGroups = {}\n    let idGroups = {}\n    thisInventory.forEach(item => {\n      if (!inventoryGroups[item.name]) {\n        inventoryGroups[item.name] = 1;\n        valueGroups[item.name] = item.value;\n        typeGroups[item.name] = item.type;\n        idGroups[item.name] = [item.id]\n      } else {\n        inventoryGroups[item.name] += 1;\n        idGroups[item.name].push(item.id);\n      }\n    });\n\n    // create array of composed items\n    let composedItems = []\n    for (const [key, value] of Object.entries(inventoryGroups)) {\n      let item = { name: key, count: value, type: typeGroups[key], value: valueGroups[key], ids: idGroups[key] };\n      composedItems.push(item);\n    }\n\n    composedItems.sort((item1, item2) => {\n      const nameA = item1.name.toUpperCase();\n      const nameB = item2.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return composedItems.map(item => {\n      const offerings = this.props.supplier.offerings;\n      const typeIndex = offerings.findIndex(offering => offering.type === item.type);\n      \n      let composedValue = item.value;\n      if (typeIndex !== -1) {\n        composedValue = composedValue * (1 + (offerings[typeIndex].markup / 1000));\n        composedValue = Math.floor(composedValue);\n      }\n\n      return (\n        <div className=\"SupplierInventoryItem itemBackground\" key={item.id}>\n          <span className=\"SupplierInventoryItemName\">{item.name} ({item.count})</span>\n          <div className=\"SupplierItemsValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{composedValue}</span>\n          </div>\n          <div className=\"BuyButtonContainer\" onClick={() => this.handlePurchase({ ids: item.ids, price: composedValue })}>\n              <SupplierBuyButton />\n            </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    let supplierClass = \"Supplier primary\";\n    if (this.props.isMobile) {\n      supplierClass += \" mobileSupplier\";\n    }\n    return (\n      <div className={supplierClass}>\n        <div className=\"SupplierName\">\n          {this.props.supplier.name}\n          <div className=\"SupplierValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{this.props.supplier.gold}</span>\n          </div>\n        </div>\n        <div className=\"supplierInventory primary-light\">\n          {this.getSuppllierInventory()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    supplyReady: state.supplies.ready,\n    storeGold: state.storeState.gold,\n    isMobile: state.app.isMobile\n  }\n}\n\nexport default connect(mapStateToProps)(Supplier);","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_SUPPLIERS_INITIALIZED } from '../../actions/types';\n\n// game imports\nimport gameSupplier from '../../game_modules/suppliers';\nimport gameSupplies from '../../game_modules/supplies';\n// import suppliers from '../../game_modules/suppliers';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppliers = this.getSuppliers.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateSuppliers = this.updateSuppliers.bind(this);\n  }\n\n  updateSuppliers() {\n    if (Array.isArray(this.props.suppliers) && this.props.supplySpawned) {\n      if (!this.props.supplyReady) {\n        gameSupplies.fillSupplies();\n      }\n    }\n    if (Array.isArray(this.props.suppliers) && this.props.supplyReady) {\n      if (!this.props.suppliersInitialized) {\n        gameSupplier.takeSupplierTurn();\n        this.props.setSuppliersInitialized(true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateSuppliers();\n  }\n\n  componentDidUpdate() {\n    this.updateSuppliers();\n  }\n\n  getSuppliers() {\n    let supplierContainerClass = \"suppliersContainer\";\n    let spacerClass = \"spacer\";\n    if (!this.props.isPc) {\n      supplierContainerClass += \" nonPcContainer\";\n      supplierContainerClass += \" mobileContainer\";\n      spacerClass += \" mobileSpacer\";\n    }\n    let currentSuppliers = this.props.suppliers;\n    if (Array.isArray(currentSuppliers)) {\n      const suppliersDisplay = currentSuppliers.map(renderSupplier => {\n        return (<Supplier supplier={renderSupplier} initialized={this.props.suppliersInitialized}/>);\n      });\n\n      return (\n        <div className={supplierContainerClass}\n          ref={node => {\n            this.container = node;\n          }}>\n          {suppliersDisplay}\n          <div className={spacerClass}></div>\n        </div>\n      );\n    } else {\n      return 'no suppliers to render';\n    }\n    \n  }\n  \n  render() {\n    let suppliersClass = \"Suppliers primary-dark\";\n    if (!this.props.isPc) {\n      suppliersClass += \" mobileSuppliers\";\n    }\n    return (\n      <div className={suppliersClass}>\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    supplyReady: state.supplies.ready,\n    supplySpawned: state.supplies.spawned,\n    isPc: state.app.isPc,\n    isMobile: state.app.isMobile,\n    suppliersInitialized: state.suppliers.initialized\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSuppliersInitialized: (value) => dispatch({ type: SET_SUPPLIERS_INITIALIZED, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Suppliers);","const gameConstants = {\n  maxSuppliers: 3,\n  startingAdventurers: 5,\n  dailyAdventurers: 1,\n  adventurerStartingGold: 400\n}\n\nexport default gameConstants;","// game imports\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_DUNGEON_LEVELS, SET_DUNGEON_LEVEL_EXPLORED } from '../actions/types';\n\nconst dungeon = (function(){\n  let levels = [];\n  let adventurers = [];\n\n  let exploredLevel = 0;\n\n  const Level = function(payload) {\n    const {\n      number, \n      boss, \n      bossId, \n      monstersMinLevel, \n      monstersMaxLevel,\n      tileAssignments,\n      treasureDropList\n    } = payload;\n    this.number = number;\n    this.boss = boss;\n    this.bossId = bossId;\n    this.monstersMinLevel = monstersMinLevel;\n    this.monstersMaxLevel = monstersMaxLevel;\n    this.tileAssignments = tileAssignments;\n    this.treasureDropList = treasureDropList;\n    this.treasures = [];\n    this.monsters = [];\n    this.monstersLoot = [];\n    this.treasureListFetched = false;\n    this.monstersFetched = false;\n    this.monsterDropListItemsFetched = false;\n    this.intialized = false;\n  }\n\n  Level.prototype.initialize = function() {\n    console.log('level initialize');\n  }\n\n  const dispatchLevels = function() {\n    const payload = {\n      type: SET_DUNGEON_LEVELS,\n      payload: levels\n    };\n    store.dispatch(payload);\n  }\n\n  const dispatchExploredLevel = function() {\n    const payload = {\n      type: SET_DUNGEON_LEVEL_EXPLORED,\n      level: exploredLevel\n    }\n    store.dispatch(payload);\n  }\n\n  const orderLevels = function() {\n    levels.sort((level1, level2) => {\n      if (level1.number > level2.number) {\n        return 1;\n      } else if (level1.number < level2.number) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  const fetchLevels = async function() {\n    let initLevels = fetcher.fetchRoute('levels-full');\n    return initLevels;\n  }\n\n  const getLevels = function*() {\n    yield fetchLevels();\n  }\n\n  const addAdventurer = function(adventurerId) {\n    adventurers.push({ adventurerId: adventurerId, level: 1});\n    if (exploredLevel < 1) {\n      const levelOne = levels.find(level => level.number === 1);\n      console.log(levelOne);\n      if (!levelOne) return false;\n      levelOne.initialize();\n    }\n    console.log('adventurer added to dungeon');\n  }\n\n  const deleteAdventurer = function(adventurerId) {\n    adventurers = adventurers.filter(adventurer => adventurer.adventurerId !== adventurerId);\n  }\n\n  return {\n    initializeLevels: async function() {\n      const genGetLevels = getLevels();\n      genGetLevels.next().value\n        .then(initLevels => {\n          console.log(initLevels);\n          if (!initLevels) return false;\n          let newLevel = initLevels.shift();\n          if (Array.isArray(newLevel)) {\n            newLevel = newLevel[0];\n          }\n          const levelPayload = {\n            number: newLevel.number,\n            boss: newLevel.boss,\n            bossId: newLevel.boss_id,\n            monstersMinLevel: newLevel.monsters_min_level,\n            monstersMaxLevel: newLevel.monsters_max_level,\n            tileAssignments: newLevel.tile_assignments,\n            treasureDropList: newLevel.dropList\n          }\n          let thisLevel = new Level(levelPayload);\n          levels.push(thisLevel);\n        });\n      orderLevels();\n      dispatchLevels();\n      dispatchExploredLevel();\n      console.log(levels);\n    },\n    updateLevels: function() {\n      dispatchLevels();\n    },\n    getExploredLevel: function() {\n      return exploredLevel;\n    },\n    receiveAdventurer: function(adventurerId) {\n      addAdventurer(adventurerId);\n    },\n    releaseAdventurer: function(adventurerId) {\n      deleteAdventurer(adventurerId);\n    }\n  }\n}());\n\nexport default dungeon;","// constant imports\nimport gameConstants from './gameConstants';\n\n// game imports\nimport storeInventory from './storeInventory';\nimport playerStore from './store';\nimport items from './items';\nimport dungeon from './dungeon';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\nimport itemTypes from '../Utilities/itemTypes';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_ADVENTURERS } from '../actions/types';\n\nconst adventurers = (function(){\n  let adventurers = [];\n  let currentId = 0;\n\n  const maxInventory = 15;\n\n  const Adventurer = function(payload) {\n    const { name, \n      strength, \n      speed, \n      cunning, \n      intelligence,\n      constitution,\n      dungeonBehavior,\n      townBehavior,\n      adventurerClass } = payload;\n      this.name = name;\n      this.strength = strength;\n      this.speed = speed;\n      this.cunning = cunning;\n      this.intelligence = intelligence;\n      this.constitution = constitution;\n      this.dungeonBehavior = dungeonBehavior;\n      this.townBehavior = townBehavior;\n      this.adventurerClass = adventurerClass;\n      this.gold = gameConstants.adventurerStartingGold;\n      this.level = 1;\n      this.experience = 0;\n      this.hp = 7 + constitution;\n      this.maxHp = this.hp;\n      this.inventory = [];\n      this.equipment = { weapon: null, armor: null };\n      this.inDungeon = false;\n      this.informed = false;\n      this.id = currentId;\n      currentId++;\n  }\n\n  Adventurer.prototype.checkAccount = function(value) {\n    return this.gold >= value;\n  }\n\n  Adventurer.prototype.chargeAccount = function(value) {\n    this.gold -= value;\n  }\n\n  Adventurer.prototype.unequipItem = function(slot) {\n    this.equipment[slot] = null;\n  }\n\n  Adventurer.prototype.equipItem = function(item) {\n    this.equipment[item.type] = item;\n  }\n\n  Adventurer.prototype.getCurrentItemCount = function(protoId) {\n    if (this.inventory.length <= 0) return 0;\n    let protoCount = 0;\n    for (let item of this.inventory) {\n      if (item.prototypeId === protoId) {\n        protoCount++;\n      }\n    }\n    return protoCount;\n  }\n\n  Adventurer.prototype.addCombatLog = function(message) {\n    if (! this.combatLog) {\n      this.combatLog = [];\n    }\n    this.combatLog.push(message);\n  }\n\n  Adventurer.prototype.getCombatLog = function() {\n    if (! this.combatLog) {\n      this.combatLog = [];\n    }\n    return this.combatLog;\n  }\n\n  const dispatchAdventurers = function(newAdventurers) {\n    const payload = {\n      type: SET_ADVENTURERS,\n      payload: newAdventurers\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchAdventurers = async function() {\n    let initAdventurers = fetcher.fetchRoute('adventurers-full');\n    return initAdventurers;\n  }\n\n  const getAdventurers = function*() {\n    yield fetchAdventurers();\n  }\n\n  const doInn = function() {\n    const availableAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    availableAdventurers.forEach(townAdventurer => {\n      let totalFactor = townAdventurer.townBehavior.use_tavern / 1000;\n      if (townAdventurer.informed) {\n        totalFactor = 0;\n      }\n      const willDrink = totalFactor >= Math.random();\n\n      if (willDrink) {\n        const totalCost = 10 * townAdventurer.level;\n        if (townAdventurer.checkAccount(totalCost)) {\n          townAdventurer.chargeAccount(totalCost);\n          townAdventurer.informed = true;\n          const combatLogMessage = `${townAdventurer.name} stayed at the inn. ${townAdventurer.name} is now informed.`;\n          townAdventurer.addCombatLog(combatLogMessage);\n        }\n      }\n    })\n  }\n\n  const doShopping = function() {\n    const inventory = storeInventory.getStoreInventory();\n    let inventoryItems = [];\n    inventory.forEach(item => {\n      let composedItem = item;\n      composedItem.item = items.getItem(item.itemId);\n      inventoryItems.push(composedItem);\n    });\n    const shoppingAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    let adventurerTurn = 0;\n    const adventurerCount = shoppingAdventurers.length;\n    // loop through each inventory item\n    inventoryItems.forEach(item => {\n      // create an order based on last adventurer to take an\n      // item and proceed suequentially to include all\n      // adventurers\n      let adventurerTries = [];\n      for (let i = 0; i < adventurerCount; i++) {\n        let thisIndex = adventurerTurn + i;\n        if (thisIndex >= adventurerCount) {\n          thisIndex -= adventurerCount;\n        }\n        adventurerTries.push(thisIndex);\n      }\n      let taken = false;\n\n      // check with each adventurer if they want the item\n      adventurerTries.forEach(adventurerIndex => {\n        // determine if decision factor is buy or upgrade\n        let decisionFactor = '';\n        const thisAdventurer = shoppingAdventurers[adventurerIndex];\n\n        if (thisAdventurer.equipment[item.item.type] && item.item.type !== itemTypes.potion) {\n          decisionFactor += 'upgrade';\n        } else {\n          decisionFactor += 'buy';\n        }\n        decisionFactor += '_' + item.item.type;\n        const desireWeight = thisAdventurer.townBehavior[decisionFactor];\n        let totalFactor = (desireWeight / 1000) - (item.markup / 1000);\n        if (totalFactor < 0) {\n          totalFactor = 0;\n        }\n        // lessen desire to buy item if adventurer currently has some of it\n        const itemProto = item.item.prototypeId;\n        const currentHoldings = thisAdventurer.getCurrentItemCount(itemProto);\n        if (item.item.type === itemTypes.potion) {\n          totalFactor -= (currentHoldings * .10);\n        } else {\n          totalFactor -= (currentHoldings * .30);\n        }\n        // determine if adventurer will buy item\n        let willBuy = totalFactor >= Math.random();\n        if (thisAdventurer.equipment[item.item.type]) {\n          const currentGear = thisAdventurer.equipment[item.item.type];\n          if (item.item.type === itemTypes.weapon) {\n            const currentDamage = currentGear[itemTypes.weapon].damage;\n            const itemDamage = currentGear[itemTypes.weapon].damage;\n            if (currentDamage >= itemDamage) {\n              willBuy = false;\n            }\n          } else if (item.item.type === itemTypes.armor) {\n            const currentArmor = currentGear[itemTypes.armor].armor;\n            const itemArmor = item.item[itemTypes.armor].armor;\n            if (currentArmor >= itemArmor) {\n              willBuy = false;\n            }\n          }\n        }\n        // cancel buy if adventurer inventory is full\n        if (thisAdventurer.inventory.length >= maxInventory) {\n          willBuy = false;\n        }\n        \n        if (willBuy && !taken) {\n          const totalPrice = Math.floor(item.item.value * (1 + (item.markup / 1000)));\n          if (thisAdventurer.checkAccount(totalPrice)) {\n            thisAdventurer.chargeAccount(totalPrice);\n            playerStore.creditGold(totalPrice);\n            playerStore.updateGold();\n            storeInventory.removeItem(item.itemId);\n            storeInventory.updateStoreInventory();\n            thisAdventurer.inventory.push(item.item);\n            if (!item.item.type === itemTypes.potion) {\n              if (thisAdventurer.equipment[item.item.type]) {\n                thisAdventurer.unequipItem(item.item.type);\n              }\n              thisAdventurer.equipItem(item.item);\n            }\n            taken = true;\n            adventurerTurn = adventurerIndex + 1;\n            if (adventurerTurn > adventurerCount) {\n              adventurerTurn = 0;\n            }\n          }\n        }\n      })\n    })\n  }\n\n  const dungeonEntry = function() {\n    const dungeonGoingAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    dungeonGoingAdventurers.forEach(dungeonAdventurer => {\n      let totalFactor = (dungeonAdventurer.townBehavior.enter_dungeon / 1000)\n      let willEnter = totalFactor >= Math.random();\n\n      if (willEnter) {\n        dungeonAdventurer.inDungeon = true;\n        dungeon.receiveAdventurer(dungeonAdventurer.id);\n      }\n    })\n  }\n\n  return {\n    initializeAdventurers: async function(maxAdventurers) {\n      const genGetAdventurers = getAdventurers();\n      genGetAdventurers.next().value\n        .then(initAdventurers => {\n          if (initAdventurers) {\n            let drainAdventurers = initAdventurers;\n            while (adventurers.length < maxAdventurers && drainAdventurers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainAdventurers.length);\n              let newAdventurer = drainAdventurers.splice(pushIndex, 1);\n              newAdventurer = newAdventurer[0];\n              const adventurerPayload = {\n                name: newAdventurer.name,\n                strength: newAdventurer.strength, \n                speed: newAdventurer.speed, \n                cunning: newAdventurer.cunning, \n                intelligence: newAdventurer.intelligence,\n                constitution: newAdventurer.constitution,\n                dungeonBehavior: newAdventurer.dungeon_behavior,\n                townBehavior: newAdventurer.town_behavior,\n                adventurerClass: newAdventurer.adventurer_class\n              };\n              let thisAdventurer = new Adventurer(adventurerPayload);\n              adventurers.push(thisAdventurer);\n            }\n            dispatchAdventurers(adventurers);\n            return adventurers;\n          }\n        })\n    },\n    updateAdventurers: function() {\n      dispatchAdventurers(adventurers);\n    },\n    takeAdventurerTurn: function() {\n      doInn();\n      doShopping();\n      dungeonEntry();\n      dispatchAdventurers(adventurers);\n    }\n  }\n}());\n\nexport default adventurers;","// constants\nimport gameConstants from './gameConstants';\n\n// game module imports\nimport days from './days';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\nimport adventurers from './adventurers';\nimport gameStore from './store';\nimport dungeon from './dungeon';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_DETAIL_UPDATE } from '../actions/types';\n\n\nconst main = (function() {\n  \n  let currentMaxLevel = 1;\n\n  const dispatchUpdate = function() {\n    const payload = {\n      type: SET_DETAIL_UPDATE,\n      value: true\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      gameStore.setName(payload.name);\n\n      const startingGold = gameStore.getStartingGold();\n      gameStore.setGold(startingGold);\n\n      supplies.setSupplyLevel(currentMaxLevel);\n      supplies.fillSupplyPool();\n      suppliers.initializeSuppliers(gameConstants.maxSuppliers);\n\n      adventurers.initializeAdventurers(gameConstants.startingAdventurers);\n      dungeon.initializeLevels();\n    },\n\n    getGameLevel: function() {\n      return currentMaxLevel;\n    },\n\n    performTurn: function() {\n      adventurers.takeAdventurerTurn();\n      // need logic for triggering supply pool fetch if\n      // max level has changed\n      supplies.fillSupplies();\n      suppliers.takeSupplierIncomeTurns();\n      suppliers.takeSupplierTurn();\n      dispatchUpdate();\n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\nimport main from '../../game_modules/main';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    main.performTurn();\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days primary-dark\">\n        <div className=\"DayTitle\">Day: {this.props.day}</div>\n        <div className=\"nextDay button secondary\" onClick={this.handleNextDay}\n        >Finish Day</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay()),\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","const pcMenus = {\n  adventurers: 'adventurers',\n  adventurer: 'adventurer',\n  dungeon: 'dungeon'\n}\n\nexport default pcMenus;","// redux imports\nimport { store } from '../index';\nimport { SET_PC_DETAIL } from '../actions/types';\n\nimport pcMenus from './pcMenus';\n\nconst pcDetailMenus = (function(){\n  let currentMenu = '';\n  let currentIndex = 0;\n\n  const menus = [pcMenus.adventurers, pcMenus.dungeon];\n\n  let menuMap = {};\n\n  const mapMenus = function() {\n    menus.forEach((menu, menuN) => {\n      menuMap[menu] = menuN;\n    })\n  }\n\n  const dispatchPCMenu = function() {\n    const payload = {\n      type: SET_PC_DETAIL,\n      detail: currentMenu\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentMenu = menus[0];\n      currentIndex = 0;\n      mapMenus();\n    },\n\n    getCurrentMenu: function() {\n      return currentMenu;\n    },\n\n    nextMenu: function() {\n      currentIndex++;\n      if (currentIndex >= menus.length) {\n        currentIndex = 0;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    previousMenu: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = menus.length - 1;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    getMenus: function() {\n      return menus;\n    },\n\n    setmenu: function(newMenu) {\n      const menuIndex = menuMap[newMenu];\n      if (menuIndex === null) {\n        return false\n      }\n      currentIndex = menuIndex;\n      currentMenu = menus[menuIndex];\n      return true;\n    },\n\n    updateMenu: function() {\n      dispatchPCMenu();\n    }\n  }\n}());\n\nexport default pcDetailMenus;","import React from 'react';\nimport './DetailPCMenu.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport pcDetailMenus from '../../Utilities/pcDetailMenus';\n// import pcMenus from '../../Utilities/pcMenus';\n\nclass DetailPCMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleMenuChange = this.handleMenuChange.bind(this);\n    this.getPCDropdown = this.getPCDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    pcDetailMenus.init();\n  }\n\n  handlePrevious() {\n    pcDetailMenus.previousMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleNext() {\n    pcDetailMenus.nextMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setPcDropdown(!this.props.pcDropdown);\n  }\n\n  handleMenuChange(newMenu) {\n    pcDetailMenus.setmenu(newMenu);\n    pcDetailMenus.updateMenu();\n    this.props.setPcDropdown(false);\n  }\n\n  getPCDropdown() {\n    const allMenus = pcDetailMenus.getMenus();\n    if (!this.props.pcDropdown) {\n      return false;\n    }\n    return (\n      <div className=\"PCDropdown primary-dark\">\n        {allMenus.map(menu => {\n          return (\n            <div className=\"PCDropdownOption primary-medium\"\n              onClick={() => this.handleMenuChange(menu)}>\n                {menu}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"PCDetailMenu primary-saturated\">\n        <span className=\"previousMenu screenArrowPC\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"PCMenuTitle\"\n          onClick={this.handleDropdown}>{this.props.pcDetailMenu}</span>\n        <span className=\"nextMenu screenArrowPC\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getPCDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    pcDropdown: state.pcMenu.dropdown,\n    dungeonLevelExplored: state.dungeon.exploredLevel\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPcDetailMenu: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail }),\n    setPcDropdown: (value) => dispatch({ type: SET_PC_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPCMenu);","import { store } from '../index';\nimport { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst screenInfo = (function(){\n  let isPc = true;\n  let isMobile = false;\n  let isFullscreen = true;\n\n  let width = 0;\n\n  const dispatchFullscreen = function() {\n    const payload = {\n      type: SET_IS_FULLSCREEN,\n      value: isFullscreen\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsPc = function() {\n    const payload = {\n      type: SET_IS_PC,\n      value: isPc\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsMobile = function() {\n    const payload = {\n      type: SET_IS_MOBILE,\n      value: isMobile\n    }\n    store.dispatch(payload);\n  }\n\n  const detectPc = function() {\n    const notPc = window.orientation > -1;\n    return !notPc;\n    \n  }\n\n  const setFullScreen = function() {\n    \n    let App = document.querySelector('.App');\n    if (App.requestFullscreen) {\n      App.requestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.msRequestFullscreen) {\n      App.msRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.mozRequestFullscreen) {\n      App.mozRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.webkitRequestFullscreen) {\n      App.webkitRequestFullscreen();\n      isFullscreen = true;\n    }\n    // document.fullscreen = true;\n    // document.fullscreenElement = App;\n  }\n\n  const exitFullScreen = function() {\n    isFullscreen = false;\n    document.exitFullscreen();\n  }\n\n  const setScreenInfo = function() {\n    const app = document.querySelector('.App');\n    const docDimensions = app.getBoundingClientRect();\n    width = docDimensions.width;\n\n    if (width < 768) {\n      isMobile = true\n    } \n  }\n\n  return {\n    init: function() {\n      isPc = detectPc();\n      setScreenInfo();\n      dispatchIsPc();\n      dispatchIsMobile();\n    },\n    getIsPc: function() {\n      return isPc;\n    },\n    getIsMobile: function() {\n      return isMobile;\n    },\n    goFullScreen: function() {\n      setFullScreen();\n      dispatchFullscreen();\n    },\n    leaveFullScreen: function() {\n      exitFullScreen();\n      dispatchFullscreen();\n    }\n  }\n}());\n\nexport default screenInfo;","import { store } from '../index';\nimport { SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../actions/types';\n\nimport screenInfo from './screenInfo';\n\nconst breadcrumb = (function(){\n  let breadcrumbs = [];\n\n  const Breadcrumb = function(payload) {\n    const { \n      displayPayload,\n      isMobile,\n      scrollPos\n    } = payload;\n    this.displayPayload = displayPayload;\n    this.isMobile = isMobile;\n    this.scrollPos = scrollPos;\n  }\n\n  Breadcrumb.prototype.dispatchDisplay = function() {\n    if (this.isMobile) {\n      store.dispatch({ type: SET_MOBILE_SCREEN, screen: this.displayPayload });\n    } else {\n      store.dispatch({ type: SET_PC_DETAIL, detail: this.displayPayload });\n    }\n  }\n\n  return {\n    popBreadcrumb: function() {\n      if (breadcrumbs.length < 1) return false;\n      const nextCrumb = breadcrumbs.pop();\n      nextCrumb.dispatchDisplay();\n    },\n    addBreadcrumb: function(payload) {\n      let { display, scrollPos } = payload;\n      const isMobile = screenInfo.getIsMobile();\n      const newCrumb = new Breadcrumb({ displayPayload: display, scrollPos: scrollPos, isMobile: isMobile });\n      breadcrumbs.push(newCrumb);\n    }\n  }\n}());\n\nexport default breadcrumb;","// redux imports\nimport { store } from '../index';\nimport { SET_MOBILE_SCREEN } from '../actions/types';\n\nconst mobileScreens = (function(){\n  let currentScreen = '';\n  let currentIndex = 0;\n  const screens = ['store', 'suppliers', 'adventurers', 'dungeon'];\n  // const dependentScreens = ['adventurer'];\n\n  const allScreens = {\n    store: 'store',\n    suppliers: 'suppliers',\n    adventurers: 'adventurers',\n    adventurer: 'adventurer',\n    dungeon: 'dungeon'\n  }\n\n  let screenMap = {};\n\n  const mapScreens = function() {\n    screens.forEach((screen, screenN) => {\n      screenMap[screen] = screenN;\n    });\n  }\n\n  const dispatchMobileScreen = function() {\n    const payload = {\n      type: SET_MOBILE_SCREEN,\n      screen: currentScreen\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentScreen = screens[0];\n      currentIndex = 0;\n      mapScreens();\n    },\n\n    getCurrentScreen: function() {\n      return currentScreen;\n    },\n\n    nextScreen: function() {\n      currentIndex++;\n      if (currentIndex >= screens.length) {\n        currentIndex = 0;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    previousScreen: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = screens.length -1;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    getScreens: function() {\n      return screens;\n    },\n\n    getAllScreens: function() {\n      return allScreens;\n    },\n\n    setScreen: function(newScreen) {\n      const screenIndex = screenMap[newScreen];\n      if (screenIndex === null) {\n        return false;\n      } else {\n        currentIndex = screenIndex;\n        currentScreen = screens[screenIndex];\n        return true;\n      }\n    },\n\n    updateScreen: function() {\n      dispatchMobileScreen();\n    }\n  }\n}());\n\nexport default mobileScreens;","import React from 'react';\nimport './Adventurer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_ID, SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\nimport screenInfo from '../../Utilities/screenInfo';\nimport mobileScreens from '../../Utilities/mobileScreens';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass Adventurer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleZoom = this.handleZoom.bind(this);\n  }\n  \n  handleZoom() {\n    if (!this.props.adventurer) return;\n    this.props.setDetailId(this.props.adventurer.id);\n    const advDOM = document.querySelector('.adventurers');\n    const scrollY = advDOM.scrollTop;\n    console.log(scrollY);\n    breadcrumb.addBreadcrumb({ display: 'adventurers', screenPos: scrollY });\n    if (screenInfo.getIsMobile()) {\n      const allScreens = mobileScreens.getAllScreens();\n      this.props.setMobileScreen(allScreens.adventurer);\n    } else {\n      this.props.setPCDetail(pcMenus.adventurer);\n    }\n  }\n\n  render() {\n    if (!this.props.adventurer) return '';\n    const adventurer = this.props.adventurer;\n    const adventurerClass = adventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    return (\n      <div className=\"adventurerDisplay primary\"\n        onClick={this.handleZoom}\n      >\n        <div className={adventurerClassIconColor}>{classIcon}</div>\n        <div className=\"adventurerDetails\">\n          <p className=\"adventurerName\">{adventurer.name}</p>\n          <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          <div className=\"adventurerStatGroupWide\">\n            <p className=\"adventurerStatLabel\">exp</p>\n            <p className=\"adventurerStat\">{adventurer.experience}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">lvl</p>\n            <p className=\"adventurerStat\">{adventurer.level}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{adventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{adventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{adventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{adventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{adventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{adventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{adventurer.constitution}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailId: (id) => dispatch({ type: SET_DETAIL_ID, id: id }),\n    setMobileScreen: (screen) => dispatch({ type: SET_MOBILE_SCREEN, screen: screen }),\n    setPCDetail: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail })\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Adventurer);","import React from 'react';\nimport './Adventurers.css';\n\n// component imports\nimport Adventurer from '../Adventurer/Adventurer';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Adventurers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAdventurers = this.getAdventurers.bind(this);\n  }\n\n  getAdventurers() {\n    const adventurers = this.props.adventurers;\n    return adventurers.map(adventurer => {\n      return <Adventurer adventurer={adventurer} />\n    });\n  }\n  \n  render() {\n    if (!this.props.adventurers) return '';\n    return (\n      <div className=\"adventurers\">\n        {this.getAdventurers()}\n        <div className=\"spacer-vertical\"></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    adventurerUpdate: state.adventurers.update\n  }\n}\n\nexport default connect(mapStateToProps)(Adventurers);","import React from 'react';\nimport './AdventurerDetail.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\n\nclass AdventurerDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  getInventory(adventurer) {\n    const adventurerInventory = adventurer.inventory;\n    if (!adventurerInventory) return 'no inventory';\n    return adventurerInventory.map(item => {\n      return (\n        <div className=\"adventurerInventoryItem\">{item.name}</div>\n      )\n    })\n  }\n\n  getCombatLog(adventurer) {\n    if (!adventurer) return 'no combat log';\n    const adventurerCombatLog = adventurer.getCombatLog();\n    if (adventurerCombatLog.length <= 0) {\n      return 'No combat log entries.'\n    }\n    return adventurerCombatLog.map(logEntry => {\n      return (\n        <div className=\"combatLogEntry\">\n          {logEntry}\n        </div>\n      )\n    });\n    \n  }\n\n  handleBack() {\n    const handled = breadcrumb.popBreadcrumb();\n    if (!handled) {\n      console.log('breadcrumb failed!');\n    }\n  }\n  \n  render() {\n    if ((!this.props.detailId && this.props.detailId !== 0) || !this.props.adventurers) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.detailId);\n    const adventurerClass = thisAdventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    \n    return (\n      <div className=\"AdventurerDetail primary\">\n        <div className=\"title-bar\">\n          <div className=\"back-button\"\n            onClick={this.handleBack}>&#8592;</div>\n          <div className=\"adventurer-title\">{thisAdventurer.name}</div>\n        </div>\n        <div className=\"primary-stats-bar\">\n          <div className={adventurerClassIconColor}>{classIcon}</div>\n          <div className=\"primary-cascade\">\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">exp</p>\n              <p className=\"adventurerStat\">{thisAdventurer.experience}</p>\n            </div>\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">lvl</p>\n              <p className=\"adventurerStat\">{thisAdventurer.level}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"adventurerDetailsView\">\n          <div className=\"adventurerStatGroup\">\n            <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{thisAdventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{thisAdventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{thisAdventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{thisAdventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{thisAdventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{thisAdventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{thisAdventurer.constitution}</p>\n          </div>\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Inventory</p>\n        <div className=\"adventurerInventoryDetails\">\n          {this.getInventory(thisAdventurer)}\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Combat Log</p>\n        <div className=\"adventurer-combat-log\">\n          {this.getCombatLog(thisAdventurer)}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    detailId: state.detail.id\n  }\n}\n\nexport default connect(mapStateToProps)(AdventurerDetail);","import React from 'react';\nimport './Dungeon.css';\n\nclass Dungeon extends React.Component {\n  render() {\n    return (\n      <div className=\"Dungeon primary-dark\">\n      </div>\n    )\n  }\n}\n\nexport default Dungeon;","import React from 'react';\nimport './Details.css';\n\n// component imports\nimport DetailPCMenu from '../DetailPCMenu/DetailPCMenu';\nimport Adventurers from '../Adventurers/Adventurers';\nimport AdventurerDetail from '../AdventurerDetail/AdventurerDetail';\nimport Dungeon from '../Dungeon/Dungeon';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\nimport menuTypes from '../../Utilities/pcMenus';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n    this.getDetail = this.getDetail.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const forms = Object.values(menuTypes);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[menuTypes.adventurers] = <Adventurers />;\n    this.formTable[menuTypes.adventurer] = <AdventurerDetail />;\n    this.formTable[menuTypes.dungeon] = <Dungeon />;\n  }\n\n  getDetail() {\n    if (!this.state.initialized) return '';\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    if (!this.props.pcDetailMenu) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n\n    if (this.formTable[this.props.pcDetailMenu] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.pcDetailMenu];\n  }\n  \n  render() {\n    return (\n      <div className=\"Details primary-dark\">\n        <DetailPCMenu />\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container primary-light\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false\n    }\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n    if (!this.props.edited) {\n      this.setState({ edited: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"StartScreen primary-surface\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","const userPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default userPutRequests;","import React from 'react';\nimport './ProfileViewer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\nimport { fetchUser } from '../../actions'\n\n// utitlity imports\nimport userPutRequests from '../../Utilities/userPutRequests';\n\nclass ProfileViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  handleClose() {\n    if (this.props.profileActive) {\n      this.props.setProfileActive(false);\n    }\n  }\n\n  *updateUser(data) {\n    yield userPutRequests.makeRequest('user', data);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateUser = this.updateUser(data);\n    updateUser.next().value.then(() => {\n      this.props.fetchUser();\n      this.props.setProfileActive(false);\n    });\n  }\n  \n  render() {\n    let newNickname = '';\n    let newImportNickname = false;\n    let newId = null;\n    console.log(this.props.auth);\n\n    if (this.props.auth) {\n      newNickname = this.props.auth.nickname;\n      newImportNickname = this.props.auth.import_nickname;\n      newId = this.props.auth.id;\n    }\n\n    return (\n      <div className=\"ProfileViewer primary-surface\">\n        <div className=\"ProfileForm\">\n          <form action={'/profile'}\n            className=\"input-fields-area\"\n            id=\"ProfileForm\"\n            method=\"POST\"\n            onSubmit={this.handleSubmit}>\n              <div className=\"input-group\">\n                <label className=\"item-label\" htmlFor=\"nickname\">Nickname</label>\n                <input type=\"text\" name=\"nickname\" id=\"nickname\" className=\"input-text\" placeholder=\"nickname\"\n                  maxLength=\"40\" defaultValue={newNickname}></input>\n              </div>\n              <div className=\"input-group\">\n                <input type=\"checkbox\" name=\"import_nickname\" id=\"import_nickname\" class=\"input-checkbox\" defaultChecked={newImportNickname} value={true}></input>\n                <label className=\"item-label\" htmlFor=\"import_nickname\">Import nickname as store name by default</label>\n              </div>\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"submit\" value=\"Update Profile\" className=\"button profile-submit\"></input>\n          </form>\n        </div>\n        <div className=\"CloseButton\"\n          onClick={this.handleClose}>\n            X\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    profileActive: state.profile.active,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value }),\n    fetchUser: () => dispatch(fetchUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewer);","import React from 'react';\nimport './MobileStoreHeadbar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass MobileStoreHeadbar extends React.Component {\n  render() {\n    return (\n      <div className=\"MobileStoreHeadbar\">\n        <h2 className=\"StoreName\">{this.props.storeName}</h2>\n        <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n  }\n}\n\nexport default connect(mapStateToProps)(MobileStoreHeadbar);","import React from 'react';\nimport './MobileMenu.css';\n\n// component imports\nimport Days from '../Days/Days';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.getMobileDropdown = this.getMobileDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    mobileScreens.init();\n  }\n  \n  handlePrevious() {\n    mobileScreens.previousScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleNext() {\n    mobileScreens.nextScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setMobileDropdown(!this.props.mobileDropdown)\n  }\n\n  handleScreenChange(newScreen) {\n    mobileScreens.setScreen(newScreen);\n    mobileScreens.updateScreen();\n    this.props.setMobileDropdown(false);\n  }\n\n  getMobileDropdown() {\n    const allScreens = mobileScreens.getScreens();\n    if (this.props.mobileDropdown) {\n      return (\n        <div className=\"MobileDropdown primary-medium\">\n          <Days />\n          {allScreens.map(screen => {\n            return (\n              <div className=\"mobileDropdownOption\"\n                onClick={() => this.handleScreenChange(screen)}>{screen}</div>\n            )\n      })}\n      </div>)\n      \n    } else {\n      return false;\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileMenu primary-saturated\">\n        <span className=\"previousScreen screenArrow\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"mobileTitle\"\n          onClick={this.handleDropdown}>{this.props.mobileScreen}</span>\n        <span className=\"nextScreen screenArrow\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getMobileDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    mobileDropdown: state.mobileMenu.dropdown,\n    dungeonLevelExplored: state.dungeon.exploredLevel\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileMenu);","import React from 'react';\nimport './MobileGameScreen.css';\n\nimport Store from '../../Components/Store/Store';\nimport MobileStoreHeadbar from '../../Components/MobileStoreHeadbar/MobileStoreHeadbar';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport MobileMenu from '../../Components/MobileMenu/MobileMenu';\nimport Adventurers from '../../Components/Adventurers/Adventurers';\nimport AdventurerDetail from '../../Components/AdventurerDetail/AdventurerDetail';\nimport Dungeon from '../../Components/Dungeon/Dungeon';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileGameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentScreen: 'store',\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const allScreens = mobileScreens.getAllScreens();\n    const forms = Object.values(allScreens);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[allScreens.store] = <Store />;\n    this.formTable[allScreens.suppliers] = (\n      <div>\n        <MobileStoreHeadbar />\n        <Suppliers />\n      </div>\n    );\n    this.formTable[allScreens.adventurers] = <Adventurers />;\n    this.formTable[allScreens.adventurer] = <AdventurerDetail />;\n    this.formTable[allScreens.dungeon] = <Dungeon />;\n  }\n\n  getCurrentScreen() {\n    if (!this.state.initialized) return '';\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    if (!this.props.mobileScreen) {\n      return (<div className=\"BlankForm\">no details to display</div>)\n    }\n\n    if (this.formTable[this.props.mobileScreen] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.mobileScreen];\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileGameScreen primary-dark\">\n        <MobileMenu />\n        {this.getCurrentScreen()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileGameScreen);","import React from 'react';\nimport './MenuBar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mobileOpen: false\n    }\n\n    this.handleProfileActive = this.handleProfileActive.bind(this);\n    this.getLoginContainer = this.getLoginContainer.bind(this);\n    this.renderProfileLink = this.renderProfileLink.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n    this.handleFullscreen = this.handleFullscreen.bind(this);\n    this.getFullScreenControls = this.getFullScreenControls.bind(this);\n    this.handleMobileOpen = this.handleMobileOpen.bind(this);\n  }\n\n  handleProfileActive() {\n    if (!this.props.profileActive) {\n      this.props.setProfileActive(true);\n    }\n    this.handleMobileOpen();\n  }\n\n  handleMobileOpen() {\n    if (this.props.profileActive && !this.state.mobileOpen) {\n      return;\n    }\n    this.setState({ mobileOpen: !this.state.mobileOpen});\n  }\n\n  renderProfileLink() {\n    switch(this.props.auth) {\n      case null:\n        return '';\n      case false:\n        return '';\n      default:\n        return <li key=\"profile\" class=\"profileLink\" onClick={this.handleProfileActive}>profile</li>\n    }\n  }\n\n  renderLogin() {\n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\" className=\"facebookLogo\"><span>f</span></a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner' && screenInfo.getIsPc()) {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n\n  getLoginContainer() {\n    if (!this.props.isPc) {\n      return (\n        <div className=\"hamburgerContainer\"\n          onClick={this.handleMobileOpen}>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"LoginContainer\">\n        {this.renderProfileLink()}\n        {this.renderEditorLink()}\n        {this.renderLogin()}\n      </ul>\n    )\n  }\n\n  getMobileMenu() {\n    if (!this.props.isPc && this.state.mobileOpen) {\n      let mobileOffsetStyle = {};\n      let menuOffsets = 2;\n        if (this.props.auth) {\n          menuOffsets += 1;\n        }\n        // set style by default for tablet\n        mobileOffsetStyle.height = `calc(${(menuOffsets * 2.4)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        if (this.props.isMobile) {\n          mobileOffsetStyle.height = `calc(${(menuOffsets * 1.8)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        } \n        \n        \n      return (\n        <div className=\"mobileMenuContainer primary\"\n          onClick={this.handleMobileOpen}>\n          <ul className=\"LoginContainer mobileMenu primary-light\"\n            style={mobileOffsetStyle}\n            >\n            {this.getFullScreenControls()}\n            {this.renderProfileLink()}\n            {this.renderLogin()}\n          </ul>\n        </div>\n        \n      )\n    }\n  }\n\n  handleFullscreen() {\n    if (!this.props.isFullscreen) {\n      screenInfo.goFullScreen();\n    } else {\n      screenInfo.leaveFullScreen();\n    }\n  }\n\n  getFullScreenControls() {\n    if (!this.props.isFullscreen) {\n      return <li key=\"goFullscreen\" \n        className=\"Fullscreen screenLink\"\n        onClick={this.handleFullscreen}>[  ]</li>\n    } else {\n      return <li key=\"exitFullscren\"\n        className=\"ExitFullScreen screenLink\"\n        onClick={this.handleFullscreen}>&#9580;</li>\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar primary-light\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        {this.getLoginContainer()}\n        {this.getMobileMenu()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    isFullscreen: state.app.isFullscreen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\n// game module imports\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\nimport ProfileViewer from '../../Containers/ProfileViewer/ProfileViewer';\nimport MobileGameScreen from '../../Containers/MobileGameScreen/MobileGameScreen';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\n// component imports\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.getProfileViewer = this.getProfileViewer.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n    screenInfo.init();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      if (!this.props.isPc) {\n        return (\n          <MobileGameScreen />\n        )\n      } else {\n        return (\n          <GameScreen />\n        )\n      }\n    }\n  }\n\n  getProfileViewer() {\n    const profileStatus = this.props.profileActive;\n    if (profileStatus) {\n      return (\n        <ProfileViewer />\n      )\n    }\n  }  \n\n  render() {\n    return (\n      <div className=\"App\"\n        ref={ref => {\n          this.container = ref;\n        }}>\n        <MenuBar />\n        {this.getMainView()}\n        {this.getProfileViewer()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY,\n  SET_STORE_FILTER,\n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  filterActive: false,\n  filter: 'all',\n  needsUpdate: false,\n  inventory: [],\n  inventoryCount: 0,\n  mobileDetail: null,\n  mobileItemDetail: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      let newCount = state.inventoryCount;\n      if (Array.isArray(newInventory)) {\n        newCount = newInventory.length;\n      }\n      return {\n        ...state,\n        inventory: newInventory,\n        inventoryCount: newCount\n      }\n    case SET_STORE_FILTER_ACTIVE:\n      return {\n        ...state,\n        filterActive: action.value\n      }\n    case SET_STORE_FILTER:\n      return {\n        ...state,\n        filter: action.filter\n      }\n    case SET_STORE_UPDATE_STATUS:\n      const newStatus = !state.needsUpdate;\n      return {\n        ...state,\n        needsUpdate: newStatus\n      }\n    case SET_STORE_MOBILE_DETAIL:\n      return {\n        ...state,\n        mobileDetail: action.detail\n      }\n    case SET_STORE_MOBILE_DETAIL_ITEM:\n      return {\n        ...state,\n        mobileItemDetail: action.itemDetail\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS, SET_SUPPLIERS_INITIALIZED } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0,\n  initialized: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n      case SET_SUPPLIERS_INITIALIZED:\n        return {\n          ...state,\n          initialized: action.value\n        }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst initialState = {\n  ready: false,\n  spawned: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLY_READY:\n      return {\n        ...state,\n        ready: action.value\n      }\n    case SET_SUPPLY_SPAWNED:\n      return {\n        ...state,\n        spawned: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_PROFILE_ACTIVE } from '../actions/types';\n\nconst initialState = {\n  active: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFILE_ACTIVE:\n      return {\n        ...state,\n        active: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst initialState = {\n  isFullscreen: false,\n  isPc: true,\n  isMobile: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: action.value\n      }\n    case SET_IS_PC:\n      return {\n        ...state,\n        isPc: action.value\n      }\n    case SET_IS_MOBILE:\n      return {\n        ...state,\n        isMobile: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_MOBILE_SCREEN, SET_MOBILE_DROPDOWN } from '../actions/types';\n\nconst intitialState = {\n  screen: 'store',\n  dropdown: false\n}\n\nexport default function(state = intitialState, action) {\n  switch(action.type) {\n    case SET_MOBILE_SCREEN:\n      return {\n        ...state,\n        screen: action.screen\n      }\n    case SET_MOBILE_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../actions/types';\nimport pcMenus from '../Utilities/pcMenus';\n\nconst initialState = {\n  detail: pcMenus.adventurers,\n  dropdown: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PC_DETAIL:\n      return {\n        ...state,\n        detail: action.detail\n      }\n    case SET_PC_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_ID, SET_DETAIL_UPDATE } from '../actions/types';\n\nconst initialState = {\n  id: null,\n  update: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_ID:\n      return {\n        ...state,\n        id: action.id\n      }\n    case SET_DETAIL_UPDATE: {\n      return {\n        ...state,\n        update: action.value\n      }\n    }\n    default:\n      return state;\n  }\n}","import { SET_DUNGEON_LEVELS, SET_DUNGEON_LEVEL_EXPLORED } from '../actions/types';\n\nconst initialState = {\n  levels: null,\n  exploredLevel: 0\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DUNGEON_LEVELS:\n      return {\n        ...state,\n        levels: action.payload\n      }\n    case SET_DUNGEON_LEVEL_EXPLORED:\n      return {\n        ...state,\n        exploredLevel: action.level\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\nimport suppliesReducer from './suppliesReducer';\nimport profileReducer from './profileReducer';\nimport appStateReducer from './appStateReducer';\nimport mobileMenuReducer from './mobileMenuReducer';\nimport adventurersReducer from './adventurersReducer';\nimport pcDetailReducer from './pcDetailReducer';\nimport detailReducer from './detailReducer';\nimport dungeonReducer from './dungeonReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer,\n  supplies: suppliesReducer,\n  profile: profileReducer,\n  app: appStateReducer,\n  mobileMenu: mobileMenuReducer,\n  adventurers: adventurersReducer,\n  pcMenu: pcDetailReducer,\n  detail: detailReducer,\n  dungeon: dungeonReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}