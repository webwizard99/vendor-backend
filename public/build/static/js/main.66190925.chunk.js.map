{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","actions/types.js","Components/StoreInventory/StoreInventory.jsx","game_modules/store.js","game_modules/days.js","game_modules/supplies.js","Utilities/fetcher.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/SupplierBuyButton/SupplierBuyButton.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","game_modules/gameConstants.js","game_modules/adventurers.js","game_modules/main.js","Components/Days/Days.jsx","Utilities/pcMenus.js","Utilities/pcDetailMenus.js","Components/DetailPCMenu/DetailPCMenu.jsx","Utilities/screenInfo.js","Utilities/breadcrumb.js","Utilities/mobileScreens.js","Components/Adventurer/Adventurer.jsx","Components/Adventurers/Adventurers.jsx","Components/AdventurerDetail/AdventurerDetail.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","Containers/StartScreen/StartScreen.jsx","Utilities/userPutRequests.js","Containers/ProfileViewer/ProfileViewer.jsx","Components/MobileStoreHeadbar/MobileStoreHeadbar.jsx","Components/MobileMenu/MobileMenu.jsx","Containers/MobileGameScreen/MobileGameScreen.jsx","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/suppliesReducer.js","reducers/profileReducer.js","reducers/appStateReducer.js","reducers/mobileMenuReducer.js","reducers/adventurersReducer.js","reducers/pcDetailReducer.js","reducers/detailReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","itemTypeIndex","itemPrototypeIndex","lastIndex","Item","payload","type","name","value","prototypeId","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","getItemType","getItemPrototypeId","getItemTypeIndex","createTestPotion","lvl","healing","getItemTypes","storeInventory","inventory","composeInventory","composedInventory","forEach","gameItems","itemId","markup","addItem","undefined","newStoreItem","removeItem","filter","getStoreInventory","updateStoreInventory","store","dispatch","dispatchStoreInventory","getComposedInventory","getFilteredInventory","newFilter","toLowerCase","getFilteredStoreItems","markupFilteredStoreItems","newMarkup","markupAmount","inventoryItem","markupStoreItem","markupById","markupPrototypes","markupByPrototype","StoreInventory","props","state","timer","mobileMultiplier","delay","markupIntensity","valence","increaseMarkup","bind","repeat","onMouseDown","onMouseUp","markupOut","handleMobileFocus","handleOneIncrement","handlePrototypeIncrement","getInventoryItems","getIncrementOneButtons","getIncrementAllButtons","newInventory","JSON","parse","stringify","gameInventory","setInventory","setState","e","refBtnClasses","target","classList","contains","repeatPayload","totaldelay","setTimeout","clearTimeout","posNeg","toggleStoreUpdateStatus","itemsPayload","isPc","className","onTouchStart","onTouchEnd","mobileItem","mobileItemDetail","mobileDetail","setStoreMobileDetail","setStoreMobileDetailItem","window","filteredInventory","length","filterActive","storeFilter","map","composedPrice","Math","floor","itemClass","key","React","Component","connect","storeState","inventoryCount","storeNeedsUpdate","needsUpdate","isMobile","app","detail","itemDetail","gameStore","gold","chargeGold","amount","creditGold","getName","setName","newName","getStartingGold","getGold","setGold","newGold","updateGold","dispatchStoreGold","days","day","getDay","setDay","newDay","resetDay","supplies","suppliesPool","supplyLevel","itemTypesArr","Object","values","itemTypeCount","itemSpawnCount","fetchItemArrForSupplyPool","a","typeToFetch","maxLvl","fetchURL","fetch","possibleItems","json","getItemForSupplyPool","newItems","then","itemsOfLevel","dispatchSpawned","catch","err","spawnSupply","typeIndex","random","typeToSpawn","newSupplyArr","Array","isArray","Items","getSupplies","fillSupplies","i","dispatchReady","fillSupplyPool","typeItem","depleteSupply","supplyIndex","indexOf","splice","setSupplyLevel","fetcher","fetchRoute","routeName","response","suppliers","currentId","Supplier","offerings","prototype","rankFavorites","bestOfferings","offeringsCount","sort","off1","off2","rankedOfferings","sellItem","price","itemIndex","dispatchSuppliers","newSuppliers","fetchSuppliers","initSuppliers","getSuppliers","initializeSuppliers","maxSuppliers","next","drainSuppliers","pushIndex","newSupplier","supplierPayload","thisSupplier","supplier","takeSupplierTurn","remainingSupplies","supplyTypes","supplyValues","remainingSupply","supplyItem","currentSupplier","supplierCount","remSupply","remNum","supplierTries","thisIndex","taken","supplierIndex","favorites","thisSupply","takeSupplies","dispatchSupplyReady","refSupplier","sellPayload","updateSuppliers","fetchUser","axios","get","res","data","import_nickname","nickname","fetchGold","fetchDay","Store","getMobileDetail","componentDidMount","toggleFilter","getFilter","handleFilter","getIncrementButtons","handleIncrease","handleDecrease","currentType","setStoreFilter","refBtn","totalDelay","pc","defaultValue","onChange","itemType","newValue","setStoreFilterActive","inventoryComponent","storeName","role","aria-label","onClick","setStoreGold","SupplierBuyButton","getSuppllierInventory","handlePurchase","ids","storeGold","sellId","gameSuppliers","gameStoreInventory","initialized","thisInventory","inventoryGroups","valueGroups","typeGroups","idGroups","composedItems","entries","count","item1","item2","nameA","toUpperCase","nameB","findIndex","offering","composedValue","supplierClass","supplyReady","ready","Suppliers","componentDidUpdate","supplySpawned","gameSupplies","suppliersInitialized","gameSupplier","setSuppliersInitialized","supplierContainerClass","spacerClass","currentSuppliers","suppliersDisplay","renderSupplier","ref","node","container","suppliersClass","spawned","gameConstants","startingAdventurers","dailyAdventurers","adventurerStartingGold","adventurers","Adventurer","strength","speed","cunning","intelligence","constitution","dungeonBehavior","townBehavior","adventurerClass","experience","hp","maxHp","equipment","informed","checkAccount","chargeAccount","unequipItem","slot","equipItem","dispatchAdventurers","newAdventurers","fetchAdventurers","initAdventurers","getAdventurers","initializeAdventurers","maxAdventurers","drainAdventurers","newAdventurer","adventurerPayload","dungeon_behavior","town_behavior","adventurer_class","thisAdventurer","updateAdventurers","takeAdventurerTurn","inventoryItems","composedItem","adventurerTurn","adventurerCount","adventurerTries","adventurerIndex","decisionFactor","totalFactor","willBuy","currentGear","totalPrice","playerStore","doShopping","dispatchUpdate","main","init","startingGold","getGameLevel","performTurn","Days","handleNextDay","currentDay","mobileDropdown","setMobileDropdown","mobileMenu","dropdown","pcMenus","adventurer","pcDetailMenus","currentMenu","currentIndex","menus","menuMap","menu","menuN","getCurrentMenu","nextMenu","previousMenu","getMenus","setmenu","newMenu","menuIndex","updateMenu","dispatchPCMenu","DetailPCMenu","handlePrevious","handleNext","handleDropdown","handleMenuChange","getPCDropdown","pcDropdown","setPcDropdown","allMenus","pcDetailMenu","pcMenu","setPcDetailMenu","screenInfo","isFullscreen","height","width","dispatchFullscreen","orientation","docDimensions","document","querySelector","getBoundingClientRect","setScreenInfo","dispatchIsPc","dispatchIsMobile","getIsPc","getIsMobile","goFullScreen","App","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setFullScreen","leaveFullScreen","exitFullscreen","breadcrumb","breadcrumbs","Breadcrumb","displayPayload","scrollPos","dispatchDisplay","screen","popBreadcrumb","pop","addBreadcrumb","display","newCrumb","mobileScreens","currentScreen","screens","allScreens","screenMap","screenN","getCurrentScreen","nextScreen","previousScreen","getScreens","getAllScreens","setScreen","newScreen","screenIndex","updateScreen","dispatchMobileScreen","handleZoom","setDetailId","scrollY","scrollTop","screenPos","setMobileScreen","setPCDetail","adventurerClassColor","adventurerClassIconColor","classColors","thief","bard","soldier","classIcon","charAt","Adventurers","nextProps","nextState","update","AdventurerDetail","handleBack","adventurerInventory","detailId","getInventory","getCombatLog","Details","formTable","loadFormTable","getDetail","tempTable","menuTypes","GameScreen","Title","StartScreen","edited","handleStart","handleNameInput","game","setStarted","charCode","htmlFor","val","setStoreName","onKeyPress","started","gameState","auth","userPutRequests","makeRequest","putRoute","putBody","subBody","putRes","method","headers","body","ProfileViewer","handleClose","handleSubmit","updateUser","profileActive","setProfileActive","preventDefault","FormData","newNickname","newImportNickname","newId","action","onSubmit","placeholder","maxLength","class","defaultChecked","profile","active","MobileStoreHeadbar","MobileMenu","handleScreenChange","getMobileDropdown","mobileScreen","MobileGameScreen","MenuBar","mobileOpen","handleProfileActive","getLoginContainer","renderProfileLink","renderLogin","renderEditorLink","handleFullscreen","getFullScreenControls","handleMobileOpen","href","mobileOffsetStyle","menuOffsets","style","getMobileMenu","getMainView","getProfileViewer","actions","initialState","storeUpdate","intitialState","combineReducers","updates","newCount","newStatus","number","newUpdate","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.66190925.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let itemTypeIndex = {};\n  let itemPrototypeIndex = {};\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value, prototypeId } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.prototypeId = prototypeId;\n    this.id = lastIndex;\n    itemTypeIndex[lastIndex] = type;\n    itemPrototypeIndex[lastIndex] = prototypeId;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload, prototypeId } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value, prototypeId: prototypeId }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    getItemType(id) {\n      if (itemTypeIndex[id] !== null) {\n        return itemTypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemPrototypeId(id) {\n      if (itemPrototypeIndex[id] !== null) {\n        return itemPrototypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemTypeIndex() {\n      return itemTypeIndex;\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    }\n  }\n}());\n\nexport default items;","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_INVENTORY } from '../actions/types';\n\n// game module imports\nimport gameItems from './items';\n\nconst storeInventory = (function(){\n  // {\n  //   itemId: Number,\n  //   markup: number\n  // }\n  let inventory = [];\n\n  const maxMarkup = 4000;\n\n  const dispatchStoreInventory = function() {\n    const payload = {\n      type: SET_STORE_INVENTORY,\n      inventory: inventory\n    }\n    store.dispatch(payload);\n  }\n\n  const composeInventory = function() {\n    let composedInventory = [];\n      inventory.forEach(item => {\n        let thisItem = gameItems.getItem(item.itemId);\n        composedInventory.push({ ...thisItem, markup: item.markup });\n      });\n      return composedInventory;\n  }\n\n  const filterInventory = function(filter) {\n    let filteredInventory = composeInventory().filter(item => item.type === filter);\n    return filteredInventory;\n  }\n\n  const filterStoreItems = function(filter) {\n    let filteredIds = inventory.filter(item => {\n      return storeInventory.getItemType(item.itemId) === filter\n    });\n    return filteredIds;\n  }\n\n  const markupFilteredItems = function(filter, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (filter.toLowerCase() === 'all' || gameItems.getItemType(inventoryItem.itemId) === filter) {\n        inventoryItem.markup += newMarkup;\n        if (inventoryItem.markup > maxMarkup) {\n          inventoryItem.markup = maxMarkup;\n        }\n        if (inventoryItem.markup < 0) {\n          inventoryItem.markup = 0;\n        }\n      }\n    });\n  }\n\n  const markupById = function(id, newMarkup) {\n    const targetItem = inventory.find(item => item.itemId === id);\n    targetItem.markup += newMarkup;\n  }\n\n  const markupByPrototype = function(prototypeId, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (gameItems.getItemPrototypeId(inventoryItem.itemId) === prototypeId) {\n        inventoryItem.markup += newMarkup;\n      }\n      if (inventoryItem.markup > maxMarkup) {\n        inventoryItem.markup = maxMarkup;\n      }\n      if (inventoryItem.markup < 0) {\n        inventoryItem.markup = 0;\n      }\n    })\n  }\n\n  return {\n    addItem: function(id) {\n      if (id === null || id === undefined) {\n        return false;\n      }\n      const newStoreItem = { itemId: id,\n        markup: 150\n      }\n      inventory.push(newStoreItem);\n    },\n\n    removeItem: function(id) {\n      const foundItem = inventory.find(item => item.itemId === id);\n      if (foundItem) {\n        inventory = inventory.filter(item => item.itemId !== id);\n      }\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    },\n\n    updateStoreInventory: function() {\n      dispatchStoreInventory();\n    },\n\n    getComposedInventory: function() {\n      return composeInventory();\n    },\n\n    getFilteredInventory: function(newFilter) {\n      if (!newFilter || newFilter.toLowerCase() === 'all') {\n        return composeInventory();\n      }\n      else {\n        return filterInventory(newFilter);\n      }\n    },\n    \n    getFilteredStoreItems: function(newFilter) {\n      return filterStoreItems(newFilter);\n    },\n\n    markupFilteredStoreItems: function(payload) {\n      let { filter:newFilter, markup:markupAmount } = payload;\n      markupFilteredItems(newFilter, markupAmount);\n    },\n    \n    markupStoreItem: function(payload) {\n      let { id, markup:markupAmount} = payload;\n      markupById(id, markupAmount);\n    },\n\n    markupPrototypes: function(payload) {\n      let { prototypeId, markup: markupAmount } = payload;\n      markupByPrototype(prototypeId, markupAmount);\n    }\n  }\n}());\n\nexport default storeInventory;","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = \"SET_STORE_INVENTORY\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_SUPPLY_READY = \"SET_SUPPLY_READY\";\nexport const SET_SUPPLY_SPAWNED = \"SET_SUPPLY_SPAWNED\";\nexport const SET_STORE_FILTER = \"SET_STORE_FILTER\";\nexport const SET_STORE_FILTER_ACTIVE = \"SET_STORE_FILTER_ACTIVE\";\nexport const SET_STORE_UPDATE_STATUS = \"SET_STORE_UPDATE_STATUS\";\nexport const SET_PROFILE_ACTIVE =\"SET_PROFILE_ACTIVE\";\nexport const SET_IS_FULLSCREEN = \"SET_IS_FULLSCREEN\";\nexport const SET_IS_PC = \"SET_IS_PC\";\nexport const SET_IS_MOBILE = \"SET_IS_MOBILE\";\nexport const SET_MOBILE_SCREEN = \"SET_MOBILE_SCREEN\";\nexport const SET_SUPPLIERS_INITIALIZED = \"SET_SUPPLIERS_INITIALIZED\";\nexport const SET_MOBILE_DROPDOWN = \"SET_MOBILE_DROPDOWN\";\nexport const SET_STORE_MOBILE_DETAIL = \"SET_STORE_MOBILE_DETAIL\";\nexport const SET_STORE_MOBILE_DETAIL_ITEM = \"SET_STORE_MOBILE_DETAIL_ITEM\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_PC_DETAIL = \"SET_PC_DETAIL\";\nexport const SET_PC_DROPDOWN = \"SET_PC_DROPDOWN\";\nexport const SET_DETAIL_ID = \"SET_DETAIL_ID\";\nexport const SET_ADVENTURER_UPDATE = \"SET_ADVENTURER_UPDATE\";","import React from 'react';\nimport './StoreInventory.css';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../../actions/types';\n\nimport gameInventory from '../../game_modules/storeInventory';\n// import storeItems from '../../game_modules/items';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.mobileMultiplier = 2;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n    \n    this.handleMobileFocus = this.handleMobileFocus.bind(this);\n    this.handleOneIncrement = this.handleOneIncrement.bind(this);\n    this.handlePrototypeIncrement = this.handlePrototypeIncrement.bind(this);\n    this.getInventoryItems = this.getInventoryItems.bind(this);\n    this.getIncrementOneButtons = this.getIncrementOneButtons.bind(this);\n    this.getIncrementAllButtons = this.getIncrementAllButtons.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(gameInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  increaseMarkup() {\n    this.setState({\n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  onMouseDown(payload) {\n    const { e } = payload;\n    let id = null, prototypeId = null;\n    if (payload.id !== null) {\n      id = payload.id;\n    }\n    if (payload.prototypeId !== null) {\n      prototypeId = payload.prototypeId;\n    }\n    const refBtnClasses = e.target.classList;\n    if (refBtnClasses.contains(\"decreaseOne\") ||\n      refBtnClasses.contains(\"minusOne\") ||\n      refBtnClasses.contains(\"decreaseProto\") ||\n      refBtnClasses.contains(\"minusProto\")) {\n        this.valence = -1;\n    }\n    if (refBtnClasses.contains(\"increaseOne\") ||\n      refBtnClasses.contains(\"plusOne\") ||\n      refBtnClasses.contains(\"increaseProto\") ||\n      refBtnClasses.contains(\"plusProto\")) {\n        this.valence = 1;\n    }\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.repeat(repeatPayload);\n  }\n\n  repeat(payload) {\n    let { id, prototypeId } = payload;\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.increaseMarkup();\n    if (id !== undefined) {\n      this.handleOneIncrement(id);\n    }\n    if (prototypeId !== undefined) {\n      this.handlePrototypeIncrement(prototypeId);\n    }\n    let totaldelay = this.delay * this.mobileMultiplier;\n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(() => this.repeat(repeatPayload), totaldelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleOneIncrement(id) {\n    const posNeg = this.valence;\n    const itemPayload = {\n      id: id,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupStoreItem(itemPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handlePrototypeIncrement(prototypeId) {\n    const posNeg = this.valence;\n    const itemsPayload = {\n      prototypeId: prototypeId,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupPrototypes(itemsPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementOneButtons(id) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getIncrementAllButtons(prototypeId) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  handleMobileFocus(item) {\n    let mobileItem;\n    if (this.props.mobileItemDetail) {\n      mobileItem = this.props.mobileItemDetail;\n    }\n    if (this.props.mobileItemDetail && this.props.mobileDetail && mobileItem.id === item.id) {\n      this.props.setStoreMobileDetail(false);\n      this.props.setStoreMobileDetailItem(null);\n      window.inventory = undefined;\n    } else {\n      this.props.setStoreMobileDetail(true);\n      this.props.setStoreMobileDetailItem(item);\n      window.inventory = this;\n    }\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      let filteredInventory;\n      if (!this.props.filterActive || this.props.storeFilter === 'all') {\n        filteredInventory = gameInventory.getComposedInventory();\n      } else {\n        filteredInventory = gameInventory.getFilteredInventory(this.props.storeFilter);\n      }\n      return (\n        <div>{filteredInventory.map(item => {\n          const composedPrice = Math.floor(item.value * (1 + (item.markup / 1000)));\n          let itemClass = \"InventoryItem itemBackground\";\n          if (this.props.mobileDetail && item.id === this.props.mobileItemDetail.id) {\n            itemClass += \" activeMobileItem\";\n          }\n          return (\n            <div className={itemClass} \n              key={item.id}\n              onTouchStart={() => this.handleMobileFocus(item)}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              {this.props.isPc ? this.getIncrementOneButtons(item.id) : ''}\n              {this.props.isPc ? this.getIncrementAllButtons(item.prototypeId) : ''}\n              <div className=\"ItemValueGroup\">\n                <span className=\"InventoryItemValue\"><span className=\"CoinSymbol\">&#x2689; </span>{composedPrice}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory primary\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory,\n    inventoryCount: state.storeState.inventoryCount,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS }),\n    setStoreMobileDetail: (detail) => dispatch({ type: SET_STORE_MOBILE_DETAIL, detail: detail }),\n    setStoreMobileDetailItem: (itemDetail) => dispatch({ type: SET_STORE_MOBILE_DETAIL_ITEM, itemDetail: itemDetail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_GOLD } from '../actions/types';\n\nconst gameStore = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n\n  const dispatchStoreGold = function() {\n    const payload = {\n      type: SET_STORE_GOLD,\n      amount: gold\n    }\n    store.dispatch(payload);\n  }\n  \n  return {\n    chargeGold: function(amount) {\n      if (gold < amount) {\n        console.log('attempted to charge more gold than vendor owns')\n        return false;\n      }\n      gold -= amount;\n    },\n    creditGold: function(amount) {\n      gold += amount;\n    },\n    getName: function() {\n      return name;\n    },\n    setName: function(newName) {\n      name = newName;\n    },\n    getStartingGold: function() {\n      return startingGold;\n    },\n    getGold: function() {\n      return gold;\n    },\n    setGold: function(newGold) {\n      gold = newGold;\n    },\n    updateGold: function() {\n      dispatchStoreGold();\n    }\n  }\n}());\n\nexport default gameStore;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  let suppliesPool = {};\n  let supplyLevel = 1;\n\n  const itemTypesArr = Object.values(ItemTypes);\n  const itemTypeCount = itemTypesArr.length;\n  let itemSpawnCount = 0;\n\n  const dailySupplies = 10;\n\n  const dispatchReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSpawned = function(value) {\n    const payload = {\n      type: SET_SUPPLY_SPAWNED,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  // fill supply pool\n  const fetchSupplyPool = function() {\n    // produce array of type strings and choose one at random\n    itemSpawnCount = 0;\n    itemTypesArr.forEach(typeItem => {\n      if (suppliesPool[typeItem] == null) {\n        suppliesPool[typeItem] = [];\n      }\n      suppliesPool[typeItem].length = 0;\n    });\n\n    getItemForSupplyPool();\n    return true;\n  }\n\n  // fetch an item from backend\n  const fetchItemArrForSupplyPool = async function() {\n    let lvl = supplyLevel;\n    if (!lvl) return;\n\n    let typeToFetch = itemTypesArr[itemSpawnCount];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  // take an item that was fetched from backend and create it\n  // with item constructors and put it into state\n  const getItemForSupplyPool = function() {\n    if (itemSpawnCount >= itemTypeCount) {\n      return;\n    }\n    let newItems;\n    fetchItemArrForSupplyPool()\n      .then(itemsOfLevel => {\n        newItems = itemsOfLevel;\n      \n        // initialize field on pool if need be\n        if (suppliesPool[itemTypesArr[itemSpawnCount]] === null) {\n          suppliesPool[itemTypesArr[itemSpawnCount]] = [];\n        }\n        // push item id into supplies\n        suppliesPool[itemTypesArr[itemSpawnCount]].push(newItems);\n\n        itemSpawnCount++;\n        if (itemSpawnCount === itemTypeCount) {\n          dispatchSpawned(true);\n        }\n        getItemForSupplyPool();\n        return true;\n      }).catch(err => console.log(err));\n  }\n\n  const spawnSupply = function() {\n    // produce array of type strings and choose one at random\n    let typeIndex = Math.floor(Math.random() * itemTypesArr.length);\n    let typeToSpawn = itemTypesArr[typeIndex];\n    const newSupplyArr = suppliesPool[typeToSpawn];\n    let randomChoice = Math.floor(Math.random() * newSupplyArr.length);\n    let newItem = newSupplyArr[randomChoice];\n\n    if (Array.isArray(newItem)) {\n      newItem = newItem[0];\n    }\n\n    // compose payload for Item constructor\n    let itemPayload = {};\n    itemPayload.level = newItem.level;\n    switch(newItem.item.type) {\n      case ItemTypes.potion:\n        itemPayload.type = newItem.type;\n        break;\n      case ItemTypes.weapon:\n        itemPayload.damage = newItem.damage;\n        break;\n      case ItemTypes.armor:\n        itemPayload.armor = newItem.armor;\n        break;\n      default:\n        break;\n    }\n    let payload = {};\n    payload.itemPayload = itemPayload;\n    payload.type = newItem.item.type;\n    payload.name = newItem.item.name;\n    payload.value = newItem.item.value;\n    payload.prototypeId = newItem.item.id;\n\n    // create item and add to total inventory in Items module\n    let itemId = Items.createItem(payload);\n    supplies.push(itemId);\n\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function() {\n      for (let i = 0; i < dailySupplies; i++) {\n        spawnSupply();\n      }\n      dispatchReady(true);\n    },\n    fillSupplyPool: function() {\n      fetchSupplyPool();\n    },\n    depleteSupply: function(id) {\n      let supplyIndex = supplies.indexOf(id);\n      if (supplyIndex >= 0) {\n        let chosenSupply = supplies.splice(supplyIndex, 1);\n        return chosenSupply;\n      }\n    },\n    setSupplyLevel: function(lvl) {\n      supplyLevel = lvl;\n    }\n  }\n}());\n\nexport default supplies;","const fetcher = (function(){\n  return {\n    fetchRoute: async function(routeName) {\n      let response;\n      try {\n        response = await fetch(`/${routeName}`);\n      } catch (err) {\n        console.log(err);\n      }\n      if (response) {\n        response = response.json();\n      }\n      return response;\n    }\n  }\n}());\n\nexport default fetcher;","// game imports\nimport supplies from './supplies';\nimport items from './items';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLIERS, SET_SUPPLY_READY } from '../actions/types';\n\nconst suppliers = (function(){\n\n  let suppliers = [];\n\n  let currentId = 0;\n\n  const startingGold = 1000;\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n    this.inventory = [];\n    this.id = currentId;\n    currentId++;\n  }\n\n  Supplier.prototype.rankFavorites = function() {\n    let bestOfferings = [];\n    const offeringsCount = this.offerings.length;\n    for (let i = 0; i < offeringsCount; i++) {\n      bestOfferings.push(this.offerings[i]);\n    }\n    bestOfferings.sort((off1, off2) => {\n      return off1.markup - off2.markup;\n    });\n    this.rankedOfferings = bestOfferings;\n  }\n\n  Supplier.prototype.sellItem = function(payload) {\n    let { id, price } = payload;\n\n    const itemIndex = this.inventory.indexOf(id);\n    if (!itemIndex && itemIndex !== 0) {\n      return false;\n    }\n\n    this.inventory.splice(itemIndex, 1);\n    this.gold += price;\n\n    return true;\n  }\n\n  const dispatchSuppliers = function(newSuppliers) {\n    const payload = {\n      type: SET_SUPPLIERS,\n      payload: newSuppliers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSupplyReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers = fetcher.fetchRoute('suppliers');\n      // try {\n      //   initSuppliers = await fetch('/suppliers');\n      // } catch (err) {\n      //   console.log(err);\n      // }\n      // if (initSuppliers) {\n      //   initSuppliers = initSuppliers.json();\n      // }\n      return initSuppliers;\n  }\n\n  const getSuppliers = function*() {\n    yield fetchSuppliers();\n  }\n\n  const takeSupplies = function() {\n    // copy supplies to local array\n    const remainingSupplies = JSON.parse(JSON.stringify(supplies.getSupplies()));\n    let supplyTypes = [];\n    let supplyValues = [];\n    remainingSupplies.forEach(remainingSupply => {\n      const supplyItem = items.getItem(remainingSupply);\n      supplyTypes.push(supplyItem.type);\n      supplyValues.push(supplyItem.value);\n    });\n    let currentSupplier = 0;\n    const supplierCount = suppliers.length;\n    // loop through each supply item\n    remainingSupplies.forEach((remSupply, remNum) => {\n      // create an order based on last supplier to take an\n      // item and proceeded sequentially to include all\n      // suppliers\n      let supplierTries = [];\n      for (let i = 0; i < supplierCount; i++) {\n        let thisIndex = currentSupplier + i;\n        if (thisIndex >= supplierCount) {\n          thisIndex -= supplierCount;\n        }\n        supplierTries.push(thisIndex);\n      }\n      let taken = false;\n      \n      // check with each supplier if type of current supply is\n      // in their offerings\n      supplierTries.forEach(supplierIndex => {\n        let favorites = suppliers[supplierIndex].rankedOfferings;\n        for (let fave of favorites) {\n          // if type of supplier's offering equals type of this supply\n          if (fave.type === supplyTypes[remNum]) {\n            if (!taken && suppliers[supplierIndex].gold >= supplyValues[remNum]) {\n              // if supplier inventory not initialized, set to empty array\n              if (suppliers[supplierIndex].inventory === null) {\n                suppliers[supplierIndex].inventory = [];\n              }\n\n              // remove item from supply\n              let thisSupply = supplies.depleteSupply(remSupply);\n              if (Array.isArray(thisSupply)) {\n                thisSupply = thisSupply[0];\n              }\n\n              suppliers[supplierIndex].gold -= supplyValues[remNum];\n\n              // put item in supplier's inventory\n              suppliers[supplierIndex].inventory.push(thisSupply);\n\n              // mark item taken;\n              taken = true;\n              currentSupplier = supplierIndex + 1;\n              if (currentSupplier > supplierCount) {\n                currentSupplier = 0;\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      const gGetSuppliers = getSuppliers();\n      gGetSuppliers.next().value\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              thisSupplier.gold = startingGold;\n              suppliers.push(thisSupplier);\n            }\n            suppliers.forEach(supplier => supplier.rankFavorites());\n            dispatchSuppliers(suppliers);\n            return suppliers;\n          }\n        });\n    },\n    getSuppliers: function() {\n      return suppliers;\n    },\n    takeSupplierTurn: function() {\n      takeSupplies();\n      dispatchSuppliers(suppliers);\n      dispatchSupplyReady(false);\n    },\n    sellItem: function (payload) {\n      const { id, itemId, price} = payload;\n      \n      const thisSupplier = suppliers.find(refSupplier => refSupplier.id === id);\n      if (!thisSupplier) {\n        return false;\n      }\n      const sellPayload = {\n        id: itemId,\n        price: price\n      }\n\n      const resSale = thisSupplier.sellItem(sellPayload);\n      if (!resSale) {\n        return false;\n      }\n      return true;\n    },\n    updateSuppliers: function() {\n      dispatchSuppliers(suppliers);\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, SET_STORE_GOLD, SET_DAY, SET_SUPPLIERS, SET_STORE_NAME } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n  if (res.data && res.data.import_nickname) {\n    dispatch({ type: SET_STORE_NAME, name: res.data.nickname});\n  }\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}","import React from 'react';\nimport './Store.css';\n\n// import game modules\n// import gameStore from '../../game_modules/store';\nimport gameInventory from '../../game_modules/storeInventory';\n\n\n// import components\nimport ItemTypes from '../../Utilities/itemTypes';\nimport StoreInventory from '../StoreInventory/StoreInventory';\n\n\n// redux imports\nimport { SET_STORE_GOLD,\n  SET_STORE_FILTER, \n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.mobileMultiplier = 2;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n\n    this.getMobileDetail = this.getMobileDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.getFilter = this.getFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.getIncrementButtons = this.getIncrementButtons.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }\n\n  handleFilter(e) {\n    let currentType = e.target.value;\n    this.props.setStoreFilter(currentType);\n  }\n\n  increaseMarkup() {\n    this.setState({ \n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  // Proccess mousedown event to start incremental markup\n  onMouseDown(e) {\n    const refBtn = e.target;\n    if (refBtn.classList.contains(\"decreaseAll\") ||\n      refBtn.classList.contains(\"minus\")) {\n      this.valence = -1;\n    }\n    if (refBtn.classList.contains(\"increaseAll\" ||\n      refBtn.classList.contains(\"plus\"))) {\n      this.valence = 1;\n    }\n    this.repeat();\n  }\n\n  repeat() {\n    this.increaseMarkup();\n    if (this.valence === -1) {\n      this.handleDecrease();\n    }\n    if (this.valence === 1) {\n      this.handleIncrease();\n    }\n    let totalDelay = this.delay;\n    if (!this.props.pc) {\n      totalDelay *= this.mobileMultiplier;\n    } \n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(this.repeat, totalDelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleIncrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: this.state.markup\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handleDecrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: (this.state.markup * -1)\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementButtons() {\n    if (!this.props.filterActive) return '';\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getFilter() {\n    if (!this.props.filterActive) return '';\n    const itemTypesArr = Object.values(ItemTypes);\n    return (\n      <select className=\"StoreItemTypeFilter\" \n        defaultValue={this.props.storeFilter}\n        onChange={this.handleFilter}>\n        <option value=\"all\">all</option>\n        {itemTypesArr.map(itemType => {\n          return (\n            <option value={itemType}>{itemType}</option>\n          )\n        })}\n      </select>\n    )\n  }\n\n  toggleFilter() {\n    const newValue = !this.props.filterActive;\n    if (newValue && this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      inventoryComponent.handleMobileFocus(this.props.mobileItemDetail);\n    }\n    this.props.setStoreFilterActive(newValue);\n  }\n\n  getMobileDetail() {\n    if (this.props.isPc) {\n      return '';\n    }\n    if (this.props.filterActive && !this.props.mobileDetail) {\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          {this.getIncrementButtons()}\n          {this.getFilter()}\n        </div>\n      )\n    }\n    if (this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive primary-surface\">\n          <div className=\"itemDetailName\">{this.props.mobileItemDetail.name}</div>\n          {inventoryComponent.getIncrementOneButtons(this.props.mobileItemDetail.id)}\n          {inventoryComponent.getIncrementAllButtons(this.props.mobileItemDetail.prototypeId)}\n        </div>\n      )\n    }\n    return (\n      <div className=\"MobileDetailContainer\"></div>\n    );\n  }\n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar darkgrey\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <div className=\"FilterGroup\">\n            {this.props.isPc ? this.getIncrementButtons() : ''}\n            {this.props.isPc ? this.getFilter() : ''}\n          </div>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\" onClick={this.toggleFilter}>&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n        </div>\n        <StoreInventory />\n        {this.getMobileDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold()),\n    setStoreFilter: (filter) => dispatch({ type: SET_STORE_FILTER, filter: filter }),\n    setStoreFilterActive: (value) => dispatch({ type: SET_STORE_FILTER_ACTIVE, value: value }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './SupplierBuyButton.css';\n\nclass SupplierBuyButton extends React.Component {\n  render() {\n    return (\n      <div className=\"SupplierBuyButton button secondary\">\n        <div className=\"supplierBuyButtonIcon\">\n          buy\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SupplierBuyButton;","import React from 'react';\nimport './Supplier.css';\n\nimport SupplierBuyButton from '../SupplierBuyButton/SupplierBuyButton';\n\n// game module imports\nimport gameItems from '../../game_modules/items';\nimport gameSuppliers from '../../game_modules/suppliers'\nimport gameStore from '../../game_modules/store';\nimport gameStoreInventory from '../../game_modules/storeInventory';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n\nclass Supplier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppllierInventory = this.getSuppllierInventory.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handlePurchase(payload) {\n    const { ids, price } = payload;\n\n    if (price > this.props.storeGold) {\n      return;\n    }\n\n    // sell first item of object\n    const sellId = ids[0];\n    const sellPayload = {\n      id: this.props.supplier.id,\n      itemId: sellId,\n      price: price\n    }\n    let sellRes = gameSuppliers.sellItem(sellPayload);\n    if (!sellRes) {\n      return;\n    }\n\n    // transact sale for vendor\n    gameStore.chargeGold(price);\n    gameStoreInventory.addItem(sellId);\n\n    // update state\n    gameStore.updateGold();\n    gameStoreInventory.updateStoreInventory();\n    gameSuppliers.updateSuppliers();\n\n  }\n\n  getSuppllierInventory() {\n    if (!this.props.initialized) {\n      return ''\n    }\n    // get details on items from ids\n    let thisInventory = [];\n    this.props.supplier.inventory.forEach(id => {\n      let inventoryItem = gameItems.getItem(id);\n      thisInventory.push(inventoryItem);\n    });\n\n    // organize all items by item name\n    let inventoryGroups = {};\n    let valueGroups = {}\n    let typeGroups = {}\n    let idGroups = {}\n    thisInventory.forEach(item => {\n      if (!inventoryGroups[item.name]) {\n        inventoryGroups[item.name] = 1;\n        valueGroups[item.name] = item.value;\n        typeGroups[item.name] = item.type;\n        idGroups[item.name] = [item.id]\n      } else {\n        inventoryGroups[item.name] += 1;\n        idGroups[item.name].push(item.id);\n      }\n    });\n\n    // create array of composed items\n    let composedItems = []\n    for (const [key, value] of Object.entries(inventoryGroups)) {\n      let item = { name: key, count: value, type: typeGroups[key], value: valueGroups[key], ids: idGroups[key] };\n      composedItems.push(item);\n    }\n\n    composedItems.sort((item1, item2) => {\n      const nameA = item1.name.toUpperCase();\n      const nameB = item2.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return composedItems.map(item => {\n      const offerings = this.props.supplier.offerings;\n      const typeIndex = offerings.findIndex(offering => offering.type === item.type);\n      \n      let composedValue = item.value;\n      if (typeIndex !== -1) {\n        composedValue = composedValue * (1 + (offerings[typeIndex].markup / 1000));\n        composedValue = Math.floor(composedValue);\n      }\n\n      return (\n        <div className=\"SupplierInventoryItem itemBackground\" key={item.id}>\n          <span className=\"SupplierInventoryItemName\">{item.name} ({item.count})</span>\n          <div className=\"SupplierItemsValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{composedValue}</span>\n          </div>\n          <div className=\"BuyButtonContainer\" onClick={() => this.handlePurchase({ ids: item.ids, price: composedValue })}>\n              <SupplierBuyButton />\n            </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    let supplierClass = \"Supplier primary\";\n    if (this.props.isMobile) {\n      supplierClass += \" mobileSupplier\";\n    }\n    return (\n      <div className={supplierClass}>\n        <div className=\"SupplierName\">\n          {this.props.supplier.name}\n          <div className=\"SupplierValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{this.props.supplier.gold}</span>\n          </div>\n        </div>\n        <div className=\"supplierInventory primary-light\">\n          {this.getSuppllierInventory()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    supplyReady: state.supplies.ready,\n    storeGold: state.storeState.gold,\n    isMobile: state.app.isMobile\n  }\n}\n\nexport default connect(mapStateToProps)(Supplier);","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_SUPPLIERS_INITIALIZED } from '../../actions/types';\n\n// game imports\nimport gameSupplier from '../../game_modules/suppliers';\nimport gameSupplies from '../../game_modules/supplies';\n// import suppliers from '../../game_modules/suppliers';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppliers = this.getSuppliers.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateSuppliers = this.updateSuppliers.bind(this);\n  }\n\n  updateSuppliers() {\n    if (Array.isArray(this.props.suppliers) && this.props.supplySpawned) {\n      if (!this.props.supplyReady) {\n        gameSupplies.fillSupplies();\n      }\n    }\n    if (Array.isArray(this.props.suppliers) && this.props.supplyReady) {\n      if (!this.props.suppliersInitialized) {\n        gameSupplier.takeSupplierTurn();\n        this.props.setSuppliersInitialized(true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateSuppliers();\n  }\n\n  componentDidUpdate() {\n    this.updateSuppliers();\n  }\n\n  getSuppliers() {\n    let supplierContainerClass = \"suppliersContainer\";\n    let spacerClass = \"spacer\";\n    if (!this.props.isPc) {\n      supplierContainerClass += \" nonPcContainer\";\n      supplierContainerClass += \" mobileContainer\";\n      spacerClass += \" mobileSpacer\";\n    }\n    let currentSuppliers = this.props.suppliers;\n    if (Array.isArray(currentSuppliers)) {\n      const suppliersDisplay = currentSuppliers.map(renderSupplier => {\n        return (<Supplier supplier={renderSupplier} initialized={this.props.suppliersInitialized}/>);\n      });\n\n      return (\n        <div className={supplierContainerClass}\n          ref={node => {\n            this.container = node;\n          }}>\n          {suppliersDisplay}\n          <div className={spacerClass}></div>\n        </div>\n      );\n    } else {\n      return 'no suppliers to render';\n    }\n    \n  }\n  \n  render() {\n    let suppliersClass = \"Suppliers primary-dark\";\n    if (!this.props.isPc) {\n      suppliersClass += \" mobileSuppliers\";\n    }\n    return (\n      <div className={suppliersClass}>\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    supplyReady: state.supplies.ready,\n    supplySpawned: state.supplies.spawned,\n    isPc: state.app.isPc,\n    isMobile: state.app.isMobile,\n    suppliersInitialized: state.suppliers.initialized\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSuppliersInitialized: (value) => dispatch({ type: SET_SUPPLIERS_INITIALIZED, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Suppliers);","const gameConstants = {\n  maxSuppliers: 3,\n  startingAdventurers: 5,\n  dailyAdventurers: 1,\n  adventurerStartingGold: 400\n}\n\nexport default gameConstants;","// constant imports\nimport gameConstants from './gameConstants';\n\n// game imports\nimport storeInventory from './storeInventory';\nimport playerStore from './store';\nimport items from './items';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\nimport itemTypes from '../Utilities/itemTypes';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_ADVENTURERS, SET_ADVENTURER_UPDATE } from '../actions/types';\n\nconst adventurers = (function(){\n  let adventurers = [];\n  let currentId = 0;\n\n  const Adventurer = function(payload) {\n    const { name, \n      strength, \n      speed, \n      cunning, \n      intelligence,\n      constitution,\n      dungeonBehavior,\n      townBehavior,\n      adventurerClass } = payload;\n      this.name = name;\n      this.strength = strength;\n      this.speed = speed;\n      this.cunning = cunning;\n      this.intelligence = intelligence;\n      this.constitution = constitution;\n      this.dungeonBehavior = dungeonBehavior;\n      this.townBehavior = townBehavior;\n      this.adventurerClass = adventurerClass;\n      this.gold = gameConstants.adventurerStartingGold;\n      this.level = 1;\n      this.experience = 0;\n      this.hp = 7 + constitution;\n      this.maxHp = this.hp;\n      this.inventory = [];\n      this.equipment = { weapon: null, armor: null };\n      this.informed = false;\n      this.id = currentId;\n      currentId++;\n  }\n\n  Adventurer.prototype.checkAccount = function(value) {\n    return this.gold >= value;\n  }\n\n  Adventurer.prototype.chargeAccount = function(value) {\n    this.gold -= value;\n  }\n\n  Adventurer.prototype.unequipItem = function(slot) {\n    this.equipment[slot] = null;\n  }\n\n  Adventurer.prototype.equipItem = function(item) {\n    this.equipment[item.type] = item;\n  }\n\n  const dispatchAdventurers = function(newAdventurers) {\n    const payload = {\n      type: SET_ADVENTURERS,\n      payload: newAdventurers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchUpdate = function() {\n    const payload = {\n      type: SET_ADVENTURER_UPDATE\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchAdventurers = async function() {\n    let initAdventurers = fetcher.fetchRoute('adventurers-full');\n    return initAdventurers;\n  }\n\n  const getAdventurers = function*() {\n    yield fetchAdventurers();\n  }\n\n  const doShopping = function() {\n    const inventory = storeInventory.getStoreInventory();\n    let inventoryItems = [];\n    inventory.forEach(item => {\n      let composedItem = item;\n      composedItem.item = items.getItem(item.itemId);\n      inventoryItems.push(composedItem);\n    })\n    let adventurerTurn = 0;\n    const adventurerCount = adventurers.length;\n    // loop through each inventory item\n    inventoryItems.forEach(item => {\n      // create an order based on last adventurer to take an\n      // item and proceed suequentially to include all\n      // adventurers\n      let adventurerTries = [];\n      for (let i = 0; i < adventurerCount; i++) {\n        let thisIndex = adventurerTurn + i;\n        if (thisIndex >= adventurerCount) {\n          thisIndex -= adventurerCount;\n        }\n        adventurerTries.push(thisIndex);\n      }\n      let taken = false;\n\n      // check with each adventurer if they want the item\n      adventurerTries.forEach(adventurerIndex => {\n        let decisionFactor = '';\n        const thisAdventurer = adventurers[adventurerIndex];\n\n        if (thisAdventurer.equipment[item.item.type] && item.item.type !== itemTypes.potion) {\n          decisionFactor += 'upgrade';\n        } else {\n          decisionFactor += 'buy';\n        }\n        decisionFactor += '_' + item.item.type;\n        const desireWeight = thisAdventurer.townBehavior[decisionFactor];\n        let totalFactor = (desireWeight / 1000) - (item.markup / 1000);\n        if (totalFactor < 0) {\n          totalFactor = 0;\n        }\n        let willBuy = totalFactor >= Math.random();\n        if (thisAdventurer.equipment[item.item.type]) {\n          const currentGear = thisAdventurer.equipment[item.item.type];\n          if (item.item.type === itemTypes.weapon) {\n            const currentDamage = currentGear[itemTypes.weapon].damage;\n            const itemDamage = currentGear[itemTypes.weapon].damage;\n            if (currentDamage >= itemDamage) {\n              willBuy = false;\n            }\n          } else if (item.item.type === itemTypes.armor) {\n            const currentArmor = currentGear[itemTypes.armor].armor;\n            const itemArmor = item.item[itemTypes.armor].armor;\n            if (currentArmor >= itemArmor) {\n              willBuy = false;\n            }\n          }\n        }\n        if (willBuy && !taken) {\n          const totalPrice = item.item.value * (1 + (item.markup / 1000));\n          if (thisAdventurer.checkAccount(totalPrice)) {\n            thisAdventurer.chargeAccount(totalPrice);\n            playerStore.creditGold(totalPrice);\n            playerStore.updateGold();\n            storeInventory.removeItem(item.itemId);\n            storeInventory.updateStoreInventory();\n            thisAdventurer.inventory.push(item.item);\n            if (!item.item.type === itemTypes.potion) {\n              if (thisAdventurer.equipment[item.item.type]) {\n                thisAdventurer.unequipItem(item.item.type);\n              }\n              thisAdventurer.equipItem(item.item);\n            }\n            taken = true;\n            adventurerTurn = adventurerIndex + 1;\n            if (adventurerTurn > adventurerCount) {\n              adventurerTurn = 0;\n            }\n          }\n        }\n      })\n    })\n  }\n\n  return {\n    initializeAdventurers: async function(maxAdventurers) {\n      const genGetAdventurers = getAdventurers();\n      genGetAdventurers.next().value\n        .then(initAdventurers => {\n          if (initAdventurers) {\n            let drainAdventurers = initAdventurers;\n            while (adventurers.length < maxAdventurers && drainAdventurers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainAdventurers.length);\n              let newAdventurer = drainAdventurers.splice(pushIndex, 1);\n              newAdventurer = newAdventurer[0];\n              const adventurerPayload = {\n                name: newAdventurer.name,\n                strength: newAdventurer.strength, \n                speed: newAdventurer.speed, \n                cunning: newAdventurer.cunning, \n                intelligence: newAdventurer.intelligence,\n                constitution: newAdventurer.constitution,\n                dungeonBehavior: newAdventurer.dungeon_behavior,\n                townBehavior: newAdventurer.town_behavior,\n                adventurerClass: newAdventurer.adventurer_class\n              };\n              let thisAdventurer = new Adventurer(adventurerPayload);\n              adventurers.push(thisAdventurer);\n            }\n            dispatchAdventurers(adventurers);\n            return adventurers;\n          }\n        })\n    },\n    updateAdventurers: function() {\n      dispatchAdventurers(adventurers);\n    },\n    takeAdventurerTurn: function() {\n      doShopping();\n      dispatchAdventurers(adventurers);\n      dispatchUpdate();\n    }\n  }\n}());\n\nexport default adventurers;","// constants\nimport gameConstants from './gameConstants';\n\n// game module imports\nimport days from './days';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\nimport adventurers from './adventurers';\n\n// redux imports\nimport gameStore from './store';\n\nconst main = (function() {\n  \n  let currentMaxLevel = 1;\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      gameStore.setName(payload.name);\n\n      const startingGold = gameStore.getStartingGold();\n      gameStore.setGold(startingGold);\n\n      supplies.setSupplyLevel(currentMaxLevel);\n      supplies.fillSupplyPool();\n      suppliers.initializeSuppliers(gameConstants.maxSuppliers);\n\n      adventurers.initializeAdventurers(gameConstants.startingAdventurers);\n    },\n\n    getGameLevel: function() {\n      return currentMaxLevel;\n    },\n\n    performTurn: function() {\n      adventurers.takeAdventurerTurn();\n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\nimport main from '../../game_modules/main';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    main.performTurn();\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days primary-dark\">\n        <div className=\"DayTitle\">Day: {this.props.day}</div>\n        <div className=\"nextDay button secondary\" onClick={this.handleNextDay}\n        >Finish Day</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay()),\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","const pcMenus = {\n  adventurers: 'adventurers',\n  adventurer: 'adventurer'\n}\n\nexport default pcMenus;","// redux imports\nimport { store } from '../index';\nimport { SET_PC_DETAIL } from '../actions/types';\n\nimport pcMenus from './pcMenus';\n\nconst pcDetailMenus = (function(){\n  let currentMenu = '';\n  let currentIndex = 0;\n\n  const menus = [pcMenus.adventurers];\n\n  let menuMap = {};\n\n  const mapMenus = function() {\n    menus.forEach((menu, menuN) => {\n      menuMap[menu] = menuN;\n    })\n  }\n\n  const dispatchPCMenu = function() {\n    const payload = {\n      type: SET_PC_DETAIL,\n      detail: currentMenu\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentMenu = menus[0];\n      currentIndex = 0;\n      mapMenus();\n    },\n\n    getCurrentMenu: function() {\n      return currentMenu;\n    },\n\n    nextMenu: function() {\n      currentIndex++;\n      if (currentIndex >= menus.length) {\n        currentIndex = 0;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    previousMenu: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = menus.length - 1;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    getMenus: function() {\n      return menus;\n    },\n\n    setmenu: function(newMenu) {\n      const menuIndex = menuMap[newMenu];\n      if (menuIndex === null) {\n        return false\n      }\n      currentIndex = menuIndex;\n      currentMenu = menus[menuIndex];\n      return true;\n    },\n\n    updateMenu: function() {\n      dispatchPCMenu();\n    }\n  }\n}());\n\nexport default pcDetailMenus;","import React from 'react';\nimport './DetailPCMenu.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport pcDetailMenus from '../../Utilities/pcDetailMenus';\n// import pcMenus from '../../Utilities/pcMenus';\n\nclass DetailPCMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleMenuChange = this.handleMenuChange.bind(this);\n    this.getPCDropdown = this.getPCDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    pcDetailMenus.init();\n  }\n\n  handlePrevious() {\n    pcDetailMenus.previousMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleNext() {\n    pcDetailMenus.nextMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setPcDropdown(!this.props.pcDropdown);\n  }\n\n  handleMenuChange(newMenu) {\n    pcDetailMenus.setmenu(newMenu);\n    pcDetailMenus.updateMenu();\n    this.props.setPcDropdown(false);\n  }\n\n  getPCDropdown() {\n    const allMenus = pcDetailMenus.getMenus();\n    if (!this.props.pcDropdown) {\n      return false;\n    }\n    return (\n      <div className=\"PCDropdown primary-dark\">\n        {allMenus.map(menu => {\n          return (\n            <div className=\"PCDropdownOption primary-medium\"\n              onClick={() => this.handleMenuChange(menu)}>\n                {menu}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"PCDetailMenu primary-saturated\">\n        <span className=\"previousMenu screenArrowPC\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"PCMenuTitle\"\n          onClick={this.handleDropdown}>{this.props.pcDetailMenu}</span>\n        <span className=\"nextMenu screenArrowPC\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getPCDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    pcDropdown: state.pcMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPcDetailMenu: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail }),\n    setPcDropdown: (value) => dispatch({ type: SET_PC_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPCMenu);","import { store } from '../index';\nimport { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst screenInfo = (function(){\n  let isPc = true;\n  let isMobile = false;\n  let isFullscreen = true;\n\n  let height = 0;\n  let width = 0;\n  console.log(height, width);\n\n  const dispatchFullscreen = function() {\n    const payload = {\n      type: SET_IS_FULLSCREEN,\n      value: isFullscreen\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsPc = function() {\n    const payload = {\n      type: SET_IS_PC,\n      value: isPc\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsMobile = function() {\n    const payload = {\n      type: SET_IS_MOBILE,\n      value: isMobile\n    }\n    store.dispatch(payload);\n  }\n\n  const detectPc = function() {\n    const notPc = window.orientation > -1;\n    return !notPc;\n    \n  }\n\n  const setFullScreen = function() {\n    \n    let App = document.querySelector('.App');\n    if (App.requestFullscreen) {\n      App.requestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.msRequestFullscreen) {\n      App.msRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.mozRequestFullscreen) {\n      App.mozRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.webkitRequestFullscreen) {\n      App.webkitRequestFullscreen();\n      isFullscreen = true;\n    }\n    // document.fullscreen = true;\n    // document.fullscreenElement = App;\n  }\n\n  const exitFullScreen = function() {\n    isFullscreen = false;\n    document.exitFullscreen();\n  }\n\n  const setScreenInfo = function() {\n    const app = document.querySelector('.App');\n    const docDimensions = app.getBoundingClientRect();\n    height = docDimensions.height;\n    width = docDimensions.width;\n\n    if (width < 768) {\n      isMobile = true\n    } \n  }\n\n  return {\n    init: function() {\n      isPc = detectPc();\n      setScreenInfo();\n      dispatchIsPc();\n      dispatchIsMobile();\n    },\n    getIsPc: function() {\n      return isPc;\n    },\n    getIsMobile: function() {\n      return isMobile;\n    },\n    goFullScreen: function() {\n      setFullScreen();\n      dispatchFullscreen();\n    },\n    leaveFullScreen: function() {\n      exitFullScreen();\n      dispatchFullscreen();\n    }\n  }\n}());\n\nexport default screenInfo;","import { store } from '../index';\nimport { SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../actions/types';\n\nimport screenInfo from './screenInfo';\n\nconst breadcrumb = (function(){\n  let breadcrumbs = [];\n\n  const Breadcrumb = function(payload) {\n    const { \n      displayPayload,\n      isMobile,\n      scrollPos\n    } = payload;\n    this.displayPayload = displayPayload;\n    this.isMobile = isMobile;\n    this.scrollPos = scrollPos;\n  }\n\n  Breadcrumb.prototype.dispatchDisplay = function() {\n    if (this.isMobile) {\n      store.dispatch({ type: SET_MOBILE_SCREEN, screen: this.displayPayload });\n    } else {\n      store.dispatch({ type: SET_PC_DETAIL, detail: this.displayPayload });\n    }\n  }\n\n  return {\n    popBreadcrumb: function() {\n      if (breadcrumbs.length < 1) return false;\n      const nextCrumb = breadcrumbs.pop();\n      nextCrumb.dispatchDisplay();\n    },\n    addBreadcrumb: function(payload) {\n      let { display, scrollPos } = payload;\n      const isMobile = screenInfo.getIsMobile();\n      const newCrumb = new Breadcrumb({ displayPayload: display, scrollPos: scrollPos, isMobile: isMobile });\n      breadcrumbs.push(newCrumb);\n    }\n  }\n}());\n\nexport default breadcrumb;","// redux imports\nimport { store } from '../index';\nimport { SET_MOBILE_SCREEN } from '../actions/types';\n\nconst mobileScreens = (function(){\n  let currentScreen = '';\n  let currentIndex = 0;\n  const screens = ['store', 'suppliers', 'adventurers'];\n  // const dependentScreens = ['adventurer'];\n\n  const allScreens = {\n    store: 'store',\n    suppliers: 'suppliers',\n    adventurers: 'adventurers',\n    adventurer: 'adventurer'\n  }\n\n  let screenMap = {};\n\n  const mapScreens = function() {\n    screens.forEach((screen, screenN) => {\n      screenMap[screen] = screenN;\n    });\n  }\n\n  const dispatchMobileScreen = function() {\n    const payload = {\n      type: SET_MOBILE_SCREEN,\n      screen: currentScreen\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentScreen = screens[0];\n      currentIndex = 0;\n      mapScreens();\n    },\n\n    getCurrentScreen: function() {\n      return currentScreen;\n    },\n\n    nextScreen: function() {\n      currentIndex++;\n      if (currentIndex >= screens.length) {\n        currentIndex = 0;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    previousScreen: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = screens.length -1;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    getScreens: function() {\n      return screens;\n    },\n\n    getAllScreens: function() {\n      return allScreens;\n    },\n\n    setScreen: function(newScreen) {\n      const screenIndex = screenMap[newScreen];\n      if (screenIndex === null) {\n        return false;\n      } else {\n        currentIndex = screenIndex;\n        currentScreen = screens[screenIndex];\n        return true;\n      }\n    },\n\n    updateScreen: function() {\n      dispatchMobileScreen();\n    }\n  }\n}());\n\nexport default mobileScreens;","import React from 'react';\nimport './Adventurer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_ID, SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\nimport screenInfo from '../../Utilities/screenInfo';\nimport mobileScreens from '../../Utilities/mobileScreens';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass Adventurer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleZoom = this.handleZoom.bind(this);\n  }\n\n  handleZoom() {\n    if (!this.props.adventurer) return;\n    this.props.setDetailId(this.props.adventurer.id);\n    const advDOM = document.querySelector('.adventurers');\n    const scrollY = advDOM.scrollTop;\n    console.log(scrollY);\n    breadcrumb.addBreadcrumb({ display: 'adventurers', screenPos: scrollY });\n    if (screenInfo.getIsMobile()) {\n      const allScreens = mobileScreens.getAllScreens();\n      this.props.setMobileScreen(allScreens.adventurer);\n    } else {\n      this.props.setPCDetail(pcMenus.adventurer);\n    }\n  }\n\n  render() {\n    if (!this.props.adventurer) return '';\n    const adventurer = this.props.adventurer;\n    const adventurerClass = adventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    return (\n      <div className=\"adventurerDisplay primary\"\n        onClick={this.handleZoom}\n      >\n        <div className={adventurerClassIconColor}>{classIcon}</div>\n        <div className=\"adventurerDetails\">\n          <p className=\"adventurerName\">{adventurer.name}</p>\n          <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          <div className=\"adventurerStatGroupWide\">\n            <p className=\"adventurerStatLabel\">exp</p>\n            <p className=\"adventurerStat\">{adventurer.experience}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">lvl</p>\n            <p className=\"adventurerStat\">{adventurer.level}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{adventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{adventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{adventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{adventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{adventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{adventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{adventurer.constitution}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailId: (id) => dispatch({ type: SET_DETAIL_ID, id: id }),\n    setMobileScreen: (screen) => dispatch({ type: SET_MOBILE_SCREEN, screen: screen }),\n    setPCDetail: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail })\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Adventurer);","import React from 'react';\nimport './Adventurers.css';\n\n// component imports\nimport Adventurer from '../Adventurer/Adventurer';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Adventurers extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.update !== this.props.update) return true;\n    if (nextProps.adventurers !== this.props.adventurers) return true;\n  }\n\n  render() {\n    if (!this.props.adventurers) return '';\n    const adventurers = this.props.adventurers;\n    return (\n      <div className=\"adventurers\">\n        {adventurers.map(adventurer => {\n          return <Adventurer adventurer={adventurer} />\n        })}\n        <div className=\"spacer-vertical\"></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    update: state.adventurers.update\n  }\n}\n\nexport default connect(mapStateToProps)(Adventurers);","import React from 'react';\nimport './AdventurerDetail.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\n\nclass AdventurerDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  getInventory(adventurer) {\n    const adventurerInventory = adventurer.inventory;\n    console.log(adventurerInventory);\n    if (!adventurerInventory) return 'no inventory';\n    return 'inventory goes here!';\n  }\n\n  getCombatLog(adventurer) {\n    if (!adventurer) return 'no combat log';\n    return 'combat log goes here!';\n  }\n\n  handleBack() {\n    const handled = breadcrumb.popBreadcrumb();\n    if (!handled) {\n      console.log('breadcrumb failed!');\n    }\n  }\n  \n  render() {\n    if ((!this.props.detailId && this.props.detailId !== 0) || !this.props.adventurers) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.detailId);\n    const adventurerClass = thisAdventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    \n    return (\n      <div className=\"AdventurerDetail primary\">\n        <div className=\"title-bar\">\n          <div className=\"back-button\"\n            onClick={this.handleBack}>&#8592;</div>\n          <div className=\"adventurer-title\">{thisAdventurer.name}</div>\n        </div>\n        <div className=\"primary-stats-bar\">\n          <div className={adventurerClassIconColor}>{classIcon}</div>\n          <div className=\"primary-cascade\">\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">exp</p>\n              <p className=\"adventurerStat\">{thisAdventurer.experience}</p>\n            </div>\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">lvl</p>\n              <p className=\"adventurerStat\">{thisAdventurer.level}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"adventurerDetailsView\">\n          <div className=\"adventurerStatGroup\">\n            <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{thisAdventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{thisAdventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{thisAdventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{thisAdventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{thisAdventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{thisAdventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{thisAdventurer.constitution}</p>\n          </div>\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Inventory</p>\n        <div className=\"adventurerInventoryDetails\">\n          {this.getInventory(thisAdventurer)}\n        </div>\n        <div className=\"adventurer-combat-log\">\n          {this.getCombatLog(thisAdventurer)}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    detailId: state.detail.id\n  }\n}\n\nexport default connect(mapStateToProps)(AdventurerDetail);","import React from 'react';\nimport './Details.css';\n\n// component imports\nimport DetailPCMenu from '../DetailPCMenu/DetailPCMenu';\nimport Adventurers from '../Adventurers/Adventurers';\nimport AdventurerDetail from '../AdventurerDetail/AdventurerDetail';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nimport menuTypes from '../../Utilities/pcMenus';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n    this.getDetail = this.getDetail.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const forms = Object.values(menuTypes);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[menuTypes.adventurers] = <Adventurers />;\n    this.formTable[menuTypes.adventurer] = <AdventurerDetail />;\n  }\n\n  getDetail() {\n    if (!this.state.initialized) return '';\n    if (!this.props.pcDetailMenu) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n\n    if (this.formTable[this.props.pcDetailMenu] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.pcDetailMenu];\n  }\n  \n  render() {\n    return (\n      <div className=\"Details primary-dark\">\n        <DetailPCMenu />\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail\n  }\n}\n\nexport default connect(mapStateToProps)(Details);","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container primary-light\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false\n    }\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n    if (!this.props.edited) {\n      this.setState({ edited: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"StartScreen primary-surface\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","const userPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default userPutRequests;","import React from 'react';\nimport './ProfileViewer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\nimport { fetchUser } from '../../actions'\n\n// utitlity imports\nimport userPutRequests from '../../Utilities/userPutRequests';\n\nclass ProfileViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  handleClose() {\n    if (this.props.profileActive) {\n      this.props.setProfileActive(false);\n    }\n  }\n\n  *updateUser(data) {\n    yield userPutRequests.makeRequest('user', data);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateUser = this.updateUser(data);\n    updateUser.next().value.then(() => {\n      this.props.fetchUser();\n      this.props.setProfileActive(false);\n    });\n  }\n  \n  render() {\n    let newNickname = '';\n    let newImportNickname = false;\n    let newId = null;\n    console.log(this.props.auth);\n\n    if (this.props.auth) {\n      newNickname = this.props.auth.nickname;\n      newImportNickname = this.props.auth.import_nickname;\n      newId = this.props.auth.id;\n    }\n\n    return (\n      <div className=\"ProfileViewer primary-surface\">\n        <div className=\"ProfileForm\">\n          <form action={'/profile'}\n            className=\"input-fields-area\"\n            id=\"ProfileForm\"\n            method=\"POST\"\n            onSubmit={this.handleSubmit}>\n              <div className=\"input-group\">\n                <label className=\"item-label\" htmlFor=\"nickname\">Nickname</label>\n                <input type=\"text\" name=\"nickname\" id=\"nickname\" className=\"input-text\" placeholder=\"nickname\"\n                  maxLength=\"40\" defaultValue={newNickname}></input>\n              </div>\n              <div className=\"input-group\">\n                <input type=\"checkbox\" name=\"import_nickname\" id=\"import_nickname\" class=\"input-checkbox\" defaultChecked={newImportNickname} value={true}></input>\n                <label className=\"item-label\" htmlFor=\"import_nickname\">Import nickname as store name by default</label>\n              </div>\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"submit\" value=\"Update Profile\" className=\"button profile-submit\"></input>\n          </form>\n        </div>\n        <div className=\"CloseButton\"\n          onClick={this.handleClose}>\n            X\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    profileActive: state.profile.active,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value }),\n    fetchUser: () => dispatch(fetchUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewer);","import React from 'react';\nimport './MobileStoreHeadbar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass MobileStoreHeadbar extends React.Component {\n  render() {\n    return (\n      <div className=\"MobileStoreHeadbar\">\n        <h2 className=\"StoreName\">{this.props.storeName}</h2>\n        <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n  }\n}\n\nexport default connect(mapStateToProps)(MobileStoreHeadbar);","import React from 'react';\nimport './MobileMenu.css';\n\n// component imports\nimport Days from '../Days/Days';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.getMobileDropdown = this.getMobileDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    mobileScreens.init();\n  }\n  \n  handlePrevious() {\n    mobileScreens.previousScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleNext() {\n    mobileScreens.nextScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setMobileDropdown(!this.props.mobileDropdown)\n  }\n\n  handleScreenChange(newScreen) {\n    mobileScreens.setScreen(newScreen);\n    mobileScreens.updateScreen();\n    this.props.setMobileDropdown(false);\n  }\n\n  getMobileDropdown() {\n    const allScreens = mobileScreens.getScreens();\n    if (this.props.mobileDropdown) {\n      return (\n        <div className=\"MobileDropdown primary-medium\">\n          <Days />\n          {allScreens.map(screen => {\n            return (\n              <div className=\"mobileDropdownOption\"\n                onClick={() => this.handleScreenChange(screen)}>{screen}</div>\n            )\n      })}\n      </div>)\n      \n    } else {\n      return false;\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileMenu primary-saturated\">\n        <span className=\"previousScreen screenArrow\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"mobileTitle\"\n          onClick={this.handleDropdown}>{this.props.mobileScreen}</span>\n        <span className=\"nextScreen screenArrow\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getMobileDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileMenu);","import React from 'react';\nimport './MobileGameScreen.css';\n\nimport Store from '../../Components/Store/Store';\nimport MobileStoreHeadbar from '../../Components/MobileStoreHeadbar/MobileStoreHeadbar';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport MobileMenu from '../../Components/MobileMenu/MobileMenu';\nimport Adventurers from '../../Components/Adventurers/Adventurers';\nimport AdventurerDetail from '../../Components/AdventurerDetail/AdventurerDetail';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileGameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentScreen: 'store',\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const allScreens = mobileScreens.getAllScreens();\n    const forms = Object.values(allScreens);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[allScreens.store] = <Store />;\n    this.formTable[allScreens.suppliers] = (\n      <div>\n        <MobileStoreHeadbar />\n        <Suppliers />\n      </div>\n    );\n    this.formTable[allScreens.adventurers] = <Adventurers />;\n    this.formTable[allScreens.adventurer] = <AdventurerDetail />;\n  }\n\n  getCurrentScreen() {\n    if (!this.state.initialized) return '';\n    if (!this.props.mobileScreen) {\n      return (<div className=\"BlankForm\">no details to display</div>)\n    }\n\n    if (this.formTable[this.props.mobileScreen] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.mobileScreen];\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileGameScreen primary-dark\">\n        <MobileMenu />\n        {this.getCurrentScreen()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen\n  }\n}\n\nexport default connect(mapStateToProps)(MobileGameScreen);","import React from 'react';\nimport './MenuBar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mobileOpen: false\n    }\n\n    this.handleProfileActive = this.handleProfileActive.bind(this);\n    this.getLoginContainer = this.getLoginContainer.bind(this);\n    this.renderProfileLink = this.renderProfileLink.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n    this.handleFullscreen = this.handleFullscreen.bind(this);\n    this.getFullScreenControls = this.getFullScreenControls.bind(this);\n    this.handleMobileOpen = this.handleMobileOpen.bind(this);\n  }\n\n  handleProfileActive() {\n    if (!this.props.profileActive) {\n      this.props.setProfileActive(true);\n    }\n    this.handleMobileOpen();\n  }\n\n  handleMobileOpen() {\n    if (this.props.profileActive && !this.state.mobileOpen) {\n      return;\n    }\n    this.setState({ mobileOpen: !this.state.mobileOpen});\n  }\n\n  renderProfileLink() {\n    switch(this.props.auth) {\n      case null:\n        return '';\n      case false:\n        return '';\n      default:\n        return <li key=\"profile\" class=\"profileLink\" onClick={this.handleProfileActive}>profile</li>\n    }\n  }\n\n  renderLogin() {\n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\" className=\"facebookLogo\"><span>f</span></a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner' && screenInfo.getIsPc()) {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n\n  getLoginContainer() {\n    if (!this.props.isPc) {\n      return (\n        <div className=\"hamburgerContainer\"\n          onClick={this.handleMobileOpen}>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"LoginContainer\">\n        {this.renderProfileLink()}\n        {this.renderEditorLink()}\n        {this.renderLogin()}\n      </ul>\n    )\n  }\n\n  getMobileMenu() {\n    if (!this.props.isPc && this.state.mobileOpen) {\n      let mobileOffsetStyle = {};\n      let menuOffsets = 2;\n        if (this.props.auth) {\n          menuOffsets += 1;\n        }\n        // set style by default for tablet\n        mobileOffsetStyle.height = `calc(${(menuOffsets * 2.4)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        if (this.props.isMobile) {\n          mobileOffsetStyle.height = `calc(${(menuOffsets * 1.8)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        } \n        \n        \n      return (\n        <div className=\"mobileMenuContainer primary\"\n          onClick={this.handleMobileOpen}>\n          <ul className=\"LoginContainer mobileMenu primary-light\"\n            style={mobileOffsetStyle}\n            >\n            {this.getFullScreenControls()}\n            {this.renderProfileLink()}\n            {this.renderLogin()}\n          </ul>\n        </div>\n        \n      )\n    }\n  }\n\n  handleFullscreen() {\n    if (!this.props.isFullscreen) {\n      screenInfo.goFullScreen();\n    } else {\n      screenInfo.leaveFullScreen();\n    }\n  }\n\n  getFullScreenControls() {\n    if (!this.props.isFullscreen) {\n      return <li key=\"goFullscreen\" \n        className=\"Fullscreen screenLink\"\n        onClick={this.handleFullscreen}>[  ]</li>\n    } else {\n      return <li key=\"exitFullscren\"\n        className=\"ExitFullScreen screenLink\"\n        onClick={this.handleFullscreen}>&#9580;</li>\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar primary-light\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        {this.getLoginContainer()}\n        {this.getMobileMenu()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    isFullscreen: state.app.isFullscreen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\n// game module imports\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\nimport ProfileViewer from '../../Containers/ProfileViewer/ProfileViewer';\nimport MobileGameScreen from '../../Containers/MobileGameScreen/MobileGameScreen';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\n// component imports\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.getProfileViewer = this.getProfileViewer.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n    screenInfo.init();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      if (!this.props.isPc) {\n        return (\n          <MobileGameScreen />\n        )\n      } else {\n        return (\n          <GameScreen />\n        )\n      }\n    }\n  }\n\n  getProfileViewer() {\n    const profileStatus = this.props.profileActive;\n    if (profileStatus) {\n      return (\n        <ProfileViewer />\n      )\n    }\n  }  \n\n  render() {\n    return (\n      <div className=\"App\"\n        ref={ref => {\n          this.container = ref;\n        }}>\n        <MenuBar />\n        {this.getMainView()}\n        {this.getProfileViewer()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY,\n  SET_STORE_FILTER,\n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  filterActive: false,\n  filter: 'all',\n  needsUpdate: false,\n  inventory: [],\n  inventoryCount: 0,\n  mobileDetail: null,\n  mobileItemDetail: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      let newCount = state.inventoryCount;\n      if (Array.isArray(newInventory)) {\n        newCount = newInventory.length;\n      }\n      return {\n        ...state,\n        inventory: newInventory,\n        inventoryCount: newCount\n      }\n    case SET_STORE_FILTER_ACTIVE:\n      return {\n        ...state,\n        filterActive: action.value\n      }\n    case SET_STORE_FILTER:\n      return {\n        ...state,\n        filter: action.filter\n      }\n    case SET_STORE_UPDATE_STATUS:\n      const newStatus = !state.needsUpdate;\n      return {\n        ...state,\n        needsUpdate: newStatus\n      }\n    case SET_STORE_MOBILE_DETAIL:\n      return {\n        ...state,\n        mobileDetail: action.detail\n      }\n    case SET_STORE_MOBILE_DETAIL_ITEM:\n      return {\n        ...state,\n        mobileItemDetail: action.itemDetail\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS, SET_SUPPLIERS_INITIALIZED } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0,\n  initialized: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n      case SET_SUPPLIERS_INITIALIZED:\n        return {\n          ...state,\n          initialized: action.value\n        }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst initialState = {\n  ready: false,\n  spawned: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLY_READY:\n      return {\n        ...state,\n        ready: action.value\n      }\n    case SET_SUPPLY_SPAWNED:\n      return {\n        ...state,\n        spawned: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_PROFILE_ACTIVE } from '../actions/types';\n\nconst initialState = {\n  active: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFILE_ACTIVE:\n      return {\n        ...state,\n        active: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst initialState = {\n  isFullscreen: false,\n  isPc: true,\n  isMobile: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: action.value\n      }\n    case SET_IS_PC:\n      return {\n        ...state,\n        isPc: action.value\n      }\n    case SET_IS_MOBILE:\n      return {\n        ...state,\n        isMobile: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_MOBILE_SCREEN, SET_MOBILE_DROPDOWN } from '../actions/types';\n\nconst intitialState = {\n  screen: 'store',\n  dropdown: false\n}\n\nexport default function(state = intitialState, action) {\n  switch(action.type) {\n    case SET_MOBILE_SCREEN:\n      return {\n        ...state,\n        screen: action.screen\n      }\n    case SET_MOBILE_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS, SET_ADVENTURER_UPDATE } from '../actions/types';\n\nconst initialState = {\n  adventurers: null,\n  update: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    case SET_ADVENTURER_UPDATE:\n      let newUpdate = !state.update;\n      return {\n        ...state,\n        update: newUpdate\n      }\n    default:\n      return state;\n  }\n}","import { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../actions/types';\nimport pcMenus from '../Utilities/pcMenus';\n\nconst initialState = {\n  detail: pcMenus.adventurers,\n  dropdown: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PC_DETAIL:\n      return {\n        ...state,\n        detail: action.detail\n      }\n    case SET_PC_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_ID } from '../actions/types';\n\nconst initialState = {\n  id: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_ID:\n      return {\n        ...state,\n        id: action.id\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\nimport suppliesReducer from './suppliesReducer';\nimport profileReducer from './profileReducer';\nimport appStateReducer from './appStateReducer';\nimport mobileMenuReducer from './mobileMenuReducer';\nimport adventurersReducer from './adventurersReducer';\nimport pcDetailReducer from './pcDetailReducer';\nimport detailReducer from './detailReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer,\n  supplies: suppliesReducer,\n  profile: profileReducer,\n  app: appStateReducer,\n  mobileMenu: mobileMenuReducer,\n  adventurers: adventurersReducer,\n  pcMenu: pcDetailReducer,\n  detail: detailReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}