{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","actions/types.js","Components/Coin/Coin.jsx","Components/StoreInventory/StoreInventory.jsx","game_modules/store.js","game_modules/days.js","game_modules/supplies.js","Utilities/fetcher.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/SupplierBuyButton/SupplierBuyButton.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","game_modules/gameConstants.js","game_modules/monsters.js","game_modules/dungeon.js","Utilities/tagProcessor.js","game_modules/adventurers.js","game_modules/main.js","Components/Days/Days.jsx","Utilities/pcMenus.js","Utilities/pcDetailMenus.js","Components/DetailPCMenu/DetailPCMenu.jsx","Utilities/screenInfo.js","Utilities/breadcrumb.js","Utilities/mobileScreens.js","Components/Adventurer/Adventurer.jsx","Components/Adventurers/Adventurers.jsx","Components/AdventurerDetail/AdventurerDetail.jsx","Components/AdventurersPartial/AdventurersPartial.jsx","Components/DungeonLevel/DungeonLevel.jsx","Components/Dungeon/Dungeon.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","Containers/StartScreen/StartScreen.jsx","Utilities/userPutRequests.js","Containers/ProfileViewer/ProfileViewer.jsx","Components/MobileStoreHeadbar/MobileStoreHeadbar.jsx","Components/MobileMenu/MobileMenu.jsx","Containers/MobileGameScreen/MobileGameScreen.jsx","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/suppliesReducer.js","reducers/profileReducer.js","reducers/appStateReducer.js","reducers/mobileMenuReducer.js","reducers/adventurersReducer.js","reducers/pcDetailReducer.js","reducers/detailReducer.js","reducers/dungeonReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","itemTypeIndex","itemPrototypeIndex","lastIndex","Item","payload","type","name","value","prototypeId","rarity","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","destroyItem","filter","getItemType","getItemPrototypeId","getItemTypeIndex","createTestPotion","lvl","healing","getItemTypes","composePayloadFromProto","protoItem","storeInventory","inventory","composeInventory","composedInventory","forEach","gameItems","itemId","markup","addItem","undefined","newStoreItem","removeItem","getStoreInventory","updateStoreInventory","store","dispatch","dispatchStoreInventory","getComposedInventory","getFilteredInventory","newFilter","toLowerCase","getFilteredStoreItems","markupFilteredStoreItems","newMarkup","markupAmount","inventoryItem","markupStoreItem","markupById","markupPrototypes","markupByPrototype","Coin","className","React","Component","StoreInventory","props","state","timer","mobileMultiplier","delay","markupIntensity","valence","increaseMarkup","bind","repeat","onMouseDown","onMouseUp","markupOut","handleMobileFocus","handleOneIncrement","handlePrototypeIncrement","getInventoryItems","getIncrementOneButtons","getIncrementAllButtons","newInventory","JSON","parse","stringify","gameInventory","setInventory","setState","e","refBtnClasses","target","classList","contains","repeatPayload","totaldelay","setTimeout","clearTimeout","posNeg","toggleStoreUpdateStatus","itemsPayload","isPc","onTouchStart","onTouchEnd","mobileItem","mobileItemDetail","mobileDetail","setStoreMobileDetail","setStoreMobileDetailItem","window","filteredInventory","length","filterActive","storeFilter","map","composedPrice","Math","floor","itemClass","key","connect","storeState","inventoryCount","storeNeedsUpdate","needsUpdate","isMobile","app","detail","itemDetail","gameStore","gold","chargeGold","amount","creditGold","getName","setName","newName","getStartingGold","getGold","setGold","newGold","updateGold","dispatchStoreGold","days","day","getDay","setDay","newDay","resetDay","supplies","suppliesPool","supplyLevel","itemTypesArr","Object","values","itemTypeCount","itemSpawnCount","fetchItemArrForSupplyPool","a","typeToFetch","maxLvl","fetchURL","fetch","possibleItems","json","getItemForSupplyPool","newItems","then","itemsOfLevel","dispatchSpawned","catch","err","spawnSupply","typeIndex","random","typeToSpawn","newSupplyArr","Array","isArray","Items","getSupplies","fillSupplies","i","dispatchReady","fillSupplyPool","typeItem","depleteSupply","supplyIndex","indexOf","splice","setSupplyLevel","fetcher","fetchRoute","routeName","response","suppliers","currentId","Supplier","offerings","prototype","rankFavorites","bestOfferings","offeringsCount","sort","off1","off2","rankedOfferings","sellItem","price","itemIndex","takeIncome","dispatchSuppliers","newSuppliers","fetchSuppliers","initSuppliers","getSuppliers","initializeSuppliers","maxSuppliers","next","drainSuppliers","pushIndex","newSupplier","supplierPayload","thisSupplier","supplier","takeSupplierTurn","remainingSupplies","supplyTypes","supplyValues","remainingSupply","supplyItem","currentSupplier","supplierCount","remSupply","remNum","supplierTries","thisIndex","taken","supplierIndex","favorites","thisSupply","takeSupplies","dispatchSupplyReady","refSupplier","sellPayload","takeSupplierIncomeTurns","updateSuppliers","fetchUser","axios","get","res","data","import_nickname","nickname","fetchGold","fetchDay","Store","getMobileDetail","componentDidMount","toggleFilter","getFilter","handleFilter","getIncrementButtons","handleIncrease","handleDecrease","currentType","setStoreFilter","refBtn","totalDelay","pc","defaultValue","onChange","itemType","newValue","setStoreFilterActive","inventoryComponent","storeName","role","aria-label","onClick","setStoreGold","SupplierBuyButton","getSuppllierInventory","handlePurchase","ids","storeGold","sellId","gameSuppliers","gameStoreInventory","initialized","thisInventory","inventoryGroups","valueGroups","typeGroups","idGroups","composedItems","entries","count","item1","item2","nameA","toUpperCase","nameB","findIndex","offering","composedValue","supplierClass","supplyReady","ready","Suppliers","componentDidUpdate","supplySpawned","gameSupplies","suppliersInitialized","gameSupplier","setSuppliersInitialized","detailUpdate","supplierContainerClass","spacerClass","currentSuppliers","suppliersDisplay","renderSupplier","ref","node","container","suppliersClass","spawned","update","gameConstants","startingAdventurers","dailyAdventurers","adventurerStartingGold","monsters","monsterDecisions","heal","defend","special","attack","Monster","protoId","boss","hp","defense","stealth","initiative","dropList","monsterBehavior","maxHp","specialCooldown","defending","getInitiativeRoll","initiativeFactor","takeTrapDamage","adventurerLevel","trapDamage","pow","hhp","checkNeedsHeal","checkUseHeal","checkUseSpecial","special_move","checkDefend","checkBlockFlee","flee","getBattleDecision","thisDecision","MonsterDecision","needHealing","useHeal","useSpecial","decided","weighDecisionTournament","takeBattleDamage","calculatedDamage","monsterId","concernedMonster","monster","remainingOptions","weights","tournamentRounds","ceil","log2","round","optionsLength","pairings","pairCount","offset","pair","eliminated","result1","result2","randomChoice","elIndex","eliminate","option","createMonster","newMonster","getMonster","foundMonster","protoMonster","drop_list","monster_behavior","getMonsterDecisions","dungeon","levelCount","levels","adventurers","exploredLevel","Level","number","bossId","monstersMinLevel","monstersMaxLevel","tileAssignments","treasureDropList","treasures","droppedTreasures","lurkingMonsters","monstersLoot","treasureListFetched","monstersFetched","monsterDropListItemsFetched","intialized","initialize","Promise","resolve","reject","getMonstersForLevel","monstersToAdd","monsterDrops","addMonster","addMonsterDrops","drops","addDrop","addId","dropType","drop_type","treasureDrops","drop","resolveMonsterDrops","rejectMonsterDrops","monsterDrop","mDropN","getDrop","resolvedDrop","resolveTreasureDrops","rejectTreasureDrops","treasureDrop","tDropN","activateTile","adventurer","tileOutcomes","tileI","weight","probability","result","tile","outcome1","outcome2","resultTileI","resultTile","dungeon_tile","innTreasureBoost","informed","actions","adventurersModule","getActions","checkTreasureBoost","action","checkForTreasure","checkTrapBoost","checkForTraps","treasureProb","treasure","encounterProb","encounter","trapProb","trap","threshholdProb","treasureIndex","itemDropped","dropChance","goldMin","gold_min","goldRange","gold_max","randomAward","gold_chance","creditAccount","treasureItem","considerTreasure","encounterTrap","monsterIndex","monsterProto","monsterPayload","newMonsterId","setWeaknessChecked","logEncounterStart","newBattle","Battle","battleController","addBattle","startBattle","BattleController","currentBattles","currentBattleId","battle","clearBattleRound","roundNumber","battleId","clearRound","addBattleRound","newRound","addRound","rounds","currentRoundNumber","turnResolve","resolution","Round","startRound","deletedRound","foundRound","fleed","adventurerInitiative","monsterInitiative","currentAction","setTrap","logTrap","monsterName","unsetTrap","adventurerTurn","monsterTurn","clearSelf","battleDecisions","getBattleDecisions","adventurerMove","logDefend","usePotion","logFlee","checkWeakness","logWeaknessChecked","damageFactor","adventurerClass","cunning","strength","weaponDamage","equipment","damageFloor","randomizeDamage","weaknessChecked","damagePayload","logHitMonster","logVictory","monsterMove","randomDamage","adventurerShield","tactics","adventurerArmor","dispatchLevels","dispatchExploredLevel","dispatchAdventurers","fetchLevels","initLevels","getLevels","minLevel","maxLevel","fetchMonstersInRange","fetchUrl","fetchedMonsters","fetchDrop","fetchedDrop","loadLevel","nextLevelN","completed","initializeLevels","newLevel","shift","levelPayload","boss_id","monsters_min_level","monsters_max_level","tile_assignments","thisLevel","level1","level2","updateLevels","getExploredLevel","receiveAdventurer","adventurerId","addAdventurer","releaseAdventurer","deleteAdventurer","executeTurn","dungeonEntry","dunAdventurer","checkLevelReadiness","highestLevel","adventurerI","loadNextLevel","tagProcessor","filterClasses","status","getFilterClasses","decisions","setTrapBehavior","thief","soldier","bard","Adventurer","speed","intelligence","constitution","dungeonBehavior","townBehavior","experience","inDungeon","hasFoundStairs","currentTotalDungeonTurns","turns","checkAccount","chargeAccount","unequipItem","slot","equipItem","getCurrentItemCount","protoCount","addCombatLog","message","combatLog","getCombatLog","checkHealthChoice","conserve_health","checkHasPotion","checkPotionUse","use_potion","checkFlee","levelDiff","flee_encounter","check_monster_weakness","potionToUse","heldPotions","hpDifferential","potion1","potion2","hpToHeal","healJSX","checkTrapDecision","check_for_traps","checkTreasureDecision","search_for_treasure","checkSetTrapDecision","prefer_weaker_monster","checkAdvanceDecision","percentLost","inventoryPercentEmpty","fillInventoryDesire","fill_inventory","advance_tile","checkReturnToTown","turnsFactor","turnsInfluence","return_to_town","dungeonLevel","trapFactor","traps","agility","computedDamage","trapJSX","vowelAdj","charAt","encounterJSX","battleJSX","Number","parseInt","defendJSX","fleeJSX","weaknessJSX","victoryJSX","BattleDecision","hasPotion","turnController","TurnController","currentTurns","addTurn","turn","clearTurn","deletedTurn","foundTurn","dispatchUpdate","clearAdventurerTurns","deletedTurns","startTurns","turnNumber","runTurn","startTurn","nextTurn","Turn","resultDecision","dungeonAdventurer","Decision","advance","returnToTown","weighDecisionLogical","actionMsg","actionJSX","clearPackage","resolveTurn","rejectTurn","checkTreasure","concernedAdventurer","offest","newAdventurers","fetchAdventurers","initAdventurers","getAdventurers","enter_dungeon","dungeonJSX","combatLogMessage","dungeonTurns","dungeonAdventurers","dunAdN","totalTurns","turnPayload","newTurn","initializeAdventurers","maxAdventurers","drainAdventurers","newAdventurer","adventurerPayload","dungeon_behavior","town_behavior","adventurer_class","thisAdventurer","updateAdventurers","takeAdventurerTurn","townAdventurer","totalFactor","use_tavern","totalCost","innJSX","inventoryItems","composedItem","shoppingAdventurers","adventurerCount","adventurerTries","adventurerIndex","decisionFactor","itemProto","currentHoldings","willBuy","currentGear","totalPrice","playerStore","baseItem","doShopping","main","init","startingGold","getGameLevel","performTurn","Days","handleNextDay","currentDay","mobileDropdown","setMobileDropdown","mobileMenu","dropdown","pcMenus","adventurersPartial","pcDetailMenus","currentMenu","currentIndex","menus","menuMap","menu","menuN","getCurrentMenu","nextMenu","previousMenu","getMenus","setmenu","newMenu","menuIndex","updateMenu","dispatchPCMenu","DetailPCMenu","handlePrevious","handleNext","handleDropdown","handleMenuChange","getPCDropdown","pcDropdown","setPcDropdown","allMenus","menuName","pcDetailMenu","pcMenu","dungeonLevelExplored","setPcDetailMenu","screenInfo","isFullscreen","dispatchFullscreen","orientation","docDimensions","document","querySelector","getBoundingClientRect","width","setScreenInfo","dispatchIsPc","dispatchIsMobile","getIsPc","getIsMobile","goFullScreen","App","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setFullScreen","leaveFullScreen","exitFullscreen","breadcrumb","breadcrumbs","Breadcrumb","displayPayload","scrollPos","dispatchDisplay","screen","popBreadcrumb","pop","addBreadcrumb","display","newCrumb","mobileScreens","currentScreen","screens","allScreens","screenMap","screenN","getCurrentScreen","nextScreen","previousScreen","getScreens","getAllScreens","setScreen","newScreen","screenIndex","updateScreen","dispatchMobileScreen","handleZoom","partialAdventurers","breadcrumbName","setDetailId","scrollY","scrollTop","screenPos","setMobileScreen","setPCDetail","adventurerClassColor","adventurerClassIconColor","classColors","classIcon","dungeonIndicator","Adventurers","adventurerUpdate","AdventurerDetail","handleBack","scrollCombatLog","adventurerInventory","equippedIndicator","adventurerCombatLog","cLog","scrollHeight","detailId","getInventory","AdventurersPartial","setPartialAdventurers","DungeonLevel","handleAdventurerList","levelAdventurers","adventurerIds","Dungeon","Details","formTable","loadFormTable","getDetail","tempTable","menuTypes","setDetailUpdate","GameScreen","Title","StartScreen","edited","handleStart","handleNameInput","game","setStarted","charCode","htmlFor","val","setStoreName","onKeyPress","started","gameState","auth","userPutRequests","makeRequest","putRoute","putBody","subBody","putRes","method","headers","body","ProfileViewer","handleClose","handleSubmit","updateUser","profileActive","setProfileActive","preventDefault","FormData","newNickname","newImportNickname","newId","onSubmit","placeholder","maxLength","class","defaultChecked","profile","active","MobileStoreHeadbar","MobileMenu","handleScreenChange","getMobileDropdown","mobileMenuName","mobileScreen","MobileGameScreen","MenuBar","mobileOpen","handleProfileActive","getLoginContainer","renderProfileLink","renderLogin","renderEditorLink","handleFullscreen","getFullScreenControls","handleMobileOpen","href","mobileOffsetStyle","menuOffsets","height","style","getMobileMenu","getMainView","getProfileViewer","initialState","storeUpdate","intitialState","combineReducers","updates","newCount","newStatus","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.e4ac693d.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let itemTypeIndex = {};\n  let itemPrototypeIndex = {};\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value, prototypeId, rarity } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.prototypeId = prototypeId;\n    this.rarity = rarity;\n    this.id = lastIndex;\n    itemTypeIndex[lastIndex] = type;\n    itemPrototypeIndex[lastIndex] = prototypeId;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload, prototypeId, rarity } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value, prototypeId: prototypeId, rarity: rarity }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    destroyItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        allItems = allItems.filter(item => item.id !== id);\n        thisItem = null;\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    getItemType(id) {\n      if (itemTypeIndex[id] !== null) {\n        return itemTypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemPrototypeId(id) {\n      if (itemPrototypeIndex[id] !== null) {\n        return itemPrototypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemTypeIndex() {\n      return itemTypeIndex;\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    },\n\n    composePayloadFromProto: function(protoItem) {\n      // compose payload for Item constructor\n      let itemPayload = {};\n      itemPayload.level = protoItem.level;\n      switch(protoItem.item.type) {\n        case ItemTypes.potion:\n          itemPayload.type = protoItem.type;\n          break;\n        case ItemTypes.weapon:\n          itemPayload.damage = protoItem.damage;\n          break;\n        case ItemTypes.armor:\n          itemPayload.armor = protoItem.armor;\n          break;\n        default:\n          break;\n      }\n      let payload = {};\n      payload.itemPayload = itemPayload;\n      payload.type = protoItem.item.type;\n      payload.name = protoItem.item.name;\n      payload.value = protoItem.item.value;\n      payload.prototypeId = protoItem.item.id;\n      payload.rarity = protoItem.item.rarity;\n      return payload;\n    }\n  }\n}());\n\nexport default items;","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_INVENTORY } from '../actions/types';\n\n// game module imports\nimport gameItems from './items';\n\nconst storeInventory = (function(){\n  // {\n  //   itemId: Number,\n  //   markup: number\n  // }\n  let inventory = [];\n\n  const maxMarkup = 4000;\n\n  const dispatchStoreInventory = function() {\n    const payload = {\n      type: SET_STORE_INVENTORY,\n      inventory: inventory\n    }\n    store.dispatch(payload);\n  }\n\n  const composeInventory = function() {\n    let composedInventory = [];\n      inventory.forEach(item => {\n        let thisItem = gameItems.getItem(item.itemId);\n        composedInventory.push({ ...thisItem, markup: item.markup });\n      });\n      return composedInventory;\n  }\n\n  const filterInventory = function(filter) {\n    let filteredInventory = composeInventory().filter(item => item.type === filter);\n    return filteredInventory;\n  }\n\n  const filterStoreItems = function(filter) {\n    let filteredIds = inventory.filter(item => {\n      return storeInventory.getItemType(item.itemId) === filter\n    });\n    return filteredIds;\n  }\n\n  const markupFilteredItems = function(filter, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (filter.toLowerCase() === 'all' || gameItems.getItemType(inventoryItem.itemId) === filter) {\n        inventoryItem.markup += newMarkup;\n        if (inventoryItem.markup > maxMarkup) {\n          inventoryItem.markup = maxMarkup;\n        }\n        if (inventoryItem.markup < 0) {\n          inventoryItem.markup = 0;\n        }\n      }\n    });\n  }\n\n  const markupById = function(id, newMarkup) {\n    const targetItem = inventory.find(item => item.itemId === id);\n    targetItem.markup += newMarkup;\n  }\n\n  const markupByPrototype = function(prototypeId, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (gameItems.getItemPrototypeId(inventoryItem.itemId) === prototypeId) {\n        inventoryItem.markup += newMarkup;\n      }\n      if (inventoryItem.markup > maxMarkup) {\n        inventoryItem.markup = maxMarkup;\n      }\n      if (inventoryItem.markup < 0) {\n        inventoryItem.markup = 0;\n      }\n    })\n  }\n\n  return {\n    addItem: function(id) {\n      if (id === null || id === undefined) {\n        return false;\n      }\n      const newStoreItem = { itemId: id,\n        markup: 150\n      }\n      inventory.push(newStoreItem);\n    },\n\n    removeItem: function(id) {\n      const foundItem = inventory.find(item => item.itemId === id);\n      if (foundItem) {\n        inventory = inventory.filter(item => item.itemId !== id);\n      }\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    },\n\n    updateStoreInventory: function() {\n      dispatchStoreInventory();\n    },\n\n    getComposedInventory: function() {\n      return composeInventory();\n    },\n\n    getFilteredInventory: function(newFilter) {\n      if (!newFilter || newFilter.toLowerCase() === 'all') {\n        return composeInventory();\n      }\n      else {\n        return filterInventory(newFilter);\n      }\n    },\n    \n    getFilteredStoreItems: function(newFilter) {\n      return filterStoreItems(newFilter);\n    },\n\n    markupFilteredStoreItems: function(payload) {\n      let { filter:newFilter, markup:markupAmount } = payload;\n      markupFilteredItems(newFilter, markupAmount);\n    },\n    \n    markupStoreItem: function(payload) {\n      let { id, markup:markupAmount} = payload;\n      markupById(id, markupAmount);\n    },\n\n    markupPrototypes: function(payload) {\n      let { prototypeId, markup: markupAmount } = payload;\n      markupByPrototype(prototypeId, markupAmount);\n    }\n  }\n}());\n\nexport default storeInventory;","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = \"SET_STORE_INVENTORY\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_SUPPLY_READY = \"SET_SUPPLY_READY\";\nexport const SET_SUPPLY_SPAWNED = \"SET_SUPPLY_SPAWNED\";\nexport const SET_STORE_FILTER = \"SET_STORE_FILTER\";\nexport const SET_STORE_FILTER_ACTIVE = \"SET_STORE_FILTER_ACTIVE\";\nexport const SET_STORE_UPDATE_STATUS = \"SET_STORE_UPDATE_STATUS\";\nexport const SET_PROFILE_ACTIVE =\"SET_PROFILE_ACTIVE\";\nexport const SET_IS_FULLSCREEN = \"SET_IS_FULLSCREEN\";\nexport const SET_IS_PC = \"SET_IS_PC\";\nexport const SET_IS_MOBILE = \"SET_IS_MOBILE\";\nexport const SET_MOBILE_SCREEN = \"SET_MOBILE_SCREEN\";\nexport const SET_SUPPLIERS_INITIALIZED = \"SET_SUPPLIERS_INITIALIZED\";\nexport const SET_MOBILE_DROPDOWN = \"SET_MOBILE_DROPDOWN\";\nexport const SET_STORE_MOBILE_DETAIL = \"SET_STORE_MOBILE_DETAIL\";\nexport const SET_STORE_MOBILE_DETAIL_ITEM = \"SET_STORE_MOBILE_DETAIL_ITEM\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_PC_DETAIL = \"SET_PC_DETAIL\";\nexport const SET_PC_DROPDOWN = \"SET_PC_DROPDOWN\";\nexport const SET_DETAIL_ID = \"SET_DETAIL_ID\";\nexport const SET_DETAIL_UPDATE = \"SET_DETAIL_UPDATE\";\nexport const SET_DUNGEON_LEVELS = \"SET_DUNGEON_LEVELS\";\nexport const SET_DUNGEON_LEVEL_EXPLORED = \"SET_DUNGEON_LEVEL_EXPLORED\";\nexport const SET_DUNGEON_ADVENTURERS = \"SET_DUNGEON_ADVENTURERS\";\nexport const SET_PARTIAL_ADVENTURERS = \"SET_PARTIAL_ADVENTURERS\";","import React from 'react';\nimport './Coin.css';\n\nclass Coin extends React.Component {\n  render() {\n    return (\n      <div className=\"coin-outer\">\n        <div className=\"coin-inner\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Coin;","import React from 'react';\nimport './StoreInventory.css';\n\n// component imports\nimport Coin from '../Coin/Coin';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../../actions/types';\n\nimport gameInventory from '../../game_modules/storeInventory';\n// import storeItems from '../../game_modules/items';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.mobileMultiplier = 2;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n    \n    this.handleMobileFocus = this.handleMobileFocus.bind(this);\n    this.handleOneIncrement = this.handleOneIncrement.bind(this);\n    this.handlePrototypeIncrement = this.handlePrototypeIncrement.bind(this);\n    this.getInventoryItems = this.getInventoryItems.bind(this);\n    this.getIncrementOneButtons = this.getIncrementOneButtons.bind(this);\n    this.getIncrementAllButtons = this.getIncrementAllButtons.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(gameInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  increaseMarkup() {\n    this.setState({\n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  onMouseDown(payload) {\n    const { e } = payload;\n    let id = null, prototypeId = null;\n    if (payload.id !== null) {\n      id = payload.id;\n    }\n    if (payload.prototypeId !== null) {\n      prototypeId = payload.prototypeId;\n    }\n    const refBtnClasses = e.target.classList;\n    if (refBtnClasses.contains(\"decreaseOne\") ||\n      refBtnClasses.contains(\"minusOne\") ||\n      refBtnClasses.contains(\"decreaseProto\") ||\n      refBtnClasses.contains(\"minusProto\")) {\n        this.valence = -1;\n    }\n    if (refBtnClasses.contains(\"increaseOne\") ||\n      refBtnClasses.contains(\"plusOne\") ||\n      refBtnClasses.contains(\"increaseProto\") ||\n      refBtnClasses.contains(\"plusProto\")) {\n        this.valence = 1;\n    }\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.repeat(repeatPayload);\n  }\n\n  repeat(payload) {\n    let { id, prototypeId } = payload;\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.increaseMarkup();\n    if (id !== undefined) {\n      this.handleOneIncrement(id);\n    }\n    if (prototypeId !== undefined) {\n      this.handlePrototypeIncrement(prototypeId);\n    }\n    let totaldelay = this.delay * this.mobileMultiplier;\n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(() => this.repeat(repeatPayload), totaldelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleOneIncrement(id) {\n    const posNeg = this.valence;\n    const itemPayload = {\n      id: id,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupStoreItem(itemPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handlePrototypeIncrement(prototypeId) {\n    const posNeg = this.valence;\n    const itemsPayload = {\n      prototypeId: prototypeId,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupPrototypes(itemsPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementOneButtons(id) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getIncrementAllButtons(prototypeId) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  handleMobileFocus(item) {\n    let mobileItem;\n    if (this.props.mobileItemDetail) {\n      mobileItem = this.props.mobileItemDetail;\n    }\n    if (this.props.mobileItemDetail && this.props.mobileDetail && mobileItem.id === item.id) {\n      this.props.setStoreMobileDetail(false);\n      this.props.setStoreMobileDetailItem(null);\n      window.inventory = undefined;\n    } else {\n      this.props.setStoreMobileDetail(true);\n      this.props.setStoreMobileDetailItem(item);\n      window.inventory = this;\n    }\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      let filteredInventory;\n      if (!this.props.filterActive || this.props.storeFilter === 'all') {\n        filteredInventory = gameInventory.getComposedInventory();\n      } else {\n        filteredInventory = gameInventory.getFilteredInventory(this.props.storeFilter);\n      }\n      return (\n        <div>{filteredInventory.map(item => {\n          const composedPrice = Math.floor(item.value * (1 + (item.markup / 1000)));\n          let itemClass = \"InventoryItem itemBackground\";\n          if (this.props.mobileDetail && item.id === this.props.mobileItemDetail.id) {\n            itemClass += \" activeMobileItem\";\n          }\n          return (\n            <div className={itemClass} \n              key={item.id}\n              onTouchStart={() => this.handleMobileFocus(item)}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              {this.props.isPc ? this.getIncrementOneButtons(item.id) : ''}\n              {this.props.isPc ? this.getIncrementAllButtons(item.prototypeId) : ''}\n              <div className=\"ItemValueGroup\">\n                <span className=\"InventoryItemValue\"><span className=\"CoinSymbol\"><Coin /> </span>{composedPrice}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory primary\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory,\n    inventoryCount: state.storeState.inventoryCount,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS }),\n    setStoreMobileDetail: (detail) => dispatch({ type: SET_STORE_MOBILE_DETAIL, detail: detail }),\n    setStoreMobileDetailItem: (itemDetail) => dispatch({ type: SET_STORE_MOBILE_DETAIL_ITEM, itemDetail: itemDetail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_GOLD } from '../actions/types';\n\nconst gameStore = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n\n  const dispatchStoreGold = function() {\n    const payload = {\n      type: SET_STORE_GOLD,\n      amount: gold\n    }\n    store.dispatch(payload);\n  }\n  \n  return {\n    chargeGold: function(amount) {\n      if (gold < amount) {\n        console.log('attempted to charge more gold than vendor owns')\n        return false;\n      }\n      gold -= amount;\n    },\n    creditGold: function(amount) {\n      gold += amount;\n    },\n    getName: function() {\n      return name;\n    },\n    setName: function(newName) {\n      name = newName;\n    },\n    getStartingGold: function() {\n      return startingGold;\n    },\n    getGold: function() {\n      return gold;\n    },\n    setGold: function(newGold) {\n      gold = newGold;\n    },\n    updateGold: function() {\n      dispatchStoreGold();\n    }\n  }\n}());\n\nexport default gameStore;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  let suppliesPool = {};\n  let supplyLevel = 1;\n\n  const itemTypesArr = Object.values(ItemTypes);\n  const itemTypeCount = itemTypesArr.length;\n  let itemSpawnCount = 0;\n\n  const dailySupplies = 10;\n\n  const dispatchReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSpawned = function(value) {\n    const payload = {\n      type: SET_SUPPLY_SPAWNED,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  // fill supply pool\n  const fetchSupplyPool = function() {\n    // produce array of type strings and choose one at random\n    itemSpawnCount = 0;\n    itemTypesArr.forEach(typeItem => {\n      if (suppliesPool[typeItem] == null) {\n        suppliesPool[typeItem] = [];\n      }\n      suppliesPool[typeItem].length = 0;\n    });\n\n    getItemForSupplyPool();\n    return true;\n  }\n\n  // fetch an item from backend\n  const fetchItemArrForSupplyPool = async function() {\n    let lvl = supplyLevel;\n    if (!lvl) return;\n\n    let typeToFetch = itemTypesArr[itemSpawnCount];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  // take an item that was fetched from backend and create it\n  // with item constructors and put it into state\n  const getItemForSupplyPool = function() {\n    if (itemSpawnCount >= itemTypeCount) {\n      return;\n    }\n    let newItems;\n    fetchItemArrForSupplyPool()\n      .then(itemsOfLevel => {\n        newItems = itemsOfLevel.filter(item => item.item.rarity === 1000);\n      \n        // initialize field on pool if need be\n        if (suppliesPool[itemTypesArr[itemSpawnCount]] === null) {\n          suppliesPool[itemTypesArr[itemSpawnCount]] = [];\n        }\n        // push item id into supplies\n        suppliesPool[itemTypesArr[itemSpawnCount]].push(newItems);\n\n        itemSpawnCount++;\n        if (itemSpawnCount === itemTypeCount) {\n          dispatchSpawned(true);\n        }\n        getItemForSupplyPool();\n        return true;\n      }).catch(err => console.log(err));\n  }\n\n  const spawnSupply = function() {\n    // produce array of type strings and choose one at random\n    let typeIndex = Math.floor(Math.random() * itemTypesArr.length);\n    let typeToSpawn = itemTypesArr[typeIndex];\n    const newSupplyArr = suppliesPool[typeToSpawn];\n    let randomChoice = Math.floor(Math.random() * newSupplyArr.length);\n    let newItem = newSupplyArr[randomChoice];\n\n    if (Array.isArray(newItem)) {\n      newItem = newItem[0];\n    }\n\n    // compose payload for Item constructor\n    // let itemPayload = {};\n    // itemPayload.level = newItem.level;\n    // switch(newItem.item.type) {\n    //   case ItemTypes.potion:\n    //     itemPayload.type = newItem.type;\n    //     break;\n    //   case ItemTypes.weapon:\n    //     itemPayload.damage = newItem.damage;\n    //     break;\n    //   case ItemTypes.armor:\n    //     itemPayload.armor = newItem.armor;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // let payload = {};\n    // payload.itemPayload = itemPayload;\n    // payload.type = newItem.item.type;\n    // payload.name = newItem.item.name;\n    // payload.value = newItem.item.value;\n    // payload.prototypeId = newItem.item.id;\n    // payload.rarity = newItem.item.rarity;\n    let payload = Items.composePayloadFromProto(newItem);\n\n    // create item and add to total inventory in Items module\n    let itemId = Items.createItem(payload);\n    supplies.push(itemId);\n\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function() {\n      for (let i = 0; i < dailySupplies; i++) {\n        spawnSupply();\n      }\n      dispatchReady(true);\n    },\n    fillSupplyPool: function() {\n      fetchSupplyPool();\n    },\n    depleteSupply: function(id) {\n      let supplyIndex = supplies.indexOf(id);\n      if (supplyIndex >= 0) {\n        let chosenSupply = supplies.splice(supplyIndex, 1);\n        return chosenSupply;\n      }\n    },\n    setSupplyLevel: function(lvl) {\n      supplyLevel = lvl;\n    }\n  }\n}());\n\nexport default supplies;","const fetcher = (function(){\n  return {\n    fetchRoute: async function(routeName) {\n      let response;\n      try {\n        response = await fetch(`/${routeName}`);\n      } catch (err) {\n        console.log(err);\n      }\n      if (response) {\n        response = response.json();\n      }\n      return response;\n    }\n  }\n}());\n\nexport default fetcher;","// game imports\nimport supplies from './supplies';\nimport items from './items';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLIERS, SET_SUPPLY_READY } from '../actions/types';\n\nconst suppliers = (function(){\n\n  let suppliers = [];\n\n  let currentId = 0;\n\n  const startingGold = 1000;\n  const supplierIncome = 100;\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n    this.inventory = [];\n    this.id = currentId;\n    currentId++;\n  }\n\n  Supplier.prototype.rankFavorites = function() {\n    let bestOfferings = [];\n    const offeringsCount = this.offerings.length;\n    for (let i = 0; i < offeringsCount; i++) {\n      bestOfferings.push(this.offerings[i]);\n    }\n    bestOfferings.sort((off1, off2) => {\n      return off1.markup - off2.markup;\n    });\n    this.rankedOfferings = bestOfferings;\n  }\n\n  Supplier.prototype.sellItem = function(payload) {\n    let { id, price } = payload;\n\n    const itemIndex = this.inventory.indexOf(id);\n    if (!itemIndex && itemIndex !== 0) {\n      return false;\n    }\n\n    this.inventory.splice(itemIndex, 1);\n    this.gold += price;\n\n    return true;\n  }\n\n  Supplier.prototype.takeIncome = function() {\n    this.gold += supplierIncome;\n  }\n\n  const dispatchSuppliers = function(newSuppliers) {\n    const payload = {\n      type: SET_SUPPLIERS,\n      payload: newSuppliers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSupplyReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers = fetcher.fetchRoute('suppliers');\n      // try {\n      //   initSuppliers = await fetch('/suppliers');\n      // } catch (err) {\n      //   console.log(err);\n      // }\n      // if (initSuppliers) {\n      //   initSuppliers = initSuppliers.json();\n      // }\n      return initSuppliers;\n  }\n\n  const getSuppliers = function*() {\n    yield fetchSuppliers();\n  }\n\n  const takeSupplies = function() {\n    // copy supplies to local array\n    const remainingSupplies = JSON.parse(JSON.stringify(supplies.getSupplies()));\n    let supplyTypes = [];\n    let supplyValues = [];\n    remainingSupplies.forEach(remainingSupply => {\n      const supplyItem = items.getItem(remainingSupply);\n      supplyTypes.push(supplyItem.type);\n      supplyValues.push(supplyItem.value);\n    });\n    let currentSupplier = 0;\n    const supplierCount = suppliers.length;\n    // loop through each supply item\n    remainingSupplies.forEach((remSupply, remNum) => {\n      // create an order based on last supplier to take an\n      // item and proceeded sequentially to include all\n      // suppliers\n      let supplierTries = [];\n      for (let i = 0; i < supplierCount; i++) {\n        let thisIndex = currentSupplier + i;\n        if (thisIndex >= supplierCount) {\n          thisIndex -= supplierCount;\n        }\n        supplierTries.push(thisIndex);\n      }\n      let taken = false;\n      \n      // check with each supplier if type of current supply is\n      // in their offerings\n      supplierTries.forEach(supplierIndex => {\n        let favorites = suppliers[supplierIndex].rankedOfferings;\n        for (let fave of favorites) {\n          // if type of supplier's offering equals type of this supply\n          if (fave.type === supplyTypes[remNum]) {\n            if (!taken && suppliers[supplierIndex].gold >= supplyValues[remNum]) {\n              // if supplier inventory not initialized, set to empty array\n              if (suppliers[supplierIndex].inventory === null) {\n                suppliers[supplierIndex].inventory = [];\n              }\n\n              // remove item from supply\n              let thisSupply = supplies.depleteSupply(remSupply);\n              if (Array.isArray(thisSupply)) {\n                thisSupply = thisSupply[0];\n              }\n\n              suppliers[supplierIndex].gold -= supplyValues[remNum];\n\n              // put item in supplier's inventory\n              suppliers[supplierIndex].inventory.push(thisSupply);\n\n              // mark item taken;\n              taken = true;\n              currentSupplier = supplierIndex + 1;\n              if (currentSupplier > supplierCount) {\n                currentSupplier = 0;\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      const gGetSuppliers = getSuppliers();\n      gGetSuppliers.next().value\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              thisSupplier.gold = startingGold;\n              suppliers.push(thisSupplier);\n            }\n            suppliers.forEach(supplier => supplier.rankFavorites());\n            dispatchSuppliers(suppliers);\n            return suppliers;\n          }\n        });\n    },\n    getSuppliers: function() {\n      return suppliers;\n    },\n    takeSupplierTurn: function() {\n      takeSupplies();\n      dispatchSuppliers(suppliers);\n      dispatchSupplyReady(false);\n    },\n    sellItem: function (payload) {\n      const { id, itemId, price} = payload;\n      \n      const thisSupplier = suppliers.find(refSupplier => refSupplier.id === id);\n      if (!thisSupplier) {\n        return false;\n      }\n      const sellPayload = {\n        id: itemId,\n        price: price\n      }\n\n      const resSale = thisSupplier.sellItem(sellPayload);\n      if (!resSale) {\n        return false;\n      }\n      return true;\n    },\n    takeSupplierIncomeTurns: function() {\n      if (suppliers.length < 1) return;\n      suppliers.forEach(supplier => {\n        supplier.takeIncome();\n      })\n    },\n    updateSuppliers: function() {\n      dispatchSuppliers(suppliers);\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, \n  SET_STORE_GOLD, \n  SET_DAY, \n  SET_SUPPLIERS, \n  SET_STORE_NAME\n } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n  if (res.data && res.data.import_nickname) {\n    dispatch({ type: SET_STORE_NAME, name: res.data.nickname});\n  }\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}\n","import React from 'react';\nimport './Store.css';\n\n// import game modules\n// import gameStore from '../../game_modules/store';\nimport gameInventory from '../../game_modules/storeInventory';\n\n// import components\nimport ItemTypes from '../../Utilities/itemTypes';\nimport StoreInventory from '../StoreInventory/StoreInventory';\nimport Coin from '../Coin/Coin';\n\n// redux imports\nimport { SET_STORE_GOLD,\n  SET_STORE_FILTER, \n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.mobileMultiplier = 2;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n\n    this.getMobileDetail = this.getMobileDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.getFilter = this.getFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.getIncrementButtons = this.getIncrementButtons.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }\n\n  handleFilter(e) {\n    let currentType = e.target.value;\n    this.props.setStoreFilter(currentType);\n  }\n\n  increaseMarkup() {\n    this.setState({ \n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  // Proccess mousedown event to start incremental markup\n  onMouseDown(e) {\n    const refBtn = e.target;\n    if (refBtn.classList.contains(\"decreaseAll\") ||\n      refBtn.classList.contains(\"minus\")) {\n      this.valence = -1;\n    }\n    if (refBtn.classList.contains(\"increaseAll\" ||\n      refBtn.classList.contains(\"plus\"))) {\n      this.valence = 1;\n    }\n    this.repeat();\n  }\n\n  repeat() {\n    this.increaseMarkup();\n    if (this.valence === -1) {\n      this.handleDecrease();\n    }\n    if (this.valence === 1) {\n      this.handleIncrease();\n    }\n    let totalDelay = this.delay;\n    if (!this.props.pc) {\n      totalDelay *= this.mobileMultiplier;\n    } \n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(this.repeat, totalDelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleIncrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: this.state.markup\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handleDecrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: (this.state.markup * -1)\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementButtons() {\n    if (!this.props.filterActive) return '';\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getFilter() {\n    if (!this.props.filterActive) return '';\n    const itemTypesArr = Object.values(ItemTypes);\n    return (\n      <select className=\"StoreItemTypeFilter\" \n        defaultValue={this.props.storeFilter}\n        onChange={this.handleFilter}>\n        <option value=\"all\">all</option>\n        {itemTypesArr.map(itemType => {\n          return (\n            <option value={itemType}>{itemType}</option>\n          )\n        })}\n      </select>\n    )\n  }\n\n  toggleFilter() {\n    const newValue = !this.props.filterActive;\n    if (newValue && this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      inventoryComponent.handleMobileFocus(this.props.mobileItemDetail);\n    }\n    this.props.setStoreFilterActive(newValue);\n  }\n\n  getMobileDetail() {\n    if (this.props.isPc) {\n      return '';\n    }\n    if (this.props.filterActive && !this.props.mobileDetail) {\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          {this.getIncrementButtons()}\n          {this.getFilter()}\n        </div>\n      )\n    }\n    if (this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive primary-surface\">\n          <div className=\"itemDetailName\">{this.props.mobileItemDetail.name}</div>\n          {inventoryComponent.getIncrementOneButtons(this.props.mobileItemDetail.id)}\n          {inventoryComponent.getIncrementAllButtons(this.props.mobileItemDetail.prototypeId)}\n        </div>\n      )\n    }\n    return (\n      <div className=\"MobileDetailContainer\"></div>\n    );\n  }\n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar darkgrey\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <div className=\"FilterGroup\">\n            {this.props.isPc ? this.getIncrementButtons() : ''}\n            {this.props.isPc ? this.getFilter() : ''}\n          </div>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\" onClick={this.toggleFilter}>&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\"><Coin /> </span>{this.props.gold}</div>\n          </div>\n        </div>\n        <StoreInventory />\n        {this.getMobileDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold()),\n    setStoreFilter: (filter) => dispatch({ type: SET_STORE_FILTER, filter: filter }),\n    setStoreFilterActive: (value) => dispatch({ type: SET_STORE_FILTER_ACTIVE, value: value }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './SupplierBuyButton.css';\n\nclass SupplierBuyButton extends React.Component {\n  render() {\n    return (\n      <div className=\"SupplierBuyButton button secondary\">\n        <div className=\"supplierBuyButtonIcon\">\n          buy\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SupplierBuyButton;","import React from 'react';\nimport './Supplier.css';\n\nimport SupplierBuyButton from '../SupplierBuyButton/SupplierBuyButton';\nimport Coin from '../Coin/Coin';\n\n// game module imports\nimport gameItems from '../../game_modules/items';\nimport gameSuppliers from '../../game_modules/suppliers'\nimport gameStore from '../../game_modules/store';\nimport gameStoreInventory from '../../game_modules/storeInventory';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Supplier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppllierInventory = this.getSuppllierInventory.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handlePurchase(payload) {\n    const { ids, price } = payload;\n\n    if (price > this.props.storeGold) {\n      return;\n    }\n\n    // sell first item of object\n    const sellId = ids[0];\n    const sellPayload = {\n      id: this.props.supplier.id,\n      itemId: sellId,\n      price: price\n    }\n    let sellRes = gameSuppliers.sellItem(sellPayload);\n    if (!sellRes) {\n      return;\n    }\n\n    // transact sale for vendor\n    gameStore.chargeGold(price);\n    gameStoreInventory.addItem(sellId);\n\n    // update state\n    gameStore.updateGold();\n    gameStoreInventory.updateStoreInventory();\n    gameSuppliers.updateSuppliers();\n\n  }\n\n  getSuppllierInventory() {\n    if (!this.props.initialized) {\n      return ''\n    }\n    // get details on items from ids\n    let thisInventory = [];\n    this.props.supplier.inventory.forEach(id => {\n      let inventoryItem = gameItems.getItem(id);\n      thisInventory.push(inventoryItem);\n    });\n\n    // organize all items by item name\n    let inventoryGroups = {};\n    let valueGroups = {}\n    let typeGroups = {}\n    let idGroups = {}\n    thisInventory.forEach(item => {\n      if (!inventoryGroups[item.name]) {\n        inventoryGroups[item.name] = 1;\n        valueGroups[item.name] = item.value;\n        typeGroups[item.name] = item.type;\n        idGroups[item.name] = [item.id]\n      } else {\n        inventoryGroups[item.name] += 1;\n        idGroups[item.name].push(item.id);\n      }\n    });\n\n    // create array of composed items\n    let composedItems = []\n    for (const [key, value] of Object.entries(inventoryGroups)) {\n      let item = { name: key, count: value, type: typeGroups[key], value: valueGroups[key], ids: idGroups[key] };\n      composedItems.push(item);\n    }\n\n    composedItems.sort((item1, item2) => {\n      const nameA = item1.name.toUpperCase();\n      const nameB = item2.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return composedItems.map(item => {\n      const offerings = this.props.supplier.offerings;\n      const typeIndex = offerings.findIndex(offering => offering.type === item.type);\n      \n      let composedValue = item.value;\n      if (typeIndex !== -1) {\n        composedValue = composedValue * (1 + (offerings[typeIndex].markup / 1000));\n        composedValue = Math.floor(composedValue);\n      }\n\n      return (\n        <div className=\"SupplierInventoryItem itemBackground\" key={item.id}>\n          <span className=\"SupplierInventoryItemName\">{item.name} ({item.count})</span>\n          <div className=\"SupplierItemsValueGroup\">  \n            <span className=\"CoinSymbol\"><Coin /> </span>\n            <span className=\"InventoryItemValue\">{composedValue}</span>\n          </div>\n          <div className=\"BuyButtonContainer\" onClick={() => this.handlePurchase({ ids: item.ids, price: composedValue })}>\n              <SupplierBuyButton />\n            </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    let supplierClass = \"Supplier primary\";\n    if (this.props.isMobile) {\n      supplierClass += \" mobileSupplier\";\n    }\n    return (\n      <div className={supplierClass}>\n        <div className=\"SupplierName\">\n          {this.props.supplier.name}\n          <div className=\"SupplierValueGroup\">  \n            <span className=\"CoinSymbol\"><Coin /> </span>\n            <span className=\"InventoryItemValue\">{this.props.supplier.gold}</span>\n          </div>\n        </div>\n        <div className=\"supplierInventory primary-light\">\n          {this.getSuppllierInventory()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    supplyReady: state.supplies.ready,\n    storeGold: state.storeState.gold,\n    isMobile: state.app.isMobile\n  }\n}\n\nexport default connect(mapStateToProps)(Supplier);","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_SUPPLIERS_INITIALIZED } from '../../actions/types';\n\n// game imports\nimport gameSupplier from '../../game_modules/suppliers';\nimport gameSupplies from '../../game_modules/supplies';\n// import suppliers from '../../game_modules/suppliers';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppliers = this.getSuppliers.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateSuppliers = this.updateSuppliers.bind(this);\n  }\n\n  updateSuppliers() {\n    if (Array.isArray(this.props.suppliers) && this.props.supplySpawned) {\n      if (!this.props.supplyReady) {\n        gameSupplies.fillSupplies();\n      }\n    }\n    if (Array.isArray(this.props.suppliers) && this.props.supplyReady) {\n      if (!this.props.suppliersInitialized) {\n        gameSupplier.takeSupplierTurn();\n        this.props.setSuppliersInitialized(true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateSuppliers();\n  }\n\n  componentDidUpdate() {\n    this.updateSuppliers();\n  }\n\n  getSuppliers() {\n    if (this.props.detailUpdate) {\n      return '';\n    }\n    let supplierContainerClass = \"suppliersContainer\";\n    let spacerClass = \"spacer\";\n    if (!this.props.isPc) {\n      supplierContainerClass += \" nonPcContainer\";\n      supplierContainerClass += \" mobileContainer\";\n      spacerClass += \" mobileSpacer\";\n    }\n    let currentSuppliers = this.props.suppliers;\n    if (Array.isArray(currentSuppliers)) {\n      const suppliersDisplay = currentSuppliers.map(renderSupplier => {\n        return (<Supplier supplier={renderSupplier} initialized={this.props.suppliersInitialized}/>);\n      });\n\n      return (\n        <div className={supplierContainerClass}\n          ref={node => {\n            this.container = node;\n          }}>\n          {suppliersDisplay}\n          <div className={spacerClass}></div>\n        </div>\n      );\n    } else {\n      return 'no suppliers to render';\n    }\n    \n  }\n  \n  render() {\n    let suppliersClass = \"Suppliers primary-dark\";\n    if (!this.props.isPc) {\n      suppliersClass += \" mobileSuppliers\";\n    }\n    return (\n      <div className={suppliersClass}>\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    supplyReady: state.supplies.ready,\n    supplySpawned: state.supplies.spawned,\n    isPc: state.app.isPc,\n    isMobile: state.app.isMobile,\n    suppliersInitialized: state.suppliers.initialized,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSuppliersInitialized: (value) => dispatch({ type: SET_SUPPLIERS_INITIALIZED, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Suppliers);","const gameConstants = {\n  maxSuppliers: 3,\n  startingAdventurers: 5,\n  dailyAdventurers: 1,\n  adventurerStartingGold: 400\n}\n\nexport default gameConstants;","const monsters = (function(){\n  let currentId = 0;\n\n  let monsters = [];\n  const specialCooldownTurns = 4;\n\n  const monsterDecisions = {\n    heal: 'heal',\n    defend: 'defend',\n    special: 'special',\n    attack: 'attack'\n  }\n\n  const Monster = function(payload) {\n    const {\n      protoId,\n      name,\n      boss,\n      level,\n      hp,\n      damage,\n      defense,\n      stealth,\n      initiative,\n      special,\n      heal,\n      dropList,\n      monsterBehavior\n    } = payload;\n    this.protoId = protoId;\n    this.name = name;\n    this.boss = boss;\n    this.level = level;\n    this.hp = hp;\n    this.maxHp = hp;\n    this.damage = damage;\n    this.defense = defense;\n    this.stealth = stealth;\n    this.initiative = initiative;\n    this.special = special;\n    this.heal = heal;\n    this.dropList = dropList;\n    this.monsterBehavior = monsterBehavior;\n    this.id = currentId;\n    this.specialCooldown = specialCooldownTurns;\n    this.defending = false;\n    currentId++;\n  }\n\n  Monster.prototype.getInitiativeRoll = function() {\n    const initiativeFactor = ((this.initiative * .9) + (this.stealth * .3)) / 10;\n    return Math.random() * initiativeFactor;\n  }\n\n  Monster.prototype.takeTrapDamage = function(adventurerLevel) {\n    let trapDamage = Math.floor(3 * (Math.pow(1.25, (adventurerLevel - 1))));\n    if (trapDamage > this.hp) {\n      trapDamage = this.hp;\n    }\n    this.hhp -= trapDamage;\n    return trapDamage;\n  }\n\n  Monster.prototype.checkNeedsHeal = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    const needHealing = percentLost > Math.random();\n    return needHealing;\n  }\n\n  Monster.prototype.checkUseHeal = function() {\n    let decisionFactor = (this.monsterBehavior.heal / 1000);\n    const useHeal = decisionFactor > Math.random();\n    return useHeal;\n  }\n\n  Monster.prototype.checkUseSpecial = function() {\n    let decisionFactor = (this.monsterBehavior.special_move / 1000);\n    const useSpecial = decisionFactor > Math.random();\n    return useSpecial;\n  }\n\n  Monster.prototype.checkDefend = function() {\n    if (this.defending) return false;\n    let decisionFactor = (this.monsterBehavior.defend / 1000);\n    const useDefend = decisionFactor > Math.random();\n    return useDefend;\n  }\n\n  Monster.prototype.checkBlockFlee = function() {\n    let decisionFactor = (this.monsterBehavior.flee / 1000);\n    const blockFlee = decisionFactor > Math.random();\n    return blockFlee;\n  }\n\n  Monster.prototype.getBattleDecision = function() {\n    let thisDecision = new MonsterDecision(this.id);\n    if (this.monsterBehavior.heal) {\n      thisDecision.needHealing = this.checkNeedsHeal();\n      thisDecision.useHeal = this.checkUseHeal();\n    }\n    if (this.monsterBehavior.special_move) {\n      thisDecision.useSpecial = this.checkUseSpecial();\n    }\n    thisDecision.defend = this.checkDefend();\n    const decided = thisDecision.weighDecisionTournament();\n    console.log(decided);\n    return decided;\n  }\n\n  Monster.prototype.takeBattleDamage = function(calculatedDamage) {\n    this.hp -= calculatedDamage;\n  }\n\n  const MonsterDecision = function(monsterId) {\n    this.monsterId = monsterId;\n    this.needHealing = false;\n    this.useHeal = false;\n    this.useSpecial = false;\n    this.defend = false;\n  }\n\n  MonsterDecision.prototype.weighDecisionTournament = function() {\n    const concernedMonster = monsters.find(monster => monster.id === this.monsterId);\n    let remainingOptions = [];\n    // populate hash table with weights for relevant behaviors\n    const weights = {\n      useHeal: concernedMonster.monsterBehavior.heal,\n      useSpecial: concernedMonster.monsterBehavior.special_move,\n      defend: concernedMonster.monsterBehavior.defend\n    }\n    // add decisions marked as valid to array for use in\n    // creating elimination tournament\n    if (this.needHealing && this.useHeal) {\n      remainingOptions.push(monsterDecisions.heal);\n    }\n    if (this.useSpecial) {\n      remainingOptions.push(monsterDecisions.special);\n    }\n    if (this.defend) {\n      remainingOptions.push(monsterDecisions.defend);\n    }\n    remainingOptions.push(monsterDecisions.attack);\n    if (remainingOptions.length === 1) {\n      return remainingOptions[0];\n    }\n    // determine number of tournament rounds for iteration\n    const tournamentRounds = Math.ceil(Math.log2(remainingOptions.length));\n    for (let round = 0; round < tournamentRounds; round++) {\n      // create pairings from outside ends inward\n      const optionsLength = remainingOptions.length;\n      let pairings = [];\n      const pairCount = Math.floor(optionsLength / 2);\n      for (let offset = 0; offset < pairCount; offset++) {\n        const pair = [remainingOptions[offset], remainingOptions[optionsLength - (offset + 1)]];\n        pairings.push(pair);\n      }\n      let eliminated = [];\n      // iterate over pairings and produce weighted outcomes to \n      // eliminate one decision from each pairing\n      pairings.forEach(pair => {\n        const result1 = Math.random() * weights[pair[0]];\n        const result2 = Math.random() * weights[pair[1]];\n        const randomChoice = Math.random();\n\n        if (result1 > result2 || (result1 === result2 && randomChoice < .5)) {\n          eliminated.push(pair[1]);\n        } else {\n          eliminated.push(pair[0]);\n        }\n      });\n      // remove eliminated options from array containing tournament\n      // entrants\n      for (let elIndex = 0; elIndex < eliminated.length; elIndex++) {\n        const eliminate = eliminated[elIndex];\n        remainingOptions = remainingOptions.filter(option => option !== eliminate);\n      }\n    }\n    return remainingOptions[0];\n  }\n\n  return {\n    createMonster: function (payload) {\n      const newMonster = new Monster(payload);\n      monsters.push(newMonster);\n      return newMonster.id;\n    },\n    getMonster: function(id) {\n      const foundMonster = monsters.find(monster => monster.id === id);\n      if (foundMonster !== undefined && foundMonster !== null) {\n        return foundMonster;\n      } else {\n        return false;\n      }\n    },\n    composePayloadFromProto: function(protoMonster) {\n      const monsterPayload = {\n        protoId: protoMonster.id,\n        name: protoMonster.name,\n        boss: protoMonster.boss,\n        level: protoMonster.level,\n        hp: protoMonster.hp,\n        damage: protoMonster.damage,\n        defense: protoMonster.defense,\n        stealth: protoMonster.stealth,\n        initiative: protoMonster.initiative,\n        special: protoMonster.special,\n        heal: protoMonster.heal,\n        dropList: protoMonster.drop_list,\n        monsterBehavior: protoMonster.monster_behavior\n      }\n      return monsterPayload;\n    },\n    getMonsterDecisions: function() {\n      return monsterDecisions;\n    }\n  }\n}());\n\nexport default monsters;","// game imports\nimport items from './items';\nimport adventurersModule from './adventurers';\nimport monsters from './monsters';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_DUNGEON_LEVELS, \n  SET_DUNGEON_LEVEL_EXPLORED,\n  SET_DUNGEON_ADVENTURERS } from '../actions/types';\n\nconst dungeon = (function(){\n  let levels = [];\n  // {\n  // adventurerId: n,\n  // level: n\n  //}\n  let adventurers = [];\n  let levelCount;\n\n  let exploredLevel = 0;\n\n  const Level = function(payload) {\n    const {\n      number, \n      boss, \n      bossId, \n      monstersMinLevel, \n      monstersMaxLevel,\n      tileAssignments,\n      treasureDropList\n    } = payload;\n    this.number = number;\n    this.boss = boss;\n    this.bossId = bossId;\n    this.monstersMinLevel = monstersMinLevel;\n    this.monstersMaxLevel = monstersMaxLevel;\n    this.tileAssignments = tileAssignments;\n    this.treasureDropList = treasureDropList;\n    this.treasures = [];\n    this.droppedTreasures = [];\n    this.monsters = [];\n    this.lurkingMonsters = [];\n    this.monstersLoot = [];\n    this.treasureListFetched = false;\n    this.monstersFetched = false;\n    this.monsterDropListItemsFetched = false;\n    this.intialized = false;\n  }\n\n  Level.prototype.initialize = async function() {\n    \n    //const monstersToAdd = getMonstersForLevel(this.monstersMinLevel, this.monstersMaxLevel);\n    return new Promise((resolve, reject) => {\n      const tGetMonstersForLevel = getMonstersForLevel(this.monstersMinLevel, this.monstersMaxLevel);\n      tGetMonstersForLevel.next().value.then((monstersToAdd) => {\n        if (!monstersToAdd) return false;\n        let monsterDrops = [];\n        // compose list of items to fetch\n        monstersToAdd.forEach(addMonster => {\n          this.monsters.push(addMonster);\n          const addMonsterDrops = addMonster.drop_list.drops;\n          if (addMonsterDrops) {\n            addMonsterDrops.forEach(addDrop => {\n              const addId = addDrop.itemId;\n              if (!monsterDrops.find(item => item.itemId === addId)) {\n                monsterDrops.push({ itemId: addId, dropType: addDrop.drop_type});\n              }\n            })\n          }\n        });\n  \n        // compose list of items to fetch\n        let treasureDrops = [];\n        this.treasureDropList.drops.forEach(drop => {\n          const addId = drop.itemId;\n          if (!treasureDrops.find(item => item.itemId === addId)) {\n            treasureDrops.push({ itemId: addId, dropType: drop.drop_type });\n          }\n        });\n        new Promise((resolveMonsterDrops, rejectMonsterDrops) => {\n          // fetch monster drop list items\n          monsterDrops.forEach((monsterDrop, mDropN) => {\n            const mGetDrop = getDrop(monsterDrop);\n            mGetDrop.next().value.then((resolvedDrop) => {\n              if (Array.isArray(resolvedDrop)) {\n                resolvedDrop = resolvedDrop[0];\n              }\n              this.monstersLoot.push(resolvedDrop);\n              if (mDropN === monsterDrops.length -1) {\n                resolveMonsterDrops();\n              }\n            })\n          });\n        })\n        .then(() => {\n            new Promise((resolveTreasureDrops, rejectTreasureDrops) => {\n              // fetch items for treasure drop lists\n              treasureDrops.forEach((treasureDrop, tDropN) => {\n                const tGetDrop = getDrop(treasureDrop);\n                tGetDrop.next().value.then((resolvedDrop) => {\n                  if (Array.isArray(resolvedDrop)) {\n                    resolvedDrop = resolvedDrop[0];\n                  }\n                  this.treasures.push(resolvedDrop);\n                  if (tDropN === treasureDrops.length -1) {\n                    resolveTreasureDrops();\n                  }\n                });            \n              })\n            })\n            .then(() => {\n              this.initialized = true;\n              console.log('level initialized.');\n              resolve(true);\n            });\n          });\n      });\n    })\n    \n  }\n\n  Level.prototype.activateTile = async function(adventurer) {\n    return new Promise((resolve, reject) => {\n      let tileOutcomes = [];\n      for (let tileI = 0; tileI < this.tileAssignments.length; tileI++) {\n        const weight = this.tileAssignments[tileI].probability;\n        const result = Math.random() * weight;\n        tileOutcomes.push({ tile: tileI, result: result });\n      }\n      tileOutcomes.sort((outcome1, outcome2) => {\n        if (outcome1.result > outcome2.result) {\n          return -1;\n        } else if (outcome1.result < outcome2.result) {\n          return 1;\n        } else return 0;\n      });\n      const resultTileI = tileOutcomes[0].tile;\n      const resultTile = this.tileAssignments[resultTileI].dungeon_tile;\n      let innTreasureBoost = 0;\n      if (adventurer.informed) {\n        innTreasureBoost = 20;\n      }\n      const actions = adventurersModule.getActions();;\n      let checkTreasureBoost = 0;\n      if (adventurer.action === actions.checkForTreasure) {\n        checkTreasureBoost = 10;\n      }\n      let checkTrapBoost = 0;\n      if (adventurer.action === actions.checkForTraps) {\n        checkTrapBoost = 50;\n      }\n      const treasureProb = Math.random() * (resultTile.treasure + innTreasureBoost + checkTreasureBoost);\n      const encounterProb = Math.random() * resultTile.encounter;\n      const trapProb = Math.random() * (resultTile.trap - checkTrapBoost);\n      const threshholdProb = Math.random() * 125;\n      // console.log(`probs... treasure: ${treasureProb}, trap: ${trapProb}, encounter: ${encounterProb}, threshold: ${threshholdProb}`);\n      if (threshholdProb > treasureProb && threshholdProb > encounterProb && threshholdProb > trapProb) {\n        resolve();\n        return;\n      }\n      if (treasureProb > encounterProb && treasureProb > trapProb) {\n        console.log('treasure event');\n        const treasureIndex = Math.floor(Math.random() * this.treasures.length);\n        const treasures = this.treasures;\n        const treasure = treasures[treasureIndex];\n        const treasureDropRef = this.treasureDropList.drops.find(drop => drop.itemId === treasure.id);\n        const itemDropped = (treasureDropRef.dropChance / 1000) > Math.random();\n        const goldMin = this.treasureDropList.gold_min;\n        const goldRange = this.treasureDropList.gold_max - goldMin;\n        const randomAward = Math.floor(Math.random() * goldRange) + goldMin;\n        const awardGold = (this.treasureDropList.gold_chance / 1000) > Math.random();\n\n        if (awardGold) {\n          adventurer.creditAccount(randomAward);\n        }\n        if (itemDropped) {\n          // compose payload for Item constructor\n          const payload = items.composePayloadFromProto(treasure);\n          let itemId = items.createItem(payload);\n          const treasureItem = items.getItem(itemId);\n          adventurer.considerTreasure(treasureItem);\n        }\n        resolve();\n        return;\n      } else if (trapProb > treasureProb && trapProb > encounterProb) {\n        adventurer.encounterTrap(this.number);\n        resolve();\n        return;\n      } else if (encounterProb > trapProb && encounterProb > treasureProb) {\n        console.log('perform encounter');\n        const monsterIndex = Math.floor(Math.random() * this.monsters.length);\n        const monsterProto = this.monsters[monsterIndex];\n        const monsterPayload = monsters.composePayloadFromProto(monsterProto);\n        const newMonsterId = monsters.createMonster(monsterPayload);\n        const newMonster = monsters.getMonster(newMonsterId);\n        adventurer.setWeaknessChecked(false);\n        adventurer.logEncounterStart(newMonster.name);\n        const newBattle = new Battle({ adventurer: adventurer, monster: newMonster, level: this.number });\n        battleController.addBattle(newBattle);\n        newBattle.startBattle(resolve);\n        console.log('battle created.');\n      }\n    });\n    \n  }\n\n  const BattleController = function() {\n    this.currentBattles = [];\n    this.currentBattleId = 0;\n  }\n\n  BattleController.prototype.addBattle = function(battle) {\n    battle.id = this.currentBattleId;\n    this.currentBattles.push(battle);\n    this.currentBattleId++;\n    return battle.id;\n  }\n\n  BattleController.prototype.clearBattleRound = function(payload) {\n    const {\n      roundNumber,\n      battleId\n    } =  payload;\n    const foundBattle = this.currentBattles.find(battle => battle.id === battleId);\n    foundBattle.clearRound(roundNumber);\n  }\n\n  BattleController.prototype.addBattleRound = function(payload) {\n    const {\n      battleId,\n      newRound\n    } = payload;\n    const foundBattle = this.currentBattles.find(battle => battle.id === battleId);\n    foundBattle.addRound(newRound);\n  }\n\n  const Battle = function(payload) {\n    const {\n      adventurer,\n      monster,\n      level\n    } = payload;\n    this.adventurer = adventurer;\n    this.monster = monster;\n    this.rounds = [];\n    this.currentRoundNumber = 0;\n    this.level = level;\n  }\n\n  Battle.prototype.startBattle = function(turnResolve) {\n    this.resolution = turnResolve;\n    const newRound = new Round({ adventurer: this.adventurer,\n      monster: this.monster,\n      battleId: this.id });\n    this.addRound(newRound);\n    newRound.startRound();\n  }\n\n  Battle.prototype.addRound = function(round) {\n    round.roundNumber = this.currentRoundNumber;\n    this.currentRoundNumber++;\n    this.rounds.push(round);\n  }\n\n  Battle.prototype.clearRound = function(roundNumber) {\n    let deletedRound = this.rounds.find(foundRound => foundRound.roundNumber === roundNumber);\n    if (deletedRound.fleed) {\n      const thisLevel = levels.find(level => level.number === this.level);\n      thisLevel.lurkingMonsters.push(this.monster);\n    }\n    this.rounds = this.rounds.filter(clearRound => clearRound.roundNumber !== roundNumber);\n    if (deletedRound) {\n      deletedRound = null;\n    }\n    if (this.rounds.length === 0) {\n      this.resolution();\n    }\n  }\n\n  const Round = function(payload) {\n    const {\n      adventurer,\n      monster,\n      battleId\n    } = payload;\n    this.battleId = battleId;\n    this.adventurer = adventurer;\n    this.monster = monster;\n    this.fleed = false;\n  }\n\n  Round.prototype.startRound = function() {\n    const actions = adventurersModule.getActions();\n    // console.log(`Round number: ${this.roundNumber}`);\n    const adventurerInitiative = this.adventurer.getInitiativeRoll();\n    const monsterInitiative = this.monster.getInitiativeRoll();\n    console.log(`adv: ${adventurerInitiative}, mon: ${monsterInitiative}`);\n    if (this.adventurer.action.currentAction === actions.setTrap) {\n      const trapDamage = this.monster.takeTrapDamage(this.adventurer.level);\n      this.adventurer.logTrap({ trapDamage, monsterName: this.monster.name });\n      this.adventurer.unsetTrap();\n    }\n    if (adventurerInitiative > monsterInitiative) {\n      this.adventurerTurn();\n      if (this.monster.hp > 0) {\n        this.monsterTurn();\n      }\n    } else {\n      this.monsterTurn();\n      if (this.adventurer.hp > 0) {\n        this.adventurerTurn();\n      }\n    }\n    if ((this.adventurer.hp > 0 && this.monster.hp > 0) || !this.fleed) {\n      this.addRound();\n    } \n    this.clearSelf();\n  }\n\n  Round.prototype.adventurerTurn = function() {\n    console.log('adventurer turn');\n    const battleDecisions = adventurersModule.getBattleDecisions();\n    const adventurerMove = this.adventurer.getBattleDecision(this.monster);\n    console.log(adventurerMove);\n    if (adventurerMove === battleDecisions.defend) {\n      this.adventurer.defending = true;\n      this.adventurer.logDefend();\n    } else {\n      this.adventurer.defending = false;\n    }\n    if (adventurerMove === battleDecisions.usePotion) {\n      this.adventurer.usePotion();\n    }\n    if (adventurerMove === battleDecisions.flee) {\n      const doBlock = this.monster.checkBlockFlee();\n      if (doBlock) {\n        const levelDiff = this.monster.level - this.adventurer.level;\n        let fleeFactor = .05 + (levelDiff / 10);\n        const doesFlee = fleeFactor > Math.random();\n        if (doesFlee) {\n          this.fleed = true;\n          this.adventurer.logFlee();\n        }\n      }\n    }\n    if (adventurerMove === battleDecisions.checkWeakness) {\n      this.adventurer.setWeaknessChecked(true);\n      this.adventurer.logWeaknessChecked({ monsterName: this.monster.name });\n    }\n    if (adventurerMove === battleDecisions.attack) {\n      let damageFactor = 0;\n      if (this.adventurer.adventurerClass.name === 'thief') {\n        damageFactor = Math.floor(this.adventurer.cunning * .75) + this.adventurer.strength;\n      } else if (this.adventurer.adventurerClass.name === 'bard') {\n        damageFactor = Math.floor(this.adventurer.cunning * .5) + this.adventurer.strength;\n      } else if (this.adventurer.adventurerClass.name === 'soldier') {\n        damageFactor = Math.floor(this.adventurer.cunning * .2) + this.adventurer.strength;\n      } else {\n        damageFactor = this.adventurer.strength;\n      }\n      let weaponDamage = 0;\n      if (this.adventurer.equipment.weapon) {\n        weaponDamage = this.adventurer.equipment.weapon.damage;\n      }\n      const damageFloor = Math.floor(damageFactor / 2);\n      const randomizeDamage = damageFactor - damageFloor;\n      const randomDamage = Math.floor(Math.random() * randomizeDamage);\n      const monsterShield = Math.floor(Math.random() * (this.monster.defense * .5) + (this.monster.defense * .5));\n      let calculatedDamage = damageFloor + randomDamage + weaponDamage - monsterShield;\n      if (this.monster.defending) {\n        calculatedDamage = Math.floor(calculatedDamage / 2);\n      }\n      if (this.adventurer.weaknessChecked) {\n        calculatedDamage *= Math.floor(1.2 * Math.log2(1.4, this.adventurer.cunning));\n      }\n      if (calculatedDamage < 1) {\n        if (Math.random() > .5) {\n          calculatedDamage = 1;\n        } else {\n          calculatedDamage = 0;\n        }\n      }\n      if (calculatedDamage > this.monster.hp) {\n        calculatedDamage = this.monster.hp;\n      }\n      this.monster.takeBattleDamage(calculatedDamage);\n      const damagePayload = {\n        monsterName: this.monster.name,\n        damage: calculatedDamage\n      }\n      this.adventurer.logHitMonster(damagePayload);\n      if (this.monster.hp <= 0) {\n        this.adventurer.logVictory({ monsterName: this.monster.name });\n      }\n      console.log(this.monster.hp);\n    }\n  }\n\n  Round.prototype.monsterTurn = function() {\n    const monsterDecisions = monsters.getMonsterDecisions();\n    const monsterMove = this.monster.getBattleDecision();\n    console.log(monsterMove);\n    if (monsterMove === monsterDecisions.defend) {\n      this.monster.defending = true;\n    } else {\n      this.monster.defending = false;\n    }\n    if (monsterMove === monsterDecisions.attack) {\n      const damageFloor = Math.floor(this.monster.damage / 2);\n      const randomizeDamage = this.monster.damage - damageFloor;\n      const randomDamage = Math.floor(Math.random() * randomizeDamage);\n      const adventurerShield = Math.floor((this.adventurer.adventurerClass.armor + Math.floor(this.adventurer.adventurerClass.tactics / 2)) / 2);\n      let adventurerArmor = 0;\n      if (this.adventurer.equipment.armor) {\n        adventurerArmor = this.adventurer.equipment.armor.armor;\n      }\n      console.log(`damage: ${damageFloor + randomDamage}, shield: ${adventurerShield}`);\n      let calculatedDamage = damageFloor + randomDamage - adventurerShield - adventurerArmor;\n      if (this.adventurer.defending) {\n        calculatedDamage = Math.floor(calculatedDamage / 2);\n      }\n      if (calculatedDamage < 1) {\n        if (Math.random() > .5) {\n          calculatedDamage = 1;\n        } else {\n          calculatedDamage = 0;\n        }\n      }\n      const damagePayload = {\n        monsterName: this.monster.name,\n        damage: calculatedDamage\n      }\n      this.adventurer.takeBattleDamage(damagePayload);\n    }\n  }\n\n  Round.prototype.addRound = function() {\n    const newRound = new Round({ adventurer: this.adventurer, monster: this.monster, battleId: this.battleId });\n    battleController.addBattleRound({ newRound, battleId: this.battleId });\n    newRound.startRound();\n  }\n\n  Round.prototype.clearSelf = function() {\n    battleController.clearBattleRound({ roundNumber: this.roundNumber, battleId: this.battleId });\n  }\n\n  let battleController;\n\n  const initializeBattleController = function() {\n    battleController = new BattleController();\n  }\n\n  const dispatchLevels = function() {\n    const payload = {\n      type: SET_DUNGEON_LEVELS,\n      payload: levels\n    };\n    store.dispatch(payload);\n  }\n\n  const dispatchExploredLevel = function() {\n    const payload = {\n      type: SET_DUNGEON_LEVEL_EXPLORED,\n      level: exploredLevel\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchAdventurers = function() {\n    const payload = {\n      type: SET_DUNGEON_ADVENTURERS,\n      adventurers: adventurers\n    }\n    store.dispatch(payload);\n  }\n\n  const orderLevels = function() {\n    levels.sort((level1, level2) => {\n      if (level1.number > level2.number) {\n        return 1;\n      } else if (level1.number < level2.number) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  const fetchLevels = async function() {\n    let initLevels = fetcher.fetchRoute('levels-full');\n    return initLevels;\n  }\n\n  const getLevels = function*() {\n    yield fetchLevels();\n  }\n\n  const addAdventurer = function(adventurerId) {\n    adventurers.push({ adventurerId: adventurerId, level: 1});\n    if (exploredLevel < 1) {\n      exploredLevel = 1;\n      dispatchExploredLevel();\n    }\n  }\n\n  const deleteAdventurer = function(adventurerId) {\n    adventurers = adventurers.filter(adventurer => adventurer.adventurerId !== adventurerId);\n  }\n\n  const getMonstersForLevel = function*(minLevel, maxLevel) {\n    yield fetchMonstersInRange(minLevel, maxLevel);\n  }\n\n  const fetchMonstersInRange = async function(minLevel, maxLevel) {\n    const fetchUrl = `/monsters-in-level-range?min-level=${minLevel}&max-level=${maxLevel}`;\n    let fetchedMonsters;\n    try {\n      fetchedMonsters = await fetch(fetchUrl);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (fetchedMonsters) {\n      fetchedMonsters = fetchedMonsters.json();\n    }\n\n    return fetchedMonsters;\n  }\n\n  const getDrop = function*(drop) {\n    yield fetchDrop(drop);\n  }\n\n  const fetchDrop = async function(drop) {\n    const fetchUrl = `/${drop.dropType}-id?id=${drop.itemId}`;\n    let fetchedDrop;\n    try {\n      fetchedDrop = await fetch(fetchUrl);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (fetchedDrop) {\n      fetchedDrop = fetchedDrop.json();\n    }\n  \n    return fetchedDrop;\n  }\n\n  const loadLevel = async function() {\n    return new Promise((resolve, reject) => {\n      const nextLevelN = exploredLevel + 1;\n      let nextLevel = levels.find(level => level.number === nextLevelN);\n      nextLevel.initialize()\n        .then((completed) => {\n          resolve(completed);\n        })\n      })\n  }\n\n  return {\n    initializeLevels: async function() {\n      initializeBattleController();\n      const genGetLevels = getLevels();\n      genGetLevels.next().value\n        .then(initLevels => {\n          if (!initLevels) return false;\n          while (initLevels.length > 0) {\n            let newLevel = initLevels.shift();\n            if (Array.isArray(newLevel)) {\n              newLevel = newLevel[0];\n            }\n            const levelPayload = {\n              number: newLevel.number,\n              boss: newLevel.boss,\n              bossId: newLevel.boss_id,\n              monstersMinLevel: newLevel.monsters_min_level,\n              monstersMaxLevel: newLevel.monsters_max_level,\n              tileAssignments: newLevel.tile_assignments,\n              treasureDropList: newLevel.drop_list\n            }\n            let thisLevel = new Level(levelPayload);\n            levels.push(thisLevel);\n          }\n        }).then(() => {\n          levelCount = levels.length;\n          orderLevels();\n          dispatchLevels();\n          dispatchExploredLevel();\n        });\n    },\n    updateLevels: function() {\n      dispatchLevels();\n    },\n    getExploredLevel: function() {\n      return exploredLevel;\n    },\n    receiveAdventurer: function(adventurerId) {\n      addAdventurer(adventurerId);\n      dispatchAdventurers();\n    },\n    releaseAdventurer: function(adventurerId) {\n      deleteAdventurer(adventurerId);\n      dispatchAdventurers();\n    },\n    executeTurn: async function(adventurer) {\n      return new Promise((resolve, reject) => {\n        const dungeonEntry = adventurers.find(dunAdventurer => dunAdventurer.adventurerId === adventurer.id);\n        const currentLevel = levels.find(level => level.number === dungeonEntry.level);\n        currentLevel.activateTile(adventurer)\n          .then(() => {\n            resolve();\n          });\n      })\n    },\n    checkLevelReadiness: function() {\n      if (exploredLevel === 0) return false;\n      if (!adventurers) return false;\n      let highestLevel = 1;\n      for (let adventurerI = 0; adventurerI < adventurers.length; adventurerI++) {\n        if (adventurers[adventurerI].level > highestLevel) {\n          highestLevel = adventurers[adventurerI].level;\n        }\n      }\n      if (exploredLevel <= highestLevel) {\n        if (exploredLevel < levelCount) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return true;\n    },\n    loadNextLevel: function*() {\n      yield loadLevel();\n    }\n  }\n}());\n\nexport default dungeon;","const tagProcessor = (function(){\n\n  const filterClasses = {\n    name: 'adventurerNameTag',\n    monsterName: 'monsterNameTag',\n    status: 'status',\n    value: 'value'\n  }\n\n  return {\n    getFilterClasses: function() {\n      return filterClasses;\n    }\n  }\n}());\n\nexport default tagProcessor;","import React from 'react';\n\n// constant imports\nimport gameConstants from './gameConstants';\n\n// game imports\nimport storeInventory from './storeInventory';\nimport playerStore from './store';\nimport items from './items';\nimport dungeon from './dungeon';\nimport days from './days';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\nimport itemTypes from '../Utilities/itemTypes';\nimport tagProcessor from '../Utilities/tagProcessor';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_ADVENTURERS, SET_DETAIL_UPDATE } from '../actions/types';\n\nconst adventurers = (function(){\n  let adventurers = [];\n  let currentId = 0;\n\n  const maxInventory = 15;\n  const defaultActionDays = 2;\n\n  const actions = {\n    checkForTreasure: 'checkForTreasure',\n    checkForTraps: 'checkForTraps',\n    setTrap: 'setTrap'\n  }\n\n  const decisions = {\n    usePotion: 'usePotion',\n    advance: 'advance',\n    checkForTraps: 'checkForTraps',\n    checkForTreasure: 'checkForTreasure',\n    setTrap: 'setTrap',\n    returnToTown: 'returnToTown',\n    advanceNextLevel: 'advanceNextLevel'\n  }\n\n  const battleDecisions = {\n    usePotion: 'usePotion',\n    defend: 'defend',\n    flee: 'flee',\n    checkWeakness: 'checkWeakness',\n    attack: 'attack'\n  }\n\n  const setTrapBehavior = {\n    thief: 600,\n    soldier: 200,\n    bard: 450\n  }\n\n  const Adventurer = function(payload) {\n    const { name, \n      strength, \n      speed, \n      cunning, \n      intelligence,\n      constitution,\n      dungeonBehavior,\n      townBehavior,\n      adventurerClass } = payload;\n      this.name = name;\n      this.strength = strength;\n      this.speed = speed;\n      this.cunning = cunning;\n      this.intelligence = intelligence;\n      this.constitution = constitution;\n      this.dungeonBehavior = dungeonBehavior;\n      this.townBehavior = townBehavior;\n      this.adventurerClass = adventurerClass;\n      this.gold = gameConstants.adventurerStartingGold;\n      this.level = 1;\n      this.experience = 0;\n      this.hp = 7 + constitution;\n      this.maxHp = this.hp;\n      this.inventory = [];\n      this.equipment = { weapon: null, armor: null };\n      this.inDungeon = false;\n      this.informed = false;\n      this.hasFoundStairs = false;\n      this.currentTotalDungeonTurns = 0;\n      this.action = {\n        currentAction: null,\n        turns: 0\n      }\n      this.id = currentId;\n      this.defending = false;\n      this.weaknessChecked = false;\n      currentId++;\n  }\n\n  Adventurer.prototype.checkAccount = function(value) {\n    return this.gold >= value;\n  }\n\n  Adventurer.prototype.chargeAccount = function(value) {\n    this.gold -= value;\n  }\n\n  Adventurer.prototype.creditAccount = function(value) {\n    this.gold += value;\n  }\n\n  Adventurer.prototype.unequipItem = function(slot) {\n    this.equipment[slot] = null;\n  }\n\n  Adventurer.prototype.equipItem = function(item) {\n    this.equipment[item.type] = item;\n    console.log(this.equipment);\n  }\n\n  Adventurer.prototype.getCurrentItemCount = function(protoId) {\n    if (this.inventory.length <= 0) return 0;\n    let protoCount = 0;\n    for (let item of this.inventory) {\n      if (item.prototypeId === protoId) {\n        protoCount++;\n      }\n    }\n    return protoCount;\n  }\n\n  Adventurer.prototype.addCombatLog = function(message) {\n    if (! this.combatLog) {\n      this.combatLog = [];\n    }\n    this.combatLog.push(message);\n  }\n\n  Adventurer.prototype.getCombatLog = function() {\n    if (! this.combatLog) {\n      this.combatLog = [];\n    }\n    return this.combatLog;\n  }\n\n  Adventurer.prototype.checkHealthChoice = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let decisionFactor = percentLost + (this.dungeonBehavior.conserve_health / 1000);\n    const needHealing = decisionFactor > Math.random();\n    return needHealing;\n  }\n\n  Adventurer.prototype.checkHasPotion = function() {\n    console.log(this.inventory);\n    if (this.inventory.length < 1) return false;\n    return this.inventory.find(item => item.type === itemTypes.potion);\n  }\n\n  Adventurer.prototype.checkPotionUse = function() {\n    let decisionFactor = (this.dungeonBehavior.use_potion / 1000);\n    const usePotion = decisionFactor > Math.random();\n    return usePotion;\n  }\n\n  Adventurer.prototype.checkDefend = function() {\n    let decisionFactor = (this.dungeonBehavior.defend / 1000) - (this.dungeonBehavior.attack / 2000);\n    const defend = decisionFactor > Math.random();\n    return defend;\n  }\n\n  Adventurer.prototype.checkFlee = function(monster) {\n    let levelDiff = monster.level - this.level;\n    if (levelDiff < 0) {\n      levelDiff = 1;\n    } else {\n      levelDiff = levelDiff + 1;\n    }\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    const mosterHpDiff = monster.maxHp - monster.hp;\n    const monsterPercentLost = mosterHpDiff / monster.maxHp;\n    let decisionFactor = (((percentLost - (monsterPercentLost * .8)) * (Math.pow(1.2, levelDiff))) * 0.7) + (this.dungeonBehavior.flee_encounter / 4000);\n    const flee = decisionFactor > Math.random();\n    return flee;\n  }\n\n  Adventurer.prototype.checkWeakness = function() {\n    if (this.weaknessChecked) return false;\n    let decisionFactor = (this.dungeonBehavior.check_monster_weakness / 1000);\n    const checkWeak = decisionFactor > Math.random();\n    return checkWeak;\n  }\n\n  Adventurer.prototype.usePotion = function() {\n    const filterClasses = tagProcessor.getFilterClasses();\n    let heldPotions = this.inventory.filter(item => item.type === itemTypes.potion);\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let potionToUse;\n    if (percentLost > .5) {\n      heldPotions.sort((potion1, potion2) => {\n        if (potion1[itemTypes.potion].level < potion2[itemTypes.potion].level) {\n          return 1;\n        } else if (potion1[itemTypes.potion].level > potion2[itemTypes.potion].level) {\n          return -1;\n        } else return 0;\n      });\n      potionToUse = heldPotions[0];\n    } else {\n      heldPotions.sort((potion1, potion2) => {\n        if (potion1[itemTypes.potion].level < potion2[itemTypes.potion].level) {\n          return -1;\n        } else if (potion1[itemTypes.potion].level > potion2[itemTypes.potion].level) {\n          return 1;\n        } else return 0;\n      });\n      potionToUse = heldPotions[0];\n    }\n    let hpToHeal = Math.floor(potionToUse[itemTypes.potion].level * (4 * Math.pow(1.08, potionToUse[itemTypes.potion].level)));\n    if (hpToHeal > hpDifferential) {\n      hpToHeal = hpDifferential;\n    }\n    this.hp = this.hp + hpToHeal;\n    const healJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name} </span>  used {potionToUse.name}. <span className={filterClasses.name}>{this.name} </span> healed <span className={filterClasses.value}>{hpToHeal}</span> hp.\n      </div>);\n    this.addCombatLog(healJSX);\n    this.inventory = this.inventory.filter(item => item.id !== potionToUse.id);\n    items.destroyItem(potionToUse.id);\n    potionToUse = null;\n  }\n\n  Adventurer.prototype.checkTrapDecision = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let decisionFactor = (percentLost * 3) + (this.dungeonBehavior.check_for_traps / 1000);\n    const checkTraps = decisionFactor > Math.random();\n    return checkTraps;\n  }\n\n  Adventurer.prototype.checkTreasureDecision = function() {\n    const decisionFactor = (this.dungeonBehavior.search_for_treasure / 1000);\n    const checkTreasure = decisionFactor > Math.random();\n    return checkTreasure;\n  }\n\n  Adventurer.prototype.checkSetTrapDecision = function() {\n    const setTrap = setTrapBehavior[this.adventurerClass.name];\n    const decisionFactor = (setTrap / 1000) + (this.dungeonBehavior.prefer_weaker_monster / 4000);\n    const doSetTrap = decisionFactor > Math.random();\n    return doSetTrap;\n  }\n\n  Adventurer.prototype.checkAdvanceDecision = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    const inventoryCount = this.inventory.length;\n    const inventoryPercentEmpty = maxInventory - (inventoryCount / maxInventory);\n    const fillInventoryDesire = ((this.dungeonBehavior.fill_inventory) * inventoryPercentEmpty) / 1000;\n    const decisionFactor = (this.dungeonBehavior.advance_tile / 1000) - (percentLost * 2) - (this.currentTotalDungeonTurns / 600) + (fillInventoryDesire * 3);\n    const advanceDecision = decisionFactor > Math.random();\n    return advanceDecision;\n  }\n\n  Adventurer.prototype.checkReturnToTown = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let turnsInfluence = 1;\n    let turnsFactor;\n    if (this.currentTotalDungeonTurns < 15) {\n      turnsInfluence = -1;\n      turnsFactor = (15 - (turnsInfluence * this.currentTotalDungeonTurns)) / 15; \n    } else {\n      turnsFactor = (turnsInfluence * this.currentTotalDungeonTurns) / 400;\n    }\n    const inventoryCount = this.inventory.length;\n    const inventoryPercentEmpty = maxInventory - (inventoryCount / maxInventory);\n    const fillInventoryDesire = ((this.dungeonBehavior.fill_inventory) * inventoryPercentEmpty) / 1000;\n    const decisionFactor = (this.dungeonBehavior.return_to_town / 1000) - (fillInventoryDesire * 5) + (percentLost * 2) + turnsFactor;\n    const returnDecision = decisionFactor > Math.random();\n    return returnDecision; \n  }\n\n  Adventurer.prototype.considerTreasure = function(item) {\n    console.log(item);\n    if (this.inventory.length < maxInventory) {\n      this.inventory.push(item);\n      return true;\n    }\n    // insert logic for weighing item values if inventory is full\n  }\n\n  Adventurer.prototype.encounterTrap = function(dungeonLevel) {\n    const filterClasses = tagProcessor.getFilterClasses();\n    const trapDamage = 3 * (Math.pow(1.25, (dungeonLevel - 1)));\n    const trapFactor = (this.adventurerClass.traps + this.adventurerClass.agility + this.cunning) / ((this.level * 10) * (Math.pow(1.25, (dungeonLevel - 1))));\n    let computedDamage = Math.floor(trapDamage * (1 / trapFactor));\n    const avoidTrapChance = Math.random() * trapFactor;\n    if (avoidTrapChance > Math.random() * 10) {\n      const trapJSX = (\n        <div className=\"combatLogEntry\">\n          <span className={filterClasses.name}>{this.name} </span> avoided a trap.\n        </div>);\n      this.addCombatLog(trapJSX);\n      return false;\n    }\n    console.log(`trapDamage: ${computedDamage}`);\n    if (computedDamage > this.hp) {\n      computedDamage = this.hp;\n    }\n    this.hp -= computedDamage;\n    const trapJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name}</span> took <span className={filterClasses.value}>{computedDamage}</span> damage from a trap!\n      </div>);\n    this.addCombatLog(trapJSX);\n  }\n\n  Adventurer.prototype.logEncounterStart = function(monsterName) {\n    const filterClasses = tagProcessor.getFilterClasses();\n    let vowelAdj = '';\n    switch(monsterName.charAt(0).toLowerCase()) {\n      case 'a': case 'e': case 'i': case 'o': case 'u':\n        vowelAdj = 'n';\n        break;\n      default:\n        vowelAdj = '';\n    }\n    const encounterJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name}</span> encountered a{vowelAdj} <span className={filterClasses.monsterName}>{monsterName}</span>!\n      </div>);\n    this.addCombatLog(encounterJSX);\n  }\n\n  Adventurer.prototype.logTrap = function(payload) {\n    const {\n      trapDamage,\n      monsterName\n    } = payload;\n    const filterClasses = tagProcessor.getFilterClasses();\n    const trapJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name}</span>'s' trap hit <span className={filterClasses.monsterName}>{monsterName}</span> for <span className={filterClasses.value}>{trapDamage}</span> damage.\n      </div>);\n    this.addCombatLog(trapJSX);\n  }\n\n  Adventurer.prototype.unsetTrap = function() {\n    this.action = {\n      currentAction: null,\n      turns: 0\n    };\n  }\n\n  Adventurer.prototype.setWeaknessChecked = function(value) {\n    this.weaknessChecked = value;\n  }\n\n  Adventurer.prototype.getInitiativeRoll = function() {\n    const initiativeFactor = ((this.adventurerClass.tactics * .7) / 10) + ((this.adventurerClass.agility * .3) / 10);\n    return Math.random() * initiativeFactor;\n  }\n\n  Adventurer.prototype.takeBattleDamage = function(payload) {\n    const filterClasses = tagProcessor.getFilterClasses();\n    const {\n      monsterName,\n      damage\n    } = payload;\n    let computedDamage = Number.parseInt(damage);\n    if (computedDamage > this.hp) {\n      computedDamage = this.hp\n    }\n    if (computedDamage) {\n      this.hp -= computedDamage;\n    }\n    \n\n    let battleJSX;\n    if (computedDamage > 0) {\n      battleJSX = (\n        <div className=\"combatLogEntry\">\n          <span className={filterClasses.monsterName}>{monsterName}</span> hit <span className={filterClasses.name}>{this.name}</span> for <span className={filterClasses.value}>{computedDamage}</span> damage. \n        </div>);\n    } else {\n      battleJSX = (\n        <div className=\"combatLogEntry\">\n          <span className={filterClasses.monsterName}>{monsterName}</span> attempted to hit <span className={filterClasses.name}>{this.name}</span>, but did no damage. \n        </div>)\n    }\n    \n    this.addCombatLog(battleJSX);\n  }\n\n  Adventurer.prototype.logDefend = function() {\n    const filterClasses = tagProcessor.getFilterClasses();\n    let defendJSX;\n    defendJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name}</span> assumed a defensive posture. \n      </div>);\n    this.addCombatLog(defendJSX);\n  }\n\n  Adventurer.prototype.logFlee = function() {\n    const filterClasses = tagProcessor.getFilterClasses();\n    let fleeJSX;\n    fleeJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name}</span> fled from battle! \n      </div>);\n    this.addCombatLog(fleeJSX);\n  }\n\n  Adventurer.prototype.logWeaknessChecked = function(payload) {\n    const filterClasses = tagProcessor.getFilterClasses();\n    const {\n      monsterName\n    } = payload;\n\n    let weaknessJSX;\n    weaknessJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name}</span> checked <span className={filterClasses.monsterName}>{monsterName}</span> for weaknesses. \n      </div>);\n  \n    \n    this.addCombatLog(weaknessJSX);\n  }\n\n  Adventurer.prototype.logVictory = function(payload) {\n    const filterClasses = tagProcessor.getFilterClasses();\n    const {\n      monsterName\n    } = payload;\n\n    let victoryJSX;\n    victoryJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name}</span> defeated <span className={filterClasses.monsterName}>{monsterName}</span>! \n      </div>);\n  \n    \n    this.addCombatLog(victoryJSX);\n  }\n\n  Adventurer.prototype.logHitMonster = function(payload) {\n    const filterClasses = tagProcessor.getFilterClasses();\n    const {\n      monsterName,\n      damage\n    } = payload;\n\n    let battleJSX;\n    if (damage > 0) {\n      battleJSX = (\n        <div className=\"combatLogEntry\">\n          <span className={filterClasses.name}>{this.name}</span> hit <span className={filterClasses.monsterName}>{monsterName}</span> for <span className={filterClasses.value}>{damage}</span> damage. \n        </div>);\n    } else {\n      battleJSX = (\n        <div className=\"combatLogEntry\">\n          <span className={filterClasses.name}>{this.name}</span> attempted to hit <span className={filterClasses.monsterName}>{monsterName}</span>, but did no damage.\n        </div>)\n    }\n    \n    this.addCombatLog(battleJSX);\n  }\n\n  Adventurer.prototype.getBattleDecision = function(monster) {\n    let thisDecision = new BattleDecision(this.id);\n    thisDecision.needHealing = this.checkHealthChoice();\n    thisDecision.hasPotion = this.checkHasPotion();\n    thisDecision.usePotion = this.checkPotionUse();\n    thisDecision.defend = this.checkDefend();\n    thisDecision.flee = this.checkFlee(monster);\n    thisDecision.checkWeakness = this.checkWeakness();\n    const resultDecision = thisDecision.weighDecisionTournament();\n    return resultDecision;\n  }\n\n  // Adventurer.prototype.checkFlee = function() {\n\n  // }\n\n  const TurnController = function() {\n    this.currentTurns = [];\n    this.currentId = 0;\n  }\n\n  TurnController.prototype.addTurn = function(turn) {\n    turn.id = this.currentId;\n    this.currentTurns.push(turn);\n    this.currentId++;\n  }\n\n  TurnController.prototype.clearTurn = function(id) {\n    let deletedTurn = this.currentTurns.find(foundTurn => foundTurn.id === id);\n    this.currentTurns = this.currentTurns.filter(clearTurn => clearTurn.id!== id);\n    if (deletedTurn) {\n      deletedTurn = null;\n    }\n    if (this.currentTurns.length === 0) {\n      this.currentId = 0;\n      dispatchUpdate();\n    }\n  }\n\n  TurnController.prototype.clearAdventurerTurns = function(payload) {\n    const {\n      adventurerId,\n      day\n    } = payload;\n    let deletedTurns = this.currentTurns.find(foundTurn => foundTurn.adventurerId === adventurerId  && this.foundTurn.day === day);\n    this.currentTurns = this.currentTurns.filter(clearTurn => clearTurn.adventurerId !== adventurerId && clearTurn.day !== day);\n    deletedTurns.forEach(turn => {\n      turn = null\n    });\n  }\n\n  TurnController.prototype.startTurns = function() {\n    if (this.currentTurns.length === 0) return false;\n    const firstTurns = this.currentTurns.filter(turn => turn.turnNumber === 1);\n    firstTurns.forEach(turn => {\n      turn.runTurn();\n    });\n  }\n\n  TurnController.prototype.startTurn = function(payload) {\n    const {\n      adventurerId,\n      day,\n      turn\n    } = payload;\n    const nextTurn = this.currentTurns.find(foundTurn => foundTurn.adventurerId === adventurerId && foundTurn.day === day && foundTurn.turnNumber === turn);\n    if (nextTurn) {\n      nextTurn.runTurn();\n    } \n  }\n\n\n  let turnController;\n\n  const initializeTurnController = function() {\n    turnController = new TurnController();\n  }\n\n  const Turn = function(payload) {\n    const {\n      adventurer,\n      day,\n      turnNumber,\n      nextTurn\n    } = payload;\n    this.adventurer = adventurer;\n    this.adventurerId = adventurer.id;\n    this.day = day;\n    this.turnNumber = turnNumber;\n    this.nextTurn = nextTurn;\n  }\n\n  Turn.prototype.runTurn = async function() {\n    // console.log(`Adventurer: ${this.adventurer.name}, currentTurn: ${this.turnNumber}, nextTurn: ${this.nextTurn}`);\n    const filterClasses = tagProcessor.getFilterClasses();\n    new Promise((resolve, reject) => {\n      const dungeonAdventurer = this.adventurer;\n      let thisDecision = new Decision(dungeonAdventurer.id);\n      if (dungeonAdventurer.hp < dungeonAdventurer.maxHp) {\n        thisDecision.needHealing = dungeonAdventurer.checkHealthChoice();\n        thisDecision.hasPotion = dungeonAdventurer.checkHasPotion();\n        if (thisDecision.needHealing) {\n          if (thisDecision.hasPotion) {\n            thisDecision.usePotion = dungeonAdventurer.checkPotionUse();\n          }\n        }\n      }\n      if (!dungeonAdventurer.action.currentAction) {\n        thisDecision.checkForTraps = dungeonAdventurer.checkTrapDecision();\n        thisDecision.checkForTreasure = dungeonAdventurer.checkTreasureDecision();\n        thisDecision.setTrap = dungeonAdventurer.checkSetTrapDecision();\n      }\n      thisDecision.advance = dungeonAdventurer.checkAdvanceDecision();\n      thisDecision.returnToTown = dungeonAdventurer.checkReturnToTown();\n\n      // get decision from decision object\n      let resultDecision;\n      resultDecision = thisDecision.weighDecisionLogical();\n      if (!resultDecision) {\n        resultDecision = thisDecision.weighDecisionTournament();\n      }\n      console.log(resultDecision);\n      if (resultDecision === decisions.usePotion) {\n        dungeonAdventurer.usePotion();\n      }\n      if (resultDecision === decisions.checkForTraps || \n        resultDecision === decisions.checkForTreasure || \n        resultDecision === decisions.setTrap) {\n          dungeonAdventurer.action.currentAction = resultDecision;\n          const turns = dungeonAdventurer.speed * defaultActionDays;\n          dungeonAdventurer.action.turns = turns;\n          let actionMsg = '';\n          if (resultDecision === decisions.checkForTraps) {\n            actionMsg = 'is checking for traps';\n          } else if (resultDecision === decisions.checkForTreasure) {\n            actionMsg = 'is checking for treasure';\n          } else if (resultDecision === decisions.setTrap) {\n            actionMsg = 'sets a trap';\n          }\n          const actionJSX = (\n            <div className=\"combatLogEntry\">\n              <span className={filterClasses.name}>{dungeonAdventurer.name} </span> {actionMsg}.\n            </div>);\n          dungeonAdventurer.addCombatLog(actionJSX);\n      }\n      if (resultDecision === decisions.returnToTown){\n        dungeon.releaseAdventurer(dungeonAdventurer.id);\n        dungeonAdventurer.inDungeon = false;\n        const clearPackage = { adventurerId: this.adventurerId, day: this.day };\n        turnController.clearAdventurerTurns(clearPackage);\n        resolve();\n      }\n      new Promise((resolveTurn, rejectTurn) => {\n        if (resultDecision === decisions.advance) {\n          dungeon.executeTurn(dungeonAdventurer)\n            .then(() => {\n              resolveTurn();\n            });\n        } else {\n          resolveTurn();\n        }\n        \n      }).then(() => {\n        this.adventurer.currentTotalDungeonTurns++;\n        resolve();\n      })\n    }).then(() => {\n      if (this.nextTurn) {\n        const payload = { turn: this.nextTurn, adventurerId: this.adventurerId, day: this.day };\n        turnController.startTurn(payload);\n      }\n      turnController.clearTurn(this.id);\n    })\n  }\n\n  const Decision = function(adventurerId) {\n    this.adventurerId = adventurerId;\n    this.needHealing = false;\n    this.hasPotion = false;\n    this.usePotion = false;\n    this.checkForTraps = false;\n    this.checkForTreasure = false;\n    this.setTrap = false;\n    this.advance = false;\n    this.returnToTown = false;\n  }\n\n  Decision.prototype.weighDecisionLogical = function() {\n    if (this.needHealing && this.hasPotion && this.usePotion && !this.advance) {\n      return decisions.usePotion;\n    }\n    if (!this.usePotion && this.advance && !this.checkForTraps && !this.checkTreasure) {\n      return decisions.advance;\n    }\n    if (this.returnToTown && !this.usePotion && !this.hasPotion && !this.advance) {\n      return decisions.returnToTown;\n    }\n    return false;\n  }\n\n  Decision.prototype.weighDecisionTournament = function() {\n    const concernedAdventurer = adventurers.find(adventurer => adventurer.id === this.adventurerId);\n    let remainingOptions = [];\n    // populate hash table with weights for relevant behaviors\n    const weights = {\n      usePotion: concernedAdventurer.dungeonBehavior.use_potion,\n      checkForTraps: concernedAdventurer.dungeonBehavior.check_for_traps,\n      checkForTreasure: concernedAdventurer.dungeonBehavior.search_for_treasure,\n      setTrap: setTrapBehavior[concernedAdventurer.adventurerClass.name],\n      advance: concernedAdventurer.dungeonBehavior.advance_tile,\n      returnToTown: concernedAdventurer.dungeonBehavior.return_to_town\n    }\n    // add decisions marked as valid to array for use in\n    // creating elimination tournament\n    if (this.usePotion && this.hasPotion) {\n      remainingOptions.push(decisions.usePotion);\n    }\n    if (this.checkForTraps) {\n      remainingOptions.push(decisions.checkForTraps);\n    }\n    if (this.checkForTreasure) {\n      remainingOptions.push(decisions.checkForTreasure);\n    }\n    if (this.setTrap) {\n      remainingOptions.push(decisions.setTrap);\n    }\n    if (this.advance) {\n      remainingOptions.push(decisions.advance);\n    }\n    if (this.returnToTown) {\n      remainingOptions.push(decisions.returnToTown);\n    }\n    if (remainingOptions.length === 1) {\n      return remainingOptions[0];\n    }\n    // determine number of tournament rounds for iteration\n    const tournamentRounds = Math.ceil(Math.log2(remainingOptions.length));\n    for (let round = 0; round < tournamentRounds; round++) {\n      // create pairings from outside ends inward\n      const optionsLength = remainingOptions.length;\n      let pairings = [];\n      const pairCount = Math.floor(optionsLength / 2);\n      for (let offest = 0; offest < pairCount; offest++) {\n        const pair = [remainingOptions[offest], remainingOptions[optionsLength - (offest + 1)]];\n        pairings.push(pair);\n      }\n      let eliminated = [];\n      // iterate over pairings and produce weighted outcomes to\n      // eliminate one decision from each pairing\n      pairings.forEach(pair => {\n        const result1 = Math.random() * weights[pair[0]];\n        const result2 = Math.random() * weights[pair[1]];\n        const randomChoice = Math.random();\n        \n        if (result1 > result2 || (result1 === result2 && randomChoice < .5)) {\n          eliminated.push(pair[1])\n        } else {\n          eliminated.push(pair[0]);\n        }\n      });\n      // remove eliminated options from array containing tournament\n      // entrants\n      for (let elIndex = 0; elIndex < eliminated.length; elIndex++) {\n        const eliminate = eliminated[elIndex];\n        remainingOptions = remainingOptions.filter(option => option !== eliminate);\n      }\n    }\n    return remainingOptions[0];\n  }\n\n  const BattleDecision = function(adventurerId) {\n    this.adventurerId = adventurerId;\n    this.needHealing = false;\n    this.hasPotion = false;\n    this.usePotion = false;\n    this.defend = false;\n    this.flee = false;\n    this.checkWeakness = false;\n  }\n\n  BattleDecision.prototype.weighDecisionTournament = function() {\n    const concernedAdventurer = adventurers.find(adventurer => adventurer.id === this.adventurerId);\n    let remainingOptions = [];\n    // populate hash table with weights for relevant behaviors\n    const weights = {\n      usePotion: concernedAdventurer.dungeonBehavior.use_potion,\n      defend: concernedAdventurer.dungeonBehavior.defend,\n      flee: concernedAdventurer.dungeonBehavior.flee_encounter,\n      checkWeakness: concernedAdventurer.dungeonBehavior.check_monster_weakness,\n      attack: concernedAdventurer.dungeonBehavior.attack\n    }\n    // add decisions marked as valid to array for use in\n    // creating elimination tournament\n    if (this.usePotion && this.hasPotion) {\n      remainingOptions.push(battleDecisions.usePotion);\n    }\n    if (this.defend) {\n      remainingOptions.push(battleDecisions.defend);\n    }\n    if (this.flee) {\n      remainingOptions.push(battleDecisions.flee);\n    }\n    if (this.checkWeakness) {\n      remainingOptions.push(battleDecisions.checkWeakness);\n    }\n    remainingOptions.push(battleDecisions.attack);\n    if (remainingOptions.length === 1) {\n      return remainingOptions[0];\n    }\n    // determine number of tournament rounds for iteration\n    const tournamentRounds = Math.ceil(Math.log2(remainingOptions.length));\n    for (let round = 0; round < tournamentRounds; round++) {\n      // create pairings from outside ends inward\n      const optionsLength = remainingOptions.length;\n      let pairings = [];\n      const pairCount = Math.floor(optionsLength / 2);\n      for (let offest = 0; offest < pairCount; offest++) {\n        const pair = [remainingOptions[offest], remainingOptions[optionsLength - (offest + 1)]];\n        pairings.push(pair);\n      }\n      let eliminated = [];\n      // iterate over pairings and produce weighted outcomes to\n      // eliminate one decision from each pairing\n      pairings.forEach(pair => {\n        const result1 = Math.random() * weights[pair[0]];\n        const result2 = Math.random() * weights[pair[1]];\n        const randomChoice = Math.random();\n        \n        if (result1 > result2 || (result1 === result2 && randomChoice < .5)) {\n          eliminated.push(pair[1])\n        } else {\n          eliminated.push(pair[0]);\n        }\n      });\n      // remove eliminated options from array containing tournament\n      // entrants\n      for (let elIndex = 0; elIndex < eliminated.length; elIndex++) {\n        const eliminate = eliminated[elIndex];\n        remainingOptions = remainingOptions.filter(option => option !== eliminate);\n      }\n    }\n    return remainingOptions[0];\n  }\n\n  const dispatchAdventurers = function(newAdventurers) {\n    const payload = {\n      type: SET_ADVENTURERS,\n      payload: newAdventurers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchUpdate = function() {\n    const payload = {\n      type: SET_DETAIL_UPDATE,\n      value: true\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchAdventurers = async function() {\n    let initAdventurers = fetcher.fetchRoute('adventurers-full');\n    return initAdventurers;\n  }\n\n  const getAdventurers = function*() {\n    yield fetchAdventurers();\n  }\n\n  const doInn = function() {\n    const availableAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    availableAdventurers.forEach(townAdventurer => {\n      let totalFactor = townAdventurer.townBehavior.use_tavern / 1000;\n      if (townAdventurer.informed) {\n        totalFactor = 0;\n      }\n      const willDrink = totalFactor >= Math.random();\n\n      if (willDrink) {\n        const totalCost = 10 * townAdventurer.level;\n        if (townAdventurer.checkAccount(totalCost)) {\n          const filterClasses = tagProcessor.getFilterClasses();\n          const innJSX = (\n            <div className=\"combatLogEntry\">\n              <span className={filterClasses.name}>{townAdventurer.name} </span>  stayed at the inn. <span className={filterClasses.name}>{townAdventurer.name} </span> is now <span className={filterClasses.status}>informed</span>.\n            </div>);\n          townAdventurer.chargeAccount(totalCost);\n          townAdventurer.informed = true;\n          const combatLogMessage = innJSX;\n          townAdventurer.addCombatLog(combatLogMessage);\n        }\n      }\n    })\n  }\n\n  const doShopping = function() {\n    const inventory = storeInventory.getStoreInventory();\n    let inventoryItems = [];\n    inventory.forEach(item => {\n      let composedItem = item;\n      composedItem.item = items.getItem(item.itemId);\n      inventoryItems.push(composedItem);\n    });\n    const shoppingAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    let adventurerTurn = 0;\n    const adventurerCount = shoppingAdventurers.length;\n    // loop through each inventory item\n    inventoryItems.forEach(item => {\n      // create an order based on last adventurer to take an\n      // item and proceed suequentially to include all\n      // adventurers\n      let adventurerTries = [];\n      for (let i = 0; i < adventurerCount; i++) {\n        let thisIndex = adventurerTurn + i;\n        if (thisIndex >= adventurerCount) {\n          thisIndex -= adventurerCount;\n        }\n        adventurerTries.push(thisIndex);\n      }\n      let taken = false;\n\n      // check with each adventurer if they want the item\n      adventurerTries.forEach(adventurerIndex => {\n        // determine if decision factor is buy or upgrade\n        let decisionFactor = '';\n        const thisAdventurer = shoppingAdventurers[adventurerIndex];\n\n        if (thisAdventurer.equipment[item.item.type] && item.item.type !== itemTypes.potion) {\n          decisionFactor += 'upgrade';\n        } else {\n          decisionFactor += 'buy';\n        }\n        decisionFactor += '_' + item.item.type;\n        const desireWeight = thisAdventurer.townBehavior[decisionFactor];\n        let totalFactor = (desireWeight / 1000) - (item.markup / 1600);\n        if (totalFactor < 0) {\n          totalFactor = 0;\n        }\n        // lessen desire to buy item if adventurer currently has some of it\n        const itemProto = item.item.prototypeId;\n        const currentHoldings = thisAdventurer.getCurrentItemCount(itemProto);\n        if (item.item.type === itemTypes.potion) {\n          totalFactor -= (currentHoldings * .10);\n        } else {\n          totalFactor -= (currentHoldings * .30);\n        }\n        // determine if adventurer will buy item\n        let willBuy = totalFactor >= Math.random();\n        if (thisAdventurer.equipment[item.item.type]) {\n          const currentGear = thisAdventurer.equipment[item.item.type];\n          if (item.item.type === itemTypes.weapon) {\n            const currentDamage = currentGear[itemTypes.weapon].damage;\n            const itemDamage = currentGear[itemTypes.weapon].damage;\n            if (currentDamage >= itemDamage) {\n              willBuy = false;\n            }\n          } else if (item.item.type === itemTypes.armor) {\n            const currentArmor = currentGear[itemTypes.armor].armor;\n            const itemArmor = item.item[itemTypes.armor].armor;\n            if (currentArmor >= itemArmor) {\n              willBuy = false;\n            }\n          }\n        }\n        // cancel buy if adventurer inventory is full\n        if (thisAdventurer.inventory.length >= maxInventory) {\n          willBuy = false;\n        }\n        \n        if (willBuy && !taken) {\n          const totalPrice = Math.floor(item.item.value * (1 + (item.markup / 1000)));\n          if (thisAdventurer.checkAccount(totalPrice)) {\n            thisAdventurer.chargeAccount(totalPrice);\n            playerStore.creditGold(totalPrice);\n            playerStore.updateGold();\n            const baseItem = items.getItem(item.itemId);\n            storeInventory.removeItem(item.itemId);\n            storeInventory.updateStoreInventory();\n            thisAdventurer.inventory.push(baseItem);\n            if (baseItem.type !== itemTypes.potion) {\n              if (thisAdventurer.equipment[baseItem.type]) {\n                thisAdventurer.unequipItem(baseItem.type);\n              }\n              thisAdventurer.equipItem(baseItem);\n            }\n            taken = true;\n            adventurerTurn = adventurerIndex + 1;\n            if (adventurerTurn > adventurerCount) {\n              adventurerTurn = 0;\n            }\n          }\n        }\n      })\n    })\n  }\n\n  const dungeonEntry = function() {\n    const dungeonGoingAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    dungeonGoingAdventurers.forEach(dungeonAdventurer => {\n      let totalFactor = (dungeonAdventurer.townBehavior.enter_dungeon / 1000)\n      let willEnter = totalFactor >= Math.random();\n\n      if (willEnter) {\n        const filterClasses = tagProcessor.getFilterClasses();\n        const dungeonJSX = (\n          <div className=\"combatLogEntry\">\n            <span className={filterClasses.name}>{dungeonAdventurer.name} </span> entered the dungeon.\n          </div>\n        );\n        dungeonAdventurer.inDungeon = true;\n        dungeonAdventurer.currentTotalDungeonTurns = 0;\n        const combatLogMessage = dungeonJSX;\n        dungeonAdventurer.addCombatLog(combatLogMessage);\n        dungeon.receiveAdventurer(dungeonAdventurer.id);\n      }\n    });\n  }\n\n  const dungeonTurns = function() {\n    const dungeonAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === true);\n    new Promise((resolve, reject) => {\n      dungeonAdventurers.forEach((dungeonAdventurer, dunAdN) => {\n        let totalTurns = dungeonAdventurer.speed;\n        for (let turnNumber = 1; turnNumber <= totalTurns; turnNumber++) {\n          let nextTurn = 0;\n          if (turnNumber < totalTurns) {\n            nextTurn = turnNumber + 1;\n          } else {\n            nextTurn = null;\n          }\n          const turnPayload = {\n            adventurer: dungeonAdventurer,\n            day: days.getDay(),\n            turnNumber: turnNumber,\n            nextTurn: nextTurn\n          }\n          const newTurn = new Turn(turnPayload);\n          turnController.addTurn(newTurn);\n        }\n        if (dunAdN === dungeonAdventurers.length -1) {\n          resolve();\n        }\n      });\n    }).then(() => {\n      turnController.startTurns();\n    });\n  }\n\n  return {\n    initializeAdventurers: async function(maxAdventurers) {\n      const genGetAdventurers = getAdventurers();\n      genGetAdventurers.next().value\n        .then(initAdventurers => {\n          if (initAdventurers) {\n            let drainAdventurers = initAdventurers;\n            while (adventurers.length < maxAdventurers && drainAdventurers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainAdventurers.length);\n              let newAdventurer = drainAdventurers.splice(pushIndex, 1);\n              newAdventurer = newAdventurer[0];\n              const adventurerPayload = {\n                name: newAdventurer.name,\n                strength: newAdventurer.strength, \n                speed: newAdventurer.speed, \n                cunning: newAdventurer.cunning, \n                intelligence: newAdventurer.intelligence,\n                constitution: newAdventurer.constitution,\n                dungeonBehavior: newAdventurer.dungeon_behavior,\n                townBehavior: newAdventurer.town_behavior,\n                adventurerClass: newAdventurer.adventurer_class\n              };\n              let thisAdventurer = new Adventurer(adventurerPayload);\n              adventurers.push(thisAdventurer);\n            }\n            initializeTurnController();\n            dispatchAdventurers(adventurers);\n            return adventurers;\n          }\n        })\n    },\n    updateAdventurers: function() {\n      dispatchAdventurers(adventurers);\n    },\n    takeAdventurerTurn: function() {\n      doInn();\n      doShopping();\n      const loadNextLevel = !dungeon.checkLevelReadiness();\n      if (loadNextLevel) {\n        const loadLevel = dungeon.loadNextLevel();\n        loadLevel.next().value.then(() => {\n          dungeonEntry();\n          dungeonTurns()\n          dispatchAdventurers(adventurers);\n        })\n      } else {\n        dungeonEntry();\n        dungeonTurns()\n        dispatchAdventurers(adventurers);\n      }\n    },\n    getActions: function() {\n      return actions;\n    },\n    getBattleDecisions: function() {\n      return battleDecisions;\n    }\n  }\n}());\n\nexport default adventurers;","// constants\nimport gameConstants from './gameConstants';\n\n// game module imports\nimport days from './days';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\nimport adventurers from './adventurers';\nimport gameStore from './store';\nimport dungeon from './dungeon';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_DETAIL_UPDATE } from '../actions/types';\n\n\nconst main = (function() {\n  \n  let currentMaxLevel = 1;\n  // let townFame = 0;\n\n  const dispatchUpdate = function() {\n    const payload = {\n      type: SET_DETAIL_UPDATE,\n      value: true\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      gameStore.setName(payload.name);\n\n      const startingGold = gameStore.getStartingGold();\n      gameStore.setGold(startingGold);\n\n      supplies.setSupplyLevel(currentMaxLevel);\n      supplies.fillSupplyPool();\n      suppliers.initializeSuppliers(gameConstants.maxSuppliers);\n\n      adventurers.initializeAdventurers(gameConstants.startingAdventurers);\n      dungeon.initializeLevels();\n    },\n\n    getGameLevel: function() {\n      return currentMaxLevel;\n    },\n\n    performTurn: function() {\n      adventurers.takeAdventurerTurn();\n      // need logic for triggering supply pool fetch if\n      // max level has changed\n      supplies.fillSupplies();\n      suppliers.takeSupplierIncomeTurns();\n      suppliers.takeSupplierTurn();\n      dispatchUpdate();\n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\nimport main from '../../game_modules/main';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    main.performTurn();\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days primary-dark\">\n        <div className=\"DayTitle\">Day: {this.props.day}</div>\n        <div className=\"nextDay button secondary\" onClick={this.handleNextDay}\n        >Finish Day</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay()),\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","const pcMenus = {\n  adventurers: 'adventurers',\n  adventurer: 'adventurer',\n  dungeon: 'dungeon',\n  adventurersPartial: 'adventurersPartial'\n}\n\nexport default pcMenus;","// redux imports\nimport { store } from '../index';\nimport { SET_PC_DETAIL } from '../actions/types';\n\nimport pcMenus from './pcMenus';\n\nconst pcDetailMenus = (function(){\n  let currentMenu = '';\n  let currentIndex = 0;\n\n  const menus = [pcMenus.adventurers, pcMenus.dungeon];\n\n  let menuMap = {};\n\n  const mapMenus = function() {\n    menus.forEach((menu, menuN) => {\n      menuMap[menu] = menuN;\n    })\n  }\n\n  const dispatchPCMenu = function() {\n    const payload = {\n      type: SET_PC_DETAIL,\n      detail: currentMenu\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentMenu = menus[0];\n      currentIndex = 0;\n      mapMenus();\n    },\n\n    getCurrentMenu: function() {\n      return currentMenu;\n    },\n\n    nextMenu: function() {\n      currentIndex++;\n      if (currentIndex >= menus.length) {\n        currentIndex = 0;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    previousMenu: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = menus.length - 1;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    getMenus: function() {\n      return menus;\n    },\n\n    setmenu: function(newMenu) {\n      const menuIndex = menuMap[newMenu];\n      if (menuIndex === null) {\n        return false\n      }\n      currentIndex = menuIndex;\n      currentMenu = menus[menuIndex];\n      return true;\n    },\n\n    updateMenu: function() {\n      dispatchPCMenu();\n    }\n  }\n}());\n\nexport default pcDetailMenus;","import React from 'react';\nimport './DetailPCMenu.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport pcDetailMenus from '../../Utilities/pcDetailMenus';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass DetailPCMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleMenuChange = this.handleMenuChange.bind(this);\n    this.getPCDropdown = this.getPCDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    pcDetailMenus.init();\n  }\n\n  handlePrevious() {\n    pcDetailMenus.previousMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleNext() {\n    pcDetailMenus.nextMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setPcDropdown(!this.props.pcDropdown);\n  }\n\n  handleMenuChange(newMenu) {\n    pcDetailMenus.setmenu(newMenu);\n    pcDetailMenus.updateMenu();\n    this.props.setPcDropdown(false);\n  }\n\n  getPCDropdown() {\n    const allMenus = pcDetailMenus.getMenus();\n    if (!this.props.pcDropdown) {\n      return false;\n    }\n    return (\n      <div className=\"PCDropdown primary-dark\">\n        {allMenus.map(menu => {\n          return (\n            <div className=\"PCDropdownOption primary-medium\"\n              onClick={() => this.handleMenuChange(menu)}>\n                {menu}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  render() {\n    let menuName = this.props.pcDetailMenu;\n    if (menuName === pcMenus.adventurersPartial) {\n      menuName = pcMenus.adventurers;\n    }\n    return (\n      <div className=\"PCDetailMenu primary-saturated\">\n        <span className=\"previousMenu screenArrowPC\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"PCMenuTitle\"\n          onClick={this.handleDropdown}>{menuName}</span>\n        <span className=\"nextMenu screenArrowPC\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getPCDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    pcDropdown: state.pcMenu.dropdown,\n    dungeonLevelExplored: state.dungeon.exploredLevel\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPcDetailMenu: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail }),\n    setPcDropdown: (value) => dispatch({ type: SET_PC_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPCMenu);","import { store } from '../index';\nimport { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst screenInfo = (function(){\n  let isPc = true;\n  let isMobile = false;\n  let isFullscreen = true;\n\n  let width = 0;\n\n  const dispatchFullscreen = function() {\n    const payload = {\n      type: SET_IS_FULLSCREEN,\n      value: isFullscreen\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsPc = function() {\n    const payload = {\n      type: SET_IS_PC,\n      value: isPc\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsMobile = function() {\n    const payload = {\n      type: SET_IS_MOBILE,\n      value: isMobile\n    }\n    store.dispatch(payload);\n  }\n\n  const detectPc = function() {\n    const notPc = window.orientation > -1;\n    return !notPc;\n    \n  }\n\n  const setFullScreen = function() {\n    \n    let App = document.querySelector('.App');\n    if (App.requestFullscreen) {\n      App.requestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.msRequestFullscreen) {\n      App.msRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.mozRequestFullscreen) {\n      App.mozRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.webkitRequestFullscreen) {\n      App.webkitRequestFullscreen();\n      isFullscreen = true;\n    }\n    // document.fullscreen = true;\n    // document.fullscreenElement = App;\n  }\n\n  const exitFullScreen = function() {\n    isFullscreen = false;\n    document.exitFullscreen();\n  }\n\n  const setScreenInfo = function() {\n    const app = document.querySelector('.App');\n    const docDimensions = app.getBoundingClientRect();\n    width = docDimensions.width;\n\n    if (width < 768) {\n      isMobile = true\n    } \n  }\n\n  return {\n    init: function() {\n      isPc = detectPc();\n      setScreenInfo();\n      dispatchIsPc();\n      dispatchIsMobile();\n    },\n    getIsPc: function() {\n      return isPc;\n    },\n    getIsMobile: function() {\n      return isMobile;\n    },\n    goFullScreen: function() {\n      setFullScreen();\n      dispatchFullscreen();\n    },\n    leaveFullScreen: function() {\n      exitFullScreen();\n      dispatchFullscreen();\n    }\n  }\n}());\n\nexport default screenInfo;","import { store } from '../index';\nimport { SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../actions/types';\n\nimport screenInfo from './screenInfo';\n\nconst breadcrumb = (function(){\n  let breadcrumbs = [];\n\n  const Breadcrumb = function(payload) {\n    const { \n      displayPayload,\n      isMobile,\n      scrollPos\n    } = payload;\n    this.displayPayload = displayPayload;\n    this.isMobile = isMobile;\n    this.scrollPos = scrollPos;\n  }\n\n  Breadcrumb.prototype.dispatchDisplay = function() {\n    if (this.isMobile) {\n      store.dispatch({ type: SET_MOBILE_SCREEN, screen: this.displayPayload });\n    } else {\n      store.dispatch({ type: SET_PC_DETAIL, detail: this.displayPayload });\n    }\n  }\n\n  return {\n    popBreadcrumb: function() {\n      if (breadcrumbs.length < 1) return false;\n      const nextCrumb = breadcrumbs.pop();\n      nextCrumb.dispatchDisplay();\n    },\n    addBreadcrumb: function(payload) {\n      let { display, scrollPos } = payload;\n      const isMobile = screenInfo.getIsMobile();\n      const newCrumb = new Breadcrumb({ displayPayload: display, scrollPos: scrollPos, isMobile: isMobile });\n      breadcrumbs.push(newCrumb);\n    }\n  }\n}());\n\nexport default breadcrumb;","// redux imports\nimport { store } from '../index';\nimport { SET_MOBILE_SCREEN } from '../actions/types';\n\nconst mobileScreens = (function(){\n  let currentScreen = '';\n  let currentIndex = 0;\n  const screens = ['store', 'suppliers', 'adventurers', 'dungeon'];\n  // const dependentScreens = ['adventurer'];\n\n  const allScreens = {\n    store: 'store',\n    suppliers: 'suppliers',\n    adventurers: 'adventurers',\n    adventurer: 'adventurer',\n    dungeon: 'dungeon',\n    adventurersPartial: 'adventurersPartial'\n  }\n\n  let screenMap = {};\n\n  const mapScreens = function() {\n    screens.forEach((screen, screenN) => {\n      screenMap[screen] = screenN;\n    });\n  }\n\n  const dispatchMobileScreen = function() {\n    const payload = {\n      type: SET_MOBILE_SCREEN,\n      screen: currentScreen\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentScreen = screens[0];\n      currentIndex = 0;\n      mapScreens();\n    },\n\n    getCurrentScreen: function() {\n      return currentScreen;\n    },\n\n    nextScreen: function() {\n      currentIndex++;\n      if (currentIndex >= screens.length) {\n        currentIndex = 0;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    previousScreen: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = screens.length -1;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    getScreens: function() {\n      return screens;\n    },\n\n    getAllScreens: function() {\n      return allScreens;\n    },\n\n    setScreen: function(newScreen) {\n      const screenIndex = screenMap[newScreen];\n      if (screenIndex === null) {\n        return false;\n      } else {\n        currentIndex = screenIndex;\n        currentScreen = screens[screenIndex];\n        return true;\n      }\n    },\n\n    updateScreen: function() {\n      dispatchMobileScreen();\n    }\n  }\n}());\n\nexport default mobileScreens;","import React from 'react';\nimport './Adventurer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_ID, SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\nimport screenInfo from '../../Utilities/screenInfo';\nimport mobileScreens from '../../Utilities/mobileScreens';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass Adventurer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleZoom = this.handleZoom.bind(this);\n  }\n\n  handleZoom() {\n    if (!this.props.adventurer) return;\n    const partialAdventurers = this.props.partialAdventurers;\n    let breadcrumbName = 'adventurers';\n    if (partialAdventurers) {\n      const matched = partialAdventurers.find(adventurerId => adventurerId === this.props.adventurer.id);\n      if (matched !== undefined) {\n        breadcrumbName = 'adventurersPartial';\n      }\n    }\n    this.props.setDetailId(this.props.adventurer.id);\n    const advDOM = document.querySelector('.adventurers');\n    const scrollY = advDOM.scrollTop;\n    console.log(scrollY);\n    breadcrumb.addBreadcrumb({ display: breadcrumbName, screenPos: scrollY });\n    if (screenInfo.getIsMobile()) {\n      const allScreens = mobileScreens.getAllScreens();\n      this.props.setMobileScreen(allScreens.adventurer);\n    } else {\n      this.props.setPCDetail(pcMenus.adventurer);\n    }\n  }\n\n  render() {\n    if (!this.props.adventurer) return '';\n    const adventurer = this.props.adventurer;\n    const adventurerClass = adventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    const dungeonIndicator = (\n      <div className=\"dungeonIcon\">\n        <p>D</p>\n        <p>U</p>\n        <p>N</p>\n      </div>\n    )\n    return (\n      <div className=\"adventurerDisplay primary\"\n        onClick={this.handleZoom}\n      >\n        <div className={adventurerClassIconColor}>{classIcon}</div>\n        <div className=\"adventurerDetails\">\n          <p className=\"adventurerName\">{adventurer.name}</p>\n          <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          <div className=\"adventurerStatGroupWide\">\n            <p className=\"adventurerStatLabel\">exp</p>\n            <p className=\"adventurerStat\">{adventurer.experience}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">lvl</p>\n            <p className=\"adventurerStat\">{adventurer.level}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{adventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{adventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{adventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{adventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{adventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{adventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{adventurer.constitution}</p>\n          </div>\n        </div>\n        <div className=\"adventurerDungeonIndicator\">\n          {adventurer.inDungeon ? dungeonIndicator : <span className=\"dungeonIcon\"></span>}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    partialAdventurers: state.adventurers.partialAdventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailId: (id) => dispatch({ type: SET_DETAIL_ID, id: id }),\n    setMobileScreen: (screen) => dispatch({ type: SET_MOBILE_SCREEN, screen: screen }),\n    setPCDetail: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Adventurer);","import React from 'react';\nimport './Adventurers.css';\n\n// component imports\nimport Adventurer from '../Adventurer/Adventurer';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Adventurers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAdventurers = this.getAdventurers.bind(this);\n  }\n\n  getAdventurers() {\n    const adventurers = this.props.adventurers;\n    return adventurers.map(adventurer => {\n      return <Adventurer adventurer={adventurer} />\n    });\n  }\n  \n  render() {\n    if (!this.props.adventurers) return '';\n    return (\n      <div className=\"adventurers\">\n        {this.getAdventurers()}\n        <div className=\"spacer-vertical\"></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    adventurerUpdate: state.adventurers.update\n  }\n}\n\nexport default connect(mapStateToProps)(Adventurers);","import React from 'react';\nimport './AdventurerDetail.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\n\nclass AdventurerDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBack = this.handleBack.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.scrollCombatLog();\n  }\n\n  getInventory(adventurer) {\n    const adventurerInventory = adventurer.inventory;\n    if (!adventurerInventory) return 'no inventory';\n    return adventurerInventory.map(item => {\n      let equippedIndicator = '';\n      if (adventurer.equipment[item.type]) {\n        if (adventurer.equipment[item.type].id === item.id) {\n          equippedIndicator += ' (equipped)';\n        }\n      }\n      return (\n        <div className=\"adventurerInventoryItem\">{item.name}{equippedIndicator}</div>\n      )\n    })\n  }\n\n  getCombatLog(adventurer) {\n    if (!adventurer) return 'no combat log';\n    const adventurerCombatLog = adventurer.getCombatLog();\n    if (adventurerCombatLog.length <= 0) {\n      return 'No combat log entries.'\n    }\n  \n    return adventurerCombatLog;\n    \n  }\n\n  scrollCombatLog() {\n    const cLog = document.querySelector('.adventurer-combat-log');\n    if (!cLog) return;\n    cLog.scrollTop = cLog.scrollHeight;\n  }\n\n  handleBack() {\n    const handled = breadcrumb.popBreadcrumb();\n    if (!handled) {\n      console.log('breadcrumb failed!');\n    }\n  }\n  \n  render() {\n    if ((!this.props.detailId && this.props.detailId !== 0) || !this.props.adventurers) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.detailId);\n    const adventurerClass = thisAdventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    \n    return (\n      <div className=\"AdventurerDetail primary\">\n        <div className=\"title-bar\">\n          <div className=\"back-button\"\n            onClick={this.handleBack}>&#8592;</div>\n          <div className=\"adventurer-title\">{thisAdventurer.name}</div>\n        </div>\n        <div className=\"primary-stats-bar\">\n          <div className={adventurerClassIconColor}>{classIcon}</div>\n          <div className=\"primary-cascade\">\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">exp</p>\n              <p className=\"adventurerStat\">{thisAdventurer.experience}</p>\n            </div>\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">lvl</p>\n              <p className=\"adventurerStat\">{thisAdventurer.level}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"adventurerDetailsView\">\n          <div className=\"adventurerStatGroup\">\n            <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{thisAdventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{thisAdventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{thisAdventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{thisAdventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{thisAdventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{thisAdventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{thisAdventurer.constitution}</p>\n          </div>\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Inventory</p>\n        <div className=\"adventurerInventoryDetails\">\n          {this.getInventory(thisAdventurer)}\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Combat Log</p>\n        <div className=\"adventurer-combat-log\">\n          {this.getCombatLog(thisAdventurer)}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    detailId: state.detail.id\n  }\n}\n\nexport default connect(mapStateToProps)(AdventurerDetail);","import React from 'react';\nimport './AdventurersPartial.css';\n\n// component imports\nimport Adventurer from '../Adventurer/Adventurer';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PARTIAL_ADVENTURERS } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\n\nclass AdventurersPartial extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAdventurers = this.getAdventurers.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  getAdventurers(adventurers) {\n    return adventurers.map(adventurer => {\n      return <Adventurer adventurer={adventurer} />\n    });\n  }\n\n  handleBack() {\n    this.props.setPartialAdventurers(null);\n    const handled = breadcrumb.popBreadcrumb();\n    if (!handled) {\n      console.log('breadcrumb failed!');\n    }\n  }\n\n  render() {\n    if (!this.props.adventurers || !this.props.partialAdventurers) return '';\n    let partialAdventurers = this.props.partialAdventurers;\n    let adventurers = this.props.adventurers;\n    partialAdventurers = partialAdventurers.map(adventurerId => {\n      return adventurers.find(adventurer => adventurer.id === adventurerId);\n    })\n    \n    return (\n      <div className=\"adventurers\">\n        <div className=\"back-button partial-back primary\"\n            onClick={this.handleBack}>&#8592;</div>\n        {this.getAdventurers(partialAdventurers)}\n        <div className=\"spacer-vertical\"></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    partialAdventurers: state.adventurers.partialAdventurers,\n    adventurers: state.adventurers.adventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPartialAdventurers: (payload) => dispatch({ type: SET_PARTIAL_ADVENTURERS, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurersPartial);","import React from 'react';\nimport './DungeonLevel.css';\n\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PARTIAL_ADVENTURERS, SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\nimport screenInfo from '../../Utilities/screenInfo';\nimport mobileScreens from '../../Utilities/mobileScreens';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass DungeonLevel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdventurerList = this.handleAdventurerList.bind(this);\n  }\n\n  handleAdventurerList(levelAdventurers) {\n    const adventurerIds = levelAdventurers.map(adventurer => adventurer.adventurerId);\n    this.props.setPartialAdventurers(adventurerIds);\n    const dunDOM = document.querySelector('.Dungeon');\n    const scrollY = dunDOM.scrollTop;\n    breadcrumb.addBreadcrumb({ display: 'dungeon', screenPos: scrollY});\n    if (screenInfo.getIsMobile()) {\n      const allScreens = mobileScreens.getAllScreens();\n      this.props.setMobileScreen(allScreens.adventurersPartial);\n    } else {\n      this.props.setPCDetail(pcMenus.adventurersPartial);\n    }\n  }\n\n  render() {\n    if (!this.props.level) return '';\n    const level = this.props.level;\n    let levelAdventurers = [];\n    const dungeonAdventurers = this.props.dungeonAdventurers;\n    if (dungeonAdventurers) {\n      levelAdventurers = dungeonAdventurers.filter(adventurer => adventurer.level === level.number);\n    }\n    return (\n      <div className=\"levelDisplay primary\">\n        <div className=\"levelNumber\">LEVEL {level.number}</div>\n        <div className=\"adventurersNumberContainer\">\n          <div className=\"adventurersNumber\"\n            onClick={() => this.handleAdventurerList(levelAdventurers)}>\n            {levelAdventurers.length > 0 ? (levelAdventurers.length) : ''}\n          </div>\n          <div className=\"adventurersNumberLabel\">adventurers</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonAdventurers: state.dungeon.adventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPartialAdventurers: (payload) => dispatch({ type: SET_PARTIAL_ADVENTURERS, payload: payload }),\n    setMobileScreen: (screen) => dispatch({ type: SET_MOBILE_SCREEN, screen: screen }),\n    setPCDetail: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonLevel);","import React from 'react';\nimport './Dungeon.css';\n\nimport DungeonLevel from '../DungeonLevel/DungeonLevel';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Dungeon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLevels = this.getLevels.bind(this);\n  }\n  \n  getLevels() {\n    const levels = this.props.levels;\n    const levelsToDisplay = levels.filter(level => level.number <= this.props.exploredLevel);\n    return levelsToDisplay.map(level => {\n      return <DungeonLevel level={level} />\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"Dungeon primary-dark\">\n        {this.getLevels()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    levels: state.dungeon.levels,\n    exploredLevel: state.dungeon.exploredLevel\n  }\n}\n\nexport default connect(mapStateToProps)(Dungeon);","import React from 'react';\nimport './Details.css';\n\n// component imports\nimport DetailPCMenu from '../DetailPCMenu/DetailPCMenu';\nimport Adventurers from '../Adventurers/Adventurers';\nimport AdventurerDetail from '../AdventurerDetail/AdventurerDetail';\nimport AdventurersPartial from '../AdventurersPartial/AdventurersPartial';\nimport Dungeon from '../Dungeon/Dungeon';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\nimport menuTypes from '../../Utilities/pcMenus';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n    this.getDetail = this.getDetail.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const forms = Object.values(menuTypes);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[menuTypes.adventurers] = <Adventurers />;\n    this.formTable[menuTypes.adventurer] = <AdventurerDetail />;\n    this.formTable[menuTypes.dungeon] = <Dungeon />;\n    this.formTable[menuTypes.adventurersPartial] = <AdventurersPartial />;\n  }\n\n  getDetail() {\n    if (!this.state.initialized) return '';\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    if (!this.props.pcDetailMenu) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n\n    if (this.formTable[this.props.pcDetailMenu] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.pcDetailMenu];\n  }\n  \n  render() {\n    return (\n      <div className=\"Details primary-dark\">\n        <DetailPCMenu />\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container primary-light\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false\n    }\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n    if (!this.props.edited) {\n      this.setState({ edited: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"StartScreen primary-surface\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","const userPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default userPutRequests;","import React from 'react';\nimport './ProfileViewer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\nimport { fetchUser } from '../../actions'\n\n// utitlity imports\nimport userPutRequests from '../../Utilities/userPutRequests';\n\nclass ProfileViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  handleClose() {\n    if (this.props.profileActive) {\n      this.props.setProfileActive(false);\n    }\n  }\n\n  *updateUser(data) {\n    yield userPutRequests.makeRequest('user', data);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateUser = this.updateUser(data);\n    updateUser.next().value.then(() => {\n      this.props.fetchUser();\n      this.props.setProfileActive(false);\n    });\n  }\n  \n  render() {\n    let newNickname = '';\n    let newImportNickname = false;\n    let newId = null;\n    console.log(this.props.auth);\n\n    if (this.props.auth) {\n      newNickname = this.props.auth.nickname;\n      newImportNickname = this.props.auth.import_nickname;\n      newId = this.props.auth.id;\n    }\n\n    return (\n      <div className=\"ProfileViewer primary-surface\">\n        <div className=\"ProfileForm\">\n          <form action={'/profile'}\n            className=\"input-fields-area\"\n            id=\"ProfileForm\"\n            method=\"POST\"\n            onSubmit={this.handleSubmit}>\n              <div className=\"input-group\">\n                <label className=\"item-label\" htmlFor=\"nickname\">Nickname</label>\n                <input type=\"text\" name=\"nickname\" id=\"nickname\" className=\"input-text\" placeholder=\"nickname\"\n                  maxLength=\"40\" defaultValue={newNickname}></input>\n              </div>\n              <div className=\"input-group\">\n                <input type=\"checkbox\" name=\"import_nickname\" id=\"import_nickname\" class=\"input-checkbox\" defaultChecked={newImportNickname} value={true}></input>\n                <label className=\"item-label\" htmlFor=\"import_nickname\">Import nickname as store name by default</label>\n              </div>\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"submit\" value=\"Update Profile\" className=\"button profile-submit\"></input>\n          </form>\n        </div>\n        <div className=\"CloseButton\"\n          onClick={this.handleClose}>\n            X\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    profileActive: state.profile.active,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value }),\n    fetchUser: () => dispatch(fetchUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewer);","import React from 'react';\nimport './MobileStoreHeadbar.css';\n\nimport Coin from '../Coin/Coin';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass MobileStoreHeadbar extends React.Component {\n  render() {\n    return (\n      <div className=\"MobileStoreHeadbar\">\n        <h2 className=\"StoreName\">{this.props.storeName}</h2>\n        <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\"><Coin /> </span>{this.props.gold}</div>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n  }\n}\n\nexport default connect(mapStateToProps)(MobileStoreHeadbar);","import React from 'react';\nimport './MobileMenu.css';\n\n// component imports\nimport Days from '../Days/Days';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.getMobileDropdown = this.getMobileDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    mobileScreens.init();\n  }\n  \n  handlePrevious() {\n    mobileScreens.previousScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleNext() {\n    mobileScreens.nextScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setMobileDropdown(!this.props.mobileDropdown)\n  }\n\n  handleScreenChange(newScreen) {\n    mobileScreens.setScreen(newScreen);\n    mobileScreens.updateScreen();\n    this.props.setMobileDropdown(false);\n  }\n\n  getMobileDropdown() {\n    const allScreens = mobileScreens.getScreens();\n    if (this.props.mobileDropdown) {\n      return (\n        <div className=\"MobileDropdown primary-medium\">\n          <Days />\n          {allScreens.map(screen => {\n            return (\n              <div className=\"mobileDropdownOption\"\n                onClick={() => this.handleScreenChange(screen)}>{screen}</div>\n            )\n      })}\n      </div>)\n      \n    } else {\n      return false;\n    }\n  }\n  \n  render() {\n    let mobileMenuName = this.props.mobileScreen;\n    let allScreens = mobileScreens.getAllScreens();\n    if (mobileMenuName === allScreens.adventurersPartial) {\n      mobileMenuName = allScreens.adventurers;\n    }\n    return (\n      <div className=\"MobileMenu primary-saturated\">\n        <span className=\"previousScreen screenArrow\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"mobileTitle\"\n          onClick={this.handleDropdown}>{mobileMenuName}</span>\n        <span className=\"nextScreen screenArrow\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getMobileDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    mobileDropdown: state.mobileMenu.dropdown,\n    dungeonLevelExplored: state.dungeon.exploredLevel\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileMenu);","import React from 'react';\nimport './MobileGameScreen.css';\n\nimport Store from '../../Components/Store/Store';\nimport MobileStoreHeadbar from '../../Components/MobileStoreHeadbar/MobileStoreHeadbar';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport MobileMenu from '../../Components/MobileMenu/MobileMenu';\nimport Adventurers from '../../Components/Adventurers/Adventurers';\nimport AdventurerDetail from '../../Components/AdventurerDetail/AdventurerDetail';\nimport AdventurersPartial from '../../Components/AdventurersPartial/AdventurersPartial';\nimport Dungeon from '../../Components/Dungeon/Dungeon';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileGameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentScreen: 'store',\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const allScreens = mobileScreens.getAllScreens();\n    const forms = Object.values(allScreens);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[allScreens.store] = <Store />;\n    this.formTable[allScreens.suppliers] = (\n      <div>\n        <MobileStoreHeadbar />\n        <Suppliers />\n      </div>\n    );\n    this.formTable[allScreens.adventurers] = <Adventurers />;\n    this.formTable[allScreens.adventurer] = <AdventurerDetail />;\n    this.formTable[allScreens.dungeon] = <Dungeon />;\n    this.formTable[allScreens.adventurersPartial] = <AdventurersPartial />;\n  }\n\n  getCurrentScreen() {\n    if (!this.state.initialized) return '';\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    if (!this.props.mobileScreen) {\n      return (<div className=\"BlankForm\">no details to display</div>)\n    }\n\n    if (this.formTable[this.props.mobileScreen] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.mobileScreen];\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileGameScreen primary-dark\">\n        <MobileMenu />\n        {this.getCurrentScreen()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileGameScreen);","import React from 'react';\nimport './MenuBar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mobileOpen: false\n    }\n\n    this.handleProfileActive = this.handleProfileActive.bind(this);\n    this.getLoginContainer = this.getLoginContainer.bind(this);\n    this.renderProfileLink = this.renderProfileLink.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n    this.handleFullscreen = this.handleFullscreen.bind(this);\n    this.getFullScreenControls = this.getFullScreenControls.bind(this);\n    this.handleMobileOpen = this.handleMobileOpen.bind(this);\n  }\n\n  handleProfileActive() {\n    if (!this.props.profileActive) {\n      this.props.setProfileActive(true);\n    }\n    this.handleMobileOpen();\n  }\n\n  handleMobileOpen() {\n    if (this.props.profileActive && !this.state.mobileOpen) {\n      return;\n    }\n    this.setState({ mobileOpen: !this.state.mobileOpen});\n  }\n\n  renderProfileLink() {\n    switch(this.props.auth) {\n      case null:\n        return '';\n      case false:\n        return '';\n      default:\n        return <li key=\"profile\" class=\"profileLink\" onClick={this.handleProfileActive}>profile</li>\n    }\n  }\n\n  renderLogin() {\n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\" className=\"facebookLogo\"><span>f</span></a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner' && screenInfo.getIsPc()) {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n\n  getLoginContainer() {\n    if (!this.props.isPc) {\n      return (\n        <div className=\"hamburgerContainer\"\n          onClick={this.handleMobileOpen}>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"LoginContainer\">\n        {this.renderProfileLink()}\n        {this.renderEditorLink()}\n        {this.renderLogin()}\n      </ul>\n    )\n  }\n\n  getMobileMenu() {\n    if (!this.props.isPc && this.state.mobileOpen) {\n      let mobileOffsetStyle = {};\n      let menuOffsets = 2;\n        if (this.props.auth) {\n          menuOffsets += 1;\n        }\n        // set style by default for tablet\n        mobileOffsetStyle.height = `calc(${(menuOffsets * 2.4)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        if (this.props.isMobile) {\n          mobileOffsetStyle.height = `calc(${(menuOffsets * 1.8)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        } \n        \n        \n      return (\n        <div className=\"mobileMenuContainer primary\"\n          onClick={this.handleMobileOpen}>\n          <ul className=\"LoginContainer mobileMenu primary-light\"\n            style={mobileOffsetStyle}\n            >\n            {this.getFullScreenControls()}\n            {this.renderProfileLink()}\n            {this.renderLogin()}\n          </ul>\n        </div>\n        \n      )\n    }\n  }\n\n  handleFullscreen() {\n    if (!this.props.isFullscreen) {\n      screenInfo.goFullScreen();\n    } else {\n      screenInfo.leaveFullScreen();\n    }\n  }\n\n  getFullScreenControls() {\n    if (!this.props.isFullscreen) {\n      return <li key=\"goFullscreen\" \n        className=\"Fullscreen screenLink\"\n        onClick={this.handleFullscreen}>[  ]</li>\n    } else {\n      return <li key=\"exitFullscren\"\n        className=\"ExitFullScreen screenLink\"\n        onClick={this.handleFullscreen}>&#9580;</li>\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar primary-light\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        {this.getLoginContainer()}\n        {this.getMobileMenu()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    isFullscreen: state.app.isFullscreen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\n// game module imports\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\nimport ProfileViewer from '../../Containers/ProfileViewer/ProfileViewer';\nimport MobileGameScreen from '../../Containers/MobileGameScreen/MobileGameScreen';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\n// component imports\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.getProfileViewer = this.getProfileViewer.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n    screenInfo.init();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      if (!this.props.isPc) {\n        return (\n          <MobileGameScreen />\n        )\n      } else {\n        return (\n          <GameScreen />\n        )\n      }\n    }\n  }\n\n  getProfileViewer() {\n    const profileStatus = this.props.profileActive;\n    if (profileStatus) {\n      return (\n        <ProfileViewer />\n      )\n    }\n  }  \n\n  render() {\n    return (\n      <div className=\"App\"\n        ref={ref => {\n          this.container = ref;\n        }}>\n        <MenuBar />\n        {this.getMainView()}\n        {this.getProfileViewer()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY,\n  SET_STORE_FILTER,\n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  filterActive: false,\n  filter: 'all',\n  needsUpdate: false,\n  inventory: [],\n  inventoryCount: 0,\n  mobileDetail: null,\n  mobileItemDetail: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      let newCount = state.inventoryCount;\n      if (Array.isArray(newInventory)) {\n        newCount = newInventory.length;\n      }\n      return {\n        ...state,\n        inventory: newInventory,\n        inventoryCount: newCount\n      }\n    case SET_STORE_FILTER_ACTIVE:\n      return {\n        ...state,\n        filterActive: action.value\n      }\n    case SET_STORE_FILTER:\n      return {\n        ...state,\n        filter: action.filter\n      }\n    case SET_STORE_UPDATE_STATUS:\n      const newStatus = !state.needsUpdate;\n      return {\n        ...state,\n        needsUpdate: newStatus\n      }\n    case SET_STORE_MOBILE_DETAIL:\n      return {\n        ...state,\n        mobileDetail: action.detail\n      }\n    case SET_STORE_MOBILE_DETAIL_ITEM:\n      return {\n        ...state,\n        mobileItemDetail: action.itemDetail\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS, SET_SUPPLIERS_INITIALIZED } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0,\n  initialized: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n      case SET_SUPPLIERS_INITIALIZED:\n        return {\n          ...state,\n          initialized: action.value\n        }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst initialState = {\n  ready: false,\n  spawned: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLY_READY:\n      return {\n        ...state,\n        ready: action.value\n      }\n    case SET_SUPPLY_SPAWNED:\n      return {\n        ...state,\n        spawned: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_PROFILE_ACTIVE } from '../actions/types';\n\nconst initialState = {\n  active: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFILE_ACTIVE:\n      return {\n        ...state,\n        active: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst initialState = {\n  isFullscreen: false,\n  isPc: true,\n  isMobile: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: action.value\n      }\n    case SET_IS_PC:\n      return {\n        ...state,\n        isPc: action.value\n      }\n    case SET_IS_MOBILE:\n      return {\n        ...state,\n        isMobile: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_MOBILE_SCREEN, SET_MOBILE_DROPDOWN } from '../actions/types';\n\nconst intitialState = {\n  screen: 'store',\n  dropdown: false\n}\n\nexport default function(state = intitialState, action) {\n  switch(action.type) {\n    case SET_MOBILE_SCREEN:\n      return {\n        ...state,\n        screen: action.screen\n      }\n    case SET_MOBILE_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS, SET_PARTIAL_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null,\n  partialAdventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    case SET_PARTIAL_ADVENTURERS:\n      return {\n        ...state,\n        partialAdventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../actions/types';\nimport pcMenus from '../Utilities/pcMenus';\n\nconst initialState = {\n  detail: pcMenus.adventurers,\n  dropdown: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PC_DETAIL:\n      return {\n        ...state,\n        detail: action.detail\n      }\n    case SET_PC_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_ID, SET_DETAIL_UPDATE } from '../actions/types';\n\nconst initialState = {\n  id: null,\n  update: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_ID:\n      return {\n        ...state,\n        id: action.id\n      }\n    case SET_DETAIL_UPDATE: {\n      return {\n        ...state,\n        update: action.value\n      }\n    }\n    default:\n      return state;\n  }\n}","import { SET_DUNGEON_LEVELS, \n  SET_DUNGEON_LEVEL_EXPLORED,\n  SET_DUNGEON_ADVENTURERS\n} from '../actions/types';\n\nconst initialState = {\n  levels: null,\n  exploredLevel: 0,\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DUNGEON_LEVELS:\n      return {\n        ...state,\n        levels: action.payload\n      }\n    case SET_DUNGEON_LEVEL_EXPLORED:\n      return {\n        ...state,\n        exploredLevel: action.level\n      }\n    case SET_DUNGEON_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.adventurers\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\nimport suppliesReducer from './suppliesReducer';\nimport profileReducer from './profileReducer';\nimport appStateReducer from './appStateReducer';\nimport mobileMenuReducer from './mobileMenuReducer';\nimport adventurersReducer from './adventurersReducer';\nimport pcDetailReducer from './pcDetailReducer';\nimport detailReducer from './detailReducer';\nimport dungeonReducer from './dungeonReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer,\n  supplies: suppliesReducer,\n  profile: profileReducer,\n  app: appStateReducer,\n  mobileMenu: mobileMenuReducer,\n  adventurers: adventurersReducer,\n  pcMenu: pcDetailReducer,\n  detail: detailReducer,\n  dungeon: dungeonReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}