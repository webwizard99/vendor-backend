{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","actions/types.js","Components/StoreInventory/StoreInventory.jsx","game_modules/store.js","game_modules/days.js","game_modules/supplies.js","Utilities/fetcher.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/SupplierBuyButton/SupplierBuyButton.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","game_modules/gameConstants.js","game_modules/dungeon.js","Utilities/tagProcessor.js","game_modules/adventurers.js","game_modules/main.js","Components/Days/Days.jsx","Utilities/pcMenus.js","Utilities/pcDetailMenus.js","Components/DetailPCMenu/DetailPCMenu.jsx","Utilities/screenInfo.js","Utilities/breadcrumb.js","Utilities/mobileScreens.js","Components/Adventurer/Adventurer.jsx","Components/Adventurers/Adventurers.jsx","Components/AdventurerDetail/AdventurerDetail.jsx","Components/AdventurersPartial/AdventurersPartial.jsx","Components/DungeonLevel/DungeonLevel.jsx","Components/Dungeon/Dungeon.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","Containers/StartScreen/StartScreen.jsx","Utilities/userPutRequests.js","Containers/ProfileViewer/ProfileViewer.jsx","Components/MobileStoreHeadbar/MobileStoreHeadbar.jsx","Components/MobileMenu/MobileMenu.jsx","Containers/MobileGameScreen/MobileGameScreen.jsx","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/suppliesReducer.js","reducers/profileReducer.js","reducers/appStateReducer.js","reducers/mobileMenuReducer.js","reducers/adventurersReducer.js","reducers/pcDetailReducer.js","reducers/detailReducer.js","reducers/dungeonReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","itemTypeIndex","itemPrototypeIndex","lastIndex","Item","payload","type","name","value","prototypeId","rarity","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","getItemType","getItemPrototypeId","getItemTypeIndex","createTestPotion","lvl","healing","getItemTypes","composePayloadFromProto","protoItem","storeInventory","inventory","composeInventory","composedInventory","forEach","gameItems","itemId","markup","addItem","undefined","newStoreItem","removeItem","filter","getStoreInventory","updateStoreInventory","store","dispatch","dispatchStoreInventory","getComposedInventory","getFilteredInventory","newFilter","toLowerCase","getFilteredStoreItems","markupFilteredStoreItems","newMarkup","markupAmount","inventoryItem","markupStoreItem","markupById","markupPrototypes","markupByPrototype","StoreInventory","props","state","timer","mobileMultiplier","delay","markupIntensity","valence","increaseMarkup","bind","repeat","onMouseDown","onMouseUp","markupOut","handleMobileFocus","handleOneIncrement","handlePrototypeIncrement","getInventoryItems","getIncrementOneButtons","getIncrementAllButtons","newInventory","JSON","parse","stringify","gameInventory","setInventory","setState","e","refBtnClasses","target","classList","contains","repeatPayload","totaldelay","setTimeout","clearTimeout","posNeg","toggleStoreUpdateStatus","itemsPayload","isPc","className","onTouchStart","onTouchEnd","mobileItem","mobileItemDetail","mobileDetail","setStoreMobileDetail","setStoreMobileDetailItem","window","filteredInventory","length","filterActive","storeFilter","map","composedPrice","Math","floor","itemClass","key","React","Component","connect","storeState","inventoryCount","storeNeedsUpdate","needsUpdate","isMobile","app","detail","itemDetail","gameStore","gold","chargeGold","amount","creditGold","getName","setName","newName","getStartingGold","getGold","setGold","newGold","updateGold","dispatchStoreGold","days","day","getDay","setDay","newDay","resetDay","supplies","suppliesPool","supplyLevel","itemTypesArr","Object","values","itemTypeCount","itemSpawnCount","fetchItemArrForSupplyPool","a","typeToFetch","maxLvl","fetchURL","fetch","possibleItems","json","getItemForSupplyPool","newItems","then","itemsOfLevel","dispatchSpawned","catch","err","spawnSupply","typeIndex","random","typeToSpawn","newSupplyArr","Array","isArray","Items","getSupplies","fillSupplies","i","dispatchReady","fillSupplyPool","typeItem","depleteSupply","supplyIndex","indexOf","splice","setSupplyLevel","fetcher","fetchRoute","routeName","response","suppliers","currentId","Supplier","offerings","prototype","rankFavorites","bestOfferings","offeringsCount","sort","off1","off2","rankedOfferings","sellItem","price","itemIndex","takeIncome","dispatchSuppliers","newSuppliers","fetchSuppliers","initSuppliers","getSuppliers","initializeSuppliers","maxSuppliers","next","drainSuppliers","pushIndex","newSupplier","supplierPayload","thisSupplier","supplier","takeSupplierTurn","remainingSupplies","supplyTypes","supplyValues","remainingSupply","supplyItem","currentSupplier","supplierCount","remSupply","remNum","supplierTries","thisIndex","taken","supplierIndex","favorites","thisSupply","takeSupplies","dispatchSupplyReady","refSupplier","sellPayload","takeSupplierIncomeTurns","updateSuppliers","fetchUser","axios","get","res","data","import_nickname","nickname","fetchGold","fetchDay","Store","getMobileDetail","componentDidMount","toggleFilter","getFilter","handleFilter","getIncrementButtons","handleIncrease","handleDecrease","currentType","setStoreFilter","refBtn","totalDelay","pc","defaultValue","onChange","itemType","newValue","setStoreFilterActive","inventoryComponent","storeName","role","aria-label","onClick","setStoreGold","SupplierBuyButton","getSuppllierInventory","handlePurchase","ids","storeGold","sellId","gameSuppliers","gameStoreInventory","initialized","thisInventory","inventoryGroups","valueGroups","typeGroups","idGroups","composedItems","entries","count","item1","item2","nameA","toUpperCase","nameB","findIndex","offering","composedValue","supplierClass","supplyReady","ready","Suppliers","componentDidUpdate","supplySpawned","gameSupplies","suppliersInitialized","gameSupplier","setSuppliersInitialized","supplierContainerClass","spacerClass","currentSuppliers","suppliersDisplay","renderSupplier","ref","node","container","suppliersClass","spawned","gameConstants","startingAdventurers","dailyAdventurers","adventurerStartingGold","dungeon","levelCount","levels","adventurers","exploredLevel","Level","number","boss","bossId","monstersMinLevel","monstersMaxLevel","tileAssignments","treasureDropList","treasures","droppedTreasures","monsters","lurkingMonsters","monstersLoot","treasureListFetched","monstersFetched","monsterDropListItemsFetched","intialized","initialize","Promise","resolve","reject","getMonstersForLevel","monstersToAdd","monsterDrops","addMonster","addMonsterDrops","drop_list","drops","addDrop","addId","dropType","drop_type","treasureDrops","drop","resolveMonsterDrops","rejectMonsterDrops","monsterDrop","mDropN","getDrop","resolvedDrop","resolveTreasureDrops","rejectTreasureDrops","treasureDrop","tDropN","activateTile","adventurer","tileOutcomes","tileI","weight","probability","result","tile","outcome1","outcome2","resultTileI","resultTile","dungeon_tile","innTreasureBoost","informed","actions","adventurersModule","getActions","checkTreasureBoost","action","checkForTreasure","checkTrapBoost","checkForTraps","treasureProb","treasure","encounterProb","encounter","trapProb","trap","threshholdProb","treasureIndex","treasureItem","considerTreasure","encounterTrap","dispatchLevels","dispatchExploredLevel","dispatchAdventurers","fetchLevels","initLevels","getLevels","minLevel","maxLevel","fetchMonstersInRange","fetchUrl","fetchedMonsters","fetchDrop","fetchedDrop","loadLevel","nextLevelN","completed","initializeLevels","newLevel","shift","levelPayload","boss_id","monsters_min_level","monsters_max_level","tile_assignments","thisLevel","level1","level2","updateLevels","getExploredLevel","receiveAdventurer","adventurerId","addAdventurer","releaseAdventurer","deleteAdventurer","executeTurn","dungeonEntry","dunAdventurer","checkLevelReadiness","highestLevel","adventurerI","loadNextLevel","tagProcessor","filterClasses","status","getFilterClasses","setTrap","decisions","setTrapBehavior","thief","soldier","bard","Adventurer","strength","speed","cunning","intelligence","constitution","dungeonBehavior","townBehavior","adventurerClass","experience","hp","maxHp","equipment","inDungeon","hasFoundStairs","currentTotalDungeonTurns","currentAction","turns","checkAccount","chargeAccount","unequipItem","slot","equipItem","getCurrentItemCount","protoId","protoCount","addCombatLog","message","combatLog","getCombatLog","checkHealthChoice","conserve_health","checkHasPotion","checkPotionUse","use_potion","usePotion","checkTrapDecision","check_for_traps","checkTreasureDecision","search_for_treasure","checkSetTrapDecision","prefer_weaker_monster","checkAdvanceDecision","percentLost","inventoryPercentEmpty","fillInventoryDesire","fill_inventory","advance_tile","checkReturnToTown","turnsFactor","turnsInfluence","return_to_town","dungeonLevel","trapDamage","pow","turnController","TurnController","currentTurns","currentdId","addTurn","turn","clearTurn","deletedTurn","foundTurn","clearAdventurerTurns","deletedTurns","startTurns","turnNumber","runTurn","startTurn","nextTurn","Turn","resultDecision","dungeonAdventurer","thisDecision","Decision","needHealing","hasPotion","advance","returnToTown","weighDecisionLogical","weighDecisionTournament","clearPackage","resolveTurn","rejectTurn","checkTreasure","concernedAdventurer","remainingOptions","weights","tournamentRounds","ceil","log2","round","optionsLength","pairings","pairCount","offest","pair","eliminated","result1","result2","randomChoice","elIndex","eliminate","option","newAdventurers","fetchAdventurers","initAdventurers","getAdventurers","enter_dungeon","dungeonJSX","combatLogMessage","dungeonTurns","dungeonAdventurers","dunAdN","totalTurns","turnPayload","newTurn","initializeAdventurers","maxAdventurers","drainAdventurers","newAdventurer","adventurerPayload","dungeon_behavior","town_behavior","adventurer_class","thisAdventurer","updateAdventurers","takeAdventurerTurn","townAdventurer","totalFactor","use_tavern","totalCost","innJSX","inventoryItems","composedItem","shoppingAdventurers","adventurerTurn","adventurerCount","adventurerTries","adventurerIndex","decisionFactor","itemProto","currentHoldings","willBuy","currentGear","totalPrice","playerStore","doShopping","main","init","startingGold","getGameLevel","performTurn","dispatchUpdate","Days","handleNextDay","currentDay","mobileDropdown","setMobileDropdown","mobileMenu","dropdown","pcMenus","adventurersPartial","pcDetailMenus","currentMenu","currentIndex","menus","menuMap","menu","menuN","getCurrentMenu","nextMenu","previousMenu","getMenus","setmenu","newMenu","menuIndex","updateMenu","dispatchPCMenu","DetailPCMenu","handlePrevious","handleNext","handleDropdown","handleMenuChange","getPCDropdown","pcDropdown","setPcDropdown","allMenus","menuName","pcDetailMenu","pcMenu","dungeonLevelExplored","setPcDetailMenu","screenInfo","isFullscreen","dispatchFullscreen","orientation","docDimensions","document","querySelector","getBoundingClientRect","width","setScreenInfo","dispatchIsPc","dispatchIsMobile","getIsPc","getIsMobile","goFullScreen","App","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setFullScreen","leaveFullScreen","exitFullscreen","breadcrumb","breadcrumbs","Breadcrumb","displayPayload","scrollPos","dispatchDisplay","screen","popBreadcrumb","pop","addBreadcrumb","display","newCrumb","mobileScreens","currentScreen","screens","allScreens","screenMap","screenN","getCurrentScreen","nextScreen","previousScreen","getScreens","getAllScreens","setScreen","newScreen","screenIndex","updateScreen","dispatchMobileScreen","handleZoom","partialAdventurers","breadcrumbName","setDetailId","scrollY","scrollTop","screenPos","setMobileScreen","setPCDetail","adventurerClassColor","adventurerClassIconColor","classColors","classIcon","charAt","Adventurers","adventurerUpdate","update","AdventurerDetail","handleBack","adventurerInventory","adventurerCombatLog","detailId","getInventory","AdventurersPartial","setPartialAdventurers","DungeonLevel","handleAdventurerList","levelAdventurers","adventurerIds","Dungeon","Details","formTable","loadFormTable","getDetail","tempTable","menuTypes","detailUpdate","setDetailUpdate","GameScreen","Title","StartScreen","edited","handleStart","handleNameInput","game","setStarted","charCode","htmlFor","val","setStoreName","onKeyPress","started","gameState","auth","userPutRequests","makeRequest","putRoute","putBody","subBody","putRes","method","headers","body","ProfileViewer","handleClose","handleSubmit","updateUser","profileActive","setProfileActive","preventDefault","FormData","newNickname","newImportNickname","newId","onSubmit","placeholder","maxLength","class","defaultChecked","profile","active","MobileStoreHeadbar","MobileMenu","handleScreenChange","getMobileDropdown","mobileMenuName","mobileScreen","MobileGameScreen","MenuBar","mobileOpen","handleProfileActive","getLoginContainer","renderProfileLink","renderLogin","renderEditorLink","handleFullscreen","getFullScreenControls","handleMobileOpen","href","mobileOffsetStyle","menuOffsets","height","style","getMobileMenu","getMainView","getProfileViewer","initialState","storeUpdate","intitialState","combineReducers","updates","newCount","newStatus","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.6be8149a.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let itemTypeIndex = {};\n  let itemPrototypeIndex = {};\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value, prototypeId, rarity } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.prototypeId = prototypeId;\n    this.rarity = rarity;\n    this.id = lastIndex;\n    itemTypeIndex[lastIndex] = type;\n    itemPrototypeIndex[lastIndex] = prototypeId;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload, prototypeId, rarity } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value, prototypeId: prototypeId, rarity: rarity }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    getItemType(id) {\n      if (itemTypeIndex[id] !== null) {\n        return itemTypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemPrototypeId(id) {\n      if (itemPrototypeIndex[id] !== null) {\n        return itemPrototypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemTypeIndex() {\n      return itemTypeIndex;\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    },\n\n    composePayloadFromProto: function(protoItem) {\n      // compose payload for Item constructor\n      let itemPayload = {};\n      itemPayload.level = protoItem.level;\n      switch(protoItem.item.type) {\n        case ItemTypes.potion:\n          itemPayload.type = protoItem.type;\n          break;\n        case ItemTypes.weapon:\n          itemPayload.damage = protoItem.damage;\n          break;\n        case ItemTypes.armor:\n          itemPayload.armor = protoItem.armor;\n          break;\n        default:\n          break;\n      }\n      let payload = {};\n      payload.itemPayload = itemPayload;\n      payload.type = protoItem.item.type;\n      payload.name = protoItem.item.name;\n      payload.value = protoItem.item.value;\n      payload.prototypeId = protoItem.item.id;\n      payload.rarity = protoItem.item.rarity;\n      return payload;\n    }\n  }\n}());\n\nexport default items;","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_INVENTORY } from '../actions/types';\n\n// game module imports\nimport gameItems from './items';\n\nconst storeInventory = (function(){\n  // {\n  //   itemId: Number,\n  //   markup: number\n  // }\n  let inventory = [];\n\n  const maxMarkup = 4000;\n\n  const dispatchStoreInventory = function() {\n    const payload = {\n      type: SET_STORE_INVENTORY,\n      inventory: inventory\n    }\n    store.dispatch(payload);\n  }\n\n  const composeInventory = function() {\n    let composedInventory = [];\n      inventory.forEach(item => {\n        let thisItem = gameItems.getItem(item.itemId);\n        composedInventory.push({ ...thisItem, markup: item.markup });\n      });\n      return composedInventory;\n  }\n\n  const filterInventory = function(filter) {\n    let filteredInventory = composeInventory().filter(item => item.type === filter);\n    return filteredInventory;\n  }\n\n  const filterStoreItems = function(filter) {\n    let filteredIds = inventory.filter(item => {\n      return storeInventory.getItemType(item.itemId) === filter\n    });\n    return filteredIds;\n  }\n\n  const markupFilteredItems = function(filter, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (filter.toLowerCase() === 'all' || gameItems.getItemType(inventoryItem.itemId) === filter) {\n        inventoryItem.markup += newMarkup;\n        if (inventoryItem.markup > maxMarkup) {\n          inventoryItem.markup = maxMarkup;\n        }\n        if (inventoryItem.markup < 0) {\n          inventoryItem.markup = 0;\n        }\n      }\n    });\n  }\n\n  const markupById = function(id, newMarkup) {\n    const targetItem = inventory.find(item => item.itemId === id);\n    targetItem.markup += newMarkup;\n  }\n\n  const markupByPrototype = function(prototypeId, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (gameItems.getItemPrototypeId(inventoryItem.itemId) === prototypeId) {\n        inventoryItem.markup += newMarkup;\n      }\n      if (inventoryItem.markup > maxMarkup) {\n        inventoryItem.markup = maxMarkup;\n      }\n      if (inventoryItem.markup < 0) {\n        inventoryItem.markup = 0;\n      }\n    })\n  }\n\n  return {\n    addItem: function(id) {\n      if (id === null || id === undefined) {\n        return false;\n      }\n      const newStoreItem = { itemId: id,\n        markup: 150\n      }\n      inventory.push(newStoreItem);\n    },\n\n    removeItem: function(id) {\n      const foundItem = inventory.find(item => item.itemId === id);\n      if (foundItem) {\n        inventory = inventory.filter(item => item.itemId !== id);\n      }\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    },\n\n    updateStoreInventory: function() {\n      dispatchStoreInventory();\n    },\n\n    getComposedInventory: function() {\n      return composeInventory();\n    },\n\n    getFilteredInventory: function(newFilter) {\n      if (!newFilter || newFilter.toLowerCase() === 'all') {\n        return composeInventory();\n      }\n      else {\n        return filterInventory(newFilter);\n      }\n    },\n    \n    getFilteredStoreItems: function(newFilter) {\n      return filterStoreItems(newFilter);\n    },\n\n    markupFilteredStoreItems: function(payload) {\n      let { filter:newFilter, markup:markupAmount } = payload;\n      markupFilteredItems(newFilter, markupAmount);\n    },\n    \n    markupStoreItem: function(payload) {\n      let { id, markup:markupAmount} = payload;\n      markupById(id, markupAmount);\n    },\n\n    markupPrototypes: function(payload) {\n      let { prototypeId, markup: markupAmount } = payload;\n      markupByPrototype(prototypeId, markupAmount);\n    }\n  }\n}());\n\nexport default storeInventory;","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = \"SET_STORE_INVENTORY\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_SUPPLY_READY = \"SET_SUPPLY_READY\";\nexport const SET_SUPPLY_SPAWNED = \"SET_SUPPLY_SPAWNED\";\nexport const SET_STORE_FILTER = \"SET_STORE_FILTER\";\nexport const SET_STORE_FILTER_ACTIVE = \"SET_STORE_FILTER_ACTIVE\";\nexport const SET_STORE_UPDATE_STATUS = \"SET_STORE_UPDATE_STATUS\";\nexport const SET_PROFILE_ACTIVE =\"SET_PROFILE_ACTIVE\";\nexport const SET_IS_FULLSCREEN = \"SET_IS_FULLSCREEN\";\nexport const SET_IS_PC = \"SET_IS_PC\";\nexport const SET_IS_MOBILE = \"SET_IS_MOBILE\";\nexport const SET_MOBILE_SCREEN = \"SET_MOBILE_SCREEN\";\nexport const SET_SUPPLIERS_INITIALIZED = \"SET_SUPPLIERS_INITIALIZED\";\nexport const SET_MOBILE_DROPDOWN = \"SET_MOBILE_DROPDOWN\";\nexport const SET_STORE_MOBILE_DETAIL = \"SET_STORE_MOBILE_DETAIL\";\nexport const SET_STORE_MOBILE_DETAIL_ITEM = \"SET_STORE_MOBILE_DETAIL_ITEM\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_PC_DETAIL = \"SET_PC_DETAIL\";\nexport const SET_PC_DROPDOWN = \"SET_PC_DROPDOWN\";\nexport const SET_DETAIL_ID = \"SET_DETAIL_ID\";\nexport const SET_DETAIL_UPDATE = \"SET_DETAIL_UPDATE\";\nexport const SET_DUNGEON_LEVELS = \"SET_DUNGEON_LEVELS\";\nexport const SET_DUNGEON_LEVEL_EXPLORED = \"SET_DUNGEON_LEVEL_EXPLORED\";\nexport const SET_DUNGEON_ADVENTURERS = \"SET_DUNGEON_ADVENTURERS\";\nexport const SET_PARTIAL_ADVENTURERS = \"SET_PARTIAL_ADVENTURERS\";","import React from 'react';\nimport './StoreInventory.css';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../../actions/types';\n\nimport gameInventory from '../../game_modules/storeInventory';\n// import storeItems from '../../game_modules/items';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.mobileMultiplier = 2;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n    \n    this.handleMobileFocus = this.handleMobileFocus.bind(this);\n    this.handleOneIncrement = this.handleOneIncrement.bind(this);\n    this.handlePrototypeIncrement = this.handlePrototypeIncrement.bind(this);\n    this.getInventoryItems = this.getInventoryItems.bind(this);\n    this.getIncrementOneButtons = this.getIncrementOneButtons.bind(this);\n    this.getIncrementAllButtons = this.getIncrementAllButtons.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(gameInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  increaseMarkup() {\n    this.setState({\n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  onMouseDown(payload) {\n    const { e } = payload;\n    let id = null, prototypeId = null;\n    if (payload.id !== null) {\n      id = payload.id;\n    }\n    if (payload.prototypeId !== null) {\n      prototypeId = payload.prototypeId;\n    }\n    const refBtnClasses = e.target.classList;\n    if (refBtnClasses.contains(\"decreaseOne\") ||\n      refBtnClasses.contains(\"minusOne\") ||\n      refBtnClasses.contains(\"decreaseProto\") ||\n      refBtnClasses.contains(\"minusProto\")) {\n        this.valence = -1;\n    }\n    if (refBtnClasses.contains(\"increaseOne\") ||\n      refBtnClasses.contains(\"plusOne\") ||\n      refBtnClasses.contains(\"increaseProto\") ||\n      refBtnClasses.contains(\"plusProto\")) {\n        this.valence = 1;\n    }\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.repeat(repeatPayload);\n  }\n\n  repeat(payload) {\n    let { id, prototypeId } = payload;\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.increaseMarkup();\n    if (id !== undefined) {\n      this.handleOneIncrement(id);\n    }\n    if (prototypeId !== undefined) {\n      this.handlePrototypeIncrement(prototypeId);\n    }\n    let totaldelay = this.delay * this.mobileMultiplier;\n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(() => this.repeat(repeatPayload), totaldelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleOneIncrement(id) {\n    const posNeg = this.valence;\n    const itemPayload = {\n      id: id,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupStoreItem(itemPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handlePrototypeIncrement(prototypeId) {\n    const posNeg = this.valence;\n    const itemsPayload = {\n      prototypeId: prototypeId,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupPrototypes(itemsPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementOneButtons(id) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getIncrementAllButtons(prototypeId) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  handleMobileFocus(item) {\n    let mobileItem;\n    if (this.props.mobileItemDetail) {\n      mobileItem = this.props.mobileItemDetail;\n    }\n    if (this.props.mobileItemDetail && this.props.mobileDetail && mobileItem.id === item.id) {\n      this.props.setStoreMobileDetail(false);\n      this.props.setStoreMobileDetailItem(null);\n      window.inventory = undefined;\n    } else {\n      this.props.setStoreMobileDetail(true);\n      this.props.setStoreMobileDetailItem(item);\n      window.inventory = this;\n    }\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      let filteredInventory;\n      if (!this.props.filterActive || this.props.storeFilter === 'all') {\n        filteredInventory = gameInventory.getComposedInventory();\n      } else {\n        filteredInventory = gameInventory.getFilteredInventory(this.props.storeFilter);\n      }\n      return (\n        <div>{filteredInventory.map(item => {\n          const composedPrice = Math.floor(item.value * (1 + (item.markup / 1000)));\n          let itemClass = \"InventoryItem itemBackground\";\n          if (this.props.mobileDetail && item.id === this.props.mobileItemDetail.id) {\n            itemClass += \" activeMobileItem\";\n          }\n          return (\n            <div className={itemClass} \n              key={item.id}\n              onTouchStart={() => this.handleMobileFocus(item)}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              {this.props.isPc ? this.getIncrementOneButtons(item.id) : ''}\n              {this.props.isPc ? this.getIncrementAllButtons(item.prototypeId) : ''}\n              <div className=\"ItemValueGroup\">\n                <span className=\"InventoryItemValue\"><span className=\"CoinSymbol\">&#x2689; </span>{composedPrice}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory primary\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory,\n    inventoryCount: state.storeState.inventoryCount,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS }),\n    setStoreMobileDetail: (detail) => dispatch({ type: SET_STORE_MOBILE_DETAIL, detail: detail }),\n    setStoreMobileDetailItem: (itemDetail) => dispatch({ type: SET_STORE_MOBILE_DETAIL_ITEM, itemDetail: itemDetail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_GOLD } from '../actions/types';\n\nconst gameStore = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n\n  const dispatchStoreGold = function() {\n    const payload = {\n      type: SET_STORE_GOLD,\n      amount: gold\n    }\n    store.dispatch(payload);\n  }\n  \n  return {\n    chargeGold: function(amount) {\n      if (gold < amount) {\n        console.log('attempted to charge more gold than vendor owns')\n        return false;\n      }\n      gold -= amount;\n    },\n    creditGold: function(amount) {\n      gold += amount;\n    },\n    getName: function() {\n      return name;\n    },\n    setName: function(newName) {\n      name = newName;\n    },\n    getStartingGold: function() {\n      return startingGold;\n    },\n    getGold: function() {\n      return gold;\n    },\n    setGold: function(newGold) {\n      gold = newGold;\n    },\n    updateGold: function() {\n      dispatchStoreGold();\n    }\n  }\n}());\n\nexport default gameStore;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  let suppliesPool = {};\n  let supplyLevel = 1;\n\n  const itemTypesArr = Object.values(ItemTypes);\n  const itemTypeCount = itemTypesArr.length;\n  let itemSpawnCount = 0;\n\n  const dailySupplies = 10;\n\n  const dispatchReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSpawned = function(value) {\n    const payload = {\n      type: SET_SUPPLY_SPAWNED,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  // fill supply pool\n  const fetchSupplyPool = function() {\n    // produce array of type strings and choose one at random\n    itemSpawnCount = 0;\n    itemTypesArr.forEach(typeItem => {\n      if (suppliesPool[typeItem] == null) {\n        suppliesPool[typeItem] = [];\n      }\n      suppliesPool[typeItem].length = 0;\n    });\n\n    getItemForSupplyPool();\n    return true;\n  }\n\n  // fetch an item from backend\n  const fetchItemArrForSupplyPool = async function() {\n    let lvl = supplyLevel;\n    if (!lvl) return;\n\n    let typeToFetch = itemTypesArr[itemSpawnCount];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  // take an item that was fetched from backend and create it\n  // with item constructors and put it into state\n  const getItemForSupplyPool = function() {\n    if (itemSpawnCount >= itemTypeCount) {\n      return;\n    }\n    let newItems;\n    fetchItemArrForSupplyPool()\n      .then(itemsOfLevel => {\n        newItems = itemsOfLevel.filter(item => item.item.rarity === 1000);\n      \n        // initialize field on pool if need be\n        if (suppliesPool[itemTypesArr[itemSpawnCount]] === null) {\n          suppliesPool[itemTypesArr[itemSpawnCount]] = [];\n        }\n        // push item id into supplies\n        suppliesPool[itemTypesArr[itemSpawnCount]].push(newItems);\n\n        itemSpawnCount++;\n        if (itemSpawnCount === itemTypeCount) {\n          dispatchSpawned(true);\n        }\n        getItemForSupplyPool();\n        return true;\n      }).catch(err => console.log(err));\n  }\n\n  const spawnSupply = function() {\n    // produce array of type strings and choose one at random\n    let typeIndex = Math.floor(Math.random() * itemTypesArr.length);\n    let typeToSpawn = itemTypesArr[typeIndex];\n    const newSupplyArr = suppliesPool[typeToSpawn];\n    let randomChoice = Math.floor(Math.random() * newSupplyArr.length);\n    let newItem = newSupplyArr[randomChoice];\n\n    if (Array.isArray(newItem)) {\n      newItem = newItem[0];\n    }\n\n    // compose payload for Item constructor\n    // let itemPayload = {};\n    // itemPayload.level = newItem.level;\n    // switch(newItem.item.type) {\n    //   case ItemTypes.potion:\n    //     itemPayload.type = newItem.type;\n    //     break;\n    //   case ItemTypes.weapon:\n    //     itemPayload.damage = newItem.damage;\n    //     break;\n    //   case ItemTypes.armor:\n    //     itemPayload.armor = newItem.armor;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // let payload = {};\n    // payload.itemPayload = itemPayload;\n    // payload.type = newItem.item.type;\n    // payload.name = newItem.item.name;\n    // payload.value = newItem.item.value;\n    // payload.prototypeId = newItem.item.id;\n    // payload.rarity = newItem.item.rarity;\n    let payload = Items.composePayloadFromProto(newItem);\n\n    // create item and add to total inventory in Items module\n    let itemId = Items.createItem(payload);\n    supplies.push(itemId);\n\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function() {\n      for (let i = 0; i < dailySupplies; i++) {\n        spawnSupply();\n      }\n      dispatchReady(true);\n    },\n    fillSupplyPool: function() {\n      fetchSupplyPool();\n    },\n    depleteSupply: function(id) {\n      let supplyIndex = supplies.indexOf(id);\n      if (supplyIndex >= 0) {\n        let chosenSupply = supplies.splice(supplyIndex, 1);\n        return chosenSupply;\n      }\n    },\n    setSupplyLevel: function(lvl) {\n      supplyLevel = lvl;\n    }\n  }\n}());\n\nexport default supplies;","const fetcher = (function(){\n  return {\n    fetchRoute: async function(routeName) {\n      let response;\n      try {\n        response = await fetch(`/${routeName}`);\n      } catch (err) {\n        console.log(err);\n      }\n      if (response) {\n        response = response.json();\n      }\n      return response;\n    }\n  }\n}());\n\nexport default fetcher;","// game imports\nimport supplies from './supplies';\nimport items from './items';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLIERS, SET_SUPPLY_READY } from '../actions/types';\n\nconst suppliers = (function(){\n\n  let suppliers = [];\n\n  let currentId = 0;\n\n  const startingGold = 1000;\n  const supplierIncome = 100;\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n    this.inventory = [];\n    this.id = currentId;\n    currentId++;\n  }\n\n  Supplier.prototype.rankFavorites = function() {\n    let bestOfferings = [];\n    const offeringsCount = this.offerings.length;\n    for (let i = 0; i < offeringsCount; i++) {\n      bestOfferings.push(this.offerings[i]);\n    }\n    bestOfferings.sort((off1, off2) => {\n      return off1.markup - off2.markup;\n    });\n    this.rankedOfferings = bestOfferings;\n  }\n\n  Supplier.prototype.sellItem = function(payload) {\n    let { id, price } = payload;\n\n    const itemIndex = this.inventory.indexOf(id);\n    if (!itemIndex && itemIndex !== 0) {\n      return false;\n    }\n\n    this.inventory.splice(itemIndex, 1);\n    this.gold += price;\n\n    return true;\n  }\n\n  Supplier.prototype.takeIncome = function() {\n    this.gold += supplierIncome;\n  }\n\n  const dispatchSuppliers = function(newSuppliers) {\n    const payload = {\n      type: SET_SUPPLIERS,\n      payload: newSuppliers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSupplyReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers = fetcher.fetchRoute('suppliers');\n      // try {\n      //   initSuppliers = await fetch('/suppliers');\n      // } catch (err) {\n      //   console.log(err);\n      // }\n      // if (initSuppliers) {\n      //   initSuppliers = initSuppliers.json();\n      // }\n      return initSuppliers;\n  }\n\n  const getSuppliers = function*() {\n    yield fetchSuppliers();\n  }\n\n  const takeSupplies = function() {\n    // copy supplies to local array\n    const remainingSupplies = JSON.parse(JSON.stringify(supplies.getSupplies()));\n    let supplyTypes = [];\n    let supplyValues = [];\n    remainingSupplies.forEach(remainingSupply => {\n      const supplyItem = items.getItem(remainingSupply);\n      supplyTypes.push(supplyItem.type);\n      supplyValues.push(supplyItem.value);\n    });\n    let currentSupplier = 0;\n    const supplierCount = suppliers.length;\n    // loop through each supply item\n    remainingSupplies.forEach((remSupply, remNum) => {\n      // create an order based on last supplier to take an\n      // item and proceeded sequentially to include all\n      // suppliers\n      let supplierTries = [];\n      for (let i = 0; i < supplierCount; i++) {\n        let thisIndex = currentSupplier + i;\n        if (thisIndex >= supplierCount) {\n          thisIndex -= supplierCount;\n        }\n        supplierTries.push(thisIndex);\n      }\n      let taken = false;\n      \n      // check with each supplier if type of current supply is\n      // in their offerings\n      supplierTries.forEach(supplierIndex => {\n        let favorites = suppliers[supplierIndex].rankedOfferings;\n        for (let fave of favorites) {\n          // if type of supplier's offering equals type of this supply\n          if (fave.type === supplyTypes[remNum]) {\n            if (!taken && suppliers[supplierIndex].gold >= supplyValues[remNum]) {\n              // if supplier inventory not initialized, set to empty array\n              if (suppliers[supplierIndex].inventory === null) {\n                suppliers[supplierIndex].inventory = [];\n              }\n\n              // remove item from supply\n              let thisSupply = supplies.depleteSupply(remSupply);\n              if (Array.isArray(thisSupply)) {\n                thisSupply = thisSupply[0];\n              }\n\n              suppliers[supplierIndex].gold -= supplyValues[remNum];\n\n              // put item in supplier's inventory\n              suppliers[supplierIndex].inventory.push(thisSupply);\n\n              // mark item taken;\n              taken = true;\n              currentSupplier = supplierIndex + 1;\n              if (currentSupplier > supplierCount) {\n                currentSupplier = 0;\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      const gGetSuppliers = getSuppliers();\n      gGetSuppliers.next().value\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              thisSupplier.gold = startingGold;\n              suppliers.push(thisSupplier);\n            }\n            suppliers.forEach(supplier => supplier.rankFavorites());\n            dispatchSuppliers(suppliers);\n            return suppliers;\n          }\n        });\n    },\n    getSuppliers: function() {\n      return suppliers;\n    },\n    takeSupplierTurn: function() {\n      takeSupplies();\n      dispatchSuppliers(suppliers);\n      dispatchSupplyReady(false);\n    },\n    sellItem: function (payload) {\n      const { id, itemId, price} = payload;\n      \n      const thisSupplier = suppliers.find(refSupplier => refSupplier.id === id);\n      if (!thisSupplier) {\n        return false;\n      }\n      const sellPayload = {\n        id: itemId,\n        price: price\n      }\n\n      const resSale = thisSupplier.sellItem(sellPayload);\n      if (!resSale) {\n        return false;\n      }\n      return true;\n    },\n    takeSupplierIncomeTurns: function() {\n      if (suppliers.length < 1) return;\n      suppliers.forEach(supplier => {\n        supplier.takeIncome();\n      })\n    },\n    updateSuppliers: function() {\n      dispatchSuppliers(suppliers);\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, \n  SET_STORE_GOLD, \n  SET_DAY, \n  SET_SUPPLIERS, \n  SET_STORE_NAME\n } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n  if (res.data && res.data.import_nickname) {\n    dispatch({ type: SET_STORE_NAME, name: res.data.nickname});\n  }\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}\n","import React from 'react';\nimport './Store.css';\n\n// import game modules\n// import gameStore from '../../game_modules/store';\nimport gameInventory from '../../game_modules/storeInventory';\n\n\n// import components\nimport ItemTypes from '../../Utilities/itemTypes';\nimport StoreInventory from '../StoreInventory/StoreInventory';\n\n\n// redux imports\nimport { SET_STORE_GOLD,\n  SET_STORE_FILTER, \n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.mobileMultiplier = 2;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n\n    this.getMobileDetail = this.getMobileDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.getFilter = this.getFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.getIncrementButtons = this.getIncrementButtons.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }\n\n  handleFilter(e) {\n    let currentType = e.target.value;\n    this.props.setStoreFilter(currentType);\n  }\n\n  increaseMarkup() {\n    this.setState({ \n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  // Proccess mousedown event to start incremental markup\n  onMouseDown(e) {\n    const refBtn = e.target;\n    if (refBtn.classList.contains(\"decreaseAll\") ||\n      refBtn.classList.contains(\"minus\")) {\n      this.valence = -1;\n    }\n    if (refBtn.classList.contains(\"increaseAll\" ||\n      refBtn.classList.contains(\"plus\"))) {\n      this.valence = 1;\n    }\n    this.repeat();\n  }\n\n  repeat() {\n    this.increaseMarkup();\n    if (this.valence === -1) {\n      this.handleDecrease();\n    }\n    if (this.valence === 1) {\n      this.handleIncrease();\n    }\n    let totalDelay = this.delay;\n    if (!this.props.pc) {\n      totalDelay *= this.mobileMultiplier;\n    } \n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(this.repeat, totalDelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleIncrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: this.state.markup\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handleDecrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: (this.state.markup * -1)\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementButtons() {\n    if (!this.props.filterActive) return '';\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getFilter() {\n    if (!this.props.filterActive) return '';\n    const itemTypesArr = Object.values(ItemTypes);\n    return (\n      <select className=\"StoreItemTypeFilter\" \n        defaultValue={this.props.storeFilter}\n        onChange={this.handleFilter}>\n        <option value=\"all\">all</option>\n        {itemTypesArr.map(itemType => {\n          return (\n            <option value={itemType}>{itemType}</option>\n          )\n        })}\n      </select>\n    )\n  }\n\n  toggleFilter() {\n    const newValue = !this.props.filterActive;\n    if (newValue && this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      inventoryComponent.handleMobileFocus(this.props.mobileItemDetail);\n    }\n    this.props.setStoreFilterActive(newValue);\n  }\n\n  getMobileDetail() {\n    if (this.props.isPc) {\n      return '';\n    }\n    if (this.props.filterActive && !this.props.mobileDetail) {\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          {this.getIncrementButtons()}\n          {this.getFilter()}\n        </div>\n      )\n    }\n    if (this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive primary-surface\">\n          <div className=\"itemDetailName\">{this.props.mobileItemDetail.name}</div>\n          {inventoryComponent.getIncrementOneButtons(this.props.mobileItemDetail.id)}\n          {inventoryComponent.getIncrementAllButtons(this.props.mobileItemDetail.prototypeId)}\n        </div>\n      )\n    }\n    return (\n      <div className=\"MobileDetailContainer\"></div>\n    );\n  }\n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar darkgrey\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <div className=\"FilterGroup\">\n            {this.props.isPc ? this.getIncrementButtons() : ''}\n            {this.props.isPc ? this.getFilter() : ''}\n          </div>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\" onClick={this.toggleFilter}>&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n        </div>\n        <StoreInventory />\n        {this.getMobileDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold()),\n    setStoreFilter: (filter) => dispatch({ type: SET_STORE_FILTER, filter: filter }),\n    setStoreFilterActive: (value) => dispatch({ type: SET_STORE_FILTER_ACTIVE, value: value }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './SupplierBuyButton.css';\n\nclass SupplierBuyButton extends React.Component {\n  render() {\n    return (\n      <div className=\"SupplierBuyButton button secondary\">\n        <div className=\"supplierBuyButtonIcon\">\n          buy\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SupplierBuyButton;","import React from 'react';\nimport './Supplier.css';\n\nimport SupplierBuyButton from '../SupplierBuyButton/SupplierBuyButton';\n\n// game module imports\nimport gameItems from '../../game_modules/items';\nimport gameSuppliers from '../../game_modules/suppliers'\nimport gameStore from '../../game_modules/store';\nimport gameStoreInventory from '../../game_modules/storeInventory';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n\nclass Supplier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppllierInventory = this.getSuppllierInventory.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handlePurchase(payload) {\n    const { ids, price } = payload;\n\n    if (price > this.props.storeGold) {\n      return;\n    }\n\n    // sell first item of object\n    const sellId = ids[0];\n    const sellPayload = {\n      id: this.props.supplier.id,\n      itemId: sellId,\n      price: price\n    }\n    let sellRes = gameSuppliers.sellItem(sellPayload);\n    if (!sellRes) {\n      return;\n    }\n\n    // transact sale for vendor\n    gameStore.chargeGold(price);\n    gameStoreInventory.addItem(sellId);\n\n    // update state\n    gameStore.updateGold();\n    gameStoreInventory.updateStoreInventory();\n    gameSuppliers.updateSuppliers();\n\n  }\n\n  getSuppllierInventory() {\n    if (!this.props.initialized) {\n      return ''\n    }\n    // get details on items from ids\n    let thisInventory = [];\n    this.props.supplier.inventory.forEach(id => {\n      let inventoryItem = gameItems.getItem(id);\n      thisInventory.push(inventoryItem);\n    });\n\n    // organize all items by item name\n    let inventoryGroups = {};\n    let valueGroups = {}\n    let typeGroups = {}\n    let idGroups = {}\n    thisInventory.forEach(item => {\n      if (!inventoryGroups[item.name]) {\n        inventoryGroups[item.name] = 1;\n        valueGroups[item.name] = item.value;\n        typeGroups[item.name] = item.type;\n        idGroups[item.name] = [item.id]\n      } else {\n        inventoryGroups[item.name] += 1;\n        idGroups[item.name].push(item.id);\n      }\n    });\n\n    // create array of composed items\n    let composedItems = []\n    for (const [key, value] of Object.entries(inventoryGroups)) {\n      let item = { name: key, count: value, type: typeGroups[key], value: valueGroups[key], ids: idGroups[key] };\n      composedItems.push(item);\n    }\n\n    composedItems.sort((item1, item2) => {\n      const nameA = item1.name.toUpperCase();\n      const nameB = item2.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return composedItems.map(item => {\n      const offerings = this.props.supplier.offerings;\n      const typeIndex = offerings.findIndex(offering => offering.type === item.type);\n      \n      let composedValue = item.value;\n      if (typeIndex !== -1) {\n        composedValue = composedValue * (1 + (offerings[typeIndex].markup / 1000));\n        composedValue = Math.floor(composedValue);\n      }\n\n      return (\n        <div className=\"SupplierInventoryItem itemBackground\" key={item.id}>\n          <span className=\"SupplierInventoryItemName\">{item.name} ({item.count})</span>\n          <div className=\"SupplierItemsValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{composedValue}</span>\n          </div>\n          <div className=\"BuyButtonContainer\" onClick={() => this.handlePurchase({ ids: item.ids, price: composedValue })}>\n              <SupplierBuyButton />\n            </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    let supplierClass = \"Supplier primary\";\n    if (this.props.isMobile) {\n      supplierClass += \" mobileSupplier\";\n    }\n    return (\n      <div className={supplierClass}>\n        <div className=\"SupplierName\">\n          {this.props.supplier.name}\n          <div className=\"SupplierValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{this.props.supplier.gold}</span>\n          </div>\n        </div>\n        <div className=\"supplierInventory primary-light\">\n          {this.getSuppllierInventory()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    supplyReady: state.supplies.ready,\n    storeGold: state.storeState.gold,\n    isMobile: state.app.isMobile\n  }\n}\n\nexport default connect(mapStateToProps)(Supplier);","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_SUPPLIERS_INITIALIZED } from '../../actions/types';\n\n// game imports\nimport gameSupplier from '../../game_modules/suppliers';\nimport gameSupplies from '../../game_modules/supplies';\n// import suppliers from '../../game_modules/suppliers';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppliers = this.getSuppliers.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateSuppliers = this.updateSuppliers.bind(this);\n  }\n\n  updateSuppliers() {\n    if (Array.isArray(this.props.suppliers) && this.props.supplySpawned) {\n      if (!this.props.supplyReady) {\n        gameSupplies.fillSupplies();\n      }\n    }\n    if (Array.isArray(this.props.suppliers) && this.props.supplyReady) {\n      if (!this.props.suppliersInitialized) {\n        gameSupplier.takeSupplierTurn();\n        this.props.setSuppliersInitialized(true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateSuppliers();\n  }\n\n  componentDidUpdate() {\n    this.updateSuppliers();\n  }\n\n  getSuppliers() {\n    let supplierContainerClass = \"suppliersContainer\";\n    let spacerClass = \"spacer\";\n    if (!this.props.isPc) {\n      supplierContainerClass += \" nonPcContainer\";\n      supplierContainerClass += \" mobileContainer\";\n      spacerClass += \" mobileSpacer\";\n    }\n    let currentSuppliers = this.props.suppliers;\n    if (Array.isArray(currentSuppliers)) {\n      const suppliersDisplay = currentSuppliers.map(renderSupplier => {\n        return (<Supplier supplier={renderSupplier} initialized={this.props.suppliersInitialized}/>);\n      });\n\n      return (\n        <div className={supplierContainerClass}\n          ref={node => {\n            this.container = node;\n          }}>\n          {suppliersDisplay}\n          <div className={spacerClass}></div>\n        </div>\n      );\n    } else {\n      return 'no suppliers to render';\n    }\n    \n  }\n  \n  render() {\n    let suppliersClass = \"Suppliers primary-dark\";\n    if (!this.props.isPc) {\n      suppliersClass += \" mobileSuppliers\";\n    }\n    return (\n      <div className={suppliersClass}>\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    supplyReady: state.supplies.ready,\n    supplySpawned: state.supplies.spawned,\n    isPc: state.app.isPc,\n    isMobile: state.app.isMobile,\n    suppliersInitialized: state.suppliers.initialized\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSuppliersInitialized: (value) => dispatch({ type: SET_SUPPLIERS_INITIALIZED, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Suppliers);","const gameConstants = {\n  maxSuppliers: 3,\n  startingAdventurers: 5,\n  dailyAdventurers: 1,\n  adventurerStartingGold: 400\n}\n\nexport default gameConstants;","// game imports\nimport items from './items';\nimport adventurersModule from './adventurers';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_DUNGEON_LEVELS, \n  SET_DUNGEON_LEVEL_EXPLORED,\n  SET_DUNGEON_ADVENTURERS } from '../actions/types';\n\nconst dungeon = (function(){\n  let levels = [];\n  // {\n  // adventurerId: n,\n  // level: n\n  //}\n  let adventurers = [];\n  let levelCount;\n\n  let exploredLevel = 0;\n\n  const Level = function(payload) {\n    const {\n      number, \n      boss, \n      bossId, \n      monstersMinLevel, \n      monstersMaxLevel,\n      tileAssignments,\n      treasureDropList\n    } = payload;\n    this.number = number;\n    this.boss = boss;\n    this.bossId = bossId;\n    this.monstersMinLevel = monstersMinLevel;\n    this.monstersMaxLevel = monstersMaxLevel;\n    this.tileAssignments = tileAssignments;\n    this.treasureDropList = treasureDropList;\n    this.treasures = [];\n    this.droppedTreasures = [];\n    this.monsters = [];\n    this.lurkingMonsters = [];\n    this.monstersLoot = [];\n    this.treasureListFetched = false;\n    this.monstersFetched = false;\n    this.monsterDropListItemsFetched = false;\n    this.intialized = false;\n  }\n\n  Level.prototype.initialize = async function() {\n    \n    //const monstersToAdd = getMonstersForLevel(this.monstersMinLevel, this.monstersMaxLevel);\n    return new Promise((resolve, reject) => {\n      const tGetMonstersForLevel = getMonstersForLevel(this.monstersMinLevel, this.monstersMaxLevel);\n      tGetMonstersForLevel.next().value.then((monstersToAdd) => {\n        if (!monstersToAdd) return false;\n        let monsterDrops = [];\n        // compose list of items to fetch\n        monstersToAdd.forEach(addMonster => {\n          this.monsters.push(addMonster);\n          const addMonsterDrops = addMonster.drop_list.drops;\n          if (addMonsterDrops) {\n            addMonsterDrops.forEach(addDrop => {\n              const addId = addDrop.itemId;\n              if (!monsterDrops.find(item => item.itemId === addId)) {\n                monsterDrops.push({ itemId: addId, dropType: addDrop.drop_type});\n              }\n            })\n          }\n        });\n  \n        // compose list of items to fetch\n        let treasureDrops = [];\n        this.treasureDropList.drops.forEach(drop => {\n          const addId = drop.itemId;\n          if (!treasureDrops.find(item => item.itemId === addId)) {\n            treasureDrops.push({ itemId: addId, dropType: drop.drop_type });\n          }\n        });\n        new Promise((resolveMonsterDrops, rejectMonsterDrops) => {\n          // fetch monster drop list items\n          monsterDrops.forEach((monsterDrop, mDropN) => {\n            const mGetDrop = getDrop(monsterDrop);\n            mGetDrop.next().value.then((resolvedDrop) => {\n              if (Array.isArray(resolvedDrop)) {\n                resolvedDrop = resolvedDrop[0];\n              }\n              this.monstersLoot.push(resolvedDrop);\n              if (mDropN === monsterDrops.length -1) {\n                resolveMonsterDrops();\n              }\n            })\n          });\n        })\n        .then(() => {\n            new Promise((resolveTreasureDrops, rejectTreasureDrops) => {\n              // fetch items for treasure drop lists\n              treasureDrops.forEach((treasureDrop, tDropN) => {\n                const tGetDrop = getDrop(treasureDrop);\n                tGetDrop.next().value.then((resolvedDrop) => {\n                  if (Array.isArray(resolvedDrop)) {\n                    resolvedDrop = resolvedDrop[0];\n                  }\n                  this.treasures.push(resolvedDrop);\n                  if (tDropN === treasureDrops.length -1) {\n                    resolveTreasureDrops();\n                  }\n                });            \n              })\n            })\n            .then(() => {\n              this.initialized = true;\n              console.log('level initialized.');\n              resolve(true);\n            });\n          });\n      });\n    })\n    \n  }\n\n  Level.prototype.activateTile = async function(adventurer) {\n    return new Promise((resolve, reject) => {\n      let tileOutcomes = [];\n      for (let tileI = 0; tileI < this.tileAssignments.length; tileI++) {\n        const weight = this.tileAssignments[tileI].probability;\n        const result = Math.random() * weight;\n        tileOutcomes.push({ tile: tileI, result: result });\n      }\n      tileOutcomes.sort((outcome1, outcome2) => {\n        if (outcome1.result > outcome2.result) {\n          return -1;\n        } else if (outcome1.result < outcome2.result) {\n          return 1;\n        } else return 0;\n      });\n      console.log(tileOutcomes);\n      const resultTileI = tileOutcomes[0].tile;\n      console.log(this.tileAssignments[resultTileI]);\n      const resultTile = this.tileAssignments[resultTileI].dungeon_tile;\n      let innTreasureBoost = 0;\n      if (adventurer.informed) {\n        innTreasureBoost = 200;\n      }\n      const actions = adventurersModule.getActions();;\n      let checkTreasureBoost = 0;\n      if (adventurer.action === actions.checkForTreasure) {\n        checkTreasureBoost = 100;\n      }\n      let checkTrapBoost = 0;\n      if (adventurer.action === actions.checkForTraps) {\n        checkTrapBoost = 125;\n      }\n      const treasureProb = Math.random() * (resultTile.treasure + innTreasureBoost + checkTreasureBoost);\n      const encounterProb = Math.random() * resultTile.encounter;\n      const trapProb = Math.random() * (resultTile.trap - checkTrapBoost);\n      const threshholdProb = Math.random() * 500;\n      if (threshholdProb > treasureProb && threshholdProb > encounterProb && threshholdProb > trapProb) {\n        return;\n      }\n      if (treasureProb > encounterProb && treasureProb > trapProb) {\n        const treasureIndex = Math.floor(Math.random() * this.treasures.length);\n        const treasures = this.treasures;\n        const treasure = treasures[treasureIndex];\n        console.log(treasureIndex);\n        console.log(treasures);\n        console.log(treasures[0]);\n        console.log(treasure);\n        // compose payload for Item constructor\n        const payload = items.composePayloadFromProto(treasure);\n        let itemId = items.createItem(payload);\n        const treasureItem = items.getItem(itemId);\n        adventurer.considerTreasure(treasureItem);\n      } else if (trapProb > treasureProb && trapProb > encounterProb) {\n        adventurer.encounterTrap(this.number);\n      } else if (encounterProb > trapProb && encounterProb > treasureProb) {\n        console.log('perform encounter');\n      }\n      resolve();\n    });\n    \n  }\n\n  const dispatchLevels = function() {\n    const payload = {\n      type: SET_DUNGEON_LEVELS,\n      payload: levels\n    };\n    store.dispatch(payload);\n  }\n\n  const dispatchExploredLevel = function() {\n    const payload = {\n      type: SET_DUNGEON_LEVEL_EXPLORED,\n      level: exploredLevel\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchAdventurers = function() {\n    const payload = {\n      type: SET_DUNGEON_ADVENTURERS,\n      adventurers: adventurers\n    }\n    store.dispatch(payload);\n  }\n\n  const orderLevels = function() {\n    levels.sort((level1, level2) => {\n      if (level1.number > level2.number) {\n        return 1;\n      } else if (level1.number < level2.number) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  const fetchLevels = async function() {\n    let initLevels = fetcher.fetchRoute('levels-full');\n    return initLevels;\n  }\n\n  const getLevels = function*() {\n    yield fetchLevels();\n  }\n\n  const addAdventurer = function(adventurerId) {\n    adventurers.push({ adventurerId: adventurerId, level: 1});\n    if (exploredLevel < 1) {\n      exploredLevel = 1;\n      dispatchExploredLevel();\n    }\n  }\n\n  const deleteAdventurer = function(adventurerId) {\n    adventurers = adventurers.filter(adventurer => adventurer.adventurerId !== adventurerId);\n  }\n\n  const getMonstersForLevel = function*(minLevel, maxLevel) {\n    yield fetchMonstersInRange(minLevel, maxLevel);\n  }\n\n  const fetchMonstersInRange = async function(minLevel, maxLevel) {\n    const fetchUrl = `/monsters-in-level-range?min-level=${minLevel}&max-level=${maxLevel}`;\n    let fetchedMonsters;\n    try {\n      fetchedMonsters = await fetch(fetchUrl);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (fetchedMonsters) {\n      fetchedMonsters = fetchedMonsters.json();\n    }\n\n    return fetchedMonsters;\n  }\n\n  const getDrop = function*(drop) {\n    yield fetchDrop(drop);\n  }\n\n  const fetchDrop = async function(drop) {\n    const fetchUrl = `/${drop.dropType}-id?id=${drop.itemId}`;\n    let fetchedDrop;\n    try {\n      fetchedDrop = await fetch(fetchUrl);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (fetchedDrop) {\n      fetchedDrop = fetchedDrop.json();\n    }\n  \n    return fetchedDrop;\n  }\n\n  const loadLevel = async function() {\n    return new Promise((resolve, reject) => {\n      const nextLevelN = exploredLevel + 1;\n      let nextLevel = levels.find(level => level.number === nextLevelN);\n      nextLevel.initialize()\n        .then((completed) => {\n          resolve(completed);\n        })\n      })\n  }\n\n  return {\n    initializeLevels: async function() {\n      const genGetLevels = getLevels();\n      genGetLevels.next().value\n        .then(initLevels => {\n          if (!initLevels) return false;\n          while (initLevels.length > 0) {\n            let newLevel = initLevels.shift();\n            if (Array.isArray(newLevel)) {\n              newLevel = newLevel[0];\n            }\n            const levelPayload = {\n              number: newLevel.number,\n              boss: newLevel.boss,\n              bossId: newLevel.boss_id,\n              monstersMinLevel: newLevel.monsters_min_level,\n              monstersMaxLevel: newLevel.monsters_max_level,\n              tileAssignments: newLevel.tile_assignments,\n              treasureDropList: newLevel.drop_list\n            }\n            let thisLevel = new Level(levelPayload);\n            levels.push(thisLevel);\n          }\n        }).then(() => {\n          levelCount = levels.length;\n          orderLevels();\n          dispatchLevels();\n          dispatchExploredLevel();\n        });\n    },\n    updateLevels: function() {\n      dispatchLevels();\n    },\n    getExploredLevel: function() {\n      return exploredLevel;\n    },\n    receiveAdventurer: function(adventurerId) {\n      addAdventurer(adventurerId);\n      dispatchAdventurers();\n    },\n    releaseAdventurer: function(adventurerId) {\n      deleteAdventurer(adventurerId);\n      dispatchAdventurers();\n    },\n    executeTurn: async function(adventurer) {\n      return new Promise((resolve, reject) => {\n        const dungeonEntry = adventurers.find(dunAdventurer => dunAdventurer.adventurerId === adventurer.id);\n        const currentLevel = levels.find(level => level.number === dungeonEntry.level);\n        currentLevel.activateTile(adventurer)\n          .then(() => {\n            resolve();\n          });\n      })\n    },\n    checkLevelReadiness: function() {\n      if (exploredLevel === 0) return false;\n      if (!adventurers) return false;\n      let highestLevel = 1;\n      for (let adventurerI = 0; adventurerI < adventurers.length; adventurerI++) {\n        if (adventurers[adventurerI].level > highestLevel) {\n          highestLevel = adventurers[adventurerI].level;\n        }\n      }\n      if (exploredLevel <= highestLevel) {\n        if (exploredLevel < levelCount) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return true;\n    },\n    loadNextLevel: function*() {\n      yield loadLevel();\n    }\n  }\n}());\n\nexport default dungeon;","const tagProcessor = (function(){\n\n  const filterClasses = {\n    name: 'adventurerNameTag',\n    status: 'status'\n  }\n\n  return {\n    getFilterClasses: function() {\n      return filterClasses;\n    }\n  }\n}());\n\nexport default tagProcessor;","import React from 'react';\n\n// constant imports\nimport gameConstants from './gameConstants';\n\n// game imports\nimport storeInventory from './storeInventory';\nimport playerStore from './store';\nimport items from './items';\nimport dungeon from './dungeon';\nimport days from './days';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\nimport itemTypes from '../Utilities/itemTypes';\nimport tagProcessor from '../Utilities/tagProcessor';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_ADVENTURERS } from '../actions/types';\n\nconst adventurers = (function(){\n  let adventurers = [];\n  let currentId = 0;\n\n  const maxInventory = 15;\n  const defaultActionDays = 2;\n\n  const actions = {\n    checkForTreasure: 'checkForTreasure',\n    checkForTraps: 'checkForTraps',\n    setTrap: 'setTrap'\n  }\n\n  const decisions = {\n    usePotion: 'usePotion',\n    advance: 'advance',\n    checkForTraps: 'checkForTraps',\n    checkForTreasure: 'checkForTreasure',\n    setTrap: 'setTrap',\n    returnToTown: 'returnToTown',\n    advanceNextLevel: 'advanceNextLevel'\n  }\n\n  const setTrapBehavior = {\n    thief: 600,\n    soldier: 200,\n    bard: 450\n  }\n\n  const Adventurer = function(payload) {\n    const { name, \n      strength, \n      speed, \n      cunning, \n      intelligence,\n      constitution,\n      dungeonBehavior,\n      townBehavior,\n      adventurerClass } = payload;\n      this.name = name;\n      this.strength = strength;\n      this.speed = speed;\n      this.cunning = cunning;\n      this.intelligence = intelligence;\n      this.constitution = constitution;\n      this.dungeonBehavior = dungeonBehavior;\n      this.townBehavior = townBehavior;\n      this.adventurerClass = adventurerClass;\n      this.gold = gameConstants.adventurerStartingGold;\n      this.level = 1;\n      this.experience = 0;\n      this.hp = 7 + constitution;\n      this.maxHp = this.hp;\n      this.inventory = [];\n      this.equipment = { weapon: null, armor: null };\n      this.inDungeon = false;\n      this.informed = false;\n      this.hasFoundStairs = false;\n      this.currentTotalDungeonTurns = 0;\n      this.action = {\n        currentAction: null,\n        turns: 0\n      }\n      this.id = currentId;\n      currentId++;\n  }\n\n  Adventurer.prototype.checkAccount = function(value) {\n    return this.gold >= value;\n  }\n\n  Adventurer.prototype.chargeAccount = function(value) {\n    this.gold -= value;\n  }\n\n  Adventurer.prototype.unequipItem = function(slot) {\n    this.equipment[slot] = null;\n  }\n\n  Adventurer.prototype.equipItem = function(item) {\n    this.equipment[item.type] = item;\n  }\n\n  Adventurer.prototype.getCurrentItemCount = function(protoId) {\n    if (this.inventory.length <= 0) return 0;\n    let protoCount = 0;\n    for (let item of this.inventory) {\n      if (item.prototypeId === protoId) {\n        protoCount++;\n      }\n    }\n    return protoCount;\n  }\n\n  Adventurer.prototype.addCombatLog = function(message) {\n    if (! this.combatLog) {\n      this.combatLog = [];\n    }\n    this.combatLog.push(message);\n  }\n\n  Adventurer.prototype.getCombatLog = function() {\n    if (! this.combatLog) {\n      this.combatLog = [];\n    }\n    return this.combatLog;\n  }\n\n  Adventurer.prototype.checkHealthChoice = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let decisionFactor = percentLost + (this.dungeonBehavior.conserve_health / 1000);\n    const needHealing = decisionFactor > Math.random();\n    return needHealing;\n  }\n\n  Adventurer.prototype.checkHasPotion = function() {\n    return this.inventory.find(item => item.item.type === itemTypes.potion);\n  }\n\n  Adventurer.prototype.checkPotionUse = function() {\n    let decisionFactor = (this.dungeonBehavior.use_potion / 1000);\n    const usePotion = decisionFactor > Math.random();\n    return usePotion;\n  }\n\n  Adventurer.prototype.usePotion = function() {\n  // let heldPotions = this.inventory.filter(item => item.item.type === itemTypes.potion);\n    console.log('use potion');\n  }\n\n  Adventurer.prototype.checkTrapDecision = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let decisionFactor = (percentLost * 3) + (this.dungeonBehavior.check_for_traps / 1000);\n    const checkTraps = decisionFactor > Math.random();\n    return checkTraps;\n  }\n\n  Adventurer.prototype.checkTreasureDecision = function() {\n    const decisionFactor = (this.dungeonBehavior.search_for_treasure / 1000);\n    const checkTreasure = decisionFactor > Math.random();\n    return checkTreasure;\n  }\n\n  Adventurer.prototype.checkSetTrapDecision = function() {\n    const setTrap = setTrapBehavior[this.adventurerClass.name];\n    const decisionFactor = (setTrap / 1000) + (this.dungeonBehavior.prefer_weaker_monster / 4000);\n    const doSetTrap = decisionFactor > Math.random();\n    return doSetTrap;\n  }\n\n  Adventurer.prototype.checkAdvanceDecision = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    const inventoryCount = this.inventory.length;\n    const inventoryPercentEmpty = maxInventory - (inventoryCount / maxInventory);\n    const fillInventoryDesire = ((this.dungeonBehavior.fill_inventory) * inventoryPercentEmpty) / 1000;\n    const decisionFactor = (this.dungeonBehavior.advance_tile / 1000) - (percentLost * 2) - (this.currentTotalDungeonTurns / 600) + (fillInventoryDesire * 3);\n    const advanceDecision = decisionFactor > Math.random();\n    return advanceDecision;\n  }\n\n  Adventurer.prototype.checkReturnToTown = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let turnsInfluence = 1;\n    let turnsFactor;\n    if (this.currentTotalDungeonTurns < 15) {\n      turnsInfluence = -1;\n      turnsFactor = (15 - (turnsInfluence * this.currentTotalDungeonTurns)) / 15; \n    } else {\n      turnsFactor = (turnsInfluence * this.currentTotalDungeonTurns) / 400;\n    }\n    const inventoryCount = this.inventory.length;\n    const inventoryPercentEmpty = maxInventory - (inventoryCount / maxInventory);\n    const fillInventoryDesire = ((this.dungeonBehavior.fill_inventory) * inventoryPercentEmpty) / 1000;\n    const decisionFactor = (this.dungeonBehavior.return_to_town / 1000) - (fillInventoryDesire * 5) + (percentLost * 2) + turnsFactor;\n    const returnDecision = decisionFactor > Math.random();\n    return returnDecision; \n  }\n\n  Adventurer.prototype.considerTreasure = function(item) {\n    if (this.inventory.length < maxInventory) {\n      this.inventory.push(item);\n      return true;\n    }\n    // insert logic for weighing item values if inventory is full\n  }\n\n  Adventurer.prototype.encounterTrap = function(dungeonLevel) {\n    const trapDamage = 3 * (Math.pow(1.25, (dungeonLevel - 1)));\n    console.log(`trapDamage: ${trapDamage}`);\n  }\n\n  const TurnController = function() {\n    this.currentTurns = [];\n    this.currentdId = 0;\n  }\n\n  TurnController.prototype.addTurn = function(turn) {\n    turn.id = this.currentId;\n    this.currentTurns.push(turn);\n    this.currentId++;\n  }\n\n  TurnController.prototype.clearTurn = function(id) {\n    let deletedTurn = this.currentTurns.find(foundTurn => foundTurn.id === id);\n    this.currentTurns = this.currentTurns.filter(clearTurn => clearTurn.id!== id);\n    if (deletedTurn) {\n      deletedTurn = null;\n    }\n    if (this.currentTurns.length === 0) {\n      this.currentId = 0;\n    }\n    \n  }\n\n  TurnController.prototype.clearAdventurerTurns = function(payload) {\n    const {\n      adventurerId,\n      day\n    } = payload;\n    let deletedTurns = this.currentTurns.find(foundTurn => foundTurn.adventurerId === adventurerId  && this.foundTurn.day === day);\n    this.currentTurns = this.currentTurns.filter(clearTurn => clearTurn.adventurerId !== adventurerId && clearTurn.day !== day);\n    deletedTurns.forEach(turn => {\n      turn = null\n    });\n  }\n\n  TurnController.prototype.startTurns = function() {\n    if (this.currentTurns.length === 0) return false;\n    const firstTurns = this.currentTurns.filter(turn => turn.turnNumber === 1);\n    firstTurns.forEach(turn => {\n      turn.runTurn();\n    });\n  }\n\n  TurnController.prototype.startTurn = function(payload) {\n    const {\n      adventurerId,\n      day,\n      turn\n    } = payload;\n    const nextTurn = this.currentTurns.find(foundTurn => foundTurn.adventurerId === adventurerId && foundTurn.day === day && foundTurn.turnNumber === turn);\n    if (nextTurn) {\n      nextTurn.runTurn();\n    } \n  }\n\n\n  let turnController;\n\n  const initializeTurnController = function() {\n    turnController = new TurnController();\n  }\n\n  const Turn = function(payload) {\n    const {\n      adventurer,\n      day,\n      turnNumber,\n      nextTurn\n    } = payload;\n    this.adventurer = adventurer;\n    this.adventurerId = adventurer.id;\n    this.day = day;\n    this.turnNumber = turnNumber;\n    this.nextTurn = nextTurn;\n  }\n\n  Turn.prototype.runTurn = async function() {\n    new Promise((resolve, reject) => {\n      const dungeonAdventurer = this.adventurer;\n      let thisDecision = new Decision(dungeonAdventurer.id);\n      if (dungeonAdventurer.hp < dungeonAdventurer.maxHp) {\n        thisDecision.needHealing = dungeonAdventurer.checkHealthChoice();\n        thisDecision.hasPotion = dungeonAdventurer.checkHasPotion();\n        if (thisDecision.needHealing) {\n          if (thisDecision.hasPotion) {\n            thisDecision.usePotion = dungeonAdventurer.checkPotionUse();\n          }\n        }\n      }\n      if (!dungeonAdventurer.action.currentAction) {\n        thisDecision.checkForTraps = dungeonAdventurer.checkTrapDecision();\n        thisDecision.checkForTreasure = dungeonAdventurer.checkTreasureDecision();\n        thisDecision.setTrap = dungeonAdventurer.checkSetTrapDecision();\n      }\n      thisDecision.advance = dungeonAdventurer.checkAdvanceDecision();\n      thisDecision.returnToTown = dungeonAdventurer.checkReturnToTown();\n\n      // get decision from decision object\n      let resultDecision;\n      resultDecision = thisDecision.weighDecisionLogical();\n      if (!resultDecision) {\n        resultDecision = thisDecision.weighDecisionTournament();\n      }\n      console.log(resultDecision);\n      if (resultDecision === decisions.usePotion) {\n        dungeonAdventurer.usePotion();\n      }\n      if (resultDecision === decisions.checkForTraps || \n        resultDecision === decisions.checkForTreasure || \n        resultDecision === decisions.setTrap) {\n          dungeonAdventurer.action.currentAction = resultDecision;\n          const turns = dungeonAdventurer.speed * defaultActionDays;\n          dungeonAdventurer.action.turns = turns;\n      }\n      if (resultDecision === decisions.returnToTown){\n        dungeon.releaseAdventurer(dungeonAdventurer.id);\n        dungeonAdventurer.inDungeon = false;\n        const clearPackage = { adventurerId: this.adventurerId, day: this.day };\n        turnController.clearAdventurerTurns(clearPackage);\n        resolve();\n      }\n      new Promise((resolveTurn, rejectTurn) => {\n        if (resultDecision === decisions.advance) {\n          dungeon.executeTurn(dungeonAdventurer)\n            .then(() => {\n              resolveTurn();\n            });\n        } else {\n          resolveTurn();\n        }\n        \n      }).then(() => {\n        resolve();\n      })\n    }).then(() => {\n      if (this.nextTurn) {\n        const payload = { turn: this.nextTurn, adventurerId: this.adventurerId, day: this.day };\n        turnController.startTurn(payload);\n      }\n      turnController.clearTurn(this.id);\n    })\n  }\n\n  const Decision = function(adventurerId) {\n    this.adventurerId = adventurerId;\n    this.needHealing = false;\n    this.hasPotion = false;\n    this.usePotion = false;\n    this.checkForTraps = false;\n    this.checkForTreasure = false;\n    this.setTrap = false;\n    this.advance = false;\n    this.returnToTown = false;\n  }\n\n  Decision.prototype.weighDecisionLogical = function() {\n    if (this.needHealing && this.hasPotion && this.usePotion && !this.advance) {\n      return decisions.usePotion;\n    }\n    if (!this.usePotion && this.advance && !this.checkForTraps && !this.checkTreasure) {\n      return decisions.advance;\n    }\n    if (this.returnToTown && !this.usePotion && !this.hasPotion && !this.advance) {\n      return decisions.returnToTown;\n    }\n    return false;\n  }\n\n  Decision.prototype.weighDecisionTournament = function() {\n    const concernedAdventurer = adventurers.find(adventurer => adventurer.id === this.adventurerId);\n    let remainingOptions = [];\n    // populate hash table with weights for relevant behaviors\n    const weights = {\n      usePotion: concernedAdventurer.dungeonBehavior.use_potion,\n      checkForTraps: concernedAdventurer.dungeonBehavior.check_for_traps,\n      checkForTreasure: concernedAdventurer.dungeonBehavior.search_for_treasure,\n      setTrap: setTrapBehavior[concernedAdventurer.adventurerClass.name],\n      advance: concernedAdventurer.dungeonBehavior.advance_tile,\n      returnToTown: concernedAdventurer.dungeonBehavior.return_to_town\n    }\n    // add decisions marked as valid to array for use in\n    // creating elimination tournament\n    if (this.usePotion && this.hasPotion) {\n      remainingOptions.push(decisions.usePotion);\n    }\n    if (this.checkForTraps) {\n      remainingOptions.push(decisions.checkForTraps);\n    }\n    if (this.checkForTreasure) {\n      remainingOptions.push(decisions.checkForTreasure);\n    }\n    if (this.setTrap) {\n      remainingOptions.push(decisions.setTrap);\n    }\n    if (this.advance) {\n      remainingOptions.push(decisions.advance);\n    }\n    if (this.returnToTown) {\n      remainingOptions.push(decisions.returnToTown);\n    }\n    if (remainingOptions.length === 1) {\n      return remainingOptions[0];\n    }\n    // determine number of tournament rounds for iteration\n    const tournamentRounds = Math.ceil(Math.log2(remainingOptions.length));\n    for (let round = 0; round < tournamentRounds; round++) {\n      // create pairings from outside ends inward\n      const optionsLength = remainingOptions.length;\n      let pairings = [];\n      const pairCount = Math.floor(optionsLength / 2);\n      for (let offest = 0; offest < pairCount; offest++) {\n        const pair = [remainingOptions[offest], remainingOptions[optionsLength - (offest + 1)]];\n        pairings.push(pair);\n      }\n      let eliminated = [];\n      // iterate over pairings and produce weighted outcomes to\n      // eliminate one decision from each pairing\n      pairings.forEach(pair => {\n        const result1 = Math.random() * weights[pair[0]];\n        const result2 = Math.random() * weights[pair[1]];\n        const randomChoice = Math.random();\n        \n        if (result1 > result2 || (result1 === result2 && randomChoice < .5)) {\n          eliminated.push(pair[1])\n        } else {\n          eliminated.push(pair[0]);\n        }\n      });\n      // remove eliminated options from array containing tournament\n      // entrants\n      for (let elIndex = 0; elIndex < eliminated.length; elIndex++) {\n        const eliminate = eliminated[elIndex];\n        remainingOptions = remainingOptions.filter(option => option !== eliminate);\n      }\n    }\n    return remainingOptions[0];\n  }\n\n  const dispatchAdventurers = function(newAdventurers) {\n    const payload = {\n      type: SET_ADVENTURERS,\n      payload: newAdventurers\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchAdventurers = async function() {\n    let initAdventurers = fetcher.fetchRoute('adventurers-full');\n    return initAdventurers;\n  }\n\n  const getAdventurers = function*() {\n    yield fetchAdventurers();\n  }\n\n  const doInn = function() {\n    const availableAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    availableAdventurers.forEach(townAdventurer => {\n      let totalFactor = townAdventurer.townBehavior.use_tavern / 1000;\n      if (townAdventurer.informed) {\n        totalFactor = 0;\n      }\n      const willDrink = totalFactor >= Math.random();\n\n      if (willDrink) {\n        const totalCost = 10 * townAdventurer.level;\n        if (townAdventurer.checkAccount(totalCost)) {\n          const filterClasses = tagProcessor.getFilterClasses();\n          const innJSX = (\n            <div className=\"combatLogEntry\">\n              <span className={filterClasses.name}>{townAdventurer.name} </span>  stayed at the inn. <span className={filterClasses.name}>{townAdventurer.name} </span> is now <span className={filterClasses.status}>informed</span>.\n            </div>);\n          townAdventurer.chargeAccount(totalCost);\n          townAdventurer.informed = true;\n          const combatLogMessage = innJSX;\n          townAdventurer.addCombatLog(combatLogMessage);\n        }\n      }\n    })\n  }\n\n  const doShopping = function() {\n    const inventory = storeInventory.getStoreInventory();\n    let inventoryItems = [];\n    inventory.forEach(item => {\n      let composedItem = item;\n      composedItem.item = items.getItem(item.itemId);\n      inventoryItems.push(composedItem);\n    });\n    const shoppingAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    let adventurerTurn = 0;\n    const adventurerCount = shoppingAdventurers.length;\n    // loop through each inventory item\n    inventoryItems.forEach(item => {\n      // create an order based on last adventurer to take an\n      // item and proceed suequentially to include all\n      // adventurers\n      let adventurerTries = [];\n      for (let i = 0; i < adventurerCount; i++) {\n        let thisIndex = adventurerTurn + i;\n        if (thisIndex >= adventurerCount) {\n          thisIndex -= adventurerCount;\n        }\n        adventurerTries.push(thisIndex);\n      }\n      let taken = false;\n\n      // check with each adventurer if they want the item\n      adventurerTries.forEach(adventurerIndex => {\n        // determine if decision factor is buy or upgrade\n        let decisionFactor = '';\n        const thisAdventurer = shoppingAdventurers[adventurerIndex];\n\n        if (thisAdventurer.equipment[item.item.type] && item.item.type !== itemTypes.potion) {\n          decisionFactor += 'upgrade';\n        } else {\n          decisionFactor += 'buy';\n        }\n        decisionFactor += '_' + item.item.type;\n        const desireWeight = thisAdventurer.townBehavior[decisionFactor];\n        let totalFactor = (desireWeight / 1000) - (item.markup / 1000);\n        if (totalFactor < 0) {\n          totalFactor = 0;\n        }\n        // lessen desire to buy item if adventurer currently has some of it\n        const itemProto = item.item.prototypeId;\n        const currentHoldings = thisAdventurer.getCurrentItemCount(itemProto);\n        if (item.item.type === itemTypes.potion) {\n          totalFactor -= (currentHoldings * .10);\n        } else {\n          totalFactor -= (currentHoldings * .30);\n        }\n        // determine if adventurer will buy item\n        let willBuy = totalFactor >= Math.random();\n        if (thisAdventurer.equipment[item.item.type]) {\n          const currentGear = thisAdventurer.equipment[item.item.type];\n          if (item.item.type === itemTypes.weapon) {\n            const currentDamage = currentGear[itemTypes.weapon].damage;\n            const itemDamage = currentGear[itemTypes.weapon].damage;\n            if (currentDamage >= itemDamage) {\n              willBuy = false;\n            }\n          } else if (item.item.type === itemTypes.armor) {\n            const currentArmor = currentGear[itemTypes.armor].armor;\n            const itemArmor = item.item[itemTypes.armor].armor;\n            if (currentArmor >= itemArmor) {\n              willBuy = false;\n            }\n          }\n        }\n        // cancel buy if adventurer inventory is full\n        if (thisAdventurer.inventory.length >= maxInventory) {\n          willBuy = false;\n        }\n        \n        if (willBuy && !taken) {\n          const totalPrice = Math.floor(item.item.value * (1 + (item.markup / 1000)));\n          if (thisAdventurer.checkAccount(totalPrice)) {\n            thisAdventurer.chargeAccount(totalPrice);\n            playerStore.creditGold(totalPrice);\n            playerStore.updateGold();\n            storeInventory.removeItem(item.itemId);\n            storeInventory.updateStoreInventory();\n            thisAdventurer.inventory.push(item.item);\n            if (!item.item.type === itemTypes.potion) {\n              if (thisAdventurer.equipment[item.item.type]) {\n                thisAdventurer.unequipItem(item.item.type);\n              }\n              thisAdventurer.equipItem(item.item);\n            }\n            taken = true;\n            adventurerTurn = adventurerIndex + 1;\n            if (adventurerTurn > adventurerCount) {\n              adventurerTurn = 0;\n            }\n          }\n        }\n      })\n    })\n  }\n\n  const dungeonEntry = function() {\n    const dungeonGoingAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    dungeonGoingAdventurers.forEach(dungeonAdventurer => {\n      let totalFactor = (dungeonAdventurer.townBehavior.enter_dungeon / 1000)\n      let willEnter = totalFactor >= Math.random();\n\n      if (willEnter) {\n        const filterClasses = tagProcessor.getFilterClasses();\n        const dungeonJSX = (\n          <div className=\"combatLogEntry\">\n            <span className={filterClasses.name}>{dungeonAdventurer.name} </span> entered the dungeon.\n          </div>\n        );\n        dungeonAdventurer.inDungeon = true;\n        dungeonAdventurer.currentTotalDungeonTurns = 0;\n        const combatLogMessage = dungeonJSX;\n        dungeonAdventurer.addCombatLog(combatLogMessage);\n        dungeon.receiveAdventurer(dungeonAdventurer.id);\n      }\n    });\n  }\n\n  const dungeonTurns = function() {\n    const dungeonAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === true);\n    new Promise((resolve, reject) => {\n      dungeonAdventurers.forEach((dungeonAdventurer, dunAdN) => {\n        let totalTurns = dungeonAdventurer.speed;\n        for (let turnNumber = 1; turnNumber <= totalTurns; turnNumber++) {\n          let nextTurn = 0;\n          if (turnNumber < totalTurns) {\n            nextTurn = turnNumber + 1;\n          } else {\n            nextTurn = null;\n          }\n          const turnPayload = {\n            adventurer: dungeonAdventurer,\n            day: days.getDay(),\n            turnNumber: turnNumber,\n            nextTurn: nextTurn\n          }\n          const newTurn = new Turn(turnPayload);\n          turnController.addTurn(newTurn);\n        }\n        if (dunAdN === dungeonAdventurers.length -1) {\n          resolve();\n        }\n      });\n    }).then(() => {\n      turnController.startTurns();\n    });\n  }\n\n  return {\n    initializeAdventurers: async function(maxAdventurers) {\n      const genGetAdventurers = getAdventurers();\n      genGetAdventurers.next().value\n        .then(initAdventurers => {\n          if (initAdventurers) {\n            let drainAdventurers = initAdventurers;\n            while (adventurers.length < maxAdventurers && drainAdventurers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainAdventurers.length);\n              let newAdventurer = drainAdventurers.splice(pushIndex, 1);\n              newAdventurer = newAdventurer[0];\n              const adventurerPayload = {\n                name: newAdventurer.name,\n                strength: newAdventurer.strength, \n                speed: newAdventurer.speed, \n                cunning: newAdventurer.cunning, \n                intelligence: newAdventurer.intelligence,\n                constitution: newAdventurer.constitution,\n                dungeonBehavior: newAdventurer.dungeon_behavior,\n                townBehavior: newAdventurer.town_behavior,\n                adventurerClass: newAdventurer.adventurer_class\n              };\n              let thisAdventurer = new Adventurer(adventurerPayload);\n              adventurers.push(thisAdventurer);\n            }\n            initializeTurnController();\n            dispatchAdventurers(adventurers);\n            return adventurers;\n          }\n        })\n    },\n    updateAdventurers: function() {\n      dispatchAdventurers(adventurers);\n    },\n    takeAdventurerTurn: function() {\n      doInn();\n      doShopping();\n      const loadNextLevel = !dungeon.checkLevelReadiness();\n      if (loadNextLevel) {\n        const loadLevel = dungeon.loadNextLevel();\n        loadLevel.next().value.then(() => {\n          dungeonEntry();\n          dungeonTurns()\n          dispatchAdventurers(adventurers);\n        })\n      } else {\n        dungeonEntry();\n        dungeonTurns()\n        dispatchAdventurers(adventurers);\n      }\n    },\n    getActions: function() {\n      return actions;\n    }\n  }\n}());\n\nexport default adventurers;","// constants\nimport gameConstants from './gameConstants';\n\n// game module imports\nimport days from './days';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\nimport adventurers from './adventurers';\nimport gameStore from './store';\nimport dungeon from './dungeon';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_DETAIL_UPDATE } from '../actions/types';\n\n\nconst main = (function() {\n  \n  let currentMaxLevel = 1;\n  // let townFame = 0;\n\n  const dispatchUpdate = function() {\n    const payload = {\n      type: SET_DETAIL_UPDATE,\n      value: true\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      gameStore.setName(payload.name);\n\n      const startingGold = gameStore.getStartingGold();\n      gameStore.setGold(startingGold);\n\n      supplies.setSupplyLevel(currentMaxLevel);\n      supplies.fillSupplyPool();\n      suppliers.initializeSuppliers(gameConstants.maxSuppliers);\n\n      adventurers.initializeAdventurers(gameConstants.startingAdventurers);\n      dungeon.initializeLevels();\n    },\n\n    getGameLevel: function() {\n      return currentMaxLevel;\n    },\n\n    performTurn: function() {\n      adventurers.takeAdventurerTurn();\n      // need logic for triggering supply pool fetch if\n      // max level has changed\n      supplies.fillSupplies();\n      suppliers.takeSupplierIncomeTurns();\n      suppliers.takeSupplierTurn();\n      dispatchUpdate();\n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\nimport main from '../../game_modules/main';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    main.performTurn();\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days primary-dark\">\n        <div className=\"DayTitle\">Day: {this.props.day}</div>\n        <div className=\"nextDay button secondary\" onClick={this.handleNextDay}\n        >Finish Day</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay()),\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","const pcMenus = {\n  adventurers: 'adventurers',\n  adventurer: 'adventurer',\n  dungeon: 'dungeon',\n  adventurersPartial: 'adventurersPartial'\n}\n\nexport default pcMenus;","// redux imports\nimport { store } from '../index';\nimport { SET_PC_DETAIL } from '../actions/types';\n\nimport pcMenus from './pcMenus';\n\nconst pcDetailMenus = (function(){\n  let currentMenu = '';\n  let currentIndex = 0;\n\n  const menus = [pcMenus.adventurers, pcMenus.dungeon];\n\n  let menuMap = {};\n\n  const mapMenus = function() {\n    menus.forEach((menu, menuN) => {\n      menuMap[menu] = menuN;\n    })\n  }\n\n  const dispatchPCMenu = function() {\n    const payload = {\n      type: SET_PC_DETAIL,\n      detail: currentMenu\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentMenu = menus[0];\n      currentIndex = 0;\n      mapMenus();\n    },\n\n    getCurrentMenu: function() {\n      return currentMenu;\n    },\n\n    nextMenu: function() {\n      currentIndex++;\n      if (currentIndex >= menus.length) {\n        currentIndex = 0;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    previousMenu: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = menus.length - 1;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    getMenus: function() {\n      return menus;\n    },\n\n    setmenu: function(newMenu) {\n      const menuIndex = menuMap[newMenu];\n      if (menuIndex === null) {\n        return false\n      }\n      currentIndex = menuIndex;\n      currentMenu = menus[menuIndex];\n      return true;\n    },\n\n    updateMenu: function() {\n      dispatchPCMenu();\n    }\n  }\n}());\n\nexport default pcDetailMenus;","import React from 'react';\nimport './DetailPCMenu.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport pcDetailMenus from '../../Utilities/pcDetailMenus';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass DetailPCMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleMenuChange = this.handleMenuChange.bind(this);\n    this.getPCDropdown = this.getPCDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    pcDetailMenus.init();\n  }\n\n  handlePrevious() {\n    pcDetailMenus.previousMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleNext() {\n    pcDetailMenus.nextMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setPcDropdown(!this.props.pcDropdown);\n  }\n\n  handleMenuChange(newMenu) {\n    pcDetailMenus.setmenu(newMenu);\n    pcDetailMenus.updateMenu();\n    this.props.setPcDropdown(false);\n  }\n\n  getPCDropdown() {\n    const allMenus = pcDetailMenus.getMenus();\n    if (!this.props.pcDropdown) {\n      return false;\n    }\n    return (\n      <div className=\"PCDropdown primary-dark\">\n        {allMenus.map(menu => {\n          return (\n            <div className=\"PCDropdownOption primary-medium\"\n              onClick={() => this.handleMenuChange(menu)}>\n                {menu}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  render() {\n    let menuName = this.props.pcDetailMenu;\n    if (menuName === pcMenus.adventurersPartial) {\n      menuName = pcMenus.adventurers;\n    }\n    return (\n      <div className=\"PCDetailMenu primary-saturated\">\n        <span className=\"previousMenu screenArrowPC\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"PCMenuTitle\"\n          onClick={this.handleDropdown}>{menuName}</span>\n        <span className=\"nextMenu screenArrowPC\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getPCDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    pcDropdown: state.pcMenu.dropdown,\n    dungeonLevelExplored: state.dungeon.exploredLevel\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPcDetailMenu: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail }),\n    setPcDropdown: (value) => dispatch({ type: SET_PC_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPCMenu);","import { store } from '../index';\nimport { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst screenInfo = (function(){\n  let isPc = true;\n  let isMobile = false;\n  let isFullscreen = true;\n\n  let width = 0;\n\n  const dispatchFullscreen = function() {\n    const payload = {\n      type: SET_IS_FULLSCREEN,\n      value: isFullscreen\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsPc = function() {\n    const payload = {\n      type: SET_IS_PC,\n      value: isPc\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsMobile = function() {\n    const payload = {\n      type: SET_IS_MOBILE,\n      value: isMobile\n    }\n    store.dispatch(payload);\n  }\n\n  const detectPc = function() {\n    const notPc = window.orientation > -1;\n    return !notPc;\n    \n  }\n\n  const setFullScreen = function() {\n    \n    let App = document.querySelector('.App');\n    if (App.requestFullscreen) {\n      App.requestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.msRequestFullscreen) {\n      App.msRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.mozRequestFullscreen) {\n      App.mozRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.webkitRequestFullscreen) {\n      App.webkitRequestFullscreen();\n      isFullscreen = true;\n    }\n    // document.fullscreen = true;\n    // document.fullscreenElement = App;\n  }\n\n  const exitFullScreen = function() {\n    isFullscreen = false;\n    document.exitFullscreen();\n  }\n\n  const setScreenInfo = function() {\n    const app = document.querySelector('.App');\n    const docDimensions = app.getBoundingClientRect();\n    width = docDimensions.width;\n\n    if (width < 768) {\n      isMobile = true\n    } \n  }\n\n  return {\n    init: function() {\n      isPc = detectPc();\n      setScreenInfo();\n      dispatchIsPc();\n      dispatchIsMobile();\n    },\n    getIsPc: function() {\n      return isPc;\n    },\n    getIsMobile: function() {\n      return isMobile;\n    },\n    goFullScreen: function() {\n      setFullScreen();\n      dispatchFullscreen();\n    },\n    leaveFullScreen: function() {\n      exitFullScreen();\n      dispatchFullscreen();\n    }\n  }\n}());\n\nexport default screenInfo;","import { store } from '../index';\nimport { SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../actions/types';\n\nimport screenInfo from './screenInfo';\n\nconst breadcrumb = (function(){\n  let breadcrumbs = [];\n\n  const Breadcrumb = function(payload) {\n    const { \n      displayPayload,\n      isMobile,\n      scrollPos\n    } = payload;\n    this.displayPayload = displayPayload;\n    this.isMobile = isMobile;\n    this.scrollPos = scrollPos;\n  }\n\n  Breadcrumb.prototype.dispatchDisplay = function() {\n    if (this.isMobile) {\n      store.dispatch({ type: SET_MOBILE_SCREEN, screen: this.displayPayload });\n    } else {\n      store.dispatch({ type: SET_PC_DETAIL, detail: this.displayPayload });\n    }\n  }\n\n  return {\n    popBreadcrumb: function() {\n      if (breadcrumbs.length < 1) return false;\n      const nextCrumb = breadcrumbs.pop();\n      nextCrumb.dispatchDisplay();\n    },\n    addBreadcrumb: function(payload) {\n      let { display, scrollPos } = payload;\n      const isMobile = screenInfo.getIsMobile();\n      const newCrumb = new Breadcrumb({ displayPayload: display, scrollPos: scrollPos, isMobile: isMobile });\n      breadcrumbs.push(newCrumb);\n    }\n  }\n}());\n\nexport default breadcrumb;","// redux imports\nimport { store } from '../index';\nimport { SET_MOBILE_SCREEN } from '../actions/types';\n\nconst mobileScreens = (function(){\n  let currentScreen = '';\n  let currentIndex = 0;\n  const screens = ['store', 'suppliers', 'adventurers', 'dungeon'];\n  // const dependentScreens = ['adventurer'];\n\n  const allScreens = {\n    store: 'store',\n    suppliers: 'suppliers',\n    adventurers: 'adventurers',\n    adventurer: 'adventurer',\n    dungeon: 'dungeon',\n    adventurersPartial: 'adventurersPartial'\n  }\n\n  let screenMap = {};\n\n  const mapScreens = function() {\n    screens.forEach((screen, screenN) => {\n      screenMap[screen] = screenN;\n    });\n  }\n\n  const dispatchMobileScreen = function() {\n    const payload = {\n      type: SET_MOBILE_SCREEN,\n      screen: currentScreen\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentScreen = screens[0];\n      currentIndex = 0;\n      mapScreens();\n    },\n\n    getCurrentScreen: function() {\n      return currentScreen;\n    },\n\n    nextScreen: function() {\n      currentIndex++;\n      if (currentIndex >= screens.length) {\n        currentIndex = 0;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    previousScreen: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = screens.length -1;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    getScreens: function() {\n      return screens;\n    },\n\n    getAllScreens: function() {\n      return allScreens;\n    },\n\n    setScreen: function(newScreen) {\n      const screenIndex = screenMap[newScreen];\n      if (screenIndex === null) {\n        return false;\n      } else {\n        currentIndex = screenIndex;\n        currentScreen = screens[screenIndex];\n        return true;\n      }\n    },\n\n    updateScreen: function() {\n      dispatchMobileScreen();\n    }\n  }\n}());\n\nexport default mobileScreens;","import React from 'react';\nimport './Adventurer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_ID, SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\nimport screenInfo from '../../Utilities/screenInfo';\nimport mobileScreens from '../../Utilities/mobileScreens';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass Adventurer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleZoom = this.handleZoom.bind(this);\n  }\n\n  handleZoom() {\n    if (!this.props.adventurer) return;\n    const partialAdventurers = this.props.partialAdventurers;\n    let breadcrumbName = 'adventurers';\n    if (partialAdventurers) {\n      const matched = partialAdventurers.find(adventurerId => adventurerId === this.props.adventurer.id);\n      if (matched !== undefined) {\n        breadcrumbName = 'adventurersPartial';\n      }\n    }\n    this.props.setDetailId(this.props.adventurer.id);\n    const advDOM = document.querySelector('.adventurers');\n    const scrollY = advDOM.scrollTop;\n    console.log(scrollY);\n    breadcrumb.addBreadcrumb({ display: breadcrumbName, screenPos: scrollY });\n    if (screenInfo.getIsMobile()) {\n      const allScreens = mobileScreens.getAllScreens();\n      this.props.setMobileScreen(allScreens.adventurer);\n    } else {\n      this.props.setPCDetail(pcMenus.adventurer);\n    }\n  }\n\n  render() {\n    if (!this.props.adventurer) return '';\n    const adventurer = this.props.adventurer;\n    const adventurerClass = adventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    return (\n      <div className=\"adventurerDisplay primary\"\n        onClick={this.handleZoom}\n      >\n        <div className={adventurerClassIconColor}>{classIcon}</div>\n        <div className=\"adventurerDetails\">\n          <p className=\"adventurerName\">{adventurer.name}</p>\n          <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          <div className=\"adventurerStatGroupWide\">\n            <p className=\"adventurerStatLabel\">exp</p>\n            <p className=\"adventurerStat\">{adventurer.experience}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">lvl</p>\n            <p className=\"adventurerStat\">{adventurer.level}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{adventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{adventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{adventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{adventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{adventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{adventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{adventurer.constitution}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    partialAdventurers: state.adventurers.partialAdventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailId: (id) => dispatch({ type: SET_DETAIL_ID, id: id }),\n    setMobileScreen: (screen) => dispatch({ type: SET_MOBILE_SCREEN, screen: screen }),\n    setPCDetail: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Adventurer);","import React from 'react';\nimport './Adventurers.css';\n\n// component imports\nimport Adventurer from '../Adventurer/Adventurer';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Adventurers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAdventurers = this.getAdventurers.bind(this);\n  }\n\n  getAdventurers() {\n    const adventurers = this.props.adventurers;\n    return adventurers.map(adventurer => {\n      return <Adventurer adventurer={adventurer} />\n    });\n  }\n  \n  render() {\n    if (!this.props.adventurers) return '';\n    return (\n      <div className=\"adventurers\">\n        {this.getAdventurers()}\n        <div className=\"spacer-vertical\"></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    adventurerUpdate: state.adventurers.update\n  }\n}\n\nexport default connect(mapStateToProps)(Adventurers);","import React from 'react';\nimport './AdventurerDetail.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\n\nclass AdventurerDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  getInventory(adventurer) {\n    const adventurerInventory = adventurer.inventory;\n    if (!adventurerInventory) return 'no inventory';\n    return adventurerInventory.map(item => {\n      return (\n        <div className=\"adventurerInventoryItem\">{item.name}</div>\n      )\n    })\n  }\n\n  getCombatLog(adventurer) {\n    if (!adventurer) return 'no combat log';\n    const adventurerCombatLog = adventurer.getCombatLog();\n    if (adventurerCombatLog.length <= 0) {\n      return 'No combat log entries.'\n    }\n  \n    return adventurerCombatLog;\n    \n  }\n\n  handleBack() {\n    const handled = breadcrumb.popBreadcrumb();\n    if (!handled) {\n      console.log('breadcrumb failed!');\n    }\n  }\n  \n  render() {\n    if ((!this.props.detailId && this.props.detailId !== 0) || !this.props.adventurers) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.detailId);\n    const adventurerClass = thisAdventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    \n    return (\n      <div className=\"AdventurerDetail primary\">\n        <div className=\"title-bar\">\n          <div className=\"back-button\"\n            onClick={this.handleBack}>&#8592;</div>\n          <div className=\"adventurer-title\">{thisAdventurer.name}</div>\n        </div>\n        <div className=\"primary-stats-bar\">\n          <div className={adventurerClassIconColor}>{classIcon}</div>\n          <div className=\"primary-cascade\">\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">exp</p>\n              <p className=\"adventurerStat\">{thisAdventurer.experience}</p>\n            </div>\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">lvl</p>\n              <p className=\"adventurerStat\">{thisAdventurer.level}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"adventurerDetailsView\">\n          <div className=\"adventurerStatGroup\">\n            <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{thisAdventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{thisAdventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{thisAdventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{thisAdventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{thisAdventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{thisAdventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{thisAdventurer.constitution}</p>\n          </div>\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Inventory</p>\n        <div className=\"adventurerInventoryDetails\">\n          {this.getInventory(thisAdventurer)}\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Combat Log</p>\n        <div className=\"adventurer-combat-log\">\n          {this.getCombatLog(thisAdventurer)}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    detailId: state.detail.id\n  }\n}\n\nexport default connect(mapStateToProps)(AdventurerDetail);","import React from 'react';\nimport './AdventurersPartial.css';\n\n// component imports\nimport Adventurer from '../Adventurer/Adventurer';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PARTIAL_ADVENTURERS } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\n\nclass AdventurersPartial extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAdventurers = this.getAdventurers.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  getAdventurers(adventurers) {\n    return adventurers.map(adventurer => {\n      return <Adventurer adventurer={adventurer} />\n    });\n  }\n\n  handleBack() {\n    this.props.setPartialAdventurers(null);\n    const handled = breadcrumb.popBreadcrumb();\n    if (!handled) {\n      console.log('breadcrumb failed!');\n    }\n  }\n\n  render() {\n    if (!this.props.adventurers || !this.props.partialAdventurers) return '';\n    let partialAdventurers = this.props.partialAdventurers;\n    let adventurers = this.props.adventurers;\n    partialAdventurers = partialAdventurers.map(adventurerId => {\n      return adventurers.find(adventurer => adventurer.id === adventurerId);\n    })\n    \n    return (\n      <div className=\"adventurers\">\n        <div className=\"back-button partial-back primary\"\n            onClick={this.handleBack}>&#8592;</div>\n        {this.getAdventurers(partialAdventurers)}\n        <div className=\"spacer-vertical\"></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    partialAdventurers: state.adventurers.partialAdventurers,\n    adventurers: state.adventurers.adventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPartialAdventurers: (payload) => dispatch({ type: SET_PARTIAL_ADVENTURERS, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurersPartial);","import React from 'react';\nimport './DungeonLevel.css';\n\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PARTIAL_ADVENTURERS, SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\nimport screenInfo from '../../Utilities/screenInfo';\nimport mobileScreens from '../../Utilities/mobileScreens';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass DungeonLevel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdventurerList = this.handleAdventurerList.bind(this);\n  }\n\n  handleAdventurerList(levelAdventurers) {\n    const adventurerIds = levelAdventurers.map(adventurer => adventurer.adventurerId);\n    this.props.setPartialAdventurers(adventurerIds);\n    const dunDOM = document.querySelector('.Dungeon');\n    const scrollY = dunDOM.scrollTop;\n    breadcrumb.addBreadcrumb({ display: 'dungeon', screenPos: scrollY});\n    if (screenInfo.getIsMobile()) {\n      const allScreens = mobileScreens.getAllScreens();\n      this.props.setMobileScreen(allScreens.adventurersPartial);\n    } else {\n      this.props.setPCDetail(pcMenus.adventurersPartial);\n    }\n  }\n\n  render() {\n    if (!this.props.level) return '';\n    const level = this.props.level;\n    let levelAdventurers = [];\n    const dungeonAdventurers = this.props.dungeonAdventurers;\n    if (dungeonAdventurers) {\n      levelAdventurers = dungeonAdventurers.filter(adventurer => adventurer.level === level.number);\n    }\n    return (\n      <div className=\"levelDisplay primary\">\n        <div className=\"levelNumber\">LEVEL {level.number}</div>\n        <div className=\"adventurersNumberContainer\">\n          <div className=\"adventurersNumber\"\n            onClick={() => this.handleAdventurerList(levelAdventurers)}>\n            {levelAdventurers.length > 0 ? (levelAdventurers.length) : ''}\n          </div>\n          <div className=\"adventurersNumberLabel\">adventurers</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonAdventurers: state.dungeon.adventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPartialAdventurers: (payload) => dispatch({ type: SET_PARTIAL_ADVENTURERS, payload: payload }),\n    setMobileScreen: (screen) => dispatch({ type: SET_MOBILE_SCREEN, screen: screen }),\n    setPCDetail: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonLevel);","import React from 'react';\nimport './Dungeon.css';\n\nimport DungeonLevel from '../DungeonLevel/DungeonLevel';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Dungeon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLevels = this.getLevels.bind(this);\n  }\n  \n  getLevels() {\n    const levels = this.props.levels;\n    const levelsToDisplay = levels.filter(level => level.number <= this.props.exploredLevel);\n    return levelsToDisplay.map(level => {\n      return <DungeonLevel level={level} />\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"Dungeon primary-dark\">\n        {this.getLevels()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    levels: state.dungeon.levels,\n    exploredLevel: state.dungeon.exploredLevel\n  }\n}\n\nexport default connect(mapStateToProps)(Dungeon);","import React from 'react';\nimport './Details.css';\n\n// component imports\nimport DetailPCMenu from '../DetailPCMenu/DetailPCMenu';\nimport Adventurers from '../Adventurers/Adventurers';\nimport AdventurerDetail from '../AdventurerDetail/AdventurerDetail';\nimport AdventurersPartial from '../AdventurersPartial/AdventurersPartial';\nimport Dungeon from '../Dungeon/Dungeon';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\nimport menuTypes from '../../Utilities/pcMenus';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n    this.getDetail = this.getDetail.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const forms = Object.values(menuTypes);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[menuTypes.adventurers] = <Adventurers />;\n    this.formTable[menuTypes.adventurer] = <AdventurerDetail />;\n    this.formTable[menuTypes.dungeon] = <Dungeon />;\n    this.formTable[menuTypes.adventurersPartial] = <AdventurersPartial />;\n  }\n\n  getDetail() {\n    if (!this.state.initialized) return '';\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    if (!this.props.pcDetailMenu) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n\n    if (this.formTable[this.props.pcDetailMenu] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.pcDetailMenu];\n  }\n  \n  render() {\n    return (\n      <div className=\"Details primary-dark\">\n        <DetailPCMenu />\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container primary-light\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false\n    }\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n    if (!this.props.edited) {\n      this.setState({ edited: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"StartScreen primary-surface\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","const userPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default userPutRequests;","import React from 'react';\nimport './ProfileViewer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\nimport { fetchUser } from '../../actions'\n\n// utitlity imports\nimport userPutRequests from '../../Utilities/userPutRequests';\n\nclass ProfileViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  handleClose() {\n    if (this.props.profileActive) {\n      this.props.setProfileActive(false);\n    }\n  }\n\n  *updateUser(data) {\n    yield userPutRequests.makeRequest('user', data);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateUser = this.updateUser(data);\n    updateUser.next().value.then(() => {\n      this.props.fetchUser();\n      this.props.setProfileActive(false);\n    });\n  }\n  \n  render() {\n    let newNickname = '';\n    let newImportNickname = false;\n    let newId = null;\n    console.log(this.props.auth);\n\n    if (this.props.auth) {\n      newNickname = this.props.auth.nickname;\n      newImportNickname = this.props.auth.import_nickname;\n      newId = this.props.auth.id;\n    }\n\n    return (\n      <div className=\"ProfileViewer primary-surface\">\n        <div className=\"ProfileForm\">\n          <form action={'/profile'}\n            className=\"input-fields-area\"\n            id=\"ProfileForm\"\n            method=\"POST\"\n            onSubmit={this.handleSubmit}>\n              <div className=\"input-group\">\n                <label className=\"item-label\" htmlFor=\"nickname\">Nickname</label>\n                <input type=\"text\" name=\"nickname\" id=\"nickname\" className=\"input-text\" placeholder=\"nickname\"\n                  maxLength=\"40\" defaultValue={newNickname}></input>\n              </div>\n              <div className=\"input-group\">\n                <input type=\"checkbox\" name=\"import_nickname\" id=\"import_nickname\" class=\"input-checkbox\" defaultChecked={newImportNickname} value={true}></input>\n                <label className=\"item-label\" htmlFor=\"import_nickname\">Import nickname as store name by default</label>\n              </div>\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"submit\" value=\"Update Profile\" className=\"button profile-submit\"></input>\n          </form>\n        </div>\n        <div className=\"CloseButton\"\n          onClick={this.handleClose}>\n            X\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    profileActive: state.profile.active,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value }),\n    fetchUser: () => dispatch(fetchUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewer);","import React from 'react';\nimport './MobileStoreHeadbar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass MobileStoreHeadbar extends React.Component {\n  render() {\n    return (\n      <div className=\"MobileStoreHeadbar\">\n        <h2 className=\"StoreName\">{this.props.storeName}</h2>\n        <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n  }\n}\n\nexport default connect(mapStateToProps)(MobileStoreHeadbar);","import React from 'react';\nimport './MobileMenu.css';\n\n// component imports\nimport Days from '../Days/Days';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.getMobileDropdown = this.getMobileDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    mobileScreens.init();\n  }\n  \n  handlePrevious() {\n    mobileScreens.previousScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleNext() {\n    mobileScreens.nextScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setMobileDropdown(!this.props.mobileDropdown)\n  }\n\n  handleScreenChange(newScreen) {\n    mobileScreens.setScreen(newScreen);\n    mobileScreens.updateScreen();\n    this.props.setMobileDropdown(false);\n  }\n\n  getMobileDropdown() {\n    const allScreens = mobileScreens.getScreens();\n    if (this.props.mobileDropdown) {\n      return (\n        <div className=\"MobileDropdown primary-medium\">\n          <Days />\n          {allScreens.map(screen => {\n            return (\n              <div className=\"mobileDropdownOption\"\n                onClick={() => this.handleScreenChange(screen)}>{screen}</div>\n            )\n      })}\n      </div>)\n      \n    } else {\n      return false;\n    }\n  }\n  \n  render() {\n    let mobileMenuName = this.props.mobileScreen;\n    let allScreens = mobileScreens.getAllScreens();\n    if (mobileMenuName === allScreens.adventurersPartial) {\n      mobileMenuName = allScreens.adventurers;\n    }\n    return (\n      <div className=\"MobileMenu primary-saturated\">\n        <span className=\"previousScreen screenArrow\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"mobileTitle\"\n          onClick={this.handleDropdown}>{mobileMenuName}</span>\n        <span className=\"nextScreen screenArrow\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getMobileDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    mobileDropdown: state.mobileMenu.dropdown,\n    dungeonLevelExplored: state.dungeon.exploredLevel\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileMenu);","import React from 'react';\nimport './MobileGameScreen.css';\n\nimport Store from '../../Components/Store/Store';\nimport MobileStoreHeadbar from '../../Components/MobileStoreHeadbar/MobileStoreHeadbar';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport MobileMenu from '../../Components/MobileMenu/MobileMenu';\nimport Adventurers from '../../Components/Adventurers/Adventurers';\nimport AdventurerDetail from '../../Components/AdventurerDetail/AdventurerDetail';\nimport AdventurersPartial from '../../Components/AdventurersPartial/AdventurersPartial';\nimport Dungeon from '../../Components/Dungeon/Dungeon';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileGameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentScreen: 'store',\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const allScreens = mobileScreens.getAllScreens();\n    const forms = Object.values(allScreens);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[allScreens.store] = <Store />;\n    this.formTable[allScreens.suppliers] = (\n      <div>\n        <MobileStoreHeadbar />\n        <Suppliers />\n      </div>\n    );\n    this.formTable[allScreens.adventurers] = <Adventurers />;\n    this.formTable[allScreens.adventurer] = <AdventurerDetail />;\n    this.formTable[allScreens.dungeon] = <Dungeon />;\n    this.formTable[allScreens.adventurersPartial] = <AdventurersPartial />;\n  }\n\n  getCurrentScreen() {\n    if (!this.state.initialized) return '';\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    if (!this.props.mobileScreen) {\n      return (<div className=\"BlankForm\">no details to display</div>)\n    }\n\n    if (this.formTable[this.props.mobileScreen] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.mobileScreen];\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileGameScreen primary-dark\">\n        <MobileMenu />\n        {this.getCurrentScreen()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileGameScreen);","import React from 'react';\nimport './MenuBar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mobileOpen: false\n    }\n\n    this.handleProfileActive = this.handleProfileActive.bind(this);\n    this.getLoginContainer = this.getLoginContainer.bind(this);\n    this.renderProfileLink = this.renderProfileLink.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n    this.handleFullscreen = this.handleFullscreen.bind(this);\n    this.getFullScreenControls = this.getFullScreenControls.bind(this);\n    this.handleMobileOpen = this.handleMobileOpen.bind(this);\n  }\n\n  handleProfileActive() {\n    if (!this.props.profileActive) {\n      this.props.setProfileActive(true);\n    }\n    this.handleMobileOpen();\n  }\n\n  handleMobileOpen() {\n    if (this.props.profileActive && !this.state.mobileOpen) {\n      return;\n    }\n    this.setState({ mobileOpen: !this.state.mobileOpen});\n  }\n\n  renderProfileLink() {\n    switch(this.props.auth) {\n      case null:\n        return '';\n      case false:\n        return '';\n      default:\n        return <li key=\"profile\" class=\"profileLink\" onClick={this.handleProfileActive}>profile</li>\n    }\n  }\n\n  renderLogin() {\n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\" className=\"facebookLogo\"><span>f</span></a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner' && screenInfo.getIsPc()) {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n\n  getLoginContainer() {\n    if (!this.props.isPc) {\n      return (\n        <div className=\"hamburgerContainer\"\n          onClick={this.handleMobileOpen}>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"LoginContainer\">\n        {this.renderProfileLink()}\n        {this.renderEditorLink()}\n        {this.renderLogin()}\n      </ul>\n    )\n  }\n\n  getMobileMenu() {\n    if (!this.props.isPc && this.state.mobileOpen) {\n      let mobileOffsetStyle = {};\n      let menuOffsets = 2;\n        if (this.props.auth) {\n          menuOffsets += 1;\n        }\n        // set style by default for tablet\n        mobileOffsetStyle.height = `calc(${(menuOffsets * 2.4)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        if (this.props.isMobile) {\n          mobileOffsetStyle.height = `calc(${(menuOffsets * 1.8)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        } \n        \n        \n      return (\n        <div className=\"mobileMenuContainer primary\"\n          onClick={this.handleMobileOpen}>\n          <ul className=\"LoginContainer mobileMenu primary-light\"\n            style={mobileOffsetStyle}\n            >\n            {this.getFullScreenControls()}\n            {this.renderProfileLink()}\n            {this.renderLogin()}\n          </ul>\n        </div>\n        \n      )\n    }\n  }\n\n  handleFullscreen() {\n    if (!this.props.isFullscreen) {\n      screenInfo.goFullScreen();\n    } else {\n      screenInfo.leaveFullScreen();\n    }\n  }\n\n  getFullScreenControls() {\n    if (!this.props.isFullscreen) {\n      return <li key=\"goFullscreen\" \n        className=\"Fullscreen screenLink\"\n        onClick={this.handleFullscreen}>[  ]</li>\n    } else {\n      return <li key=\"exitFullscren\"\n        className=\"ExitFullScreen screenLink\"\n        onClick={this.handleFullscreen}>&#9580;</li>\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar primary-light\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        {this.getLoginContainer()}\n        {this.getMobileMenu()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    isFullscreen: state.app.isFullscreen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\n// game module imports\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\nimport ProfileViewer from '../../Containers/ProfileViewer/ProfileViewer';\nimport MobileGameScreen from '../../Containers/MobileGameScreen/MobileGameScreen';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\n// component imports\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.getProfileViewer = this.getProfileViewer.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n    screenInfo.init();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      if (!this.props.isPc) {\n        return (\n          <MobileGameScreen />\n        )\n      } else {\n        return (\n          <GameScreen />\n        )\n      }\n    }\n  }\n\n  getProfileViewer() {\n    const profileStatus = this.props.profileActive;\n    if (profileStatus) {\n      return (\n        <ProfileViewer />\n      )\n    }\n  }  \n\n  render() {\n    return (\n      <div className=\"App\"\n        ref={ref => {\n          this.container = ref;\n        }}>\n        <MenuBar />\n        {this.getMainView()}\n        {this.getProfileViewer()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY,\n  SET_STORE_FILTER,\n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  filterActive: false,\n  filter: 'all',\n  needsUpdate: false,\n  inventory: [],\n  inventoryCount: 0,\n  mobileDetail: null,\n  mobileItemDetail: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      let newCount = state.inventoryCount;\n      if (Array.isArray(newInventory)) {\n        newCount = newInventory.length;\n      }\n      return {\n        ...state,\n        inventory: newInventory,\n        inventoryCount: newCount\n      }\n    case SET_STORE_FILTER_ACTIVE:\n      return {\n        ...state,\n        filterActive: action.value\n      }\n    case SET_STORE_FILTER:\n      return {\n        ...state,\n        filter: action.filter\n      }\n    case SET_STORE_UPDATE_STATUS:\n      const newStatus = !state.needsUpdate;\n      return {\n        ...state,\n        needsUpdate: newStatus\n      }\n    case SET_STORE_MOBILE_DETAIL:\n      return {\n        ...state,\n        mobileDetail: action.detail\n      }\n    case SET_STORE_MOBILE_DETAIL_ITEM:\n      return {\n        ...state,\n        mobileItemDetail: action.itemDetail\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS, SET_SUPPLIERS_INITIALIZED } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0,\n  initialized: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n      case SET_SUPPLIERS_INITIALIZED:\n        return {\n          ...state,\n          initialized: action.value\n        }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst initialState = {\n  ready: false,\n  spawned: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLY_READY:\n      return {\n        ...state,\n        ready: action.value\n      }\n    case SET_SUPPLY_SPAWNED:\n      return {\n        ...state,\n        spawned: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_PROFILE_ACTIVE } from '../actions/types';\n\nconst initialState = {\n  active: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFILE_ACTIVE:\n      return {\n        ...state,\n        active: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst initialState = {\n  isFullscreen: false,\n  isPc: true,\n  isMobile: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: action.value\n      }\n    case SET_IS_PC:\n      return {\n        ...state,\n        isPc: action.value\n      }\n    case SET_IS_MOBILE:\n      return {\n        ...state,\n        isMobile: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_MOBILE_SCREEN, SET_MOBILE_DROPDOWN } from '../actions/types';\n\nconst intitialState = {\n  screen: 'store',\n  dropdown: false\n}\n\nexport default function(state = intitialState, action) {\n  switch(action.type) {\n    case SET_MOBILE_SCREEN:\n      return {\n        ...state,\n        screen: action.screen\n      }\n    case SET_MOBILE_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS, SET_PARTIAL_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null,\n  partialAdventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    case SET_PARTIAL_ADVENTURERS:\n      return {\n        ...state,\n        partialAdventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../actions/types';\nimport pcMenus from '../Utilities/pcMenus';\n\nconst initialState = {\n  detail: pcMenus.adventurers,\n  dropdown: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PC_DETAIL:\n      return {\n        ...state,\n        detail: action.detail\n      }\n    case SET_PC_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_ID, SET_DETAIL_UPDATE } from '../actions/types';\n\nconst initialState = {\n  id: null,\n  update: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_ID:\n      return {\n        ...state,\n        id: action.id\n      }\n    case SET_DETAIL_UPDATE: {\n      return {\n        ...state,\n        update: action.value\n      }\n    }\n    default:\n      return state;\n  }\n}","import { SET_DUNGEON_LEVELS, \n  SET_DUNGEON_LEVEL_EXPLORED,\n  SET_DUNGEON_ADVENTURERS\n} from '../actions/types';\n\nconst initialState = {\n  levels: null,\n  exploredLevel: 0,\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DUNGEON_LEVELS:\n      return {\n        ...state,\n        levels: action.payload\n      }\n    case SET_DUNGEON_LEVEL_EXPLORED:\n      return {\n        ...state,\n        exploredLevel: action.level\n      }\n    case SET_DUNGEON_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.adventurers\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\nimport suppliesReducer from './suppliesReducer';\nimport profileReducer from './profileReducer';\nimport appStateReducer from './appStateReducer';\nimport mobileMenuReducer from './mobileMenuReducer';\nimport adventurersReducer from './adventurersReducer';\nimport pcDetailReducer from './pcDetailReducer';\nimport detailReducer from './detailReducer';\nimport dungeonReducer from './dungeonReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer,\n  supplies: suppliesReducer,\n  profile: profileReducer,\n  app: appStateReducer,\n  mobileMenu: mobileMenuReducer,\n  adventurers: adventurersReducer,\n  pcMenu: pcDetailReducer,\n  detail: detailReducer,\n  dungeon: dungeonReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}