{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","actions/types.js","Components/StoreInventory/StoreInventory.jsx","game_modules/store.js","game_modules/days.js","game_modules/supplies.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/SupplierBuyButton/SupplierBuyButton.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","Components/Days/Days.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","game_modules/main.js","Containers/StartScreen/StartScreen.jsx","Utilities/userPutRequests.js","Containers/ProfileViewer/ProfileViewer.jsx","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/suppliesReducer.js","reducers/profileReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","itemTypeIndex","itemPrototypeIndex","lastIndex","Item","payload","type","name","value","prototypeId","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","getItemType","getItemPrototypeId","getItemTypeIndex","createTestPotion","lvl","healing","getItemTypes","storeInventory","inventory","composeInventory","composedInventory","forEach","gameItems","itemId","markup","addItem","undefined","newStoreItem","getStoreInventory","updateStoreInventory","store","dispatch","dispatchStoreInventory","getComposedInventory","getFilteredInventory","newFilter","toLowerCase","filter","getFilteredStoreItems","markupFilteredStoreItems","newMarkup","markupAmount","inventoryItem","markupStoreItem","markupById","markupPrototypes","markupByPrototype","StoreInventory","props","state","timer","delay","markupIntensity","valence","increaseMarkup","bind","repeat","onMouseDown","onMouseUp","markupOut","handleOneIncrement","handlePrototypeIncrement","getInventoryItems","getIncrementOneButtons","getIncrementAllButtons","newInventory","JSON","parse","stringify","gameInventory","setInventory","setState","e","refBtnClasses","target","classList","contains","repeatPayload","setTimeout","clearTimeout","posNeg","toggleStoreUpdateStatus","itemsPayload","className","filteredInventory","length","filterActive","storeFilter","map","composedPrice","Math","floor","key","React","Component","connect","storeState","inventoryCount","storeNeedsUpdate","needsUpdate","gameStore","gold","chargeGold","amount","getName","setName","newName","getStartingGold","getGold","setGold","newGold","updateGold","dispatchStoreGold","days","day","getDay","setDay","newDay","resetDay","supplies","suppliesPool","supplyLevel","itemTypesArr","Object","values","itemTypeCount","itemSpawnCount","fetchItemArrForSupplyPool","a","typeToFetch","maxLvl","fetchURL","fetch","possibleItems","json","getItemForSupplyPool","newItems","then","itemsOfLevel","dispatchSpawned","catch","err","spawnSupply","typeIndex","random","typeToSpawn","newSupplyArr","Array","isArray","Items","getSupplies","fillSupplies","i","dispatchReady","fillSupplyPool","typeItem","depleteSupply","supplyIndex","indexOf","splice","setSupplyLevel","suppliers","currentId","Supplier","offerings","prototype","rankFavorites","bestOfferings","offeringsCount","sort","off1","off2","rankedOfferings","sellItem","price","itemIndex","dispatchSuppliers","newSuppliers","fetchSuppliers","initSuppliers","getSuppliers","initializeSuppliers","maxSuppliers","next","drainSuppliers","pushIndex","newSupplier","supplierPayload","thisSupplier","supplier","takeSupplierTurn","remainingSupplies","supplyTypes","supplyValues","remainingSupply","supplyItem","currentSupplier","supplierCount","remSupply","remNum","supplierTries","thisIndex","taken","supplierIndex","favorites","thisSupply","takeSupplies","dispatchSupplyReady","refSupplier","sellPayload","updateSuppliers","fetchUser","axios","get","res","data","fetchGold","fetchDay","Store","componentDidMount","toggleFilter","getFilter","handleFilter","getIncrementButtons","handleIncrease","handleDecrease","currentType","setStoreFilter","refBtn","defaultValue","onChange","itemType","newValue","setStoreFilterActive","storeName","role","aria-label","onClick","setStoreGold","SupplierBuyButton","getSuppllierInventory","handlePurchase","ids","storeGold","sellId","gameSuppliers","gameStoreInventory","initialized","thisInventory","inventoryGroups","valueGroups","typeGroups","idGroups","composedItems","entries","count","item1","item2","nameA","toUpperCase","nameB","findIndex","offering","composedValue","supplyReady","ready","Suppliers","suppliersInitialized","componentDidUpdate","supplySpawned","gameSupplies","gameSupplier","currentSuppliers","suppliersDisplay","renderSupplier","ref","node","container","spawned","Days","handleNextDay","currentDay","Details","GameScreen","Title","main","init","startingGold","getGameLevel","StartScreen","edited","handleStart","handleNameInput","game","setStarted","charCode","auth","defaultName","import_nickname","nickname","setStoreName","htmlFor","val","onKeyPress","started","gameState","userPutRequests","makeRequest","putRoute","putBody","subBody","putRes","method","headers","body","ProfileViewer","handleClose","handleSubmit","updateUser","profileActive","setProfileActive","preventDefault","FormData","newNickname","newImportNickname","newId","action","onSubmit","placeholder","maxLength","class","defaultChecked","profile","active","MenuBar","handleProfileActive","renderProfileLink","renderLogin","renderEditorLink","href","App","getMainView","getProfileViewer","actions","initialState","storeUpdate","combineReducers","updates","newCount","newStatus","number","Boolean","window","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b307bc0d.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let itemTypeIndex = {};\n  let itemPrototypeIndex = {};\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value, prototypeId } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.prototypeId = prototypeId;\n    this.id = lastIndex;\n    itemTypeIndex[lastIndex] = type;\n    itemPrototypeIndex[lastIndex] = prototypeId;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload, prototypeId } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value, prototypeId: prototypeId }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    getItemType(id) {\n      if (itemTypeIndex[id] !== null) {\n        return itemTypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemPrototypeId(id) {\n      if (itemPrototypeIndex[id] !== null) {\n        return itemPrototypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemTypeIndex() {\n      return itemTypeIndex;\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    }\n  }\n}());\n\nexport default items;","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_INVENTORY } from '../actions/types';\n\n// game module imports\nimport gameItems from './items';\n\nconst storeInventory = (function(){\n  // {\n  //   itemId: Number,\n  //   markup: number\n  // }\n  let inventory = [];\n\n  const maxMarkup = 4000;\n\n  const dispatchStoreInventory = function() {\n    const payload = {\n      type: SET_STORE_INVENTORY,\n      inventory: inventory\n    }\n    store.dispatch(payload);\n  }\n\n  const composeInventory = function() {\n    let composedInventory = [];\n      inventory.forEach(item => {\n        let thisItem = gameItems.getItem(item.itemId);\n        composedInventory.push({ ...thisItem, markup: item.markup });\n      });\n      return composedInventory;\n  }\n\n  const filterInventory = function(filter) {\n    let filteredInventory = composeInventory().filter(item => item.type === filter);\n    return filteredInventory;\n  }\n\n  const filterStoreItems = function(filter) {\n    let filteredIds = inventory.filter(item => {\n      return storeInventory.getItemType(item.itemId) === filter\n    });\n    return filteredIds;\n  }\n\n  const markupFilteredItems = function(filter, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (filter.toLowerCase() === 'all' || gameItems.getItemType(inventoryItem.itemId) === filter) {\n        inventoryItem.markup += newMarkup;\n        if (inventoryItem.markup > maxMarkup) {\n          inventoryItem.markup = maxMarkup;\n        }\n        if (inventoryItem.markup < 0) {\n          inventoryItem.markup = 0;\n        }\n      }\n    });\n  }\n\n  const markupById = function(id, newMarkup) {\n    const targetItem = inventory.find(item => item.itemId === id);\n    targetItem.markup += newMarkup;\n  }\n\n  const markupByPrototype = function(prototypeId, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (gameItems.getItemPrototypeId(inventoryItem.itemId) === prototypeId) {\n        inventoryItem.markup += newMarkup;\n      }\n      if (inventoryItem.markup > maxMarkup) {\n        inventoryItem.markup = maxMarkup;\n      }\n      if (inventoryItem.markup < 0) {\n        inventoryItem.markup = 0;\n      }\n    })\n  }\n\n  return {\n    addItem: function(id) {\n      if (id === null || id === undefined) {\n        return false;\n      }\n      const newStoreItem = { itemId: id,\n        markup: 150\n      }\n      inventory.push(newStoreItem);\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    },\n\n    updateStoreInventory: function() {\n      dispatchStoreInventory();\n    },\n\n    getComposedInventory: function() {\n      return composeInventory();\n    },\n\n    getFilteredInventory: function(newFilter) {\n      if (!newFilter || newFilter.toLowerCase() === 'all') {\n        return composeInventory();\n      }\n      else {\n        return filterInventory(newFilter);\n      }\n    },\n    \n    getFilteredStoreItems: function(newFilter) {\n      return filterStoreItems(newFilter);\n    },\n\n    markupFilteredStoreItems: function(payload) {\n      let { filter:newFilter, markup:markupAmount } = payload;\n      markupFilteredItems(newFilter, markupAmount);\n    },\n    \n    markupStoreItem: function(payload) {\n      let { id, markup:markupAmount} = payload;\n      markupById(id, markupAmount);\n    },\n\n    markupPrototypes: function(payload) {\n      let { prototypeId, markup: markupAmount } = payload;\n      markupByPrototype(prototypeId, markupAmount);\n    }\n  }\n}());\n\nexport default storeInventory;","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = \"SET_STORE_INVENTORY\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_SUPPLY_READY = \"SET_SUPPLY_READY\";\nexport const SET_SUPPLY_SPAWNED = \"SET_SUPPLY_SPAWNED\";\nexport const SET_STORE_FILTER = \"SET_STORE_FILTER\";\nexport const SET_STORE_FILTER_ACTIVE = \"SET_STORE_FILTER_ACTIVE\";\nexport const SET_STORE_UPDATE_STATUS = \"SET_STORE_UPDATE_STATUS\";\nexport const SET_PROFILE_ACTIVE =\"SET_PROFILE_ACTIVE\";","import React from 'react';\nimport './StoreInventory.css';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY, SET_STORE_UPDATE_STATUS } from '../../actions/types';\n\nimport gameInventory from '../../game_modules/storeInventory';\n// import storeItems from '../../game_modules/items';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n    \n    this.handleOneIncrement = this.handleOneIncrement.bind(this);\n    this.handlePrototypeIncrement = this.handlePrototypeIncrement.bind(this);\n    this.getInventoryItems = this.getInventoryItems.bind(this);\n    this.getIncrementOneButtons = this.getIncrementOneButtons.bind(this);\n    this.getIncrementAllButtons = this.getIncrementAllButtons.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(gameInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  increaseMarkup() {\n    this.setState({\n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  onMouseDown(payload) {\n    const { e } = payload;\n    let id = null, prototypeId = null;\n    if (payload.id !== null) {\n      id = payload.id;\n    }\n    if (payload.prototypeId !== null) {\n      prototypeId = payload.prototypeId;\n    }\n    const refBtnClasses = e.target.classList;\n    if (refBtnClasses.contains(\"decreaseOne\") ||\n      refBtnClasses.contains(\"minusOne\") ||\n      refBtnClasses.contains(\"decreaseProto\") ||\n      refBtnClasses.contains(\"minusProto\")) {\n        this.valence = -1;\n    }\n    if (refBtnClasses.contains(\"increaseOne\") ||\n      refBtnClasses.contains(\"plusOne\") ||\n      refBtnClasses.contains(\"increaseProto\") ||\n      refBtnClasses.contains(\"plusProto\")) {\n        this.valence = 1;\n    }\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.repeat(repeatPayload);\n  }\n\n  repeat(payload) {\n    let { id, prototypeId } = payload;\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.increaseMarkup();\n    if (id !== undefined) {\n      this.handleOneIncrement(id);\n    }\n    if (prototypeId !== undefined) {\n      this.handlePrototypeIncrement(prototypeId);\n    }\n    this.timer = setTimeout(() => this.repeat(repeatPayload), this.delay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleOneIncrement(id) {\n    const posNeg = this.valence;\n    const itemPayload = {\n      id: id,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupStoreItem(itemPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handlePrototypeIncrement(prototypeId) {\n    const posNeg = this.valence;\n    const itemsPayload = {\n      prototypeId: prototypeId,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupPrototypes(itemsPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementOneButtons(id) {\n    return (\n      <div className=\"incrementButtons incrementOneSet\">\n        <div className=\"decreaseOne incrementButton button\"\n          onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n          onMouseUp={this.onMouseUp}>\n          <span className=\"incrementIcon minusOne\">-</span>\n        </div>\n        <div className=\"increaseOne incrementButton button\"\n          onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n          onMouseUp={this.onMouseUp}>\n          <span className=\"incrementIcon plusOne\">+</span>\n        </div>\n      </div>\n    )\n  }\n\n  getIncrementAllButtons(prototypeId) {\n    return (\n      <div className=\"incrementButtons incrementAllSet\">\n        <div className=\"decreaseProto incrementButtonWide button\"\n          onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n          onMouseUp={this.onMouseUp}>\n          <span className=\"incrementIcon minusProto\">--</span>\n        </div>\n        <div className=\"increaseProto incrementButtonWide button\"\n          onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n          onMouseUp={this.onMouseUp}>\n          <span className=\"incrementIcon plusProto\">++</span>\n        </div>\n      </div>\n    )\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      let filteredInventory;\n      if (!this.props.filterActive || this.props.storeFilter === 'all') {\n        filteredInventory = gameInventory.getComposedInventory();\n      } else {\n        filteredInventory = gameInventory.getFilteredInventory(this.props.storeFilter);\n      }\n      return (\n        <div>{filteredInventory.map(item => {\n          const composedPrice = Math.floor(item.value * (1 + (item.markup / 1000)));\n          return (\n            <div className=\"InventoryItem itemBackground\" key={item.id}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              {this.getIncrementOneButtons(item.id)}\n              {this.getIncrementAllButtons(item.prototypeId)}\n              <div className=\"ItemValueGroup\">\n                <span className=\"InventoryItemValue\"><span className=\"CoinSymbol\">&#x2689; </span>{composedPrice}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory,\n    inventoryCount: state.storeState.inventoryCount,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_GOLD } from '../actions/types';\n\nconst gameStore = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n\n  const dispatchStoreGold = function() {\n    const payload = {\n      type: SET_STORE_GOLD,\n      amount: gold\n    }\n    store.dispatch(payload);\n  }\n  \n  return {\n    chargeGold: function(amount) {\n      if (gold < amount) {\n        console.log('attempted to charge more gold than vendor owns')\n        return false;\n      }\n      gold -= amount;\n    },\n    getName: function() {\n      return name;\n    },\n\n    setName: function(newName) {\n      name = newName;\n    },\n\n    getStartingGold: function() {\n      return startingGold;\n    },\n\n    getGold: function() {\n      return gold;\n    },\n\n    setGold: function(newGold) {\n      gold = newGold;\n    },\n    updateGold: function() {\n      dispatchStoreGold();\n    }\n  }\n}());\n\nexport default gameStore;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  let suppliesPool = {};\n  let supplyLevel = 1;\n\n  const itemTypesArr = Object.values(ItemTypes);\n  const itemTypeCount = itemTypesArr.length;\n  let itemSpawnCount = 0;\n\n  const dailySupplies = 10;\n\n  const dispatchReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSpawned = function(value) {\n    const payload = {\n      type: SET_SUPPLY_SPAWNED,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  // fill supply pool\n  const fetchSupplyPool = function() {\n    // produce array of type strings and choose one at random\n    itemSpawnCount = 0;\n    itemTypesArr.forEach(typeItem => {\n      if (suppliesPool[typeItem] == null) {\n        suppliesPool[typeItem] = [];\n      }\n      suppliesPool[typeItem].length = 0;\n    });\n\n    getItemForSupplyPool();\n    return true;\n  }\n\n  // fetch an item from backend\n  const fetchItemArrForSupplyPool = async function() {\n    let lvl = supplyLevel;\n    if (!lvl) return;\n\n    let typeToFetch = itemTypesArr[itemSpawnCount];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  // take an item that was fetched from backend and create it\n  // with item constructors and put it into state\n  const getItemForSupplyPool = function() {\n    if (itemSpawnCount >= itemTypeCount) {\n      return;\n    }\n    let newItems;\n    fetchItemArrForSupplyPool()\n      .then(itemsOfLevel => {\n        newItems = itemsOfLevel;\n      \n        // initialize field on pool if need be\n        if (suppliesPool[itemTypesArr[itemSpawnCount]] === null) {\n          suppliesPool[itemTypesArr[itemSpawnCount]] = [];\n        }\n        // push item id into supplies\n        suppliesPool[itemTypesArr[itemSpawnCount]].push(newItems);\n\n        itemSpawnCount++;\n        if (itemSpawnCount === itemTypeCount) {\n          dispatchSpawned(true);\n        }\n        getItemForSupplyPool();\n        return true;\n      }).catch(err => console.log(err));\n  }\n\n  const spawnSupply = function() {\n    // produce array of type strings and choose one at random\n    let typeIndex = Math.floor(Math.random() * itemTypesArr.length);\n    let typeToSpawn = itemTypesArr[typeIndex];\n    const newSupplyArr = suppliesPool[typeToSpawn];\n    let randomChoice = Math.floor(Math.random() * newSupplyArr.length);\n    let newItem = newSupplyArr[randomChoice];\n\n    if (Array.isArray(newItem)) {\n      newItem = newItem[0];\n    }\n\n    // compose payload for Item constructor\n    let itemPayload = {};\n    itemPayload.level = newItem.level;\n    switch(newItem.item.type) {\n      case ItemTypes.potion:\n        itemPayload.type = newItem.type;\n        break;\n      case ItemTypes.weapon:\n        itemPayload.damage = newItem.damage;\n        break;\n      case ItemTypes.armor:\n        itemPayload.armor = newItem.armor;\n        break;\n      default:\n        break;\n    }\n    let payload = {};\n    payload.itemPayload = itemPayload;\n    payload.type = newItem.item.type;\n    payload.name = newItem.item.name;\n    payload.value = newItem.item.value;\n    payload.prototypeId = newItem.item.id;\n\n    // create item and add to total inventory in Items module\n    let itemId = Items.createItem(payload);\n    supplies.push(itemId);\n\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function() {\n      for (let i = 0; i < dailySupplies; i++) {\n        spawnSupply();\n      }\n      dispatchReady(true);\n    },\n    fillSupplyPool: function() {\n      fetchSupplyPool();\n    },\n    depleteSupply: function(id) {\n      let supplyIndex = supplies.indexOf(id);\n      if (supplyIndex >= 0) {\n        let chosenSupply = supplies.splice(supplyIndex, 1);\n        return chosenSupply;\n      }\n    },\n    setSupplyLevel: function(lvl) {\n      supplyLevel = lvl;\n    }\n  }\n}());\n\nexport default supplies;","// game imports\nimport supplies from './supplies';\nimport items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLIERS, SET_SUPPLY_READY } from '../actions/types';\n\nconst suppliers = (function(){\n\n  let suppliers = [];\n\n  let currentId = 0;\n\n  const startingGold = 1000;\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n    this.inventory = [];\n    this.id = currentId;\n    currentId++;\n  }\n\n  Supplier.prototype.rankFavorites = function() {\n    let bestOfferings = [];\n    const offeringsCount = this.offerings.length;\n    for (let i = 0; i < offeringsCount; i++) {\n      bestOfferings.push(this.offerings[i]);\n    }\n    bestOfferings.sort((off1, off2) => {\n      return off1.markup - off2.markup;\n    });\n    this.rankedOfferings = bestOfferings;\n  }\n\n  Supplier.prototype.sellItem = function(payload) {\n    let { id, price } = payload;\n\n    const itemIndex = this.inventory.indexOf(id);\n    if (!itemIndex && itemIndex !== 0) {\n      return false;\n    }\n\n    this.inventory.splice(itemIndex, 1);\n    this.gold += price;\n\n    return true;\n  }\n\n  const dispatchSuppliers = function(newSuppliers) {\n    const payload = {\n      type: SET_SUPPLIERS,\n      payload: newSuppliers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSupplyReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers;\n      try {\n        initSuppliers = await fetch('/suppliers');\n      } catch (err) {\n        console.log(err);\n      }\n      if (initSuppliers) {\n        initSuppliers = initSuppliers.json();\n      }\n      return initSuppliers;\n  }\n\n  const getSuppliers = function*() {\n    yield fetchSuppliers();\n  }\n\n  const takeSupplies = function() {\n    // copy supplies to local array\n    const remainingSupplies = JSON.parse(JSON.stringify(supplies.getSupplies()));\n    let supplyTypes = [];\n    let supplyValues = [];\n    remainingSupplies.forEach(remainingSupply => {\n      const supplyItem = items.getItem(remainingSupply);\n      supplyTypes.push(supplyItem.type);\n      supplyValues.push(supplyItem.value);\n    });\n    let currentSupplier = 0;\n    const supplierCount = suppliers.length;\n    // loop through each supply item\n    remainingSupplies.forEach((remSupply, remNum) => {\n      // create an order based on last supplier to take an\n      // item and proceeded sequentially to include all\n      // suppliers\n      let supplierTries = [];\n      for (let i = 0; i < supplierCount; i++) {\n        let thisIndex = currentSupplier + i;\n        if (thisIndex >= supplierCount) {\n          thisIndex -= supplierCount;\n        }\n        supplierTries.push(thisIndex);\n      }\n      let taken = false;\n      \n      // check with each supplier if type of current supply is\n      // in their offerings\n      supplierTries.forEach(supplierIndex => {\n        let favorites = suppliers[supplierIndex].rankedOfferings;\n        for (let fave of favorites) {\n          // if type of supplier's offering equals type of this supply\n          if (fave.type === supplyTypes[remNum]) {\n            if (!taken && suppliers[supplierIndex].gold >= supplyValues[remNum]) {\n              // if supplier inventory not initialized, set to empty array\n              if (suppliers[supplierIndex].inventory === null) {\n                suppliers[supplierIndex].inventory = [];\n              }\n\n              // remove item from supply\n              let thisSupply = supplies.depleteSupply(remSupply);\n              if (Array.isArray(thisSupply)) {\n                thisSupply = thisSupply[0];\n              }\n\n              suppliers[supplierIndex].gold -= supplyValues[remNum];\n\n              // put item in supplier's inventory\n              suppliers[supplierIndex].inventory.push(thisSupply);\n\n              // mark item taken;\n              taken = true;\n              currentSupplier = supplierIndex + 1;\n              if (currentSupplier > supplierCount) {\n                currentSupplier = 0;\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      const gGetSuppliers = getSuppliers();\n      gGetSuppliers.next().value\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              thisSupplier.gold = startingGold;\n              suppliers.push(thisSupplier);\n            }\n            suppliers.forEach(supplier => supplier.rankFavorites());\n            dispatchSuppliers(suppliers);\n            return suppliers;\n          }\n        });\n    },\n    getSuppliers: function() {\n      return suppliers;\n    },\n    takeSupplierTurn: function() {\n      takeSupplies();\n      dispatchSuppliers(suppliers);\n      dispatchSupplyReady(false);\n    },\n    sellItem: function (payload) {\n      const { id, itemId, price} = payload;\n      \n      const thisSupplier = suppliers.find(refSupplier => refSupplier.id === id);\n      if (!thisSupplier) {\n        return false;\n      }\n      const sellPayload = {\n        id: itemId,\n        price: price\n      }\n\n      const resSale = thisSupplier.sellItem(sellPayload);\n      if (!resSale) {\n        return false;\n      }\n      return true;\n    },\n    updateSuppliers: function() {\n      dispatchSuppliers(suppliers);\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, SET_STORE_GOLD, SET_DAY, SET_SUPPLIERS } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}","import React from 'react';\nimport './Store.css';\n\n// import game modules\n// import gameStore from '../../game_modules/store';\nimport gameInventory from '../../game_modules/storeInventory';\n\n\n// import components\nimport ItemTypes from '../../Utilities/itemTypes';\nimport StoreInventory from '../StoreInventory/StoreInventory';\n\n\n// redux imports\nimport { SET_STORE_GOLD,\n  SET_STORE_FILTER, \n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.getFilter = this.getFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.getIncrementButtons = this.getIncrementButtons.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }\n\n  handleFilter(e) {\n    let currentType = e.target.value;\n    this.props.setStoreFilter(currentType);\n  }\n\n  increaseMarkup() {\n    this.setState({ \n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  // Proccess mousedown event to start incremental markup\n  onMouseDown(e) {\n    const refBtn = e.target;\n    if (refBtn.classList.contains(\"decreaseAll\") ||\n      refBtn.classList.contains(\"minus\")) {\n      this.valence = -1;\n    }\n    if (refBtn.classList.contains(\"increaseAll\" ||\n      refBtn.classList.contains(\"plus\"))) {\n      this.valence = 1;\n    }\n    this.repeat();\n  }\n\n  repeat() {\n    this.increaseMarkup();\n    if (this.valence === -1) {\n      this.handleDecrease();\n    }\n    if (this.valence === 1) {\n      this.handleIncrease();\n    }\n    this.timer = setTimeout(this.repeat, this.delay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleIncrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: this.state.markup\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handleDecrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: (this.state.markup * -1)\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementButtons() {\n    if (!this.props.filterActive) return '';\n    return (\n      <div className=\"incrementButtons\">\n        <div className=\"decreaseAll incrementButton button\"\n          onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n          <span className=\"incrementIcon minus\">-</span>\n        </div>\n        <div className=\"increaseAll incrementButton button\"\n          onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n          <span className=\"incrementIcon plus\">+</span>\n        </div>\n      </div>\n    )\n  }\n\n  getFilter() {\n    if (!this.props.filterActive) return '';\n    const itemTypesArr = Object.values(ItemTypes);\n    return (\n      <select className=\"StoreItemTypeFilter\" \n        defaultValue={this.props.storeFilter}\n        onChange={this.handleFilter}>\n        <option value=\"all\">all</option>\n        {itemTypesArr.map(itemType => {\n          return (\n            <option value={itemType}>{itemType}</option>\n          )\n        })}\n      </select>\n    )\n  }\n\n  toggleFilter() {\n    const newValue = !this.props.filterActive;\n    this.props.setStoreFilterActive(newValue);\n  }\n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <div className=\"FilterGroup\">\n            {this.getIncrementButtons()}\n            {this.getFilter()}\n          </div>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\" onClick={this.toggleFilter}>&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n        </div>\n        <StoreInventory />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold()),\n    setStoreFilter: (filter) => dispatch({ type: SET_STORE_FILTER, filter: filter }),\n    setStoreFilterActive: (value) => dispatch({ type: SET_STORE_FILTER_ACTIVE, value: value }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './SupplierBuyButton.css';\n\nclass SupplierBuyButton extends React.Component {\n  render() {\n    return (\n      <div className=\"SupplierBuyButton button\">\n        <div className=\"supplierBuyButtonIcon\">\n          buy\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SupplierBuyButton;","import React from 'react';\nimport './Supplier.css';\n\nimport SupplierBuyButton from '../SupplierBuyButton/SupplierBuyButton';\n\n// game module imports\nimport gameItems from '../../game_modules/items';\nimport gameSuppliers from '../../game_modules/suppliers'\nimport gameStore from '../../game_modules/store';\nimport gameStoreInventory from '../../game_modules/storeInventory';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n\nclass Supplier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppllierInventory = this.getSuppllierInventory.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handlePurchase(payload) {\n    const { ids, price } = payload;\n\n    if (price > this.props.storeGold) {\n      return;\n    }\n\n    // sell first item of object\n    const sellId = ids[0];\n    const sellPayload = {\n      id: this.props.supplier.id,\n      itemId: sellId,\n      price: price\n    }\n    let sellRes = gameSuppliers.sellItem(sellPayload);\n    if (!sellRes) {\n      return;\n    }\n\n    // transact sale for vendor\n    gameStore.chargeGold(price);\n    gameStoreInventory.addItem(sellId);\n\n    // update state\n    gameStore.updateGold();\n    gameStoreInventory.updateStoreInventory();\n    gameSuppliers.updateSuppliers();\n\n  }\n\n  getSuppllierInventory() {\n    if (!this.props.initialized) {\n      return ''\n    }\n    // get details on items from ids\n    let thisInventory = [];\n    this.props.supplier.inventory.forEach(id => {\n      let inventoryItem = gameItems.getItem(id);\n      thisInventory.push(inventoryItem);\n    });\n\n    // organize all items by item name\n    let inventoryGroups = {};\n    let valueGroups = {}\n    let typeGroups = {}\n    let idGroups = {}\n    thisInventory.forEach(item => {\n      if (!inventoryGroups[item.name]) {\n        inventoryGroups[item.name] = 1;\n        valueGroups[item.name] = item.value;\n        typeGroups[item.name] = item.type;\n        idGroups[item.name] = [item.id]\n      } else {\n        inventoryGroups[item.name] += 1;\n        idGroups[item.name].push(item.id);\n      }\n    });\n\n    // create array of composed items\n    let composedItems = []\n    for (const [key, value] of Object.entries(inventoryGroups)) {\n      let item = { name: key, count: value, type: typeGroups[key], value: valueGroups[key], ids: idGroups[key] };\n      composedItems.push(item);\n    }\n\n    composedItems.sort((item1, item2) => {\n      const nameA = item1.name.toUpperCase();\n      const nameB = item2.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return composedItems.map(item => {\n      const offerings = this.props.supplier.offerings;\n      const typeIndex = offerings.findIndex(offering => offering.type === item.type);\n      \n      let composedValue = item.value;\n      if (typeIndex !== -1) {\n        composedValue = composedValue * (1 + (offerings[typeIndex].markup / 1000));\n        composedValue = Math.floor(composedValue);\n      }\n\n      return (\n        <div className=\"SupplierInventoryItem itemBackground\" key={item.id}>\n          <span className=\"SupplierInventoryItemName\">{item.name} ({item.count})</span>\n          <div className=\"SupplierItemsValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{composedValue}</span>\n          </div>\n          <div className=\"BuyButtonContainer\" onClick={() => this.handlePurchase({ ids: item.ids, price: composedValue })}>\n              <SupplierBuyButton />\n            </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Supplier\">\n        <div className=\"SupplierName\">\n          {this.props.supplier.name}\n          <div className=\"SupplierValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{this.props.supplier.gold}</span>\n          </div>\n        </div>\n        <div className=\"supplierInventory\">\n          {this.getSuppllierInventory()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    supplyReady: state.supplies.ready,\n    storeGold: state.storeState.gold\n  }\n}\n\nexport default connect(mapStateToProps)(Supplier);","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// game imports\nimport gameSupplier from '../../game_modules/suppliers';\nimport gameSupplies from '../../game_modules/supplies';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      suppliersInitialized: false\n    }\n\n    this.getSuppliers = this.getSuppliers.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (Array.isArray(this.props.suppliers) && this.props.supplySpawned) {\n      if (!this.props.supplyReady) {\n        gameSupplies.fillSupplies();\n      }\n    }\n    if (Array.isArray(this.props.suppliers) && this.props.supplyReady) {\n      if (!this.state.suppliersInitialized) {\n        gameSupplier.takeSupplierTurn();\n        this.setState({\n          suppliersInitialized: true\n        })\n      }\n    }\n  }\n\n  getSuppliers() {\n    let currentSuppliers = this.props.suppliers;    \n    if (Array.isArray(currentSuppliers)) {\n      const suppliersDisplay = currentSuppliers.map(renderSupplier => {\n        return (<Supplier supplier={renderSupplier} initialized={this.state.suppliersInitialized}/>);\n      });\n\n      return (\n        <div className=\"suppliersContainer\"\n          ref={node => {\n            this.container = node;\n          }}>\n          {suppliersDisplay}\n          <div className=\"spacer\"></div>\n        </div>\n      );\n    } else {\n      return 'no suppliers to render';\n    }\n    \n  }\n  \n  render() {\n    return (\n      <div className=\"Suppliers\">\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    supplyReady: state.supplies.ready,\n    supplySpawned: state.supplies.spawned\n  }\n}\n\nexport default connect(mapStateToProps)(Suppliers);","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days\">\n        <div className=\"DayTitle\">Day: {this.props.day}</div>\n        <div className=\"nextDay button\" onClick={this.handleNextDay}\n        >Finish Day</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","import React from 'react';\nimport './Details.css';\n\nclass Details extends React.Component {\n  render() {\n    return (\n      <div className=\"Details\">\n        Details\n      </div>\n    )\n  }\n}\n\nexport default Details;","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import days from './days';\nimport gameStore from './store';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\n\nconst main = (function() {\n  \n  const maxSuppliers = 3;\n  let currentMaxLevel = 1;\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      gameStore.setName(payload.name);\n\n      const startingGold = gameStore.getStartingGold();\n      gameStore.setGold(startingGold);\n\n      supplies.setSupplyLevel(currentMaxLevel);\n      supplies.fillSupplyPool();\n      suppliers.initializeSuppliers(maxSuppliers);\n\n    },\n\n    getGameLevel: function() {\n      return currentMaxLevel;\n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false\n    }\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n    if (!this.props.edited) {\n      this.setState({ edited: true });\n    }\n  }\n\n  render() {\n    if (this.props.auth && !this.props.edited) {\n      this.setState({ edited: true });\n      let defaultName = '';\n      let import_nickname = '';\n      import_nickname = this.props.auth.import_nickname;\n      if (import_nickname) {\n        defaultName = this.props.auth.nickname;\n        this.props.setStoreName(defaultName);\n      }\n      \n    }\n    return (\n      <div className=\"StartScreen\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","const userPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default userPutRequests;","import React from 'react';\nimport './ProfileViewer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\nimport { fetchUser } from '../../actions'\n\n// utitlity imports\nimport userPutRequests from '../../Utilities/userPutRequests';\n\nclass ProfileViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  handleClose() {\n    if (this.props.profileActive) {\n      this.props.setProfileActive(false);\n    }\n  }\n\n  *updateUser(data) {\n    yield userPutRequests.makeRequest('user', data);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateUser = this.updateUser(data);\n    updateUser.next().value.then(() => {\n      this.props.fetchUser();\n      this.props.setProfileActive(false);\n    });\n  }\n  \n  render() {\n    let newNickname = '';\n    let newImportNickname = false;\n    let newId = null;\n    console.log(this.props.auth);\n\n    if (this.props.auth) {\n      newNickname = this.props.auth.nickname;\n      newImportNickname = this.props.auth.import_nickname;\n      newId = this.props.auth.id;\n    }\n\n    return (\n      <div className=\"ProfileViewer\">\n        <div className=\"ProfileForm\">\n          <form action={'/profile'}\n            className=\"input-fields-area\"\n            id=\"ProfileForm\"\n            method=\"POST\"\n            onSubmit={this.handleSubmit}>\n              <div className=\"input-group\">\n                <label className=\"item-label\" htmlFor=\"nickname\">Nickname</label>\n                <input type=\"text\" name=\"nickname\" id=\"nickname\" className=\"input-text\" placeholder=\"nickname\"\n                  maxLength=\"40\" defaultValue={newNickname}></input>\n              </div>\n              <div className=\"input-group\">\n                <input type=\"checkbox\" name=\"import_nickname\" id=\"import_nickname\" class=\"input-checkbox\" defaultChecked={newImportNickname} value={true}></input>\n                <label className=\"item-label\" htmlFor=\"import_nickname\">Import nickname as store name by default</label>\n              </div>\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"submit\" value=\"Update Profile\" className=\"button profile-submit\"></input>\n          </form>\n        </div>\n        <div className=\"CloseButton\"\n          onClick={this.handleClose}>\n            X\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    profileActive: state.profile.active,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value }),\n    fetchUser: () => dispatch(fetchUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewer);","import React from 'react';\nimport './MenuBar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleProfileActive = this.handleProfileActive.bind(this);\n    this.renderProfileLink = this.renderProfileLink.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n  }\n\n  handleProfileActive() {\n    if (!this.props.profileActive) {\n      this.props.setProfileActive(true);\n    }\n  }\n\n  renderProfileLink() {\n    switch(this.props.auth) {\n      case null:\n        return '';\n      case false:\n        return '';\n      default:\n        return <li key=\"profile\" class=\"profileLink\" onClick={this.handleProfileActive}>Profile</li>\n    }\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderProfileLink()}\n          {this.renderEditorLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profileActive: state.profile.active\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\nimport ProfileViewer from '../../Containers/ProfileViewer/ProfileViewer';\n\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.getProfileViewer = this.getProfileViewer.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      return (\n        <GameScreen />\n      )\n    }\n  }\n\n  getProfileViewer() {\n    const profileStatus = this.props.profileActive;\n    if (profileStatus) {\n      return (\n        <ProfileViewer />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        {this.getMainView()}\n        {this.getProfileViewer()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    profileActive: state.profile.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY,\n  SET_STORE_FILTER,\n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  filterActive: false,\n  filter: 'all',\n  needsUpdate: false,\n  inventory: [],\n  inventoryCount: 0\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      let newCount = state.inventoryCount;\n      if (Array.isArray(newInventory)) {\n        newCount = newInventory.length;\n      }\n      return {\n        ...state,\n        inventory: newInventory,\n        inventoryCount: newCount\n      }\n    case SET_STORE_FILTER_ACTIVE:\n      return {\n        ...state,\n        filterActive: action.value\n      }\n    case SET_STORE_FILTER:\n      return {\n        ...state,\n        filter: action.filter\n      }\n    case SET_STORE_UPDATE_STATUS:\n      const newStatus = !state.needsUpdate;\n      return {\n        ...state,\n        needsUpdate: newStatus\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst initialState = {\n  ready: false,\n  spawned: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLY_READY:\n      return {\n        ...state,\n        ready: action.value\n      }\n    case SET_SUPPLY_SPAWNED:\n      return {\n        ...state,\n        spawned: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_PROFILE_ACTIVE } from '../actions/types';\n\nconst initialState = {\n  active: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFILE_ACTIVE:\n      return {\n        ...state,\n        active: action.value\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\nimport suppliesReducer from './suppliesReducer';\nimport profileReducer from './profileReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer,\n  supplies: suppliesReducer,\n  profile: profileReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}