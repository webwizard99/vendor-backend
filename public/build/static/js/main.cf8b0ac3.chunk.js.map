{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","Components/StoreInventory/StoreInventory.jsx","actions/types.js","game_modules/store.js","game_modules/days.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","Components/Days/Days.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","game_modules/supplies.js","game_modules/main.js","Containers/StartScreen/StartScreen.jsx","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","lastIndex","Item","payload","type","name","value","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","createTestPotion","lvl","healing","getItemTypes","storeInventory","inventory","currentIdIndex","addItem","addPotion","Items","newPotion","addTestPotion","testPotion","getStoreInventory","StoreInventory","props","getInventoryItems","bind","newInventory","JSON","parse","stringify","setInventory","length","map","className","key","React","Component","connect","state","storeState","dispatch","store","gold","getName","setName","newName","getStartingGold","getGold","setGold","newGold","days","day","getDay","setDay","newDay","resetDay","suppliers","Supplier","offerings","fetchSuppliers","a","fetch","initSuppliers","json","initializeSuppliers","maxSuppliers","then","drainSuppliers","pushIndex","Math","floor","random","newSupplier","splice","supplierPayload","thisSupplier","getSuppliers","fetchUser","axios","get","res","data","fetchGold","gameStore","amount","fetchDay","newSuppliers","Store","componentDidMount","storeName","role","aria-label","setStoreGold","supplierName","Suppliers","currentSuppliers","Array","isArray","supplier","suppliersCount","count","Days","handleNextDay","currentDay","onClick","Details","GameScreen","Title","supplies","fetchItemArrForSupply","Object","values","typeIndex","typeToFetch","maxLvl","fetchURL","possibleItems","getItemForSupply","itemsOfLevel","randomChoice","itemId","catch","err","getSupplies","fillSupplies","supplyNum","main","init","startingGold","x","createTestPotions","StartScreen","handleStart","handleNameInput","game","setStarted","e","charCode","htmlFor","onChange","val","setStoreName","target","onKeyPress","started","gameState","MenuBar","renderLogin","renderEditorLink","auth","href","App","getMainView","actions","initialState","storeUpdate","refreshing","refreshed","combineReducers","action","updates","number","Boolean","window","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cf8b0ac3.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.id = lastIndex;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    }\n  }\n}());\n\nexport default items;","import Items from './items';\n\n\nconst storeInventory = (function(){\n  let inventory = [];\n\n  let currentIdIndex = 0;\n\n  const addItem = function(newItem) {\n    newItem.id = currentIdIndex;\n    currentIdIndex++;\n    inventory.push(newItem);\n  }\n\n  \n  return {\n    addPotion: function(name, value, payload) {\n      const itemTypes = Items.getItemTypes();\n      const newPotion = Items.createItem(itemTypes.potion, name, value, payload);\n      addItem(newPotion);\n    },\n\n    addTestPotion: function() {\n      const testPotion = Items.createTestPotion();\n      addItem(testPotion);\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    }\n  }\n}());\n\nexport default storeInventory;","import React from 'react';\nimport './StoreInventory.css';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY } from '../../actions/types';\n\nimport storeInventory from '../../game_modules/storeInventory';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.getInventoryItems = this.getInventoryItems.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(storeInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      return (\n        <div>{this.props.inventory.map(item => {\n          return (\n            <div className=\"InventoryItem\" key={item.id}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              <div className=\"ItemValueGroup\">\n                <span className=\"CoinSymbol\">&#x2689; </span>\n                <span className=\"InventoryItemValue\">{item.value}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div>No inventory</div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = 'SET_STORE_INVENTORY';\nexport const FETCH_USER = 'FETCH_USER';\nexport const SET_SUPPLIERS = 'SET_SUPPLIERS';","const store = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n  \n  return {\n    getName: function() {\n      return name;\n    },\n\n    setName: function(newName) {\n      name = newName;\n    },\n\n    getStartingGold: function() {\n      return startingGold;\n    },\n\n    getGold: function() {\n      return gold;\n    },\n\n    setGold: function(newGold) {\n      gold = newGold;\n    }\n  }\n}());\n\nexport default store;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","const suppliers = (function(){\n\n  let suppliers = [];\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers;\n      try {\n        initSuppliers = await fetch('/suppliers');\n      } catch (err) {\n        console.log(err);\n      }\n      if (initSuppliers) {\n        initSuppliers = initSuppliers.json();\n      }\n      return initSuppliers;\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      fetchSuppliers()\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              suppliers.push(thisSupplier);\n            }\n          }\n        });\n      \n      console.log(suppliers);\n    },\n    getSuppliers: function() {\n      return suppliers;\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, SET_STORE_GOLD, SET_DAY, SET_SUPPLIERS } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}","import React from 'react';\nimport './Store.css';\n\n// import gameStore from '../../Utilities/store';\n\nimport StoreInventory from '../StoreInventory/StoreInventory';\n\nimport { SET_STORE_GOLD } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }  \n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\">&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>\n            {this.props.gold}\n          </div>\n        </div>\n        <StoreInventory />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './Supplier.css';\n\nclass Supplier extends React.Component {\n  render() {\n    return (\n      <div className=\"Supplier\">\n        <div className=\"SupplierName\">\n          {this.props.supplierName}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Supplier;","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getSuppliers = this.getSuppliers.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('in Suppliers component lifecycle method');\n    this.props.fetchSuppliers();\n  }\n\n  getSuppliers() {\n    \n    \n    let currentSuppliers = this.props.suppliers;\n    console.log(currentSuppliers);\n    console.log(Array.isArray(currentSuppliers));\n    if (!Array.isArray(currentSuppliers)) {return '';}\n    return currentSuppliers.map(supplier => {\n      console.log(supplier);\n      return <Supplier supplierName={supplier.name} />\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"Suppliers\">\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    suppliersCount: state.suppliers.count\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Suppliers);","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days\">\n        <span className=\"DayTitle\">Day: {this.props.day}</span>\n        <button className=\"nextDay\" onClick={this.handleNextDay}\n        >Finish Day</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","import React from 'react';\nimport './Details.css';\n\nclass Details extends React.Component {\n  render() {\n    return (\n      <div className=\"Details\">\n        Details\n      </div>\n    )\n  }\n}\n\nexport default Details;","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  const dailySupplies = 10;\n\n  const fetchItemArrForSupply = async function(lvl) {\n    if (!lvl) return;\n\n    // produce array of type strings and choose one at random\n    let itemTypes = Object.values(ItemTypes);\n    let typeIndex = Math.floor(Math.random() * itemTypes.length);\n    let typeToFetch = itemTypes[typeIndex];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  const getItemForSupply = function(lvl) {\n    let newItem;\n    fetchItemArrForSupply(lvl)\n      .then(itemsOfLevel => {\n        if (Array.isArray(itemsOfLevel)) {\n          let randomChoice = Math.floor(Math.random() * itemsOfLevel.length);\n          newItem = itemsOfLevel[randomChoice];\n        }\n\n        // compose payload for Item constructor\n        let itemPayload = {};\n        itemPayload.level = newItem.level;\n        switch(newItem.item.type) {\n          case ItemTypes.potion:\n            itemPayload.type = newItem.type;\n            break;\n          case ItemTypes.weapon:\n            itemPayload.damage = newItem.damage;\n            break;\n          case ItemTypes.armor:\n            itemPayload.armor = newItem.armor;\n            break;\n          default:\n            break;\n        }\n        let payload = {};\n        payload.itemPayload = itemPayload;\n        payload.type = newItem.item.type;\n        payload.name = newItem.item.name;\n        payload.value = newItem.item.value;\n\n        // create item and add to total inventory in Items module\n        let itemId = Items.createItem(payload);\n        // push item id into supplies\n        supplies.push(itemId);\n\n        return true;\n      }).catch(err => console.log(err));\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function(lvl) {\n      for (let supplyNum = 0; supplyNum < dailySupplies; supplyNum++) {\n        getItemForSupply(lvl);\n      }\n    }\n  }\n}());\n\nexport default supplies;","import days from './days';\nimport store from './store';\nimport storeInventory from './storeInventory';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\n\nconst main = (function() {\n  \n  const testPotionCount = 5;\n  const maxSuppliers = 3;\n  let currentMaxLevel = 1;\n\n  const createTestPotions = function() {\n    for (let x = 0; x < testPotionCount; x++) {\n      storeInventory.addTestPotion();\n    }\n    \n  }\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      store.setName(payload.name);\n\n      const startingGold = store.getStartingGold();\n      store.setGold(startingGold);\n\n      createTestPotions();\n\n      suppliers.initializeSuppliers(maxSuppliers);\n      console.log(suppliers.getSuppliers());\n\n      supplies.fillSupplies(currentMaxLevel);\n      \n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"StartScreen\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","import React from 'react';\nimport { connect } from 'react-redux';\nimport './MenuBar.css';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderEditorLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\n\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      return (\n        <GameScreen />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        {this.getMainView()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  refreshing: false,\n  refreshed: false,\n  inventory: []\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      return {\n        ...state,\n        inventory: newInventory\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}