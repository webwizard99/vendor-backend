{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","actions/types.js","Components/StoreInventory/StoreInventory.jsx","game_modules/store.js","game_modules/days.js","game_modules/supplies.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/SupplierBuyButton/SupplierBuyButton.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","Components/Days/Days.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","game_modules/main.js","Containers/StartScreen/StartScreen.jsx","Utilities/userPutRequests.js","Containers/ProfileViewer/ProfileViewer.jsx","Components/MobileStoreHeadbar/MobileStoreHeadbar.jsx","Utilities/mobileScreens.js","Components/MobileMenu/MobileMenu.jsx","Containers/MobileGameScreen/MobileGameScreen.jsx","Utilities/screenInfo.js","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/suppliesReducer.js","reducers/profileReducer.js","reducers/appStateReducer.js","reducers/mobileMenuReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","itemTypeIndex","itemPrototypeIndex","lastIndex","Item","payload","type","name","value","prototypeId","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","getItemType","getItemPrototypeId","getItemTypeIndex","createTestPotion","lvl","healing","getItemTypes","storeInventory","inventory","composeInventory","composedInventory","forEach","gameItems","itemId","markup","addItem","undefined","newStoreItem","getStoreInventory","updateStoreInventory","store","dispatch","dispatchStoreInventory","getComposedInventory","getFilteredInventory","newFilter","toLowerCase","filter","getFilteredStoreItems","markupFilteredStoreItems","newMarkup","markupAmount","inventoryItem","markupStoreItem","markupById","markupPrototypes","markupByPrototype","StoreInventory","props","state","timer","mobileMultiplier","delay","markupIntensity","valence","increaseMarkup","bind","repeat","onMouseDown","onMouseUp","markupOut","handleMobileFocus","handleOneIncrement","handlePrototypeIncrement","getInventoryItems","getIncrementOneButtons","getIncrementAllButtons","newInventory","JSON","parse","stringify","gameInventory","setInventory","setState","e","refBtnClasses","target","classList","contains","repeatPayload","totaldelay","setTimeout","clearTimeout","posNeg","toggleStoreUpdateStatus","itemsPayload","isPc","className","onTouchStart","onTouchEnd","mobileItem","mobileItemDetail","mobileDetail","setStoreMobileDetail","setStoreMobileDetailItem","window","filteredInventory","length","filterActive","storeFilter","map","composedPrice","Math","floor","itemClass","key","React","Component","connect","storeState","inventoryCount","storeNeedsUpdate","needsUpdate","isMobile","app","detail","itemDetail","gameStore","gold","chargeGold","amount","getName","setName","newName","getStartingGold","getGold","setGold","newGold","updateGold","dispatchStoreGold","days","day","getDay","setDay","newDay","resetDay","supplies","suppliesPool","supplyLevel","itemTypesArr","Object","values","itemTypeCount","itemSpawnCount","fetchItemArrForSupplyPool","a","typeToFetch","maxLvl","fetchURL","fetch","possibleItems","json","getItemForSupplyPool","newItems","then","itemsOfLevel","dispatchSpawned","catch","err","spawnSupply","typeIndex","random","typeToSpawn","newSupplyArr","Array","isArray","Items","getSupplies","fillSupplies","i","dispatchReady","fillSupplyPool","typeItem","depleteSupply","supplyIndex","indexOf","splice","setSupplyLevel","suppliers","currentId","Supplier","offerings","prototype","rankFavorites","bestOfferings","offeringsCount","sort","off1","off2","rankedOfferings","sellItem","price","itemIndex","dispatchSuppliers","newSuppliers","fetchSuppliers","initSuppliers","getSuppliers","initializeSuppliers","maxSuppliers","next","drainSuppliers","pushIndex","newSupplier","supplierPayload","thisSupplier","supplier","takeSupplierTurn","remainingSupplies","supplyTypes","supplyValues","remainingSupply","supplyItem","currentSupplier","supplierCount","remSupply","remNum","supplierTries","thisIndex","taken","supplierIndex","favorites","thisSupply","takeSupplies","dispatchSupplyReady","refSupplier","sellPayload","updateSuppliers","fetchUser","axios","get","res","data","import_nickname","nickname","fetchGold","fetchDay","Store","getMobileDetail","componentDidMount","toggleFilter","getFilter","handleFilter","getIncrementButtons","handleIncrease","handleDecrease","currentType","setStoreFilter","refBtn","totalDelay","pc","defaultValue","onChange","itemType","newValue","setStoreFilterActive","inventoryComponent","storeName","role","aria-label","onClick","setStoreGold","SupplierBuyButton","getSuppllierInventory","handlePurchase","ids","storeGold","sellId","gameSuppliers","gameStoreInventory","initialized","thisInventory","inventoryGroups","valueGroups","typeGroups","idGroups","composedItems","entries","count","item1","item2","nameA","toUpperCase","nameB","findIndex","offering","composedValue","supplierClass","supplyReady","ready","Suppliers","componentDidUpdate","supplySpawned","gameSupplies","suppliersInitialized","gameSupplier","setSuppliersInitialized","supplierContainerClass","spacerClass","currentSuppliers","suppliersDisplay","renderSupplier","ref","node","container","suppliersClass","spawned","Days","handleNextDay","currentDay","mobileDropdown","setMobileDropdown","mobileMenu","dropdown","Details","GameScreen","Title","main","init","startingGold","getGameLevel","StartScreen","edited","handleStart","handleNameInput","game","setStarted","charCode","htmlFor","val","setStoreName","onKeyPress","started","gameState","auth","userPutRequests","makeRequest","putRoute","putBody","subBody","putRes","method","headers","body","ProfileViewer","handleClose","handleSubmit","updateUser","profileActive","setProfileActive","preventDefault","FormData","newNickname","newImportNickname","newId","action","onSubmit","placeholder","maxLength","class","defaultChecked","profile","active","MobileStoreHeadbar","mobileScreens","currentScreen","currentIndex","screens","allScreens","screenMap","screen","screenN","getCurrentScreen","nextScreen","previousScreen","getScreens","getAllScreens","setScreen","newScreen","screenIndex","updateScreen","dispatchMobileScreen","MobileMenu","handlePrevious","handleNext","handleDropdown","handleScreenChange","getMobileDropdown","mobileScreen","MobileGameScreen","screenInfo","isFullscreen","height","width","dispatchFullscreen","orientation","docDimensions","document","querySelector","getBoundingClientRect","setScreenInfo","dispatchIsPc","dispatchIsMobile","getIsPc","getIsMobile","goFullScreen","App","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setFullScreen","leaveFullScreen","exitFullscreen","MenuBar","mobileOpen","handleProfileActive","getLoginContainer","renderProfileLink","renderLogin","renderEditorLink","handleFullscreen","getFullScreenControls","handleMobileOpen","href","mobileOffsetStyle","menuOffsets","style","getMobileMenu","getMainView","getProfileViewer","actions","initialState","storeUpdate","intitialState","combineReducers","updates","newCount","newStatus","number","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8fd54835.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let itemTypeIndex = {};\n  let itemPrototypeIndex = {};\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value, prototypeId } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.prototypeId = prototypeId;\n    this.id = lastIndex;\n    itemTypeIndex[lastIndex] = type;\n    itemPrototypeIndex[lastIndex] = prototypeId;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload, prototypeId } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value, prototypeId: prototypeId }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    getItemType(id) {\n      if (itemTypeIndex[id] !== null) {\n        return itemTypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemPrototypeId(id) {\n      if (itemPrototypeIndex[id] !== null) {\n        return itemPrototypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemTypeIndex() {\n      return itemTypeIndex;\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    }\n  }\n}());\n\nexport default items;","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_INVENTORY } from '../actions/types';\n\n// game module imports\nimport gameItems from './items';\n\nconst storeInventory = (function(){\n  // {\n  //   itemId: Number,\n  //   markup: number\n  // }\n  let inventory = [];\n\n  const maxMarkup = 4000;\n\n  const dispatchStoreInventory = function() {\n    const payload = {\n      type: SET_STORE_INVENTORY,\n      inventory: inventory\n    }\n    store.dispatch(payload);\n  }\n\n  const composeInventory = function() {\n    let composedInventory = [];\n      inventory.forEach(item => {\n        let thisItem = gameItems.getItem(item.itemId);\n        composedInventory.push({ ...thisItem, markup: item.markup });\n      });\n      return composedInventory;\n  }\n\n  const filterInventory = function(filter) {\n    let filteredInventory = composeInventory().filter(item => item.type === filter);\n    return filteredInventory;\n  }\n\n  const filterStoreItems = function(filter) {\n    let filteredIds = inventory.filter(item => {\n      return storeInventory.getItemType(item.itemId) === filter\n    });\n    return filteredIds;\n  }\n\n  const markupFilteredItems = function(filter, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (filter.toLowerCase() === 'all' || gameItems.getItemType(inventoryItem.itemId) === filter) {\n        inventoryItem.markup += newMarkup;\n        if (inventoryItem.markup > maxMarkup) {\n          inventoryItem.markup = maxMarkup;\n        }\n        if (inventoryItem.markup < 0) {\n          inventoryItem.markup = 0;\n        }\n      }\n    });\n  }\n\n  const markupById = function(id, newMarkup) {\n    const targetItem = inventory.find(item => item.itemId === id);\n    targetItem.markup += newMarkup;\n  }\n\n  const markupByPrototype = function(prototypeId, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (gameItems.getItemPrototypeId(inventoryItem.itemId) === prototypeId) {\n        inventoryItem.markup += newMarkup;\n      }\n      if (inventoryItem.markup > maxMarkup) {\n        inventoryItem.markup = maxMarkup;\n      }\n      if (inventoryItem.markup < 0) {\n        inventoryItem.markup = 0;\n      }\n    })\n  }\n\n  return {\n    addItem: function(id) {\n      if (id === null || id === undefined) {\n        return false;\n      }\n      const newStoreItem = { itemId: id,\n        markup: 150\n      }\n      inventory.push(newStoreItem);\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    },\n\n    updateStoreInventory: function() {\n      dispatchStoreInventory();\n    },\n\n    getComposedInventory: function() {\n      return composeInventory();\n    },\n\n    getFilteredInventory: function(newFilter) {\n      if (!newFilter || newFilter.toLowerCase() === 'all') {\n        return composeInventory();\n      }\n      else {\n        return filterInventory(newFilter);\n      }\n    },\n    \n    getFilteredStoreItems: function(newFilter) {\n      return filterStoreItems(newFilter);\n    },\n\n    markupFilteredStoreItems: function(payload) {\n      let { filter:newFilter, markup:markupAmount } = payload;\n      markupFilteredItems(newFilter, markupAmount);\n    },\n    \n    markupStoreItem: function(payload) {\n      let { id, markup:markupAmount} = payload;\n      markupById(id, markupAmount);\n    },\n\n    markupPrototypes: function(payload) {\n      let { prototypeId, markup: markupAmount } = payload;\n      markupByPrototype(prototypeId, markupAmount);\n    }\n  }\n}());\n\nexport default storeInventory;","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = \"SET_STORE_INVENTORY\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_SUPPLY_READY = \"SET_SUPPLY_READY\";\nexport const SET_SUPPLY_SPAWNED = \"SET_SUPPLY_SPAWNED\";\nexport const SET_STORE_FILTER = \"SET_STORE_FILTER\";\nexport const SET_STORE_FILTER_ACTIVE = \"SET_STORE_FILTER_ACTIVE\";\nexport const SET_STORE_UPDATE_STATUS = \"SET_STORE_UPDATE_STATUS\";\nexport const SET_PROFILE_ACTIVE =\"SET_PROFILE_ACTIVE\";\nexport const SET_IS_FULLSCREEN = \"SET_IS_FULLSCREEN\";\nexport const SET_IS_PC = \"SET_IS_PC\";\nexport const SET_IS_MOBILE = \"SET_IS_MOBILE\";\nexport const SET_MOBILE_SCREEN = \"SET_MOBILE_SCREEN\";\nexport const SET_SUPPLIERS_INITIALIZED = \"SET_SUPPLIERS_INITIALIZED\";\nexport const SET_MOBILE_DROPDOWN = \"SET_MOBILE_DROPDOWN\";\nexport const SET_STORE_MOBILE_DETAIL = \"SET_STORE_MOBILE_DETAIL\";\nexport const SET_STORE_MOBILE_DETAIL_ITEM = \"SET_STORE_MOBILE_DETAIL_ITEM\";","import React from 'react';\nimport './StoreInventory.css';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../../actions/types';\n\nimport gameInventory from '../../game_modules/storeInventory';\n// import storeItems from '../../game_modules/items';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.mobileMultiplier = 2;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n    \n    this.handleMobileFocus = this.handleMobileFocus.bind(this);\n    this.handleOneIncrement = this.handleOneIncrement.bind(this);\n    this.handlePrototypeIncrement = this.handlePrototypeIncrement.bind(this);\n    this.getInventoryItems = this.getInventoryItems.bind(this);\n    this.getIncrementOneButtons = this.getIncrementOneButtons.bind(this);\n    this.getIncrementAllButtons = this.getIncrementAllButtons.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(gameInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  increaseMarkup() {\n    this.setState({\n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  onMouseDown(payload) {\n    const { e } = payload;\n    let id = null, prototypeId = null;\n    if (payload.id !== null) {\n      id = payload.id;\n    }\n    if (payload.prototypeId !== null) {\n      prototypeId = payload.prototypeId;\n    }\n    const refBtnClasses = e.target.classList;\n    if (refBtnClasses.contains(\"decreaseOne\") ||\n      refBtnClasses.contains(\"minusOne\") ||\n      refBtnClasses.contains(\"decreaseProto\") ||\n      refBtnClasses.contains(\"minusProto\")) {\n        this.valence = -1;\n    }\n    if (refBtnClasses.contains(\"increaseOne\") ||\n      refBtnClasses.contains(\"plusOne\") ||\n      refBtnClasses.contains(\"increaseProto\") ||\n      refBtnClasses.contains(\"plusProto\")) {\n        this.valence = 1;\n    }\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.repeat(repeatPayload);\n  }\n\n  repeat(payload) {\n    let { id, prototypeId } = payload;\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.increaseMarkup();\n    if (id !== undefined) {\n      this.handleOneIncrement(id);\n    }\n    if (prototypeId !== undefined) {\n      this.handlePrototypeIncrement(prototypeId);\n    }\n    let totaldelay = this.delay * this.mobileMultiplier;\n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(() => this.repeat(repeatPayload), totaldelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleOneIncrement(id) {\n    const posNeg = this.valence;\n    const itemPayload = {\n      id: id,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupStoreItem(itemPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handlePrototypeIncrement(prototypeId) {\n    const posNeg = this.valence;\n    const itemsPayload = {\n      prototypeId: prototypeId,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupPrototypes(itemsPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementOneButtons(id) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getIncrementAllButtons(prototypeId) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  handleMobileFocus(item) {\n    let mobileItem;\n    if (this.props.mobileItemDetail) {\n      mobileItem = this.props.mobileItemDetail;\n    }\n    if (this.props.mobileItemDetail && this.props.mobileDetail && mobileItem.id === item.id) {\n      this.props.setStoreMobileDetail(false);\n      this.props.setStoreMobileDetailItem(null);\n      window.inventory = undefined;\n    } else {\n      this.props.setStoreMobileDetail(true);\n      this.props.setStoreMobileDetailItem(item);\n      window.inventory = this;\n    }\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      let filteredInventory;\n      if (!this.props.filterActive || this.props.storeFilter === 'all') {\n        filteredInventory = gameInventory.getComposedInventory();\n      } else {\n        filteredInventory = gameInventory.getFilteredInventory(this.props.storeFilter);\n      }\n      return (\n        <div>{filteredInventory.map(item => {\n          const composedPrice = Math.floor(item.value * (1 + (item.markup / 1000)));\n          let itemClass = \"InventoryItem itemBackground\";\n          if (this.props.mobileDetail && item.id === this.props.mobileItemDetail.id) {\n            itemClass += \" activeMobileItem\";\n          }\n          return (\n            <div className={itemClass} \n              key={item.id}\n              onTouchStart={() => this.handleMobileFocus(item)}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              {this.props.isPc ? this.getIncrementOneButtons(item.id) : ''}\n              {this.props.isPc ? this.getIncrementAllButtons(item.prototypeId) : ''}\n              <div className=\"ItemValueGroup\">\n                <span className=\"InventoryItemValue\"><span className=\"CoinSymbol\">&#x2689; </span>{composedPrice}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory,\n    inventoryCount: state.storeState.inventoryCount,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS }),\n    setStoreMobileDetail: (detail) => dispatch({ type: SET_STORE_MOBILE_DETAIL, detail: detail }),\n    setStoreMobileDetailItem: (itemDetail) => dispatch({ type: SET_STORE_MOBILE_DETAIL_ITEM, itemDetail: itemDetail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_GOLD } from '../actions/types';\n\nconst gameStore = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n\n  const dispatchStoreGold = function() {\n    const payload = {\n      type: SET_STORE_GOLD,\n      amount: gold\n    }\n    store.dispatch(payload);\n  }\n  \n  return {\n    chargeGold: function(amount) {\n      if (gold < amount) {\n        console.log('attempted to charge more gold than vendor owns')\n        return false;\n      }\n      gold -= amount;\n    },\n    getName: function() {\n      return name;\n    },\n\n    setName: function(newName) {\n      name = newName;\n    },\n\n    getStartingGold: function() {\n      return startingGold;\n    },\n\n    getGold: function() {\n      return gold;\n    },\n\n    setGold: function(newGold) {\n      gold = newGold;\n    },\n    updateGold: function() {\n      dispatchStoreGold();\n    }\n  }\n}());\n\nexport default gameStore;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  let suppliesPool = {};\n  let supplyLevel = 1;\n\n  const itemTypesArr = Object.values(ItemTypes);\n  const itemTypeCount = itemTypesArr.length;\n  let itemSpawnCount = 0;\n\n  const dailySupplies = 10;\n\n  const dispatchReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSpawned = function(value) {\n    const payload = {\n      type: SET_SUPPLY_SPAWNED,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  // fill supply pool\n  const fetchSupplyPool = function() {\n    // produce array of type strings and choose one at random\n    itemSpawnCount = 0;\n    itemTypesArr.forEach(typeItem => {\n      if (suppliesPool[typeItem] == null) {\n        suppliesPool[typeItem] = [];\n      }\n      suppliesPool[typeItem].length = 0;\n    });\n\n    getItemForSupplyPool();\n    return true;\n  }\n\n  // fetch an item from backend\n  const fetchItemArrForSupplyPool = async function() {\n    let lvl = supplyLevel;\n    if (!lvl) return;\n\n    let typeToFetch = itemTypesArr[itemSpawnCount];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  // take an item that was fetched from backend and create it\n  // with item constructors and put it into state\n  const getItemForSupplyPool = function() {\n    if (itemSpawnCount >= itemTypeCount) {\n      return;\n    }\n    let newItems;\n    fetchItemArrForSupplyPool()\n      .then(itemsOfLevel => {\n        newItems = itemsOfLevel;\n      \n        // initialize field on pool if need be\n        if (suppliesPool[itemTypesArr[itemSpawnCount]] === null) {\n          suppliesPool[itemTypesArr[itemSpawnCount]] = [];\n        }\n        // push item id into supplies\n        suppliesPool[itemTypesArr[itemSpawnCount]].push(newItems);\n\n        itemSpawnCount++;\n        if (itemSpawnCount === itemTypeCount) {\n          dispatchSpawned(true);\n        }\n        getItemForSupplyPool();\n        return true;\n      }).catch(err => console.log(err));\n  }\n\n  const spawnSupply = function() {\n    // produce array of type strings and choose one at random\n    let typeIndex = Math.floor(Math.random() * itemTypesArr.length);\n    let typeToSpawn = itemTypesArr[typeIndex];\n    const newSupplyArr = suppliesPool[typeToSpawn];\n    let randomChoice = Math.floor(Math.random() * newSupplyArr.length);\n    let newItem = newSupplyArr[randomChoice];\n\n    if (Array.isArray(newItem)) {\n      newItem = newItem[0];\n    }\n\n    // compose payload for Item constructor\n    let itemPayload = {};\n    itemPayload.level = newItem.level;\n    switch(newItem.item.type) {\n      case ItemTypes.potion:\n        itemPayload.type = newItem.type;\n        break;\n      case ItemTypes.weapon:\n        itemPayload.damage = newItem.damage;\n        break;\n      case ItemTypes.armor:\n        itemPayload.armor = newItem.armor;\n        break;\n      default:\n        break;\n    }\n    let payload = {};\n    payload.itemPayload = itemPayload;\n    payload.type = newItem.item.type;\n    payload.name = newItem.item.name;\n    payload.value = newItem.item.value;\n    payload.prototypeId = newItem.item.id;\n\n    // create item and add to total inventory in Items module\n    let itemId = Items.createItem(payload);\n    supplies.push(itemId);\n\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function() {\n      for (let i = 0; i < dailySupplies; i++) {\n        spawnSupply();\n      }\n      dispatchReady(true);\n    },\n    fillSupplyPool: function() {\n      fetchSupplyPool();\n    },\n    depleteSupply: function(id) {\n      let supplyIndex = supplies.indexOf(id);\n      if (supplyIndex >= 0) {\n        let chosenSupply = supplies.splice(supplyIndex, 1);\n        return chosenSupply;\n      }\n    },\n    setSupplyLevel: function(lvl) {\n      supplyLevel = lvl;\n    }\n  }\n}());\n\nexport default supplies;","// game imports\nimport supplies from './supplies';\nimport items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLIERS, SET_SUPPLY_READY } from '../actions/types';\n\nconst suppliers = (function(){\n\n  let suppliers = [];\n\n  let currentId = 0;\n\n  const startingGold = 1000;\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n    this.inventory = [];\n    this.id = currentId;\n    currentId++;\n  }\n\n  Supplier.prototype.rankFavorites = function() {\n    let bestOfferings = [];\n    const offeringsCount = this.offerings.length;\n    for (let i = 0; i < offeringsCount; i++) {\n      bestOfferings.push(this.offerings[i]);\n    }\n    bestOfferings.sort((off1, off2) => {\n      return off1.markup - off2.markup;\n    });\n    this.rankedOfferings = bestOfferings;\n  }\n\n  Supplier.prototype.sellItem = function(payload) {\n    let { id, price } = payload;\n\n    const itemIndex = this.inventory.indexOf(id);\n    if (!itemIndex && itemIndex !== 0) {\n      return false;\n    }\n\n    this.inventory.splice(itemIndex, 1);\n    this.gold += price;\n\n    return true;\n  }\n\n  const dispatchSuppliers = function(newSuppliers) {\n    const payload = {\n      type: SET_SUPPLIERS,\n      payload: newSuppliers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSupplyReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers;\n      try {\n        initSuppliers = await fetch('/suppliers');\n      } catch (err) {\n        console.log(err);\n      }\n      if (initSuppliers) {\n        initSuppliers = initSuppliers.json();\n      }\n      return initSuppliers;\n  }\n\n  const getSuppliers = function*() {\n    yield fetchSuppliers();\n  }\n\n  const takeSupplies = function() {\n    // copy supplies to local array\n    const remainingSupplies = JSON.parse(JSON.stringify(supplies.getSupplies()));\n    let supplyTypes = [];\n    let supplyValues = [];\n    remainingSupplies.forEach(remainingSupply => {\n      const supplyItem = items.getItem(remainingSupply);\n      supplyTypes.push(supplyItem.type);\n      supplyValues.push(supplyItem.value);\n    });\n    let currentSupplier = 0;\n    const supplierCount = suppliers.length;\n    // loop through each supply item\n    remainingSupplies.forEach((remSupply, remNum) => {\n      // create an order based on last supplier to take an\n      // item and proceeded sequentially to include all\n      // suppliers\n      let supplierTries = [];\n      for (let i = 0; i < supplierCount; i++) {\n        let thisIndex = currentSupplier + i;\n        if (thisIndex >= supplierCount) {\n          thisIndex -= supplierCount;\n        }\n        supplierTries.push(thisIndex);\n      }\n      let taken = false;\n      \n      // check with each supplier if type of current supply is\n      // in their offerings\n      supplierTries.forEach(supplierIndex => {\n        let favorites = suppliers[supplierIndex].rankedOfferings;\n        for (let fave of favorites) {\n          // if type of supplier's offering equals type of this supply\n          if (fave.type === supplyTypes[remNum]) {\n            if (!taken && suppliers[supplierIndex].gold >= supplyValues[remNum]) {\n              // if supplier inventory not initialized, set to empty array\n              if (suppliers[supplierIndex].inventory === null) {\n                suppliers[supplierIndex].inventory = [];\n              }\n\n              // remove item from supply\n              let thisSupply = supplies.depleteSupply(remSupply);\n              if (Array.isArray(thisSupply)) {\n                thisSupply = thisSupply[0];\n              }\n\n              suppliers[supplierIndex].gold -= supplyValues[remNum];\n\n              // put item in supplier's inventory\n              suppliers[supplierIndex].inventory.push(thisSupply);\n\n              // mark item taken;\n              taken = true;\n              currentSupplier = supplierIndex + 1;\n              if (currentSupplier > supplierCount) {\n                currentSupplier = 0;\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      const gGetSuppliers = getSuppliers();\n      gGetSuppliers.next().value\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              thisSupplier.gold = startingGold;\n              suppliers.push(thisSupplier);\n            }\n            suppliers.forEach(supplier => supplier.rankFavorites());\n            dispatchSuppliers(suppliers);\n            return suppliers;\n          }\n        });\n    },\n    getSuppliers: function() {\n      return suppliers;\n    },\n    takeSupplierTurn: function() {\n      takeSupplies();\n      dispatchSuppliers(suppliers);\n      dispatchSupplyReady(false);\n    },\n    sellItem: function (payload) {\n      const { id, itemId, price} = payload;\n      \n      const thisSupplier = suppliers.find(refSupplier => refSupplier.id === id);\n      if (!thisSupplier) {\n        return false;\n      }\n      const sellPayload = {\n        id: itemId,\n        price: price\n      }\n\n      const resSale = thisSupplier.sellItem(sellPayload);\n      if (!resSale) {\n        return false;\n      }\n      return true;\n    },\n    updateSuppliers: function() {\n      dispatchSuppliers(suppliers);\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, SET_STORE_GOLD, SET_DAY, SET_SUPPLIERS, SET_STORE_NAME } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n  if (res.data && res.data.import_nickname) {\n    dispatch({ type: SET_STORE_NAME, name: res.data.nickname});\n  }\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}","import React from 'react';\nimport './Store.css';\n\n// import game modules\n// import gameStore from '../../game_modules/store';\nimport gameInventory from '../../game_modules/storeInventory';\n\n\n// import components\nimport ItemTypes from '../../Utilities/itemTypes';\nimport StoreInventory from '../StoreInventory/StoreInventory';\n\n\n// redux imports\nimport { SET_STORE_GOLD,\n  SET_STORE_FILTER, \n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.mobileMultiplier = 2;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n\n    this.getMobileDetail = this.getMobileDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.getFilter = this.getFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.getIncrementButtons = this.getIncrementButtons.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }\n\n  handleFilter(e) {\n    let currentType = e.target.value;\n    this.props.setStoreFilter(currentType);\n  }\n\n  increaseMarkup() {\n    this.setState({ \n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  // Proccess mousedown event to start incremental markup\n  onMouseDown(e) {\n    const refBtn = e.target;\n    if (refBtn.classList.contains(\"decreaseAll\") ||\n      refBtn.classList.contains(\"minus\")) {\n      this.valence = -1;\n    }\n    if (refBtn.classList.contains(\"increaseAll\" ||\n      refBtn.classList.contains(\"plus\"))) {\n      this.valence = 1;\n    }\n    this.repeat();\n  }\n\n  repeat() {\n    this.increaseMarkup();\n    if (this.valence === -1) {\n      this.handleDecrease();\n    }\n    if (this.valence === 1) {\n      this.handleIncrease();\n    }\n    let totalDelay = this.delay;\n    if (!this.props.pc) {\n      totalDelay *= this.mobileMultiplier;\n    } \n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(this.repeat, totalDelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleIncrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: this.state.markup\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handleDecrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: (this.state.markup * -1)\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementButtons() {\n    if (!this.props.filterActive) return '';\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getFilter() {\n    if (!this.props.filterActive) return '';\n    const itemTypesArr = Object.values(ItemTypes);\n    return (\n      <select className=\"StoreItemTypeFilter\" \n        defaultValue={this.props.storeFilter}\n        onChange={this.handleFilter}>\n        <option value=\"all\">all</option>\n        {itemTypesArr.map(itemType => {\n          return (\n            <option value={itemType}>{itemType}</option>\n          )\n        })}\n      </select>\n    )\n  }\n\n  toggleFilter() {\n    const newValue = !this.props.filterActive;\n    if (newValue && this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      inventoryComponent.handleMobileFocus(this.props.mobileItemDetail);\n    }\n    this.props.setStoreFilterActive(newValue);\n  }\n\n  getMobileDetail() {\n    if (this.props.isPc) {\n      return '';\n    }\n    if (this.props.filterActive && !this.props.mobileDetail) {\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          {this.getIncrementButtons()}\n          {this.getFilter()}\n        </div>\n      )\n    }\n    if (this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          <div className=\"itemDetailName\">{this.props.mobileItemDetail.name}</div>\n          {inventoryComponent.getIncrementOneButtons(this.props.mobileItemDetail.id)}\n          {inventoryComponent.getIncrementAllButtons(this.props.mobileItemDetail.prototypeId)}\n        </div>\n      )\n    }\n    return (\n      <div className=\"MobileDetailContainer\"></div>\n    );\n  }\n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <div className=\"FilterGroup\">\n            {this.props.isPc ? this.getIncrementButtons() : ''}\n            {this.props.isPc ? this.getFilter() : ''}\n          </div>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\" onClick={this.toggleFilter}>&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n        </div>\n        <StoreInventory />\n        {this.getMobileDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold()),\n    setStoreFilter: (filter) => dispatch({ type: SET_STORE_FILTER, filter: filter }),\n    setStoreFilterActive: (value) => dispatch({ type: SET_STORE_FILTER_ACTIVE, value: value }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './SupplierBuyButton.css';\n\nclass SupplierBuyButton extends React.Component {\n  render() {\n    return (\n      <div className=\"SupplierBuyButton button\">\n        <div className=\"supplierBuyButtonIcon\">\n          buy\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SupplierBuyButton;","import React from 'react';\nimport './Supplier.css';\n\nimport SupplierBuyButton from '../SupplierBuyButton/SupplierBuyButton';\n\n// game module imports\nimport gameItems from '../../game_modules/items';\nimport gameSuppliers from '../../game_modules/suppliers'\nimport gameStore from '../../game_modules/store';\nimport gameStoreInventory from '../../game_modules/storeInventory';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n\nclass Supplier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppllierInventory = this.getSuppllierInventory.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handlePurchase(payload) {\n    const { ids, price } = payload;\n\n    if (price > this.props.storeGold) {\n      return;\n    }\n\n    // sell first item of object\n    const sellId = ids[0];\n    const sellPayload = {\n      id: this.props.supplier.id,\n      itemId: sellId,\n      price: price\n    }\n    let sellRes = gameSuppliers.sellItem(sellPayload);\n    if (!sellRes) {\n      return;\n    }\n\n    // transact sale for vendor\n    gameStore.chargeGold(price);\n    gameStoreInventory.addItem(sellId);\n\n    // update state\n    gameStore.updateGold();\n    gameStoreInventory.updateStoreInventory();\n    gameSuppliers.updateSuppliers();\n\n  }\n\n  getSuppllierInventory() {\n    if (!this.props.initialized) {\n      return ''\n    }\n    // get details on items from ids\n    let thisInventory = [];\n    this.props.supplier.inventory.forEach(id => {\n      let inventoryItem = gameItems.getItem(id);\n      thisInventory.push(inventoryItem);\n    });\n\n    // organize all items by item name\n    let inventoryGroups = {};\n    let valueGroups = {}\n    let typeGroups = {}\n    let idGroups = {}\n    thisInventory.forEach(item => {\n      if (!inventoryGroups[item.name]) {\n        inventoryGroups[item.name] = 1;\n        valueGroups[item.name] = item.value;\n        typeGroups[item.name] = item.type;\n        idGroups[item.name] = [item.id]\n      } else {\n        inventoryGroups[item.name] += 1;\n        idGroups[item.name].push(item.id);\n      }\n    });\n\n    // create array of composed items\n    let composedItems = []\n    for (const [key, value] of Object.entries(inventoryGroups)) {\n      let item = { name: key, count: value, type: typeGroups[key], value: valueGroups[key], ids: idGroups[key] };\n      composedItems.push(item);\n    }\n\n    composedItems.sort((item1, item2) => {\n      const nameA = item1.name.toUpperCase();\n      const nameB = item2.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return composedItems.map(item => {\n      const offerings = this.props.supplier.offerings;\n      const typeIndex = offerings.findIndex(offering => offering.type === item.type);\n      \n      let composedValue = item.value;\n      if (typeIndex !== -1) {\n        composedValue = composedValue * (1 + (offerings[typeIndex].markup / 1000));\n        composedValue = Math.floor(composedValue);\n      }\n\n      return (\n        <div className=\"SupplierInventoryItem itemBackground\" key={item.id}>\n          <span className=\"SupplierInventoryItemName\">{item.name} ({item.count})</span>\n          <div className=\"SupplierItemsValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{composedValue}</span>\n          </div>\n          <div className=\"BuyButtonContainer\" onClick={() => this.handlePurchase({ ids: item.ids, price: composedValue })}>\n              <SupplierBuyButton />\n            </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    let supplierClass = \"Supplier\";\n    if (this.props.isMobile) {\n      supplierClass += \" mobileSupplier\";\n    }\n    return (\n      <div className={supplierClass}>\n        <div className=\"SupplierName\">\n          {this.props.supplier.name}\n          <div className=\"SupplierValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{this.props.supplier.gold}</span>\n          </div>\n        </div>\n        <div className=\"supplierInventory\">\n          {this.getSuppllierInventory()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    supplyReady: state.supplies.ready,\n    storeGold: state.storeState.gold,\n    isMobile: state.app.isMobile\n  }\n}\n\nexport default connect(mapStateToProps)(Supplier);","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_SUPPLIERS_INITIALIZED } from '../../actions/types';\n\n// game imports\nimport gameSupplier from '../../game_modules/suppliers';\nimport gameSupplies from '../../game_modules/supplies';\n// import suppliers from '../../game_modules/suppliers';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppliers = this.getSuppliers.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateSuppliers = this.updateSuppliers.bind(this);\n  }\n\n  updateSuppliers() {\n    if (Array.isArray(this.props.suppliers) && this.props.supplySpawned) {\n      if (!this.props.supplyReady) {\n        gameSupplies.fillSupplies();\n      }\n    }\n    if (Array.isArray(this.props.suppliers) && this.props.supplyReady) {\n      if (!this.props.suppliersInitialized) {\n        gameSupplier.takeSupplierTurn();\n        this.props.setSuppliersInitialized(true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateSuppliers();\n  }\n\n  componentDidUpdate() {\n    this.updateSuppliers();\n  }\n\n  getSuppliers() {\n    let supplierContainerClass = \"suppliersContainer\";\n    let spacerClass = \"spacer\";\n    if (!this.props.isPc) {\n      supplierContainerClass += \" nonPcContainer\";\n      supplierContainerClass += \" mobileContainer\";\n      spacerClass += \" mobileSpacer\";\n    }\n    let currentSuppliers = this.props.suppliers;\n    if (Array.isArray(currentSuppliers)) {\n      const suppliersDisplay = currentSuppliers.map(renderSupplier => {\n        return (<Supplier supplier={renderSupplier} initialized={this.props.suppliersInitialized}/>);\n      });\n\n      return (\n        <div className={supplierContainerClass}\n          ref={node => {\n            this.container = node;\n          }}>\n          {suppliersDisplay}\n          <div className={spacerClass}></div>\n        </div>\n      );\n    } else {\n      return 'no suppliers to render';\n    }\n    \n  }\n  \n  render() {\n    let suppliersClass = \"Suppliers\";\n    if (!this.props.isPc) {\n      suppliersClass += \" mobileSuppliers\";\n    }\n    return (\n      <div className={suppliersClass}>\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    supplyReady: state.supplies.ready,\n    supplySpawned: state.supplies.spawned,\n    isPc: state.app.isPc,\n    isMobile: state.app.isMobile,\n    suppliersInitialized: state.suppliers.initialized\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSuppliersInitialized: (value) => dispatch({ type: SET_SUPPLIERS_INITIALIZED, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Suppliers);","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days\">\n        <div className=\"DayTitle\">Day: {this.props.day}</div>\n        <div className=\"nextDay button\" onClick={this.handleNextDay}\n        >Finish Day</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay()),\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","import React from 'react';\nimport './Details.css';\n\nclass Details extends React.Component {\n  render() {\n    return (\n      <div className=\"Details\">\n        Details\n      </div>\n    )\n  }\n}\n\nexport default Details;","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import days from './days';\nimport gameStore from './store';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\n\nconst main = (function() {\n  \n  const maxSuppliers = 3;\n  let currentMaxLevel = 1;\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      gameStore.setName(payload.name);\n\n      const startingGold = gameStore.getStartingGold();\n      gameStore.setGold(startingGold);\n\n      supplies.setSupplyLevel(currentMaxLevel);\n      supplies.fillSupplyPool();\n      suppliers.initializeSuppliers(maxSuppliers);\n\n    },\n\n    getGameLevel: function() {\n      return currentMaxLevel;\n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false\n    }\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n    if (!this.props.edited) {\n      this.setState({ edited: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"StartScreen\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","const userPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default userPutRequests;","import React from 'react';\nimport './ProfileViewer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\nimport { fetchUser } from '../../actions'\n\n// utitlity imports\nimport userPutRequests from '../../Utilities/userPutRequests';\n\nclass ProfileViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  handleClose() {\n    if (this.props.profileActive) {\n      this.props.setProfileActive(false);\n    }\n  }\n\n  *updateUser(data) {\n    yield userPutRequests.makeRequest('user', data);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateUser = this.updateUser(data);\n    updateUser.next().value.then(() => {\n      this.props.fetchUser();\n      this.props.setProfileActive(false);\n    });\n  }\n  \n  render() {\n    let newNickname = '';\n    let newImportNickname = false;\n    let newId = null;\n    console.log(this.props.auth);\n\n    if (this.props.auth) {\n      newNickname = this.props.auth.nickname;\n      newImportNickname = this.props.auth.import_nickname;\n      newId = this.props.auth.id;\n    }\n\n    return (\n      <div className=\"ProfileViewer\">\n        <div className=\"ProfileForm\">\n          <form action={'/profile'}\n            className=\"input-fields-area\"\n            id=\"ProfileForm\"\n            method=\"POST\"\n            onSubmit={this.handleSubmit}>\n              <div className=\"input-group\">\n                <label className=\"item-label\" htmlFor=\"nickname\">Nickname</label>\n                <input type=\"text\" name=\"nickname\" id=\"nickname\" className=\"input-text\" placeholder=\"nickname\"\n                  maxLength=\"40\" defaultValue={newNickname}></input>\n              </div>\n              <div className=\"input-group\">\n                <input type=\"checkbox\" name=\"import_nickname\" id=\"import_nickname\" class=\"input-checkbox\" defaultChecked={newImportNickname} value={true}></input>\n                <label className=\"item-label\" htmlFor=\"import_nickname\">Import nickname as store name by default</label>\n              </div>\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"submit\" value=\"Update Profile\" className=\"button profile-submit\"></input>\n          </form>\n        </div>\n        <div className=\"CloseButton\"\n          onClick={this.handleClose}>\n            X\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    profileActive: state.profile.active,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value }),\n    fetchUser: () => dispatch(fetchUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewer);","import React from 'react';\nimport './MobileStoreHeadbar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass MobileStoreHeadbar extends React.Component {\n  render() {\n    return (\n      <div className=\"MobileStoreHeadbar\">\n        <h2 className=\"StoreName\">{this.props.storeName}</h2>\n        <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n  }\n}\n\nexport default connect(mapStateToProps)(MobileStoreHeadbar);","// redux imports\nimport { store } from '../index';\nimport { SET_MOBILE_SCREEN } from '../actions/types';\n\nconst mobileScreens = (function(){\n  let currentScreen = '';\n  let currentIndex = 0;\n  const screens = ['store', 'suppliers'];\n\n  const allScreens = {\n    store: 'store',\n    suppliers: 'suppliers'\n  }\n\n  let screenMap = {};\n\n  const mapScreens = function() {\n    screens.forEach((screen, screenN) => {\n      screenMap[screen] = screenN;\n    });\n  }\n\n  const dispatchMobileScreen = function() {\n    const payload = {\n      type: SET_MOBILE_SCREEN,\n      screen: currentScreen\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentScreen = screens[0];\n      currentIndex = 0;\n      mapScreens();\n    },\n\n    getCurrentScreen: function() {\n      return currentScreen;\n    },\n\n    nextScreen: function() {\n      currentIndex++;\n      if (currentIndex >= screens.length) {\n        currentIndex = 0;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    previousScreen: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = screens.length -1;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    getScreens: function() {\n      return screens;\n    },\n\n    getAllScreens: function() {\n      return allScreens;\n    },\n\n    setScreen: function(newScreen) {\n      const screenIndex = screenMap[newScreen];\n      if (screenIndex === null) {\n        return false;\n      } else {\n        currentIndex = screenIndex;\n        currentScreen = screens[screenIndex];\n        return true;\n      }\n    },\n\n    updateScreen: function() {\n      dispatchMobileScreen();\n    }\n  }\n}());\n\nexport default mobileScreens;","import React from 'react';\nimport './MobileMenu.css';\n\n// component imports\nimport Days from '../Days/Days';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.getMobileDropdown = this.getMobileDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    mobileScreens.init();\n  }\n  \n  handlePrevious() {\n    mobileScreens.previousScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleNext() {\n    mobileScreens.nextScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setMobileDropdown(!this.props.mobileDropdown)\n  }\n\n  handleScreenChange(newScreen) {\n    mobileScreens.setScreen(newScreen);\n    mobileScreens.updateScreen();\n    this.props.setMobileDropdown(false);\n  }\n\n  getMobileDropdown() {\n    const allScreens = mobileScreens.getScreens();\n    if (this.props.mobileDropdown) {\n      return (\n        <div className=\"MobileDropdown\">\n          <Days />\n          {allScreens.map(screen => {\n            return (\n              <div className=\"mobileDropdownOption\"\n                onClick={() => this.handleScreenChange(screen)}>{screen}</div>\n            )\n      })}\n      </div>)\n      \n    } else {\n      return false;\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileMenu\">\n        <span className=\"previousScreen screenArrow\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"mobileTitle\"\n          onClick={this.handleDropdown}>{this.props.mobileScreen}</span>\n        <span className=\"nextScreen screenArrow\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getMobileDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileMenu);","import React from 'react';\nimport './MobileGameScreen.css';\n\nimport Store from '../../Components/Store/Store';\nimport MobileStoreHeadbar from '../../Components/MobileStoreHeadbar/MobileStoreHeadbar';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport MobileMenu from '../../Components/MobileMenu/MobileMenu';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileGameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentScreen: 'store'\n    }\n  }\n\n  getCurrentScreen() {\n    const allScreens = mobileScreens.getAllScreens();\n    switch(this.props.mobileScreen) {\n      case allScreens.store:\n        return <Store />;\n      case allScreens.suppliers:\n        return (\n          <div>\n            <MobileStoreHeadbar />\n            <Suppliers />\n          </div>\n        \n        );\n      default:\n        return 'Nothing to display';\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileGameScreen\">\n        <MobileMenu />\n        {this.getCurrentScreen()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen\n  }\n}\n\nexport default connect(mapStateToProps)(MobileGameScreen);","import { store } from '../index';\nimport { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst screenInfo = (function(){\n  let isPc = true;\n  let isMobile = false;\n  let isFullscreen = true;\n\n  let height = 0;\n  let width = 0;\n  console.log(height, width);\n\n  const dispatchFullscreen = function() {\n    const payload = {\n      type: SET_IS_FULLSCREEN,\n      value: isFullscreen\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsPc = function() {\n    const payload = {\n      type: SET_IS_PC,\n      value: isPc\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsMobile = function() {\n    const payload = {\n      type: SET_IS_MOBILE,\n      value: isMobile\n    }\n    store.dispatch(payload);\n  }\n\n  const detectPc = function() {\n    const notPc = window.orientation > -1;\n    return !notPc;\n    \n  }\n\n  const setFullScreen = function() {\n    \n    let App = document.querySelector('.App');\n    if (App.requestFullscreen) {\n      App.requestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.msRequestFullscreen) {\n      App.msRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.mozRequestFullscreen) {\n      App.mozRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.webkitRequestFullscreen) {\n      App.webkitRequestFullscreen();\n      isFullscreen = true;\n    }\n    // document.fullscreen = true;\n    // document.fullscreenElement = App;\n  }\n\n  const exitFullScreen = function() {\n    isFullscreen = false;\n    document.exitFullscreen();\n  }\n\n  const setScreenInfo = function() {\n    const app = document.querySelector('.App');\n    const docDimensions = app.getBoundingClientRect();\n    height = docDimensions.height;\n    width = docDimensions.width;\n\n    if (width < 768) {\n      isMobile = true\n    } \n  }\n\n  return {\n    init: function() {\n      isPc = detectPc();\n      setScreenInfo();\n      dispatchIsPc();\n      dispatchIsMobile();\n    },\n    getIsPc: function() {\n      return isPc;\n    },\n    getIsMobile: function() {\n      return isMobile;\n    },\n    goFullScreen: function() {\n      setFullScreen();\n      dispatchFullscreen();\n    },\n    leaveFullScreen: function() {\n      exitFullScreen();\n      dispatchFullscreen();\n    }\n  }\n}());\n\nexport default screenInfo;","import React from 'react';\nimport './MenuBar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mobileOpen: false\n    }\n\n    this.handleProfileActive = this.handleProfileActive.bind(this);\n    this.getLoginContainer = this.getLoginContainer.bind(this);\n    this.renderProfileLink = this.renderProfileLink.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n    this.handleFullscreen = this.handleFullscreen.bind(this);\n    this.getFullScreenControls = this.getFullScreenControls.bind(this);\n    this.handleMobileOpen = this.handleMobileOpen.bind(this);\n  }\n\n  handleProfileActive() {\n    if (!this.props.profileActive) {\n      this.props.setProfileActive(true);\n    }\n    this.handleMobileOpen();\n  }\n\n  handleMobileOpen() {\n    if (this.props.profileActive && !this.state.mobileOpen) {\n      return;\n    }\n    this.setState({ mobileOpen: !this.state.mobileOpen});\n  }\n\n  renderProfileLink() {\n    switch(this.props.auth) {\n      case null:\n        return '';\n      case false:\n        return '';\n      default:\n        return <li key=\"profile\" class=\"profileLink\" onClick={this.handleProfileActive}>profile</li>\n    }\n  }\n\n  renderLogin() {\n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\" className=\"facebookLogo\"><span>f</span></a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner' && screenInfo.getIsPc()) {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n\n  getLoginContainer() {\n    if (!this.props.isPc) {\n      return (\n        <div className=\"hamburgerContainer\"\n          onClick={this.handleMobileOpen}>\n          <div className=\"hamburgerLine\"></div>\n          <div className=\"hamburgerLine\"></div>\n          <div className=\"hamburgerLine\"></div>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"LoginContainer\">\n        {this.renderProfileLink()}\n        {this.renderEditorLink()}\n        {this.renderLogin()}\n      </ul>\n    )\n  }\n\n  getMobileMenu() {\n    if (!this.props.isPc && this.state.mobileOpen) {\n      let mobileOffsetStyle = {};\n      let menuOffsets = 2;\n        if (this.props.auth) {\n          menuOffsets += 1;\n        }\n        // set style by default for tablet\n        mobileOffsetStyle.height = `calc(${(menuOffsets * 2.4)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        if (this.props.isMobile) {\n          mobileOffsetStyle.height = `calc(${(menuOffsets * 1.8)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        } \n        \n        \n      return (\n        <div className=\"mobileMenuContainer\"\n          onClick={this.handleMobileOpen}>\n          <ul className=\"LoginContainer mobileMenu\"\n            style={mobileOffsetStyle}\n            >\n            {this.getFullScreenControls()}\n            {this.renderProfileLink()}\n            {this.renderLogin()}\n          </ul>\n        </div>\n        \n      )\n    }\n  }\n\n  handleFullscreen() {\n    if (!this.props.isFullscreen) {\n      screenInfo.goFullScreen();\n    } else {\n      screenInfo.leaveFullScreen();\n    }\n  }\n\n  getFullScreenControls() {\n    if (!this.props.isFullscreen) {\n      return <li key=\"goFullscreen\" \n        className=\"Fullscreen screenLink\"\n        onClick={this.handleFullscreen}>[  ]</li>\n    } else {\n      return <li key=\"exitFullscren\"\n        className=\"ExitFullScreen screenLink\"\n        onClick={this.handleFullscreen}>&#9580;</li>\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        {this.getLoginContainer()}\n        {this.getMobileMenu()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    isFullscreen: state.app.isFullscreen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\n// game module imports\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\nimport ProfileViewer from '../../Containers/ProfileViewer/ProfileViewer';\nimport MobileGameScreen from '../../Containers/MobileGameScreen/MobileGameScreen';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\n// component imports\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.getProfileViewer = this.getProfileViewer.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n    screenInfo.init();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      if (!this.props.isPc) {\n        return (\n          <MobileGameScreen />\n        )\n      } else {\n        return (\n          <GameScreen />\n        )\n      }\n    }\n  }\n\n  getProfileViewer() {\n    const profileStatus = this.props.profileActive;\n    if (profileStatus) {\n      return (\n        <ProfileViewer />\n      )\n    }\n  }  \n\n  render() {\n    return (\n      <div className=\"App\"\n        ref={ref => {\n          this.container = ref;\n        }}>\n        <MenuBar />\n        {this.getMainView()}\n        {this.getProfileViewer()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY,\n  SET_STORE_FILTER,\n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  filterActive: false,\n  filter: 'all',\n  needsUpdate: false,\n  inventory: [],\n  inventoryCount: 0,\n  mobileDetail: null,\n  mobileItemDetail: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      let newCount = state.inventoryCount;\n      if (Array.isArray(newInventory)) {\n        newCount = newInventory.length;\n      }\n      return {\n        ...state,\n        inventory: newInventory,\n        inventoryCount: newCount\n      }\n    case SET_STORE_FILTER_ACTIVE:\n      return {\n        ...state,\n        filterActive: action.value\n      }\n    case SET_STORE_FILTER:\n      return {\n        ...state,\n        filter: action.filter\n      }\n    case SET_STORE_UPDATE_STATUS:\n      const newStatus = !state.needsUpdate;\n      return {\n        ...state,\n        needsUpdate: newStatus\n      }\n    case SET_STORE_MOBILE_DETAIL:\n      return {\n        ...state,\n        mobileDetail: action.detail\n      }\n    case SET_STORE_MOBILE_DETAIL_ITEM:\n      return {\n        ...state,\n        mobileItemDetail: action.itemDetail\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS, SET_SUPPLIERS_INITIALIZED } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0,\n  initialized: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n      case SET_SUPPLIERS_INITIALIZED:\n        return {\n          ...state,\n          initialized: action.value\n        }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst initialState = {\n  ready: false,\n  spawned: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLY_READY:\n      return {\n        ...state,\n        ready: action.value\n      }\n    case SET_SUPPLY_SPAWNED:\n      return {\n        ...state,\n        spawned: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_PROFILE_ACTIVE } from '../actions/types';\n\nconst initialState = {\n  active: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFILE_ACTIVE:\n      return {\n        ...state,\n        active: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst initialState = {\n  isFullscreen: false,\n  isPc: true,\n  isMobile: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: action.value\n      }\n    case SET_IS_PC:\n      return {\n        ...state,\n        isPc: action.value\n      }\n    case SET_IS_MOBILE:\n      return {\n        ...state,\n        isMobile: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_MOBILE_SCREEN, SET_MOBILE_DROPDOWN } from '../actions/types';\n\nconst intitialState = {\n  screen: 'store',\n  dropdown: false\n}\n\nexport default function(state = intitialState, action) {\n  switch(action.type) {\n    case SET_MOBILE_SCREEN:\n      return {\n        ...state,\n        screen: action.screen\n      }\n    case SET_MOBILE_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\nimport suppliesReducer from './suppliesReducer';\nimport profileReducer from './profileReducer';\nimport appStateReducer from './appStateReducer';\nimport mobileMenuReducer from './mobileMenuReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer,\n  supplies: suppliesReducer,\n  profile: profileReducer,\n  app: appStateReducer,\n  mobileMenu: mobileMenuReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}