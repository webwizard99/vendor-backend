{"version":3,"sources":["Utilities/itemTypes.js","Utilities/potionTypes.js","game_modules/items.js","game_modules/storeInventory.js","actions/types.js","Components/StoreInventory/StoreInventory.jsx","game_modules/store.js","game_modules/days.js","game_modules/supplies.js","Utilities/fetcher.js","game_modules/suppliers.js","actions/index.js","Components/Store/Store.jsx","Components/SupplierBuyButton/SupplierBuyButton.jsx","Components/Supplier/Supplier.jsx","Components/Suppliers/Suppliers.jsx","game_modules/gameConstants.js","game_modules/dungeon.js","Utilities/tagProcessor.js","game_modules/adventurers.js","game_modules/main.js","Components/Days/Days.jsx","Utilities/pcMenus.js","Utilities/pcDetailMenus.js","Components/DetailPCMenu/DetailPCMenu.jsx","Utilities/screenInfo.js","Utilities/breadcrumb.js","Utilities/mobileScreens.js","Components/Adventurer/Adventurer.jsx","Components/Adventurers/Adventurers.jsx","Components/AdventurerDetail/AdventurerDetail.jsx","Components/AdventurersPartial/AdventurersPartial.jsx","Components/DungeonLevel/DungeonLevel.jsx","Components/Dungeon/Dungeon.jsx","Components/Details/Details.jsx","Containers/GameScreen/GameScreen.jsx","Components/Title/Title.jsx","Containers/StartScreen/StartScreen.jsx","Utilities/userPutRequests.js","Containers/ProfileViewer/ProfileViewer.jsx","Components/MobileStoreHeadbar/MobileStoreHeadbar.jsx","Components/MobileMenu/MobileMenu.jsx","Containers/MobileGameScreen/MobileGameScreen.jsx","Components/MenuBar/MenuBar.jsx","Components/App/App.jsx","reducers/daysReducer.js","reducers/gameStateReducer.js","reducers/storeReducer.js","reducers/suppliersReducer.js","reducers/suppliesReducer.js","reducers/profileReducer.js","reducers/appStateReducer.js","reducers/mobileMenuReducer.js","reducers/adventurersReducer.js","reducers/pcDetailReducer.js","reducers/detailReducer.js","reducers/dungeonReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["itemTypes","potion","weapon","armor","potionTypes","items","ItemTypes","PotionTypes","allItems","itemTypeIndex","itemPrototypeIndex","lastIndex","Item","payload","type","name","value","prototypeId","rarity","this","id","Potion","level","Weapon","damage","Armor","createItem","itemPayload","newItem","newPotionType","console","log","newPotionLevel","potionPayload","newWeaponDamage","newWeaponLevel","weaponPayload","newArmorArmor","newArmorLevel","armorPayload","push","getItem","thisItem","find","item","destroyItem","filter","getItemType","getItemPrototypeId","getItemTypeIndex","createTestPotion","lvl","healing","getItemTypes","composePayloadFromProto","protoItem","storeInventory","inventory","composeInventory","composedInventory","forEach","gameItems","itemId","markup","addItem","undefined","newStoreItem","removeItem","getStoreInventory","updateStoreInventory","store","dispatch","dispatchStoreInventory","getComposedInventory","getFilteredInventory","newFilter","toLowerCase","getFilteredStoreItems","markupFilteredStoreItems","newMarkup","markupAmount","inventoryItem","markupStoreItem","markupById","markupPrototypes","markupByPrototype","StoreInventory","props","state","timer","mobileMultiplier","delay","markupIntensity","valence","increaseMarkup","bind","repeat","onMouseDown","onMouseUp","markupOut","handleMobileFocus","handleOneIncrement","handlePrototypeIncrement","getInventoryItems","getIncrementOneButtons","getIncrementAllButtons","newInventory","JSON","parse","stringify","gameInventory","setInventory","setState","e","refBtnClasses","target","classList","contains","repeatPayload","totaldelay","setTimeout","clearTimeout","posNeg","toggleStoreUpdateStatus","itemsPayload","isPc","className","onTouchStart","onTouchEnd","mobileItem","mobileItemDetail","mobileDetail","setStoreMobileDetail","setStoreMobileDetailItem","window","filteredInventory","length","filterActive","storeFilter","map","composedPrice","Math","floor","itemClass","key","React","Component","connect","storeState","inventoryCount","storeNeedsUpdate","needsUpdate","isMobile","app","detail","itemDetail","gameStore","gold","chargeGold","amount","creditGold","getName","setName","newName","getStartingGold","getGold","setGold","newGold","updateGold","dispatchStoreGold","days","day","getDay","setDay","newDay","resetDay","supplies","suppliesPool","supplyLevel","itemTypesArr","Object","values","itemTypeCount","itemSpawnCount","fetchItemArrForSupplyPool","a","typeToFetch","maxLvl","fetchURL","fetch","possibleItems","json","getItemForSupplyPool","newItems","then","itemsOfLevel","dispatchSpawned","catch","err","spawnSupply","typeIndex","random","typeToSpawn","newSupplyArr","Array","isArray","Items","getSupplies","fillSupplies","i","dispatchReady","fillSupplyPool","typeItem","depleteSupply","supplyIndex","indexOf","splice","setSupplyLevel","fetcher","fetchRoute","routeName","response","suppliers","currentId","Supplier","offerings","prototype","rankFavorites","bestOfferings","offeringsCount","sort","off1","off2","rankedOfferings","sellItem","price","itemIndex","takeIncome","dispatchSuppliers","newSuppliers","fetchSuppliers","initSuppliers","getSuppliers","initializeSuppliers","maxSuppliers","next","drainSuppliers","pushIndex","newSupplier","supplierPayload","thisSupplier","supplier","takeSupplierTurn","remainingSupplies","supplyTypes","supplyValues","remainingSupply","supplyItem","currentSupplier","supplierCount","remSupply","remNum","supplierTries","thisIndex","taken","supplierIndex","favorites","thisSupply","takeSupplies","dispatchSupplyReady","refSupplier","sellPayload","takeSupplierIncomeTurns","updateSuppliers","fetchUser","axios","get","res","data","import_nickname","nickname","fetchGold","fetchDay","Store","getMobileDetail","componentDidMount","toggleFilter","getFilter","handleFilter","getIncrementButtons","handleIncrease","handleDecrease","currentType","setStoreFilter","refBtn","totalDelay","pc","defaultValue","onChange","itemType","newValue","setStoreFilterActive","inventoryComponent","storeName","role","aria-label","onClick","setStoreGold","SupplierBuyButton","getSuppllierInventory","handlePurchase","ids","storeGold","sellId","gameSuppliers","gameStoreInventory","initialized","thisInventory","inventoryGroups","valueGroups","typeGroups","idGroups","composedItems","entries","count","item1","item2","nameA","toUpperCase","nameB","findIndex","offering","composedValue","detailUpdate","setDetailUpdate","supplierClass","supplyReady","ready","update","Suppliers","componentDidUpdate","supplySpawned","gameSupplies","suppliersInitialized","gameSupplier","setSuppliersInitialized","supplierContainerClass","spacerClass","currentSuppliers","suppliersDisplay","renderSupplier","ref","node","container","suppliersClass","spawned","gameConstants","startingAdventurers","dailyAdventurers","adventurerStartingGold","dungeon","levelCount","levels","adventurers","exploredLevel","Level","number","boss","bossId","monstersMinLevel","monstersMaxLevel","tileAssignments","treasureDropList","treasures","droppedTreasures","monsters","lurkingMonsters","monstersLoot","treasureListFetched","monstersFetched","monsterDropListItemsFetched","intialized","initialize","Promise","resolve","reject","getMonstersForLevel","monstersToAdd","monsterDrops","addMonster","addMonsterDrops","drop_list","drops","addDrop","addId","dropType","drop_type","treasureDrops","drop","resolveMonsterDrops","rejectMonsterDrops","monsterDrop","mDropN","getDrop","resolvedDrop","resolveTreasureDrops","rejectTreasureDrops","treasureDrop","tDropN","activateTile","adventurer","tileOutcomes","tileI","weight","probability","result","tile","outcome1","outcome2","resultTileI","resultTile","dungeon_tile","innTreasureBoost","informed","actions","adventurersModule","getActions","checkTreasureBoost","action","checkForTreasure","checkTrapBoost","checkForTraps","treasureProb","treasure","encounterProb","encounter","trapProb","trap","threshholdProb","treasureIndex","itemDropped","dropChance","goldMin","gold_min","goldRange","gold_max","randomAward","gold_chance","creditAccount","treasureItem","considerTreasure","encounterTrap","dispatchLevels","dispatchExploredLevel","dispatchAdventurers","fetchLevels","initLevels","getLevels","minLevel","maxLevel","fetchMonstersInRange","fetchUrl","fetchedMonsters","fetchDrop","fetchedDrop","loadLevel","nextLevelN","completed","initializeLevels","newLevel","shift","levelPayload","boss_id","monsters_min_level","monsters_max_level","tile_assignments","thisLevel","level1","level2","updateLevels","getExploredLevel","receiveAdventurer","adventurerId","addAdventurer","releaseAdventurer","deleteAdventurer","executeTurn","dungeonEntry","dunAdventurer","checkLevelReadiness","highestLevel","adventurerI","loadNextLevel","tagProcessor","filterClasses","status","getFilterClasses","setTrap","decisions","setTrapBehavior","thief","soldier","bard","Adventurer","strength","speed","cunning","intelligence","constitution","dungeonBehavior","townBehavior","adventurerClass","experience","hp","maxHp","equipment","inDungeon","hasFoundStairs","currentTotalDungeonTurns","currentAction","turns","checkAccount","chargeAccount","unequipItem","slot","equipItem","getCurrentItemCount","protoId","protoCount","addCombatLog","message","combatLog","getCombatLog","checkHealthChoice","conserve_health","checkHasPotion","checkPotionUse","use_potion","usePotion","potionToUse","heldPotions","hpDifferential","potion1","potion2","hpToHeal","pow","healJSX","checkTrapDecision","check_for_traps","checkTreasureDecision","search_for_treasure","checkSetTrapDecision","prefer_weaker_monster","checkAdvanceDecision","percentLost","inventoryPercentEmpty","fillInventoryDesire","fill_inventory","advance_tile","checkReturnToTown","turnsFactor","turnsInfluence","return_to_town","dungeonLevel","trapDamage","trapFactor","traps","agility","computedDamage","trapJSX","turnController","TurnController","currentTurns","addTurn","turn","clearTurn","deletedTurn","foundTurn","dispatchUpdate","clearAdventurerTurns","deletedTurns","startTurns","turnNumber","runTurn","startTurn","nextTurn","Turn","resultDecision","dungeonAdventurer","thisDecision","Decision","needHealing","hasPotion","advance","returnToTown","weighDecisionLogical","weighDecisionTournament","actionMsg","actionJSX","clearPackage","resolveTurn","rejectTurn","checkTreasure","concernedAdventurer","remainingOptions","weights","tournamentRounds","ceil","log2","round","optionsLength","pairings","pairCount","offest","pair","eliminated","result1","result2","randomChoice","elIndex","eliminate","option","newAdventurers","fetchAdventurers","initAdventurers","getAdventurers","enter_dungeon","dungeonJSX","combatLogMessage","dungeonTurns","dungeonAdventurers","dunAdN","totalTurns","turnPayload","newTurn","initializeAdventurers","maxAdventurers","drainAdventurers","newAdventurer","adventurerPayload","dungeon_behavior","town_behavior","adventurer_class","thisAdventurer","updateAdventurers","takeAdventurerTurn","townAdventurer","totalFactor","use_tavern","totalCost","innJSX","inventoryItems","composedItem","shoppingAdventurers","adventurerTurn","adventurerCount","adventurerTries","adventurerIndex","decisionFactor","itemProto","currentHoldings","willBuy","currentGear","totalPrice","playerStore","baseItem","doShopping","main","init","startingGold","getGameLevel","performTurn","Days","handleNextDay","currentDay","mobileDropdown","setMobileDropdown","mobileMenu","dropdown","pcMenus","adventurersPartial","pcDetailMenus","currentMenu","currentIndex","menus","menuMap","menu","menuN","getCurrentMenu","nextMenu","previousMenu","getMenus","setmenu","newMenu","menuIndex","updateMenu","dispatchPCMenu","DetailPCMenu","handlePrevious","handleNext","handleDropdown","handleMenuChange","getPCDropdown","pcDropdown","setPcDropdown","allMenus","menuName","pcDetailMenu","pcMenu","dungeonLevelExplored","setPcDetailMenu","screenInfo","isFullscreen","dispatchFullscreen","orientation","docDimensions","document","querySelector","getBoundingClientRect","width","setScreenInfo","dispatchIsPc","dispatchIsMobile","getIsPc","getIsMobile","goFullScreen","App","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setFullScreen","leaveFullScreen","exitFullscreen","breadcrumb","breadcrumbs","Breadcrumb","displayPayload","scrollPos","dispatchDisplay","screen","popBreadcrumb","pop","addBreadcrumb","display","newCrumb","mobileScreens","currentScreen","screens","allScreens","screenMap","screenN","getCurrentScreen","nextScreen","previousScreen","getScreens","getAllScreens","setScreen","newScreen","screenIndex","updateScreen","dispatchMobileScreen","handleZoom","partialAdventurers","breadcrumbName","setDetailId","scrollY","scrollTop","screenPos","setMobileScreen","setPCDetail","adventurerClassColor","adventurerClassIconColor","classColors","classIcon","charAt","dungeonIndicator","Adventurers","adventurerUpdate","AdventurerDetail","handleBack","scrollCombatLog","adventurerInventory","equippedIndicator","adventurerCombatLog","cLog","scrollHeight","detailId","getInventory","AdventurersPartial","setPartialAdventurers","DungeonLevel","handleAdventurerList","levelAdventurers","adventurerIds","Dungeon","Details","formTable","loadFormTable","getDetail","tempTable","menuTypes","GameScreen","Title","StartScreen","edited","handleStart","handleNameInput","game","setStarted","charCode","htmlFor","val","setStoreName","onKeyPress","started","gameState","auth","userPutRequests","makeRequest","putRoute","putBody","subBody","putRes","method","headers","body","ProfileViewer","handleClose","handleSubmit","updateUser","profileActive","setProfileActive","preventDefault","FormData","newNickname","newImportNickname","newId","onSubmit","placeholder","maxLength","class","defaultChecked","profile","active","MobileStoreHeadbar","MobileMenu","handleScreenChange","getMobileDropdown","mobileMenuName","mobileScreen","MobileGameScreen","MenuBar","mobileOpen","handleProfileActive","getLoginContainer","renderProfileLink","renderLogin","renderEditorLink","handleFullscreen","getFullScreenControls","handleMobileOpen","href","mobileOffsetStyle","menuOffsets","height","style","getMobileMenu","getMainView","getProfileViewer","initialState","storeUpdate","intitialState","combineReducers","updates","newCount","newStatus","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.feb4d80f.chunk.js","sourcesContent":["const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import ItemTypes from '../Utilities/itemTypes';\nimport PotionTypes from '../Utilities/potionTypes';\n\nconst items = (function(){\n  const itemTypes = ItemTypes;\n  const potionTypes = PotionTypes;\n\n  let allItems = [];\n  let itemTypeIndex = {};\n  let itemPrototypeIndex = {};\n  let lastIndex = 0;\n  \n  const Item = function(payload) {\n    const { type, name, value, prototypeId, rarity } = payload;\n    this.type = type;\n    this.name = name;\n    this.value = value;\n    this.prototypeId = prototypeId;\n    this.rarity = rarity;\n    this.id = lastIndex;\n    itemTypeIndex[lastIndex] = type;\n    itemPrototypeIndex[lastIndex] = prototypeId;\n    lastIndex++;\n  }\n\n  const Potion = function(payload) {\n    const { type, level } = payload;\n    this.type = type;\n    this.level = level;\n  }\n\n  const Weapon = function(payload) {\n    const { damage, level } = payload;\n    this.damage = damage;\n    this.level = level;\n  }\n\n  const Armor = function(payload) {\n    const { armor, level } = payload;\n    this.armor = armor;\n    this.level = level;\n  }\n  \n  return {\n    createItem: function(payload) {\n      let { type, name, value, itemPayload, prototypeId, rarity } = payload;\n      if (!itemTypes[type]) {\n        console.log('invalid item type passed to items.createItem()');\n        return;\n      }\n      \n      const newPayload = { type: type , name: name , value: value, prototypeId: prototypeId, rarity: rarity }\n      const newItem = new Item(newPayload);\n      \n      switch (newItem.type) {\n        case itemTypes.potion:\n          const newPotionType = itemPayload.type;  \n          if (!newPotionType) {\n            console.log('attempted to create invalid potion type');\n            return;\n          }\n          const newPotionLevel = itemPayload.level;\n          if (!newPotionLevel) {\n            console.log('attempted to create a potion with an invalid level');\n            return;\n          }\n          const potionPayload = { type: newPotionType, level: newPotionLevel };\n          newItem[newItem.type] = new Potion(potionPayload);\n          break;\n        case itemTypes.weapon:\n          const newWeaponDamage = itemPayload.damage;\n          if (!newWeaponDamage) {\n            console.log('attempted to create a weapon without damage');\n            return;\n          }\n          const newWeaponLevel = itemPayload.level;\n          if (!newWeaponLevel) {\n            console.log('attempted to create a weapon with an invalid level');\n            return;\n          }\n          const weaponPayload = { damage: newWeaponDamage, level: newWeaponLevel };\n          newItem[newItem.type] = new Weapon(weaponPayload);\n          break;\n        case itemTypes.armor:\n          const newArmorArmor = itemPayload.armor;\n          if (!newArmorArmor) {\n            console.log('attempted to make a new armor without an armor value');\n            return;\n          }\n          const newArmorLevel = itemPayload.level;\n          if (!newArmorLevel) {\n            console.log('attempted to make a new armor without a level value');\n            return;\n          }\n          const armorPayload = { armor: newArmorArmor, level: newArmorLevel };\n          newItem[newItem.type] = new Armor(armorPayload);\n          break;\n        default:\n          break;\n      }\n\n      allItems.push(newItem);\n      return newItem.id;\n    },\n\n    getItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        return thisItem;\n      } else {\n        console.log('attempted to retrieve invalid item.')\n      }\n    },\n\n    destroyItem(id) {\n      let thisItem = allItems.find(item => item.id === id);\n      if (thisItem) {\n        allItems = allItems.filter(item => item.id !== id);\n        thisItem = null;\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    getItemType(id) {\n      if (itemTypeIndex[id] !== null) {\n        return itemTypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemPrototypeId(id) {\n      if (itemPrototypeIndex[id] !== null) {\n        return itemPrototypeIndex[id];\n      } else {\n        return false;\n      }\n    },\n\n    getItemTypeIndex() {\n      return itemTypeIndex;\n    },\n\n    createTestPotion: function(lvl) {\n      const newItem = new Item({ type: itemTypes.potion, name: 'Healing Potion', value: 60});\n      newItem[itemTypes.potion] = new Potion({ type: potionTypes.healing, level: lvl});\n      return newItem;\n    },\n\n    getItemTypes: function() {\n      return itemTypes;\n    },\n\n    composePayloadFromProto: function(protoItem) {\n      // compose payload for Item constructor\n      let itemPayload = {};\n      itemPayload.level = protoItem.level;\n      switch(protoItem.item.type) {\n        case ItemTypes.potion:\n          itemPayload.type = protoItem.type;\n          break;\n        case ItemTypes.weapon:\n          itemPayload.damage = protoItem.damage;\n          break;\n        case ItemTypes.armor:\n          itemPayload.armor = protoItem.armor;\n          break;\n        default:\n          break;\n      }\n      let payload = {};\n      payload.itemPayload = itemPayload;\n      payload.type = protoItem.item.type;\n      payload.name = protoItem.item.name;\n      payload.value = protoItem.item.value;\n      payload.prototypeId = protoItem.item.id;\n      payload.rarity = protoItem.item.rarity;\n      return payload;\n    }\n  }\n}());\n\nexport default items;","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_INVENTORY } from '../actions/types';\n\n// game module imports\nimport gameItems from './items';\n\nconst storeInventory = (function(){\n  // {\n  //   itemId: Number,\n  //   markup: number\n  // }\n  let inventory = [];\n\n  const maxMarkup = 4000;\n\n  const dispatchStoreInventory = function() {\n    const payload = {\n      type: SET_STORE_INVENTORY,\n      inventory: inventory\n    }\n    store.dispatch(payload);\n  }\n\n  const composeInventory = function() {\n    let composedInventory = [];\n      inventory.forEach(item => {\n        let thisItem = gameItems.getItem(item.itemId);\n        composedInventory.push({ ...thisItem, markup: item.markup });\n      });\n      return composedInventory;\n  }\n\n  const filterInventory = function(filter) {\n    let filteredInventory = composeInventory().filter(item => item.type === filter);\n    return filteredInventory;\n  }\n\n  const filterStoreItems = function(filter) {\n    let filteredIds = inventory.filter(item => {\n      return storeInventory.getItemType(item.itemId) === filter\n    });\n    return filteredIds;\n  }\n\n  const markupFilteredItems = function(filter, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (filter.toLowerCase() === 'all' || gameItems.getItemType(inventoryItem.itemId) === filter) {\n        inventoryItem.markup += newMarkup;\n        if (inventoryItem.markup > maxMarkup) {\n          inventoryItem.markup = maxMarkup;\n        }\n        if (inventoryItem.markup < 0) {\n          inventoryItem.markup = 0;\n        }\n      }\n    });\n  }\n\n  const markupById = function(id, newMarkup) {\n    const targetItem = inventory.find(item => item.itemId === id);\n    targetItem.markup += newMarkup;\n  }\n\n  const markupByPrototype = function(prototypeId, newMarkup) {\n    inventory.forEach(inventoryItem => {\n      if (gameItems.getItemPrototypeId(inventoryItem.itemId) === prototypeId) {\n        inventoryItem.markup += newMarkup;\n      }\n      if (inventoryItem.markup > maxMarkup) {\n        inventoryItem.markup = maxMarkup;\n      }\n      if (inventoryItem.markup < 0) {\n        inventoryItem.markup = 0;\n      }\n    })\n  }\n\n  return {\n    addItem: function(id) {\n      if (id === null || id === undefined) {\n        return false;\n      }\n      const newStoreItem = { itemId: id,\n        markup: 150\n      }\n      inventory.push(newStoreItem);\n    },\n\n    removeItem: function(id) {\n      const foundItem = inventory.find(item => item.itemId === id);\n      if (foundItem) {\n        inventory = inventory.filter(item => item.itemId !== id);\n      }\n    },\n\n    getStoreInventory: function() {\n      return inventory;\n    },\n\n    updateStoreInventory: function() {\n      dispatchStoreInventory();\n    },\n\n    getComposedInventory: function() {\n      return composeInventory();\n    },\n\n    getFilteredInventory: function(newFilter) {\n      if (!newFilter || newFilter.toLowerCase() === 'all') {\n        return composeInventory();\n      }\n      else {\n        return filterInventory(newFilter);\n      }\n    },\n    \n    getFilteredStoreItems: function(newFilter) {\n      return filterStoreItems(newFilter);\n    },\n\n    markupFilteredStoreItems: function(payload) {\n      let { filter:newFilter, markup:markupAmount } = payload;\n      markupFilteredItems(newFilter, markupAmount);\n    },\n    \n    markupStoreItem: function(payload) {\n      let { id, markup:markupAmount} = payload;\n      markupById(id, markupAmount);\n    },\n\n    markupPrototypes: function(payload) {\n      let { prototypeId, markup: markupAmount } = payload;\n      markupByPrototype(prototypeId, markupAmount);\n    }\n  }\n}());\n\nexport default storeInventory;","export const SET_DAY = \"SET_DAY\";\nexport const SET_GAME_STATE = \"SET_GAME_STATE\";\nexport const SET_STORE_NAME = \"SET_STORE_NAME\";\nexport const SET_STORE_GOLD = \"SET_STORE_GOLD\";\nexport const SET_UPDATES = \"SET_UPDATES\";\nexport const SET_STORE_UPDATE = \"SET_STORE_UPDATE\";\nexport const SET_STORE_INVENTORY = \"SET_STORE_INVENTORY\";\nexport const FETCH_USER = \"FETCH_USER\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_SUPPLY_READY = \"SET_SUPPLY_READY\";\nexport const SET_SUPPLY_SPAWNED = \"SET_SUPPLY_SPAWNED\";\nexport const SET_STORE_FILTER = \"SET_STORE_FILTER\";\nexport const SET_STORE_FILTER_ACTIVE = \"SET_STORE_FILTER_ACTIVE\";\nexport const SET_STORE_UPDATE_STATUS = \"SET_STORE_UPDATE_STATUS\";\nexport const SET_PROFILE_ACTIVE =\"SET_PROFILE_ACTIVE\";\nexport const SET_IS_FULLSCREEN = \"SET_IS_FULLSCREEN\";\nexport const SET_IS_PC = \"SET_IS_PC\";\nexport const SET_IS_MOBILE = \"SET_IS_MOBILE\";\nexport const SET_MOBILE_SCREEN = \"SET_MOBILE_SCREEN\";\nexport const SET_SUPPLIERS_INITIALIZED = \"SET_SUPPLIERS_INITIALIZED\";\nexport const SET_MOBILE_DROPDOWN = \"SET_MOBILE_DROPDOWN\";\nexport const SET_STORE_MOBILE_DETAIL = \"SET_STORE_MOBILE_DETAIL\";\nexport const SET_STORE_MOBILE_DETAIL_ITEM = \"SET_STORE_MOBILE_DETAIL_ITEM\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_PC_DETAIL = \"SET_PC_DETAIL\";\nexport const SET_PC_DROPDOWN = \"SET_PC_DROPDOWN\";\nexport const SET_DETAIL_ID = \"SET_DETAIL_ID\";\nexport const SET_DETAIL_UPDATE = \"SET_DETAIL_UPDATE\";\nexport const SET_DUNGEON_LEVELS = \"SET_DUNGEON_LEVELS\";\nexport const SET_DUNGEON_LEVEL_EXPLORED = \"SET_DUNGEON_LEVEL_EXPLORED\";\nexport const SET_DUNGEON_ADVENTURERS = \"SET_DUNGEON_ADVENTURERS\";\nexport const SET_PARTIAL_ADVENTURERS = \"SET_PARTIAL_ADVENTURERS\";","import React from 'react';\nimport './StoreInventory.css';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_INVENTORY,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../../actions/types';\n\nimport gameInventory from '../../game_modules/storeInventory';\n// import storeItems from '../../game_modules/items';\n\nclass StoreInventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.mobileMultiplier = 2;\n    this.delay = 200;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n    \n    this.handleMobileFocus = this.handleMobileFocus.bind(this);\n    this.handleOneIncrement = this.handleOneIncrement.bind(this);\n    this.handlePrototypeIncrement = this.handlePrototypeIncrement.bind(this);\n    this.getInventoryItems = this.getInventoryItems.bind(this);\n    this.getIncrementOneButtons = this.getIncrementOneButtons.bind(this);\n    this.getIncrementAllButtons = this.getIncrementAllButtons.bind(this);\n  }\n\n  componentDidMount() {\n    const newInventory = JSON.parse(JSON.stringify(gameInventory.getStoreInventory()));\n    this.props.setInventory(newInventory);\n  }\n\n  increaseMarkup() {\n    this.setState({\n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  onMouseDown(payload) {\n    const { e } = payload;\n    let id = null, prototypeId = null;\n    if (payload.id !== null) {\n      id = payload.id;\n    }\n    if (payload.prototypeId !== null) {\n      prototypeId = payload.prototypeId;\n    }\n    const refBtnClasses = e.target.classList;\n    if (refBtnClasses.contains(\"decreaseOne\") ||\n      refBtnClasses.contains(\"minusOne\") ||\n      refBtnClasses.contains(\"decreaseProto\") ||\n      refBtnClasses.contains(\"minusProto\")) {\n        this.valence = -1;\n    }\n    if (refBtnClasses.contains(\"increaseOne\") ||\n      refBtnClasses.contains(\"plusOne\") ||\n      refBtnClasses.contains(\"increaseProto\") ||\n      refBtnClasses.contains(\"plusProto\")) {\n        this.valence = 1;\n    }\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.repeat(repeatPayload);\n  }\n\n  repeat(payload) {\n    let { id, prototypeId } = payload;\n    const repeatPayload = {\n      id: id,\n      prototypeId: prototypeId\n    }\n    this.increaseMarkup();\n    if (id !== undefined) {\n      this.handleOneIncrement(id);\n    }\n    if (prototypeId !== undefined) {\n      this.handlePrototypeIncrement(prototypeId);\n    }\n    let totaldelay = this.delay * this.mobileMultiplier;\n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(() => this.repeat(repeatPayload), totaldelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleOneIncrement(id) {\n    const posNeg = this.valence;\n    const itemPayload = {\n      id: id,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupStoreItem(itemPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handlePrototypeIncrement(prototypeId) {\n    const posNeg = this.valence;\n    const itemsPayload = {\n      prototypeId: prototypeId,\n      markup: (this.state.markup * posNeg)\n    }\n    gameInventory.markupPrototypes(itemsPayload);\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementOneButtons(id) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ id: id, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementOneSet\">\n          <div className=\"decreaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusOne\">-</span>\n          </div>\n          <div className=\"increaseOne incrementButton button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ id: id, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusOne\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getIncrementAllButtons(prototypeId) {\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onMouseDown={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons incrementAllSet\">\n          <div className=\"decreaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minusProto\">--</span>\n          </div>\n          <div className=\"increaseProto incrementButtonWide button secondary\"\n            onTouchStart={(e) => this.onMouseDown({ prototypeId: prototypeId, e: e })}\n            onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plusProto\">++</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  handleMobileFocus(item) {\n    let mobileItem;\n    if (this.props.mobileItemDetail) {\n      mobileItem = this.props.mobileItemDetail;\n    }\n    if (this.props.mobileItemDetail && this.props.mobileDetail && mobileItem.id === item.id) {\n      this.props.setStoreMobileDetail(false);\n      this.props.setStoreMobileDetailItem(null);\n      window.inventory = undefined;\n    } else {\n      this.props.setStoreMobileDetail(true);\n      this.props.setStoreMobileDetailItem(item);\n      window.inventory = this;\n    }\n  }\n\n  getInventoryItems() {\n    if (this.props.inventory && this.props.inventory.length > 0) {\n      let filteredInventory;\n      if (!this.props.filterActive || this.props.storeFilter === 'all') {\n        filteredInventory = gameInventory.getComposedInventory();\n      } else {\n        filteredInventory = gameInventory.getFilteredInventory(this.props.storeFilter);\n      }\n      return (\n        <div>{filteredInventory.map(item => {\n          const composedPrice = Math.floor(item.value * (1 + (item.markup / 1000)));\n          let itemClass = \"InventoryItem itemBackground\";\n          if (this.props.mobileDetail && item.id === this.props.mobileItemDetail.id) {\n            itemClass += \" activeMobileItem\";\n          }\n          return (\n            <div className={itemClass} \n              key={item.id}\n              onTouchStart={() => this.handleMobileFocus(item)}>\n              <span className=\"InventoryItemName\">{item.name}</span>\n              {this.props.isPc ? this.getIncrementOneButtons(item.id) : ''}\n              {this.props.isPc ? this.getIncrementAllButtons(item.prototypeId) : ''}\n              <div className=\"ItemValueGroup\">\n                <span className=\"InventoryItemValue\"><span className=\"CoinSymbol\">&#x2689; </span>{composedPrice}</span>\n              </div>\n              \n            </div>\n          )\n        })}</div>\n      )     \n    } else {\n      return (\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"StoreInventory primary\">\n        {this.getInventoryItems()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.storeState.inventory,\n    inventoryCount: state.storeState.inventoryCount,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInventory: (newInventory) => dispatch({ type: SET_STORE_INVENTORY, inventory: newInventory }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS }),\n    setStoreMobileDetail: (detail) => dispatch({ type: SET_STORE_MOBILE_DETAIL, detail: detail }),\n    setStoreMobileDetailItem: (itemDetail) => dispatch({ type: SET_STORE_MOBILE_DETAIL_ITEM, itemDetail: itemDetail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StoreInventory);","// redux imports\nimport { store } from '../index';\nimport { SET_STORE_GOLD } from '../actions/types';\n\nconst gameStore = (function(){\n  let name = '';\n\n  const startingGold = 1000;\n  let gold = startingGold;\n\n  const dispatchStoreGold = function() {\n    const payload = {\n      type: SET_STORE_GOLD,\n      amount: gold\n    }\n    store.dispatch(payload);\n  }\n  \n  return {\n    chargeGold: function(amount) {\n      if (gold < amount) {\n        console.log('attempted to charge more gold than vendor owns')\n        return false;\n      }\n      gold -= amount;\n    },\n    creditGold: function(amount) {\n      gold += amount;\n    },\n    getName: function() {\n      return name;\n    },\n    setName: function(newName) {\n      name = newName;\n    },\n    getStartingGold: function() {\n      return startingGold;\n    },\n    getGold: function() {\n      return gold;\n    },\n    setGold: function(newGold) {\n      gold = newGold;\n    },\n    updateGold: function() {\n      dispatchStoreGold();\n    }\n  }\n}());\n\nexport default gameStore;","const days = (function (){\n  const startDay = 1;\n  let day = startDay;\n\n  return {\n    getDay: function() {\n      return day;\n    },\n\n    setDay: function(newDay) {\n      if (typeof newDay !== \"number\") {\n        console.log(\"trying to set day to a non number value!\");\n        return;\n      }\n      day = newDay;\n    },\n\n    resetDay: function() {\n      day = startDay;\n    }\n  }\n}());\n\nexport default days;","import ItemTypes from '../Utilities/itemTypes';\nimport Items from './items';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst supplies = (function(){\n  let supplies = [];\n\n  let suppliesPool = {};\n  let supplyLevel = 1;\n\n  const itemTypesArr = Object.values(ItemTypes);\n  const itemTypeCount = itemTypesArr.length;\n  let itemSpawnCount = 0;\n\n  const dailySupplies = 10;\n\n  const dispatchReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSpawned = function(value) {\n    const payload = {\n      type: SET_SUPPLY_SPAWNED,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  // fill supply pool\n  const fetchSupplyPool = function() {\n    // produce array of type strings and choose one at random\n    itemSpawnCount = 0;\n    itemTypesArr.forEach(typeItem => {\n      if (suppliesPool[typeItem] == null) {\n        suppliesPool[typeItem] = [];\n      }\n      suppliesPool[typeItem].length = 0;\n    });\n\n    getItemForSupplyPool();\n    return true;\n  }\n\n  // fetch an item from backend\n  const fetchItemArrForSupplyPool = async function() {\n    let lvl = supplyLevel;\n    if (!lvl) return;\n\n    let typeToFetch = itemTypesArr[itemSpawnCount];\n\n    if (typeToFetch !== 'armor') {\n      typeToFetch += 's';\n    }\n\n    const minLvl = 1;\n    const maxLvl = lvl;\n\n    const fetchURL = `/${typeToFetch}-in-level-range?min-level=${minLvl}&max-level=${maxLvl}`;\n    \n    let possibleItems;\n    try {\n      possibleItems = await fetch(fetchURL);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (possibleItems) {\n      possibleItems = possibleItems.json();\n    }\n\n    return possibleItems;\n  }\n\n  // take an item that was fetched from backend and create it\n  // with item constructors and put it into state\n  const getItemForSupplyPool = function() {\n    if (itemSpawnCount >= itemTypeCount) {\n      return;\n    }\n    let newItems;\n    fetchItemArrForSupplyPool()\n      .then(itemsOfLevel => {\n        newItems = itemsOfLevel.filter(item => item.item.rarity === 1000);\n      \n        // initialize field on pool if need be\n        if (suppliesPool[itemTypesArr[itemSpawnCount]] === null) {\n          suppliesPool[itemTypesArr[itemSpawnCount]] = [];\n        }\n        // push item id into supplies\n        suppliesPool[itemTypesArr[itemSpawnCount]].push(newItems);\n\n        itemSpawnCount++;\n        if (itemSpawnCount === itemTypeCount) {\n          dispatchSpawned(true);\n        }\n        getItemForSupplyPool();\n        return true;\n      }).catch(err => console.log(err));\n  }\n\n  const spawnSupply = function() {\n    // produce array of type strings and choose one at random\n    let typeIndex = Math.floor(Math.random() * itemTypesArr.length);\n    let typeToSpawn = itemTypesArr[typeIndex];\n    const newSupplyArr = suppliesPool[typeToSpawn];\n    let randomChoice = Math.floor(Math.random() * newSupplyArr.length);\n    let newItem = newSupplyArr[randomChoice];\n\n    if (Array.isArray(newItem)) {\n      newItem = newItem[0];\n    }\n\n    // compose payload for Item constructor\n    // let itemPayload = {};\n    // itemPayload.level = newItem.level;\n    // switch(newItem.item.type) {\n    //   case ItemTypes.potion:\n    //     itemPayload.type = newItem.type;\n    //     break;\n    //   case ItemTypes.weapon:\n    //     itemPayload.damage = newItem.damage;\n    //     break;\n    //   case ItemTypes.armor:\n    //     itemPayload.armor = newItem.armor;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // let payload = {};\n    // payload.itemPayload = itemPayload;\n    // payload.type = newItem.item.type;\n    // payload.name = newItem.item.name;\n    // payload.value = newItem.item.value;\n    // payload.prototypeId = newItem.item.id;\n    // payload.rarity = newItem.item.rarity;\n    let payload = Items.composePayloadFromProto(newItem);\n\n    // create item and add to total inventory in Items module\n    let itemId = Items.createItem(payload);\n    supplies.push(itemId);\n\n  }\n  \n  return {\n    getSupplies: function() {\n      return supplies;\n    },\n    fillSupplies: function() {\n      for (let i = 0; i < dailySupplies; i++) {\n        spawnSupply();\n      }\n      dispatchReady(true);\n    },\n    fillSupplyPool: function() {\n      fetchSupplyPool();\n    },\n    depleteSupply: function(id) {\n      let supplyIndex = supplies.indexOf(id);\n      if (supplyIndex >= 0) {\n        let chosenSupply = supplies.splice(supplyIndex, 1);\n        return chosenSupply;\n      }\n    },\n    setSupplyLevel: function(lvl) {\n      supplyLevel = lvl;\n    }\n  }\n}());\n\nexport default supplies;","const fetcher = (function(){\n  return {\n    fetchRoute: async function(routeName) {\n      let response;\n      try {\n        response = await fetch(`/${routeName}`);\n      } catch (err) {\n        console.log(err);\n      }\n      if (response) {\n        response = response.json();\n      }\n      return response;\n    }\n  }\n}());\n\nexport default fetcher;","// game imports\nimport supplies from './supplies';\nimport items from './items';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_SUPPLIERS, SET_SUPPLY_READY } from '../actions/types';\n\nconst suppliers = (function(){\n\n  let suppliers = [];\n\n  let currentId = 0;\n\n  const startingGold = 1000;\n  const supplierIncome = 100;\n\n  const Supplier = function(payload) {\n    const { name, offerings } = payload;\n    this.name = name;\n    this.offerings = offerings;\n    this.inventory = [];\n    this.id = currentId;\n    currentId++;\n  }\n\n  Supplier.prototype.rankFavorites = function() {\n    let bestOfferings = [];\n    const offeringsCount = this.offerings.length;\n    for (let i = 0; i < offeringsCount; i++) {\n      bestOfferings.push(this.offerings[i]);\n    }\n    bestOfferings.sort((off1, off2) => {\n      return off1.markup - off2.markup;\n    });\n    this.rankedOfferings = bestOfferings;\n  }\n\n  Supplier.prototype.sellItem = function(payload) {\n    let { id, price } = payload;\n\n    const itemIndex = this.inventory.indexOf(id);\n    if (!itemIndex && itemIndex !== 0) {\n      return false;\n    }\n\n    this.inventory.splice(itemIndex, 1);\n    this.gold += price;\n\n    return true;\n  }\n\n  Supplier.prototype.takeIncome = function() {\n    this.gold += supplierIncome;\n  }\n\n  const dispatchSuppliers = function(newSuppliers) {\n    const payload = {\n      type: SET_SUPPLIERS,\n      payload: newSuppliers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchSupplyReady = function(value) {\n    const payload = {\n      type: SET_SUPPLY_READY,\n      value: value\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchSuppliers = async function() {\n    let initSuppliers = fetcher.fetchRoute('suppliers');\n      // try {\n      //   initSuppliers = await fetch('/suppliers');\n      // } catch (err) {\n      //   console.log(err);\n      // }\n      // if (initSuppliers) {\n      //   initSuppliers = initSuppliers.json();\n      // }\n      return initSuppliers;\n  }\n\n  const getSuppliers = function*() {\n    yield fetchSuppliers();\n  }\n\n  const takeSupplies = function() {\n    // copy supplies to local array\n    const remainingSupplies = JSON.parse(JSON.stringify(supplies.getSupplies()));\n    let supplyTypes = [];\n    let supplyValues = [];\n    remainingSupplies.forEach(remainingSupply => {\n      const supplyItem = items.getItem(remainingSupply);\n      supplyTypes.push(supplyItem.type);\n      supplyValues.push(supplyItem.value);\n    });\n    let currentSupplier = 0;\n    const supplierCount = suppliers.length;\n    // loop through each supply item\n    remainingSupplies.forEach((remSupply, remNum) => {\n      // create an order based on last supplier to take an\n      // item and proceeded sequentially to include all\n      // suppliers\n      let supplierTries = [];\n      for (let i = 0; i < supplierCount; i++) {\n        let thisIndex = currentSupplier + i;\n        if (thisIndex >= supplierCount) {\n          thisIndex -= supplierCount;\n        }\n        supplierTries.push(thisIndex);\n      }\n      let taken = false;\n      \n      // check with each supplier if type of current supply is\n      // in their offerings\n      supplierTries.forEach(supplierIndex => {\n        let favorites = suppliers[supplierIndex].rankedOfferings;\n        for (let fave of favorites) {\n          // if type of supplier's offering equals type of this supply\n          if (fave.type === supplyTypes[remNum]) {\n            if (!taken && suppliers[supplierIndex].gold >= supplyValues[remNum]) {\n              // if supplier inventory not initialized, set to empty array\n              if (suppliers[supplierIndex].inventory === null) {\n                suppliers[supplierIndex].inventory = [];\n              }\n\n              // remove item from supply\n              let thisSupply = supplies.depleteSupply(remSupply);\n              if (Array.isArray(thisSupply)) {\n                thisSupply = thisSupply[0];\n              }\n\n              suppliers[supplierIndex].gold -= supplyValues[remNum];\n\n              // put item in supplier's inventory\n              suppliers[supplierIndex].inventory.push(thisSupply);\n\n              // mark item taken;\n              taken = true;\n              currentSupplier = supplierIndex + 1;\n              if (currentSupplier > supplierCount) {\n                currentSupplier = 0;\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n  return {\n    initializeSuppliers: async function(maxSuppliers) {\n      const gGetSuppliers = getSuppliers();\n      gGetSuppliers.next().value\n        .then(initSuppliers => {\n          if (initSuppliers) {\n            let drainSuppliers = initSuppliers;\n            while (suppliers.length < maxSuppliers && drainSuppliers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainSuppliers.length);\n              let newSupplier = drainSuppliers.splice(pushIndex, 1);\n              newSupplier = newSupplier[0];\n              const supplierPayload = { name: newSupplier.name, offerings: newSupplier.offerings };\n              let thisSupplier = new Supplier(supplierPayload);\n              thisSupplier.gold = startingGold;\n              suppliers.push(thisSupplier);\n            }\n            suppliers.forEach(supplier => supplier.rankFavorites());\n            dispatchSuppliers(suppliers);\n            return suppliers;\n          }\n        });\n    },\n    getSuppliers: function() {\n      return suppliers;\n    },\n    takeSupplierTurn: function() {\n      takeSupplies();\n      dispatchSuppliers(suppliers);\n      dispatchSupplyReady(false);\n    },\n    sellItem: function (payload) {\n      const { id, itemId, price} = payload;\n      \n      const thisSupplier = suppliers.find(refSupplier => refSupplier.id === id);\n      if (!thisSupplier) {\n        return false;\n      }\n      const sellPayload = {\n        id: itemId,\n        price: price\n      }\n\n      const resSale = thisSupplier.sellItem(sellPayload);\n      if (!resSale) {\n        return false;\n      }\n      return true;\n    },\n    takeSupplierIncomeTurns: function() {\n      if (suppliers.length < 1) return;\n      suppliers.forEach(supplier => {\n        supplier.takeIncome();\n      })\n    },\n    updateSuppliers: function() {\n      dispatchSuppliers(suppliers);\n    }\n  }\n}());\n\nexport default suppliers;","import axios from 'axios';\nimport { FETCH_USER, \n  SET_STORE_GOLD, \n  SET_DAY, \n  SET_SUPPLIERS, \n  SET_STORE_NAME\n } from './types';\n\n// game imports\nimport gameStore from '../game_modules/store';\nimport days from '../game_modules/days';\nimport suppliers from '../game_modules/suppliers';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n  if (res.data && res.data.import_nickname) {\n    dispatch({ type: SET_STORE_NAME, name: res.data.nickname});\n  }\n};\n\nexport const fetchGold = () => async dispatch => {\n  const gold = await gameStore.getGold();\n  dispatch({ type: SET_STORE_GOLD, amount: gold });\n}\n\nexport const fetchDay = () => async dispatch => {\n  const day = await days.getDay();\n  dispatch({ type: SET_DAY, day: day });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const newSuppliers = await suppliers.getSuppliers();\n  dispatch({ type: SET_SUPPLIERS, payload: newSuppliers });\n}\n","import React from 'react';\nimport './Store.css';\n\n// import game modules\n// import gameStore from '../../game_modules/store';\nimport gameInventory from '../../game_modules/storeInventory';\n\n\n// import components\nimport ItemTypes from '../../Utilities/itemTypes';\nimport StoreInventory from '../StoreInventory/StoreInventory';\n\n\n// redux imports\nimport { SET_STORE_GOLD,\n  SET_STORE_FILTER, \n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS } from '../../actions/types';\nimport { fetchGold } from '../../actions';\nimport { connect } from 'react-redux';\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markup: 50\n    }\n    this.timer = undefined;\n    this.delay = 200;\n    this.mobileMultiplier = 2;\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.increaseMarkup = this.increaseMarkup.bind(this);\n    this.repeat = this.repeat.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.markupOut = this.markupOut.bind(this);\n\n    this.getMobileDetail = this.getMobileDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.getFilter = this.getFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.getIncrementButtons = this.getIncrementButtons.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  // ~~*~~*~*~~* lifecycle methods ~~*~~*~*~~*~\n  // ~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*~~*~~*~*\n  \n  componentDidMount() {\n    this.props.fetchGold();\n  }\n\n  handleFilter(e) {\n    let currentType = e.target.value;\n    this.props.setStoreFilter(currentType);\n  }\n\n  increaseMarkup() {\n    this.setState({ \n      markup: this.state.markup + this.markupIntensity\n    });\n  }\n\n  // Proccess mousedown event to start incremental markup\n  onMouseDown(e) {\n    const refBtn = e.target;\n    if (refBtn.classList.contains(\"decreaseAll\") ||\n      refBtn.classList.contains(\"minus\")) {\n      this.valence = -1;\n    }\n    if (refBtn.classList.contains(\"increaseAll\" ||\n      refBtn.classList.contains(\"plus\"))) {\n      this.valence = 1;\n    }\n    this.repeat();\n  }\n\n  repeat() {\n    this.increaseMarkup();\n    if (this.valence === -1) {\n      this.handleDecrease();\n    }\n    if (this.valence === 1) {\n      this.handleIncrease();\n    }\n    let totalDelay = this.delay;\n    if (!this.props.pc) {\n      totalDelay *= this.mobileMultiplier;\n    } \n    if (this.mobileMultiplier > 1) {\n      this.mobileMultiplier = 1;\n    }\n    this.timer = setTimeout(this.repeat, totalDelay);\n    this.markupIntensity += 5;\n  }\n\n  onMouseUp() {\n    clearTimeout(this.timer);\n    this.markupIntensity = 10;\n    this.valence = 1;\n    this.mobileMultiplier = 2;\n    this.markupOut();\n  }\n\n  markupOut() {\n    this.setState({\n      markup: 50\n    });\n  }\n\n  handleIncrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: this.state.markup\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  handleDecrease() {\n    const payload = {\n      filter: this.props.storeFilter,\n      markup: (this.state.markup * -1)\n    }\n    gameInventory.markupFilteredStoreItems(payload);\n    gameInventory.updateStoreInventory();\n    this.props.toggleStoreUpdateStatus();\n  }\n\n  getIncrementButtons() {\n    if (!this.props.filterActive) return '';\n    if (this.props.isPc) {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"incrementButtons\">\n          <div className=\"decreaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon minus\">-</span>\n          </div>\n          <div className=\"increaseAll incrementButton button\"\n            onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp}>\n            <span className=\"incrementIcon plus\">+</span>\n          </div>\n        </div>\n      )\n    }\n    \n  }\n\n  getFilter() {\n    if (!this.props.filterActive) return '';\n    const itemTypesArr = Object.values(ItemTypes);\n    return (\n      <select className=\"StoreItemTypeFilter\" \n        defaultValue={this.props.storeFilter}\n        onChange={this.handleFilter}>\n        <option value=\"all\">all</option>\n        {itemTypesArr.map(itemType => {\n          return (\n            <option value={itemType}>{itemType}</option>\n          )\n        })}\n      </select>\n    )\n  }\n\n  toggleFilter() {\n    const newValue = !this.props.filterActive;\n    if (newValue && this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      inventoryComponent.handleMobileFocus(this.props.mobileItemDetail);\n    }\n    this.props.setStoreFilterActive(newValue);\n  }\n\n  getMobileDetail() {\n    if (this.props.isPc) {\n      return '';\n    }\n    if (this.props.filterActive && !this.props.mobileDetail) {\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive\">\n          {this.getIncrementButtons()}\n          {this.getFilter()}\n        </div>\n      )\n    }\n    if (this.props.mobileDetail) {\n      const inventoryComponent = window.inventory;\n      return (\n        <div className=\"MobileDetailContainer mobileDetailActive primary-surface\">\n          <div className=\"itemDetailName\">{this.props.mobileItemDetail.name}</div>\n          {inventoryComponent.getIncrementOneButtons(this.props.mobileItemDetail.id)}\n          {inventoryComponent.getIncrementAllButtons(this.props.mobileItemDetail.prototypeId)}\n        </div>\n      )\n    }\n    return (\n      <div className=\"MobileDetailContainer\"></div>\n    );\n  }\n  \n  render() {\n    return (\n      <div className=\"Store\">\n        <div className=\"StoreMenuBar darkgrey\">\n          <h2 className=\"StoreName\">{this.props.storeName}</h2>\n          <div className=\"FilterGroup\">\n            {this.props.isPc ? this.getIncrementButtons() : ''}\n            {this.props.isPc ? this.getFilter() : ''}\n          </div>\n          <span className=\"Inspect\" role=\"img\" aria-label=\"inspect\" onClick={this.toggleFilter}>&#128269; </span>\n          <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n        </div>\n        <StoreInventory />\n        {this.getMobileDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n    filterActive: state.storeState.filterActive,\n    storeFilter: state.storeState.filter,\n    storeNeedsUpdate: state.storeState.needsUpdate,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    mobileDetail: state.storeState.mobileDetail,\n    mobileItemDetail: state.storeState.mobileItemDetail\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreGold: (newGold) => dispatch({ type: SET_STORE_GOLD, amount: newGold }),\n    fetchGold: () => dispatch(fetchGold()),\n    setStoreFilter: (filter) => dispatch({ type: SET_STORE_FILTER, filter: filter }),\n    setStoreFilterActive: (value) => dispatch({ type: SET_STORE_FILTER_ACTIVE, value: value }),\n    toggleStoreUpdateStatus: () => dispatch({ type: SET_STORE_UPDATE_STATUS })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Store);","import React from 'react';\nimport './SupplierBuyButton.css';\n\nclass SupplierBuyButton extends React.Component {\n  render() {\n    return (\n      <div className=\"SupplierBuyButton button secondary\">\n        <div className=\"supplierBuyButtonIcon\">\n          buy\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SupplierBuyButton;","import React from 'react';\nimport './Supplier.css';\n\nimport SupplierBuyButton from '../SupplierBuyButton/SupplierBuyButton';\n\n// game module imports\nimport gameItems from '../../game_modules/items';\nimport gameSuppliers from '../../game_modules/suppliers'\nimport gameStore from '../../game_modules/store';\nimport gameStoreInventory from '../../game_modules/storeInventory';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\n\nclass Supplier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppllierInventory = this.getSuppllierInventory.bind(this);\n    this.handlePurchase = this.handlePurchase.bind(this);\n  }\n\n  handlePurchase(payload) {\n    const { ids, price } = payload;\n\n    if (price > this.props.storeGold) {\n      return;\n    }\n\n    // sell first item of object\n    const sellId = ids[0];\n    const sellPayload = {\n      id: this.props.supplier.id,\n      itemId: sellId,\n      price: price\n    }\n    let sellRes = gameSuppliers.sellItem(sellPayload);\n    if (!sellRes) {\n      return;\n    }\n\n    // transact sale for vendor\n    gameStore.chargeGold(price);\n    gameStoreInventory.addItem(sellId);\n\n    // update state\n    gameStore.updateGold();\n    gameStoreInventory.updateStoreInventory();\n    gameSuppliers.updateSuppliers();\n\n  }\n\n  getSuppllierInventory() {\n    if (!this.props.initialized) {\n      return ''\n    }\n    // get details on items from ids\n    let thisInventory = [];\n    this.props.supplier.inventory.forEach(id => {\n      let inventoryItem = gameItems.getItem(id);\n      thisInventory.push(inventoryItem);\n    });\n\n    // organize all items by item name\n    let inventoryGroups = {};\n    let valueGroups = {}\n    let typeGroups = {}\n    let idGroups = {}\n    thisInventory.forEach(item => {\n      if (!inventoryGroups[item.name]) {\n        inventoryGroups[item.name] = 1;\n        valueGroups[item.name] = item.value;\n        typeGroups[item.name] = item.type;\n        idGroups[item.name] = [item.id]\n      } else {\n        inventoryGroups[item.name] += 1;\n        idGroups[item.name].push(item.id);\n      }\n    });\n\n    // create array of composed items\n    let composedItems = []\n    for (const [key, value] of Object.entries(inventoryGroups)) {\n      let item = { name: key, count: value, type: typeGroups[key], value: valueGroups[key], ids: idGroups[key] };\n      composedItems.push(item);\n    }\n\n    composedItems.sort((item1, item2) => {\n      const nameA = item1.name.toUpperCase();\n      const nameB = item2.name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    return composedItems.map(item => {\n      const offerings = this.props.supplier.offerings;\n      const typeIndex = offerings.findIndex(offering => offering.type === item.type);\n      \n      let composedValue = item.value;\n      if (typeIndex !== -1) {\n        composedValue = composedValue * (1 + (offerings[typeIndex].markup / 1000));\n        composedValue = Math.floor(composedValue);\n      }\n\n      return (\n        <div className=\"SupplierInventoryItem itemBackground\" key={item.id}>\n          <span className=\"SupplierInventoryItemName\">{item.name} ({item.count})</span>\n          <div className=\"SupplierItemsValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{composedValue}</span>\n          </div>\n          <div className=\"BuyButtonContainer\" onClick={() => this.handlePurchase({ ids: item.ids, price: composedValue })}>\n              <SupplierBuyButton />\n            </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    let supplierClass = \"Supplier primary\";\n    if (this.props.isMobile) {\n      supplierClass += \" mobileSupplier\";\n    }\n    return (\n      <div className={supplierClass}>\n        <div className=\"SupplierName\">\n          {this.props.supplier.name}\n          <div className=\"SupplierValueGroup\">  \n            <span className=\"CoinSymbol\">&#x2689; </span>\n            <span className=\"InventoryItemValue\">{this.props.supplier.gold}</span>\n          </div>\n        </div>\n        <div className=\"supplierInventory primary-light\">\n          {this.getSuppllierInventory()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    supplyReady: state.supplies.ready,\n    storeGold: state.storeState.gold,\n    isMobile: state.app.isMobile,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Supplier);","import React from 'react';\nimport './Suppliers.css';\nimport Supplier from '../Supplier/Supplier';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_SUPPLIERS_INITIALIZED } from '../../actions/types';\n\n// game imports\nimport gameSupplier from '../../game_modules/suppliers';\nimport gameSupplies from '../../game_modules/supplies';\n// import suppliers from '../../game_modules/suppliers';\n\nclass Suppliers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSuppliers = this.getSuppliers.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateSuppliers = this.updateSuppliers.bind(this);\n  }\n\n  updateSuppliers() {\n    if (Array.isArray(this.props.suppliers) && this.props.supplySpawned) {\n      if (!this.props.supplyReady) {\n        gameSupplies.fillSupplies();\n      }\n    }\n    if (Array.isArray(this.props.suppliers) && this.props.supplyReady) {\n      if (!this.props.suppliersInitialized) {\n        gameSupplier.takeSupplierTurn();\n        this.props.setSuppliersInitialized(true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateSuppliers();\n  }\n\n  componentDidUpdate() {\n    this.updateSuppliers();\n  }\n\n  getSuppliers() {\n    let supplierContainerClass = \"suppliersContainer\";\n    let spacerClass = \"spacer\";\n    if (!this.props.isPc) {\n      supplierContainerClass += \" nonPcContainer\";\n      supplierContainerClass += \" mobileContainer\";\n      spacerClass += \" mobileSpacer\";\n    }\n    let currentSuppliers = this.props.suppliers;\n    if (Array.isArray(currentSuppliers)) {\n      const suppliersDisplay = currentSuppliers.map(renderSupplier => {\n        return (<Supplier supplier={renderSupplier} initialized={this.props.suppliersInitialized}/>);\n      });\n\n      return (\n        <div className={supplierContainerClass}\n          ref={node => {\n            this.container = node;\n          }}>\n          {suppliersDisplay}\n          <div className={spacerClass}></div>\n        </div>\n      );\n    } else {\n      return 'no suppliers to render';\n    }\n    \n  }\n  \n  render() {\n    let suppliersClass = \"Suppliers primary-dark\";\n    if (!this.props.isPc) {\n      suppliersClass += \" mobileSuppliers\";\n    }\n    return (\n      <div className={suppliersClass}>\n        {this.getSuppliers()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    supplyReady: state.supplies.ready,\n    supplySpawned: state.supplies.spawned,\n    isPc: state.app.isPc,\n    isMobile: state.app.isMobile,\n    suppliersInitialized: state.suppliers.initialized\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSuppliersInitialized: (value) => dispatch({ type: SET_SUPPLIERS_INITIALIZED, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Suppliers);","const gameConstants = {\n  maxSuppliers: 3,\n  startingAdventurers: 5,\n  dailyAdventurers: 1,\n  adventurerStartingGold: 400\n}\n\nexport default gameConstants;","// game imports\nimport items from './items';\nimport adventurersModule from './adventurers';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_DUNGEON_LEVELS, \n  SET_DUNGEON_LEVEL_EXPLORED,\n  SET_DUNGEON_ADVENTURERS } from '../actions/types';\n\nconst dungeon = (function(){\n  let levels = [];\n  // {\n  // adventurerId: n,\n  // level: n\n  //}\n  let adventurers = [];\n  let levelCount;\n\n  let exploredLevel = 0;\n\n  const Level = function(payload) {\n    const {\n      number, \n      boss, \n      bossId, \n      monstersMinLevel, \n      monstersMaxLevel,\n      tileAssignments,\n      treasureDropList\n    } = payload;\n    this.number = number;\n    this.boss = boss;\n    this.bossId = bossId;\n    this.monstersMinLevel = monstersMinLevel;\n    this.monstersMaxLevel = monstersMaxLevel;\n    this.tileAssignments = tileAssignments;\n    this.treasureDropList = treasureDropList;\n    this.treasures = [];\n    this.droppedTreasures = [];\n    this.monsters = [];\n    this.lurkingMonsters = [];\n    this.monstersLoot = [];\n    this.treasureListFetched = false;\n    this.monstersFetched = false;\n    this.monsterDropListItemsFetched = false;\n    this.intialized = false;\n  }\n\n  Level.prototype.initialize = async function() {\n    \n    //const monstersToAdd = getMonstersForLevel(this.monstersMinLevel, this.monstersMaxLevel);\n    return new Promise((resolve, reject) => {\n      const tGetMonstersForLevel = getMonstersForLevel(this.monstersMinLevel, this.monstersMaxLevel);\n      tGetMonstersForLevel.next().value.then((monstersToAdd) => {\n        if (!monstersToAdd) return false;\n        let monsterDrops = [];\n        // compose list of items to fetch\n        monstersToAdd.forEach(addMonster => {\n          this.monsters.push(addMonster);\n          const addMonsterDrops = addMonster.drop_list.drops;\n          if (addMonsterDrops) {\n            addMonsterDrops.forEach(addDrop => {\n              const addId = addDrop.itemId;\n              if (!monsterDrops.find(item => item.itemId === addId)) {\n                monsterDrops.push({ itemId: addId, dropType: addDrop.drop_type});\n              }\n            })\n          }\n        });\n  \n        // compose list of items to fetch\n        let treasureDrops = [];\n        this.treasureDropList.drops.forEach(drop => {\n          const addId = drop.itemId;\n          if (!treasureDrops.find(item => item.itemId === addId)) {\n            treasureDrops.push({ itemId: addId, dropType: drop.drop_type });\n          }\n        });\n        new Promise((resolveMonsterDrops, rejectMonsterDrops) => {\n          // fetch monster drop list items\n          monsterDrops.forEach((monsterDrop, mDropN) => {\n            const mGetDrop = getDrop(monsterDrop);\n            mGetDrop.next().value.then((resolvedDrop) => {\n              if (Array.isArray(resolvedDrop)) {\n                resolvedDrop = resolvedDrop[0];\n              }\n              this.monstersLoot.push(resolvedDrop);\n              if (mDropN === monsterDrops.length -1) {\n                resolveMonsterDrops();\n              }\n            })\n          });\n        })\n        .then(() => {\n            new Promise((resolveTreasureDrops, rejectTreasureDrops) => {\n              // fetch items for treasure drop lists\n              treasureDrops.forEach((treasureDrop, tDropN) => {\n                const tGetDrop = getDrop(treasureDrop);\n                tGetDrop.next().value.then((resolvedDrop) => {\n                  if (Array.isArray(resolvedDrop)) {\n                    resolvedDrop = resolvedDrop[0];\n                  }\n                  this.treasures.push(resolvedDrop);\n                  if (tDropN === treasureDrops.length -1) {\n                    resolveTreasureDrops();\n                  }\n                });            \n              })\n            })\n            .then(() => {\n              this.initialized = true;\n              console.log('level initialized.');\n              resolve(true);\n            });\n          });\n      });\n    })\n    \n  }\n\n  Level.prototype.activateTile = async function(adventurer) {\n    return new Promise((resolve, reject) => {\n      let tileOutcomes = [];\n      for (let tileI = 0; tileI < this.tileAssignments.length; tileI++) {\n        const weight = this.tileAssignments[tileI].probability;\n        const result = Math.random() * weight;\n        tileOutcomes.push({ tile: tileI, result: result });\n      }\n      tileOutcomes.sort((outcome1, outcome2) => {\n        if (outcome1.result > outcome2.result) {\n          return -1;\n        } else if (outcome1.result < outcome2.result) {\n          return 1;\n        } else return 0;\n      });\n      const resultTileI = tileOutcomes[0].tile;\n      const resultTile = this.tileAssignments[resultTileI].dungeon_tile;\n      let innTreasureBoost = 0;\n      if (adventurer.informed) {\n        innTreasureBoost = 20;\n      }\n      const actions = adventurersModule.getActions();;\n      let checkTreasureBoost = 0;\n      if (adventurer.action === actions.checkForTreasure) {\n        checkTreasureBoost = 10;\n      }\n      let checkTrapBoost = 0;\n      if (adventurer.action === actions.checkForTraps) {\n        checkTrapBoost = 50;\n      }\n      const treasureProb = Math.random() * (resultTile.treasure + innTreasureBoost + checkTreasureBoost);\n      const encounterProb = Math.random() * resultTile.encounter;\n      const trapProb = Math.random() * (resultTile.trap - checkTrapBoost);\n      const threshholdProb = Math.random() * 125;\n      console.log(`probs... treasure: ${treasureProb}, trap: ${trapProb}, encounter: ${encounterProb}, threshold: ${threshholdProb}`);\n      if (threshholdProb > treasureProb && threshholdProb > encounterProb && threshholdProb > trapProb) {\n        resolve();\n        return;\n      }\n      if (treasureProb > encounterProb && treasureProb > trapProb) {\n        console.log('treasure event');\n        const treasureIndex = Math.floor(Math.random() * this.treasures.length);\n        const treasures = this.treasures;\n        const treasure = treasures[treasureIndex];\n        console.log(treasure);\n        const treasureDropRef = this.treasureDropList.drops.find(drop => drop.itemId === treasure.id);\n        const itemDropped = (treasureDropRef.dropChance / 1000) > Math.random();\n        console.log(this.treasureDropList);\n        const goldMin = this.treasureDropList.gold_min;\n        const goldRange = this.treasureDropList.gold_max - goldMin;\n        const randomAward = Math.floor(Math.random() * goldRange) + goldMin;\n        const awardGold = (this.treasureDropList.gold_chance / 1000) > Math.random();\n\n        if (awardGold) {\n          adventurer.creditAccount(randomAward);\n        }\n        if (itemDropped) {\n          // compose payload for Item constructor\n          const payload = items.composePayloadFromProto(treasure);\n          let itemId = items.createItem(payload);\n          const treasureItem = items.getItem(itemId);\n          adventurer.considerTreasure(treasureItem);\n        }\n        \n      } else if (trapProb > treasureProb && trapProb > encounterProb) {\n        adventurer.encounterTrap(this.number);\n      } else if (encounterProb > trapProb && encounterProb > treasureProb) {\n        console.log('perform encounter');\n      }\n      resolve();\n    });\n    \n  }\n\n  const dispatchLevels = function() {\n    const payload = {\n      type: SET_DUNGEON_LEVELS,\n      payload: levels\n    };\n    store.dispatch(payload);\n  }\n\n  const dispatchExploredLevel = function() {\n    const payload = {\n      type: SET_DUNGEON_LEVEL_EXPLORED,\n      level: exploredLevel\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchAdventurers = function() {\n    const payload = {\n      type: SET_DUNGEON_ADVENTURERS,\n      adventurers: adventurers\n    }\n    store.dispatch(payload);\n  }\n\n  const orderLevels = function() {\n    levels.sort((level1, level2) => {\n      if (level1.number > level2.number) {\n        return 1;\n      } else if (level1.number < level2.number) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  const fetchLevels = async function() {\n    let initLevels = fetcher.fetchRoute('levels-full');\n    return initLevels;\n  }\n\n  const getLevels = function*() {\n    yield fetchLevels();\n  }\n\n  const addAdventurer = function(adventurerId) {\n    adventurers.push({ adventurerId: adventurerId, level: 1});\n    if (exploredLevel < 1) {\n      exploredLevel = 1;\n      dispatchExploredLevel();\n    }\n  }\n\n  const deleteAdventurer = function(adventurerId) {\n    adventurers = adventurers.filter(adventurer => adventurer.adventurerId !== adventurerId);\n  }\n\n  const getMonstersForLevel = function*(minLevel, maxLevel) {\n    yield fetchMonstersInRange(minLevel, maxLevel);\n  }\n\n  const fetchMonstersInRange = async function(minLevel, maxLevel) {\n    const fetchUrl = `/monsters-in-level-range?min-level=${minLevel}&max-level=${maxLevel}`;\n    let fetchedMonsters;\n    try {\n      fetchedMonsters = await fetch(fetchUrl);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (fetchedMonsters) {\n      fetchedMonsters = fetchedMonsters.json();\n    }\n\n    return fetchedMonsters;\n  }\n\n  const getDrop = function*(drop) {\n    yield fetchDrop(drop);\n  }\n\n  const fetchDrop = async function(drop) {\n    const fetchUrl = `/${drop.dropType}-id?id=${drop.itemId}`;\n    let fetchedDrop;\n    try {\n      fetchedDrop = await fetch(fetchUrl);\n    } catch (err) {\n      console.log(err);\n    }\n\n    if (fetchedDrop) {\n      fetchedDrop = fetchedDrop.json();\n    }\n  \n    return fetchedDrop;\n  }\n\n  const loadLevel = async function() {\n    return new Promise((resolve, reject) => {\n      const nextLevelN = exploredLevel + 1;\n      let nextLevel = levels.find(level => level.number === nextLevelN);\n      nextLevel.initialize()\n        .then((completed) => {\n          resolve(completed);\n        })\n      })\n  }\n\n  return {\n    initializeLevels: async function() {\n      const genGetLevels = getLevels();\n      genGetLevels.next().value\n        .then(initLevels => {\n          if (!initLevels) return false;\n          while (initLevels.length > 0) {\n            let newLevel = initLevels.shift();\n            if (Array.isArray(newLevel)) {\n              newLevel = newLevel[0];\n            }\n            const levelPayload = {\n              number: newLevel.number,\n              boss: newLevel.boss,\n              bossId: newLevel.boss_id,\n              monstersMinLevel: newLevel.monsters_min_level,\n              monstersMaxLevel: newLevel.monsters_max_level,\n              tileAssignments: newLevel.tile_assignments,\n              treasureDropList: newLevel.drop_list\n            }\n            let thisLevel = new Level(levelPayload);\n            levels.push(thisLevel);\n          }\n        }).then(() => {\n          levelCount = levels.length;\n          orderLevels();\n          dispatchLevels();\n          dispatchExploredLevel();\n        });\n    },\n    updateLevels: function() {\n      dispatchLevels();\n    },\n    getExploredLevel: function() {\n      return exploredLevel;\n    },\n    receiveAdventurer: function(adventurerId) {\n      addAdventurer(adventurerId);\n      dispatchAdventurers();\n    },\n    releaseAdventurer: function(adventurerId) {\n      deleteAdventurer(adventurerId);\n      dispatchAdventurers();\n    },\n    executeTurn: async function(adventurer) {\n      return new Promise((resolve, reject) => {\n        const dungeonEntry = adventurers.find(dunAdventurer => dunAdventurer.adventurerId === adventurer.id);\n        const currentLevel = levels.find(level => level.number === dungeonEntry.level);\n        currentLevel.activateTile(adventurer)\n          .then(() => {\n            resolve();\n          });\n      })\n    },\n    checkLevelReadiness: function() {\n      if (exploredLevel === 0) return false;\n      if (!adventurers) return false;\n      let highestLevel = 1;\n      for (let adventurerI = 0; adventurerI < adventurers.length; adventurerI++) {\n        if (adventurers[adventurerI].level > highestLevel) {\n          highestLevel = adventurers[adventurerI].level;\n        }\n      }\n      if (exploredLevel <= highestLevel) {\n        if (exploredLevel < levelCount) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return true;\n    },\n    loadNextLevel: function*() {\n      yield loadLevel();\n    }\n  }\n}());\n\nexport default dungeon;","const tagProcessor = (function(){\n\n  const filterClasses = {\n    name: 'adventurerNameTag',\n    status: 'status',\n    value: 'value'\n  }\n\n  return {\n    getFilterClasses: function() {\n      return filterClasses;\n    }\n  }\n}());\n\nexport default tagProcessor;","import React from 'react';\n\n// constant imports\nimport gameConstants from './gameConstants';\n\n// game imports\nimport storeInventory from './storeInventory';\nimport playerStore from './store';\nimport items from './items';\nimport dungeon from './dungeon';\nimport days from './days';\n\n// utility imports\nimport fetcher from '../Utilities/fetcher';\nimport itemTypes from '../Utilities/itemTypes';\nimport tagProcessor from '../Utilities/tagProcessor';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_ADVENTURERS, SET_DETAIL_UPDATE } from '../actions/types';\n\nconst adventurers = (function(){\n  let adventurers = [];\n  let currentId = 0;\n\n  const maxInventory = 15;\n  const defaultActionDays = 2;\n\n  const actions = {\n    checkForTreasure: 'checkForTreasure',\n    checkForTraps: 'checkForTraps',\n    setTrap: 'setTrap'\n  }\n\n  const decisions = {\n    usePotion: 'usePotion',\n    advance: 'advance',\n    checkForTraps: 'checkForTraps',\n    checkForTreasure: 'checkForTreasure',\n    setTrap: 'setTrap',\n    returnToTown: 'returnToTown',\n    advanceNextLevel: 'advanceNextLevel'\n  }\n\n  const setTrapBehavior = {\n    thief: 600,\n    soldier: 200,\n    bard: 450\n  }\n\n  const Adventurer = function(payload) {\n    const { name, \n      strength, \n      speed, \n      cunning, \n      intelligence,\n      constitution,\n      dungeonBehavior,\n      townBehavior,\n      adventurerClass } = payload;\n      this.name = name;\n      this.strength = strength;\n      this.speed = speed;\n      this.cunning = cunning;\n      this.intelligence = intelligence;\n      this.constitution = constitution;\n      this.dungeonBehavior = dungeonBehavior;\n      this.townBehavior = townBehavior;\n      this.adventurerClass = adventurerClass;\n      this.gold = gameConstants.adventurerStartingGold;\n      this.level = 1;\n      this.experience = 0;\n      this.hp = 7 + constitution;\n      this.maxHp = this.hp;\n      this.inventory = [];\n      this.equipment = { weapon: null, armor: null };\n      this.inDungeon = false;\n      this.informed = false;\n      this.hasFoundStairs = false;\n      this.currentTotalDungeonTurns = 0;\n      this.action = {\n        currentAction: null,\n        turns: 0\n      }\n      this.id = currentId;\n      currentId++;\n  }\n\n  Adventurer.prototype.checkAccount = function(value) {\n    return this.gold >= value;\n  }\n\n  Adventurer.prototype.chargeAccount = function(value) {\n    this.gold -= value;\n  }\n\n  Adventurer.prototype.creditAccount = function(value) {\n    this.gold += value;\n  }\n\n  Adventurer.prototype.unequipItem = function(slot) {\n    this.equipment[slot] = null;\n  }\n\n  Adventurer.prototype.equipItem = function(item) {\n    this.equipment[item.type] = item;\n    console.log(this.equipment);\n  }\n\n  Adventurer.prototype.getCurrentItemCount = function(protoId) {\n    if (this.inventory.length <= 0) return 0;\n    let protoCount = 0;\n    for (let item of this.inventory) {\n      if (item.prototypeId === protoId) {\n        protoCount++;\n      }\n    }\n    return protoCount;\n  }\n\n  Adventurer.prototype.addCombatLog = function(message) {\n    if (! this.combatLog) {\n      this.combatLog = [];\n    }\n    this.combatLog.push(message);\n  }\n\n  Adventurer.prototype.getCombatLog = function() {\n    if (! this.combatLog) {\n      this.combatLog = [];\n    }\n    return this.combatLog;\n  }\n\n  Adventurer.prototype.checkHealthChoice = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let decisionFactor = percentLost + (this.dungeonBehavior.conserve_health / 1000);\n    const needHealing = decisionFactor > Math.random();\n    return needHealing;\n  }\n\n  Adventurer.prototype.checkHasPotion = function() {\n    console.log(this.inventory);\n    if (this.inventory.length < 1) return false;\n    return this.inventory.find(item => item.type === itemTypes.potion);\n  }\n\n  Adventurer.prototype.checkPotionUse = function() {\n    let decisionFactor = (this.dungeonBehavior.use_potion / 1000);\n    const usePotion = decisionFactor > Math.random();\n    return usePotion;\n  }\n\n  Adventurer.prototype.usePotion = function() {\n    const filterClasses = tagProcessor.getFilterClasses();\n    let heldPotions = this.inventory.filter(item => item.type === itemTypes.potion);\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let potionToUse;\n    if (percentLost > .5) {\n      heldPotions.sort((potion1, potion2) => {\n        if (potion1[itemTypes.potion].level < potion2[itemTypes.potion].level) {\n          return 1;\n        } else if (potion1[itemTypes.potion].level > potion2[itemTypes.potion].level) {\n          return -1;\n        } else return 0;\n      });\n      potionToUse = heldPotions[0];\n    } else {\n      heldPotions.sort((potion1, potion2) => {\n        if (potion1[itemTypes.potion].level < potion2[itemTypes.potion].level) {\n          return -1;\n        } else if (potion1[itemTypes.potion].level > potion2[itemTypes.potion].level) {\n          return 1;\n        } else return 0;\n      });\n      potionToUse = heldPotions[0];\n    }\n    let hpToHeal = Math.floor(potionToUse[itemTypes.potion].level * (4 * Math.pow(1.08, potionToUse[itemTypes.potion].level)));\n    if (hpToHeal > hpDifferential) {\n      hpToHeal = hpDifferential;\n    }\n    this.hp = this.hp + hpToHeal;\n    const healJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name} </span>  used {potionToUse.name}. <span className={filterClasses.name}>{this.name} </span> healed <span className={filterClasses.value}>{hpToHeal}</span>hp.\n      </div>);\n    this.addCombatLog(healJSX);\n    this.inventory = this.inventory.filter(item => item.id !== potionToUse.id);\n    items.destroyItem(potionToUse.id);\n    potionToUse = null;\n    console.log('use potion');\n  }\n\n  Adventurer.prototype.checkTrapDecision = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let decisionFactor = (percentLost * 3) + (this.dungeonBehavior.check_for_traps / 1000);\n    const checkTraps = decisionFactor > Math.random();\n    return checkTraps;\n  }\n\n  Adventurer.prototype.checkTreasureDecision = function() {\n    const decisionFactor = (this.dungeonBehavior.search_for_treasure / 1000);\n    const checkTreasure = decisionFactor > Math.random();\n    return checkTreasure;\n  }\n\n  Adventurer.prototype.checkSetTrapDecision = function() {\n    const setTrap = setTrapBehavior[this.adventurerClass.name];\n    const decisionFactor = (setTrap / 1000) + (this.dungeonBehavior.prefer_weaker_monster / 4000);\n    const doSetTrap = decisionFactor > Math.random();\n    return doSetTrap;\n  }\n\n  Adventurer.prototype.checkAdvanceDecision = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    const inventoryCount = this.inventory.length;\n    const inventoryPercentEmpty = maxInventory - (inventoryCount / maxInventory);\n    const fillInventoryDesire = ((this.dungeonBehavior.fill_inventory) * inventoryPercentEmpty) / 1000;\n    const decisionFactor = (this.dungeonBehavior.advance_tile / 1000) - (percentLost * 2) - (this.currentTotalDungeonTurns / 600) + (fillInventoryDesire * 3);\n    const advanceDecision = decisionFactor > Math.random();\n    return advanceDecision;\n  }\n\n  Adventurer.prototype.checkReturnToTown = function() {\n    const hpDifferential = this.maxHp - this.hp;\n    const percentLost = hpDifferential / this.maxHp;\n    let turnsInfluence = 1;\n    let turnsFactor;\n    if (this.currentTotalDungeonTurns < 15) {\n      turnsInfluence = -1;\n      turnsFactor = (15 - (turnsInfluence * this.currentTotalDungeonTurns)) / 15; \n    } else {\n      turnsFactor = (turnsInfluence * this.currentTotalDungeonTurns) / 400;\n    }\n    const inventoryCount = this.inventory.length;\n    const inventoryPercentEmpty = maxInventory - (inventoryCount / maxInventory);\n    const fillInventoryDesire = ((this.dungeonBehavior.fill_inventory) * inventoryPercentEmpty) / 1000;\n    const decisionFactor = (this.dungeonBehavior.return_to_town / 1000) - (fillInventoryDesire * 5) + (percentLost * 2) + turnsFactor;\n    const returnDecision = decisionFactor > Math.random();\n    return returnDecision; \n  }\n\n  Adventurer.prototype.considerTreasure = function(item) {\n    console.log(item);\n    if (this.inventory.length < maxInventory) {\n      this.inventory.push(item);\n      return true;\n    }\n    // insert logic for weighing item values if inventory is full\n  }\n\n  Adventurer.prototype.encounterTrap = function(dungeonLevel) {\n    const filterClasses = tagProcessor.getFilterClasses();\n    const trapDamage = 3 * (Math.pow(1.25, (dungeonLevel - 1)));\n    const trapFactor = (this.adventurerClass.traps + this.adventurerClass.agility + this.cunning) / ((this.level * 10) * (Math.pow(1.25, (dungeonLevel - 1))));\n    let computedDamage = Math.floor(trapDamage * (1 / trapFactor));\n    const avoidTrapChance = Math.random() * trapFactor;\n    if (avoidTrapChance > Math.random() * 10) {\n      const trapJSX = (\n        <div className=\"combatLogEntry\">\n          <span className={filterClasses.name}>{this.name} </span> a trap.\n        </div>);\n      this.addCombatLog(trapJSX);\n      return false;\n    }\n    console.log(`trapDamage: ${computedDamage}`);\n    if (computedDamage > this.hp) {\n      computedDamage = this.hp;\n    }\n    this.hp -= computedDamage;\n    const trapJSX = (\n      <div className=\"combatLogEntry\">\n        <span className={filterClasses.name}>{this.name}</span> took <span className={filterClasses.value}>{computedDamage}</span> damage from a trap!\n      </div>);\n    this.addCombatLog(trapJSX);\n  }\n\n  const TurnController = function() {\n    this.currentTurns = [];\n    this.currentId = 0;\n  }\n\n  TurnController.prototype.addTurn = function(turn) {\n    turn.id = this.currentId;\n    this.currentTurns.push(turn);\n    this.currentId++;\n  }\n\n  TurnController.prototype.clearTurn = function(id) {\n    let deletedTurn = this.currentTurns.find(foundTurn => foundTurn.id === id);\n    this.currentTurns = this.currentTurns.filter(clearTurn => clearTurn.id!== id);\n    if (deletedTurn) {\n      deletedTurn = null;\n    }\n    if (this.currentTurns.length === 0) {\n      this.currentId = 0;\n      dispatchUpdate();\n    }\n    \n  }\n\n  TurnController.prototype.clearAdventurerTurns = function(payload) {\n    const {\n      adventurerId,\n      day\n    } = payload;\n    let deletedTurns = this.currentTurns.find(foundTurn => foundTurn.adventurerId === adventurerId  && this.foundTurn.day === day);\n    this.currentTurns = this.currentTurns.filter(clearTurn => clearTurn.adventurerId !== adventurerId && clearTurn.day !== day);\n    deletedTurns.forEach(turn => {\n      turn = null\n    });\n  }\n\n  TurnController.prototype.startTurns = function() {\n    if (this.currentTurns.length === 0) return false;\n    const firstTurns = this.currentTurns.filter(turn => turn.turnNumber === 1);\n    firstTurns.forEach(turn => {\n      turn.runTurn();\n    });\n  }\n\n  TurnController.prototype.startTurn = function(payload) {\n    const {\n      adventurerId,\n      day,\n      turn\n    } = payload;\n    const nextTurn = this.currentTurns.find(foundTurn => foundTurn.adventurerId === adventurerId && foundTurn.day === day && foundTurn.turnNumber === turn);\n    if (nextTurn) {\n      nextTurn.runTurn();\n    } \n  }\n\n\n  let turnController;\n\n  const initializeTurnController = function() {\n    turnController = new TurnController();\n  }\n\n  const Turn = function(payload) {\n    const {\n      adventurer,\n      day,\n      turnNumber,\n      nextTurn\n    } = payload;\n    this.adventurer = adventurer;\n    this.adventurerId = adventurer.id;\n    this.day = day;\n    this.turnNumber = turnNumber;\n    this.nextTurn = nextTurn;\n  }\n\n  Turn.prototype.runTurn = async function() {\n    const filterClasses = tagProcessor.getFilterClasses();\n    new Promise((resolve, reject) => {\n      const dungeonAdventurer = this.adventurer;\n      let thisDecision = new Decision(dungeonAdventurer.id);\n      if (dungeonAdventurer.hp < dungeonAdventurer.maxHp) {\n        thisDecision.needHealing = dungeonAdventurer.checkHealthChoice();\n        thisDecision.hasPotion = dungeonAdventurer.checkHasPotion();\n        if (thisDecision.needHealing) {\n          if (thisDecision.hasPotion) {\n            thisDecision.usePotion = dungeonAdventurer.checkPotionUse();\n          }\n        }\n      }\n      if (!dungeonAdventurer.action.currentAction) {\n        thisDecision.checkForTraps = dungeonAdventurer.checkTrapDecision();\n        thisDecision.checkForTreasure = dungeonAdventurer.checkTreasureDecision();\n        thisDecision.setTrap = dungeonAdventurer.checkSetTrapDecision();\n      }\n      thisDecision.advance = dungeonAdventurer.checkAdvanceDecision();\n      thisDecision.returnToTown = dungeonAdventurer.checkReturnToTown();\n\n      // get decision from decision object\n      let resultDecision;\n      resultDecision = thisDecision.weighDecisionLogical();\n      if (!resultDecision) {\n        resultDecision = thisDecision.weighDecisionTournament();\n      }\n      console.log(resultDecision);\n      if (resultDecision === decisions.usePotion) {\n        dungeonAdventurer.usePotion();\n      }\n      if (resultDecision === decisions.checkForTraps || \n        resultDecision === decisions.checkForTreasure || \n        resultDecision === decisions.setTrap) {\n          dungeonAdventurer.action.currentAction = resultDecision;\n          const turns = dungeonAdventurer.speed * defaultActionDays;\n          dungeonAdventurer.action.turns = turns;\n          let actionMsg = '';\n          if (resultDecision === decisions.checkForTraps) {\n            actionMsg = 'is checking for traps';\n          } else if (resultDecision === decisions.checkForTreasure) {\n            actionMsg = 'is checking for treasure';\n          } else if (resultDecision === decisions.setTrap) {\n            actionMsg = 'sets a trap';\n          }\n          const actionJSX = (\n            <div className=\"combatLogEntry\">\n              <span className={filterClasses.name}>{dungeonAdventurer.name} </span> {actionMsg}.\n            </div>);\n          dungeonAdventurer.addCombatLog(actionJSX);\n      }\n      if (resultDecision === decisions.returnToTown){\n        dungeon.releaseAdventurer(dungeonAdventurer.id);\n        dungeonAdventurer.inDungeon = false;\n        const clearPackage = { adventurerId: this.adventurerId, day: this.day };\n        turnController.clearAdventurerTurns(clearPackage);\n        resolve();\n      }\n      new Promise((resolveTurn, rejectTurn) => {\n        if (resultDecision === decisions.advance) {\n          dungeon.executeTurn(dungeonAdventurer)\n            .then(() => {\n              resolveTurn();\n            });\n        } else {\n          resolveTurn();\n        }\n        \n      }).then(() => {\n        this.adventurer.currentTotalDungeonTurns++;\n        resolve();\n      })\n    }).then(() => {\n      if (this.nextTurn) {\n        const payload = { turn: this.nextTurn, adventurerId: this.adventurerId, day: this.day };\n        turnController.startTurn(payload);\n      }\n      turnController.clearTurn(this.id);\n    })\n  }\n\n  const Decision = function(adventurerId) {\n    this.adventurerId = adventurerId;\n    this.needHealing = false;\n    this.hasPotion = false;\n    this.usePotion = false;\n    this.checkForTraps = false;\n    this.checkForTreasure = false;\n    this.setTrap = false;\n    this.advance = false;\n    this.returnToTown = false;\n  }\n\n  Decision.prototype.weighDecisionLogical = function() {\n    if (this.needHealing && this.hasPotion && this.usePotion && !this.advance) {\n      return decisions.usePotion;\n    }\n    if (!this.usePotion && this.advance && !this.checkForTraps && !this.checkTreasure) {\n      return decisions.advance;\n    }\n    if (this.returnToTown && !this.usePotion && !this.hasPotion && !this.advance) {\n      return decisions.returnToTown;\n    }\n    return false;\n  }\n\n  Decision.prototype.weighDecisionTournament = function() {\n    const concernedAdventurer = adventurers.find(adventurer => adventurer.id === this.adventurerId);\n    let remainingOptions = [];\n    // populate hash table with weights for relevant behaviors\n    const weights = {\n      usePotion: concernedAdventurer.dungeonBehavior.use_potion,\n      checkForTraps: concernedAdventurer.dungeonBehavior.check_for_traps,\n      checkForTreasure: concernedAdventurer.dungeonBehavior.search_for_treasure,\n      setTrap: setTrapBehavior[concernedAdventurer.adventurerClass.name],\n      advance: concernedAdventurer.dungeonBehavior.advance_tile,\n      returnToTown: concernedAdventurer.dungeonBehavior.return_to_town\n    }\n    // add decisions marked as valid to array for use in\n    // creating elimination tournament\n    if (this.usePotion && this.hasPotion) {\n      remainingOptions.push(decisions.usePotion);\n    }\n    if (this.checkForTraps) {\n      remainingOptions.push(decisions.checkForTraps);\n    }\n    if (this.checkForTreasure) {\n      remainingOptions.push(decisions.checkForTreasure);\n    }\n    if (this.setTrap) {\n      remainingOptions.push(decisions.setTrap);\n    }\n    if (this.advance) {\n      remainingOptions.push(decisions.advance);\n    }\n    if (this.returnToTown) {\n      remainingOptions.push(decisions.returnToTown);\n    }\n    if (remainingOptions.length === 1) {\n      return remainingOptions[0];\n    }\n    // determine number of tournament rounds for iteration\n    const tournamentRounds = Math.ceil(Math.log2(remainingOptions.length));\n    for (let round = 0; round < tournamentRounds; round++) {\n      // create pairings from outside ends inward\n      const optionsLength = remainingOptions.length;\n      let pairings = [];\n      const pairCount = Math.floor(optionsLength / 2);\n      for (let offest = 0; offest < pairCount; offest++) {\n        const pair = [remainingOptions[offest], remainingOptions[optionsLength - (offest + 1)]];\n        pairings.push(pair);\n      }\n      let eliminated = [];\n      // iterate over pairings and produce weighted outcomes to\n      // eliminate one decision from each pairing\n      pairings.forEach(pair => {\n        const result1 = Math.random() * weights[pair[0]];\n        const result2 = Math.random() * weights[pair[1]];\n        const randomChoice = Math.random();\n        \n        if (result1 > result2 || (result1 === result2 && randomChoice < .5)) {\n          eliminated.push(pair[1])\n        } else {\n          eliminated.push(pair[0]);\n        }\n      });\n      // remove eliminated options from array containing tournament\n      // entrants\n      for (let elIndex = 0; elIndex < eliminated.length; elIndex++) {\n        const eliminate = eliminated[elIndex];\n        remainingOptions = remainingOptions.filter(option => option !== eliminate);\n      }\n    }\n    return remainingOptions[0];\n  }\n\n  const dispatchAdventurers = function(newAdventurers) {\n    const payload = {\n      type: SET_ADVENTURERS,\n      payload: newAdventurers\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchUpdate = function() {\n    const payload = {\n      type: SET_DETAIL_UPDATE,\n      value: true\n    }\n    store.dispatch(payload);\n  }\n\n  const fetchAdventurers = async function() {\n    let initAdventurers = fetcher.fetchRoute('adventurers-full');\n    return initAdventurers;\n  }\n\n  const getAdventurers = function*() {\n    yield fetchAdventurers();\n  }\n\n  const doInn = function() {\n    const availableAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    availableAdventurers.forEach(townAdventurer => {\n      let totalFactor = townAdventurer.townBehavior.use_tavern / 1000;\n      if (townAdventurer.informed) {\n        totalFactor = 0;\n      }\n      const willDrink = totalFactor >= Math.random();\n\n      if (willDrink) {\n        const totalCost = 10 * townAdventurer.level;\n        if (townAdventurer.checkAccount(totalCost)) {\n          const filterClasses = tagProcessor.getFilterClasses();\n          const innJSX = (\n            <div className=\"combatLogEntry\">\n              <span className={filterClasses.name}>{townAdventurer.name} </span>  stayed at the inn. <span className={filterClasses.name}>{townAdventurer.name} </span> is now <span className={filterClasses.status}>informed</span>.\n            </div>);\n          townAdventurer.chargeAccount(totalCost);\n          townAdventurer.informed = true;\n          const combatLogMessage = innJSX;\n          townAdventurer.addCombatLog(combatLogMessage);\n        }\n      }\n    })\n  }\n\n  const doShopping = function() {\n    const inventory = storeInventory.getStoreInventory();\n    let inventoryItems = [];\n    inventory.forEach(item => {\n      let composedItem = item;\n      composedItem.item = items.getItem(item.itemId);\n      inventoryItems.push(composedItem);\n    });\n    const shoppingAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    let adventurerTurn = 0;\n    const adventurerCount = shoppingAdventurers.length;\n    // loop through each inventory item\n    inventoryItems.forEach(item => {\n      // create an order based on last adventurer to take an\n      // item and proceed suequentially to include all\n      // adventurers\n      let adventurerTries = [];\n      for (let i = 0; i < adventurerCount; i++) {\n        let thisIndex = adventurerTurn + i;\n        if (thisIndex >= adventurerCount) {\n          thisIndex -= adventurerCount;\n        }\n        adventurerTries.push(thisIndex);\n      }\n      let taken = false;\n\n      // check with each adventurer if they want the item\n      adventurerTries.forEach(adventurerIndex => {\n        // determine if decision factor is buy or upgrade\n        let decisionFactor = '';\n        const thisAdventurer = shoppingAdventurers[adventurerIndex];\n\n        if (thisAdventurer.equipment[item.item.type] && item.item.type !== itemTypes.potion) {\n          decisionFactor += 'upgrade';\n        } else {\n          decisionFactor += 'buy';\n        }\n        decisionFactor += '_' + item.item.type;\n        const desireWeight = thisAdventurer.townBehavior[decisionFactor];\n        let totalFactor = (desireWeight / 1000) - (item.markup / 1600);\n        if (totalFactor < 0) {\n          totalFactor = 0;\n        }\n        // lessen desire to buy item if adventurer currently has some of it\n        const itemProto = item.item.prototypeId;\n        const currentHoldings = thisAdventurer.getCurrentItemCount(itemProto);\n        if (item.item.type === itemTypes.potion) {\n          totalFactor -= (currentHoldings * .10);\n        } else {\n          totalFactor -= (currentHoldings * .30);\n        }\n        // determine if adventurer will buy item\n        let willBuy = totalFactor >= Math.random();\n        if (thisAdventurer.equipment[item.item.type]) {\n          const currentGear = thisAdventurer.equipment[item.item.type];\n          if (item.item.type === itemTypes.weapon) {\n            const currentDamage = currentGear[itemTypes.weapon].damage;\n            const itemDamage = currentGear[itemTypes.weapon].damage;\n            if (currentDamage >= itemDamage) {\n              willBuy = false;\n            }\n          } else if (item.item.type === itemTypes.armor) {\n            const currentArmor = currentGear[itemTypes.armor].armor;\n            const itemArmor = item.item[itemTypes.armor].armor;\n            if (currentArmor >= itemArmor) {\n              willBuy = false;\n            }\n          }\n        }\n        // cancel buy if adventurer inventory is full\n        if (thisAdventurer.inventory.length >= maxInventory) {\n          willBuy = false;\n        }\n        \n        if (willBuy && !taken) {\n          const totalPrice = Math.floor(item.item.value * (1 + (item.markup / 1000)));\n          if (thisAdventurer.checkAccount(totalPrice)) {\n            thisAdventurer.chargeAccount(totalPrice);\n            playerStore.creditGold(totalPrice);\n            playerStore.updateGold();\n            const baseItem = items.getItem(item.itemId);\n            storeInventory.removeItem(item.itemId);\n            storeInventory.updateStoreInventory();\n            thisAdventurer.inventory.push(baseItem);\n            if (baseItem.type !== itemTypes.potion) {\n              if (thisAdventurer.equipment[baseItem.type]) {\n                thisAdventurer.unequipItem(baseItem.type);\n              }\n              thisAdventurer.equipItem(baseItem);\n            }\n            taken = true;\n            adventurerTurn = adventurerIndex + 1;\n            if (adventurerTurn > adventurerCount) {\n              adventurerTurn = 0;\n            }\n          }\n        }\n      })\n    })\n  }\n\n  const dungeonEntry = function() {\n    const dungeonGoingAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === false);\n    dungeonGoingAdventurers.forEach(dungeonAdventurer => {\n      let totalFactor = (dungeonAdventurer.townBehavior.enter_dungeon / 1000)\n      let willEnter = totalFactor >= Math.random();\n\n      if (willEnter) {\n        const filterClasses = tagProcessor.getFilterClasses();\n        const dungeonJSX = (\n          <div className=\"combatLogEntry\">\n            <span className={filterClasses.name}>{dungeonAdventurer.name} </span> entered the dungeon.\n          </div>\n        );\n        dungeonAdventurer.inDungeon = true;\n        dungeonAdventurer.currentTotalDungeonTurns = 0;\n        const combatLogMessage = dungeonJSX;\n        dungeonAdventurer.addCombatLog(combatLogMessage);\n        dungeon.receiveAdventurer(dungeonAdventurer.id);\n      }\n    });\n  }\n\n  const dungeonTurns = function() {\n    const dungeonAdventurers = adventurers.filter(adventurer => adventurer.inDungeon === true);\n    new Promise((resolve, reject) => {\n      dungeonAdventurers.forEach((dungeonAdventurer, dunAdN) => {\n        let totalTurns = dungeonAdventurer.speed;\n        for (let turnNumber = 1; turnNumber <= totalTurns; turnNumber++) {\n          let nextTurn = 0;\n          if (turnNumber < totalTurns) {\n            nextTurn = turnNumber + 1;\n          } else {\n            nextTurn = null;\n          }\n          const turnPayload = {\n            adventurer: dungeonAdventurer,\n            day: days.getDay(),\n            turnNumber: turnNumber,\n            nextTurn: nextTurn\n          }\n          const newTurn = new Turn(turnPayload);\n          turnController.addTurn(newTurn);\n        }\n        if (dunAdN === dungeonAdventurers.length -1) {\n          resolve();\n        }\n      });\n    }).then(() => {\n      turnController.startTurns();\n    });\n  }\n\n  return {\n    initializeAdventurers: async function(maxAdventurers) {\n      const genGetAdventurers = getAdventurers();\n      genGetAdventurers.next().value\n        .then(initAdventurers => {\n          if (initAdventurers) {\n            let drainAdventurers = initAdventurers;\n            while (adventurers.length < maxAdventurers && drainAdventurers.length > 0) {\n              const pushIndex = Math.floor(Math.random() * drainAdventurers.length);\n              let newAdventurer = drainAdventurers.splice(pushIndex, 1);\n              newAdventurer = newAdventurer[0];\n              const adventurerPayload = {\n                name: newAdventurer.name,\n                strength: newAdventurer.strength, \n                speed: newAdventurer.speed, \n                cunning: newAdventurer.cunning, \n                intelligence: newAdventurer.intelligence,\n                constitution: newAdventurer.constitution,\n                dungeonBehavior: newAdventurer.dungeon_behavior,\n                townBehavior: newAdventurer.town_behavior,\n                adventurerClass: newAdventurer.adventurer_class\n              };\n              let thisAdventurer = new Adventurer(adventurerPayload);\n              adventurers.push(thisAdventurer);\n            }\n            initializeTurnController();\n            dispatchAdventurers(adventurers);\n            return adventurers;\n          }\n        })\n    },\n    updateAdventurers: function() {\n      dispatchAdventurers(adventurers);\n    },\n    takeAdventurerTurn: function() {\n      doInn();\n      doShopping();\n      const loadNextLevel = !dungeon.checkLevelReadiness();\n      if (loadNextLevel) {\n        const loadLevel = dungeon.loadNextLevel();\n        loadLevel.next().value.then(() => {\n          dungeonEntry();\n          dungeonTurns()\n          dispatchAdventurers(adventurers);\n        })\n      } else {\n        dungeonEntry();\n        dungeonTurns()\n        dispatchAdventurers(adventurers);\n      }\n    },\n    getActions: function() {\n      return actions;\n    }\n  }\n}());\n\nexport default adventurers;","// constants\nimport gameConstants from './gameConstants';\n\n// game module imports\nimport days from './days';\nimport suppliers from './suppliers';\nimport supplies from './supplies';\nimport adventurers from './adventurers';\nimport gameStore from './store';\nimport dungeon from './dungeon';\n\n// redux imports\nimport { store } from '../index';\nimport { SET_DETAIL_UPDATE } from '../actions/types';\n\n\nconst main = (function() {\n  \n  let currentMaxLevel = 1;\n  // let townFame = 0;\n\n  const dispatchUpdate = function() {\n    const payload = {\n      type: SET_DETAIL_UPDATE,\n      value: true\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function(payload) {\n      // set day to 1\n      days.setDay(1);\n      \n      // set store name\n      if (!payload.name) {\n        console.log('Game must be started with a payload object that contains a store name!');\n      }\n      gameStore.setName(payload.name);\n\n      const startingGold = gameStore.getStartingGold();\n      gameStore.setGold(startingGold);\n\n      supplies.setSupplyLevel(currentMaxLevel);\n      supplies.fillSupplyPool();\n      suppliers.initializeSuppliers(gameConstants.maxSuppliers);\n\n      adventurers.initializeAdventurers(gameConstants.startingAdventurers);\n      dungeon.initializeLevels();\n    },\n\n    getGameLevel: function() {\n      return currentMaxLevel;\n    },\n\n    performTurn: function() {\n      adventurers.takeAdventurerTurn();\n      // need logic for triggering supply pool fetch if\n      // max level has changed\n      supplies.fillSupplies();\n      suppliers.takeSupplierIncomeTurns();\n      suppliers.takeSupplierTurn();\n      dispatchUpdate();\n    }\n\n  }\n} ());\n\nexport default main;","import React from 'react';\nimport './Days.css';\n\n// import days controller from game code\nimport days from '../../game_modules/days';\nimport main from '../../game_modules/main';\n\n// import redux modules\nimport { fetchDay } from '../../actions';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\nimport { connect } from 'react-redux'\n\nclass Days extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.handleNextDay = this.handleNextDay.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDay();\n  }\n\n  handleNextDay() {\n    main.performTurn();\n    const currentDay = this.props.day;\n    // set day in game\n    days.setDay(currentDay + 1);\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n    // set day in redux state;\n    this.props.fetchDay();\n  }\n\n  render() {\n    return (\n      <div className=\"Days primary-dark\">\n        <div className=\"DayTitle\">Day: {this.props.day}</div>\n        <div className=\"nextDay button secondary\" onClick={this.handleNextDay}\n        >Finish Day</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    day: state.days.day,\n    mobileDropdown: state.mobileMenu.dropdown\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDay: () => dispatch(fetchDay()),\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Days);","const pcMenus = {\n  adventurers: 'adventurers',\n  adventurer: 'adventurer',\n  dungeon: 'dungeon',\n  adventurersPartial: 'adventurersPartial'\n}\n\nexport default pcMenus;","// redux imports\nimport { store } from '../index';\nimport { SET_PC_DETAIL } from '../actions/types';\n\nimport pcMenus from './pcMenus';\n\nconst pcDetailMenus = (function(){\n  let currentMenu = '';\n  let currentIndex = 0;\n\n  const menus = [pcMenus.adventurers, pcMenus.dungeon];\n\n  let menuMap = {};\n\n  const mapMenus = function() {\n    menus.forEach((menu, menuN) => {\n      menuMap[menu] = menuN;\n    })\n  }\n\n  const dispatchPCMenu = function() {\n    const payload = {\n      type: SET_PC_DETAIL,\n      detail: currentMenu\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentMenu = menus[0];\n      currentIndex = 0;\n      mapMenus();\n    },\n\n    getCurrentMenu: function() {\n      return currentMenu;\n    },\n\n    nextMenu: function() {\n      currentIndex++;\n      if (currentIndex >= menus.length) {\n        currentIndex = 0;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    previousMenu: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = menus.length - 1;\n      }\n      currentMenu = menus[currentIndex];\n    },\n\n    getMenus: function() {\n      return menus;\n    },\n\n    setmenu: function(newMenu) {\n      const menuIndex = menuMap[newMenu];\n      if (menuIndex === null) {\n        return false\n      }\n      currentIndex = menuIndex;\n      currentMenu = menus[menuIndex];\n      return true;\n    },\n\n    updateMenu: function() {\n      dispatchPCMenu();\n    }\n  }\n}());\n\nexport default pcDetailMenus;","import React from 'react';\nimport './DetailPCMenu.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport pcDetailMenus from '../../Utilities/pcDetailMenus';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass DetailPCMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleMenuChange = this.handleMenuChange.bind(this);\n    this.getPCDropdown = this.getPCDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    pcDetailMenus.init();\n  }\n\n  handlePrevious() {\n    pcDetailMenus.previousMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleNext() {\n    pcDetailMenus.nextMenu();\n    pcDetailMenus.updateMenu();\n    if (this.props.pcDropdown) {\n      this.props.setPcDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setPcDropdown(!this.props.pcDropdown);\n  }\n\n  handleMenuChange(newMenu) {\n    pcDetailMenus.setmenu(newMenu);\n    pcDetailMenus.updateMenu();\n    this.props.setPcDropdown(false);\n  }\n\n  getPCDropdown() {\n    const allMenus = pcDetailMenus.getMenus();\n    if (!this.props.pcDropdown) {\n      return false;\n    }\n    return (\n      <div className=\"PCDropdown primary-dark\">\n        {allMenus.map(menu => {\n          return (\n            <div className=\"PCDropdownOption primary-medium\"\n              onClick={() => this.handleMenuChange(menu)}>\n                {menu}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  render() {\n    let menuName = this.props.pcDetailMenu;\n    if (menuName === pcMenus.adventurersPartial) {\n      menuName = pcMenus.adventurers;\n    }\n    return (\n      <div className=\"PCDetailMenu primary-saturated\">\n        <span className=\"previousMenu screenArrowPC\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"PCMenuTitle\"\n          onClick={this.handleDropdown}>{menuName}</span>\n        <span className=\"nextMenu screenArrowPC\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getPCDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    pcDropdown: state.pcMenu.dropdown,\n    dungeonLevelExplored: state.dungeon.exploredLevel\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPcDetailMenu: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail }),\n    setPcDropdown: (value) => dispatch({ type: SET_PC_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPCMenu);","import { store } from '../index';\nimport { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst screenInfo = (function(){\n  let isPc = true;\n  let isMobile = false;\n  let isFullscreen = true;\n\n  let width = 0;\n\n  const dispatchFullscreen = function() {\n    const payload = {\n      type: SET_IS_FULLSCREEN,\n      value: isFullscreen\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsPc = function() {\n    const payload = {\n      type: SET_IS_PC,\n      value: isPc\n    }\n    store.dispatch(payload);\n  }\n\n  const dispatchIsMobile = function() {\n    const payload = {\n      type: SET_IS_MOBILE,\n      value: isMobile\n    }\n    store.dispatch(payload);\n  }\n\n  const detectPc = function() {\n    const notPc = window.orientation > -1;\n    return !notPc;\n    \n  }\n\n  const setFullScreen = function() {\n    \n    let App = document.querySelector('.App');\n    if (App.requestFullscreen) {\n      App.requestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.msRequestFullscreen) {\n      App.msRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.mozRequestFullscreen) {\n      App.mozRequestFullscreen();\n      isFullscreen = true;\n    }\n    if (App.webkitRequestFullscreen) {\n      App.webkitRequestFullscreen();\n      isFullscreen = true;\n    }\n    // document.fullscreen = true;\n    // document.fullscreenElement = App;\n  }\n\n  const exitFullScreen = function() {\n    isFullscreen = false;\n    document.exitFullscreen();\n  }\n\n  const setScreenInfo = function() {\n    const app = document.querySelector('.App');\n    const docDimensions = app.getBoundingClientRect();\n    width = docDimensions.width;\n\n    if (width < 768) {\n      isMobile = true\n    } \n  }\n\n  return {\n    init: function() {\n      isPc = detectPc();\n      setScreenInfo();\n      dispatchIsPc();\n      dispatchIsMobile();\n    },\n    getIsPc: function() {\n      return isPc;\n    },\n    getIsMobile: function() {\n      return isMobile;\n    },\n    goFullScreen: function() {\n      setFullScreen();\n      dispatchFullscreen();\n    },\n    leaveFullScreen: function() {\n      exitFullScreen();\n      dispatchFullscreen();\n    }\n  }\n}());\n\nexport default screenInfo;","import { store } from '../index';\nimport { SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../actions/types';\n\nimport screenInfo from './screenInfo';\n\nconst breadcrumb = (function(){\n  let breadcrumbs = [];\n\n  const Breadcrumb = function(payload) {\n    const { \n      displayPayload,\n      isMobile,\n      scrollPos\n    } = payload;\n    this.displayPayload = displayPayload;\n    this.isMobile = isMobile;\n    this.scrollPos = scrollPos;\n  }\n\n  Breadcrumb.prototype.dispatchDisplay = function() {\n    if (this.isMobile) {\n      store.dispatch({ type: SET_MOBILE_SCREEN, screen: this.displayPayload });\n    } else {\n      store.dispatch({ type: SET_PC_DETAIL, detail: this.displayPayload });\n    }\n  }\n\n  return {\n    popBreadcrumb: function() {\n      if (breadcrumbs.length < 1) return false;\n      const nextCrumb = breadcrumbs.pop();\n      nextCrumb.dispatchDisplay();\n    },\n    addBreadcrumb: function(payload) {\n      let { display, scrollPos } = payload;\n      const isMobile = screenInfo.getIsMobile();\n      const newCrumb = new Breadcrumb({ displayPayload: display, scrollPos: scrollPos, isMobile: isMobile });\n      breadcrumbs.push(newCrumb);\n    }\n  }\n}());\n\nexport default breadcrumb;","// redux imports\nimport { store } from '../index';\nimport { SET_MOBILE_SCREEN } from '../actions/types';\n\nconst mobileScreens = (function(){\n  let currentScreen = '';\n  let currentIndex = 0;\n  const screens = ['store', 'suppliers', 'adventurers', 'dungeon'];\n  // const dependentScreens = ['adventurer'];\n\n  const allScreens = {\n    store: 'store',\n    suppliers: 'suppliers',\n    adventurers: 'adventurers',\n    adventurer: 'adventurer',\n    dungeon: 'dungeon',\n    adventurersPartial: 'adventurersPartial'\n  }\n\n  let screenMap = {};\n\n  const mapScreens = function() {\n    screens.forEach((screen, screenN) => {\n      screenMap[screen] = screenN;\n    });\n  }\n\n  const dispatchMobileScreen = function() {\n    const payload = {\n      type: SET_MOBILE_SCREEN,\n      screen: currentScreen\n    }\n    store.dispatch(payload);\n  }\n\n  return {\n    init: function() {\n      currentScreen = screens[0];\n      currentIndex = 0;\n      mapScreens();\n    },\n\n    getCurrentScreen: function() {\n      return currentScreen;\n    },\n\n    nextScreen: function() {\n      currentIndex++;\n      if (currentIndex >= screens.length) {\n        currentIndex = 0;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    previousScreen: function() {\n      currentIndex--;\n      if (currentIndex < 0) {\n        currentIndex = screens.length -1;\n      }\n      currentScreen = screens[currentIndex];\n    },\n\n    getScreens: function() {\n      return screens;\n    },\n\n    getAllScreens: function() {\n      return allScreens;\n    },\n\n    setScreen: function(newScreen) {\n      const screenIndex = screenMap[newScreen];\n      if (screenIndex === null) {\n        return false;\n      } else {\n        currentIndex = screenIndex;\n        currentScreen = screens[screenIndex];\n        return true;\n      }\n    },\n\n    updateScreen: function() {\n      dispatchMobileScreen();\n    }\n  }\n}());\n\nexport default mobileScreens;","import React from 'react';\nimport './Adventurer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_ID, SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\nimport screenInfo from '../../Utilities/screenInfo';\nimport mobileScreens from '../../Utilities/mobileScreens';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass Adventurer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleZoom = this.handleZoom.bind(this);\n  }\n\n  handleZoom() {\n    if (!this.props.adventurer) return;\n    const partialAdventurers = this.props.partialAdventurers;\n    let breadcrumbName = 'adventurers';\n    if (partialAdventurers) {\n      const matched = partialAdventurers.find(adventurerId => adventurerId === this.props.adventurer.id);\n      if (matched !== undefined) {\n        breadcrumbName = 'adventurersPartial';\n      }\n    }\n    this.props.setDetailId(this.props.adventurer.id);\n    const advDOM = document.querySelector('.adventurers');\n    const scrollY = advDOM.scrollTop;\n    console.log(scrollY);\n    breadcrumb.addBreadcrumb({ display: breadcrumbName, screenPos: scrollY });\n    if (screenInfo.getIsMobile()) {\n      const allScreens = mobileScreens.getAllScreens();\n      this.props.setMobileScreen(allScreens.adventurer);\n    } else {\n      this.props.setPCDetail(pcMenus.adventurer);\n    }\n  }\n\n  render() {\n    if (!this.props.adventurer) return '';\n    const adventurer = this.props.adventurer;\n    const adventurerClass = adventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    const dungeonIndicator = (\n      <div className=\"dungeonIcon\">\n        <p>D</p>\n        <p>U</p>\n        <p>N</p>\n      </div>\n    )\n    return (\n      <div className=\"adventurerDisplay primary\"\n        onClick={this.handleZoom}\n      >\n        <div className={adventurerClassIconColor}>{classIcon}</div>\n        <div className=\"adventurerDetails\">\n          <p className=\"adventurerName\">{adventurer.name}</p>\n          <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          <div className=\"adventurerStatGroupWide\">\n            <p className=\"adventurerStatLabel\">exp</p>\n            <p className=\"adventurerStat\">{adventurer.experience}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">lvl</p>\n            <p className=\"adventurerStat\">{adventurer.level}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{adventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{adventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{adventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{adventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{adventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{adventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{adventurer.constitution}</p>\n          </div>\n        </div>\n        <div className=\"adventurerDungeonIndicator\">\n          {adventurer.inDungeon ? dungeonIndicator : <span className=\"dungeonIcon\"></span>}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    partialAdventurers: state.adventurers.partialAdventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailId: (id) => dispatch({ type: SET_DETAIL_ID, id: id }),\n    setMobileScreen: (screen) => dispatch({ type: SET_MOBILE_SCREEN, screen: screen }),\n    setPCDetail: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Adventurer);","import React from 'react';\nimport './Adventurers.css';\n\n// component imports\nimport Adventurer from '../Adventurer/Adventurer';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Adventurers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAdventurers = this.getAdventurers.bind(this);\n  }\n\n  getAdventurers() {\n    const adventurers = this.props.adventurers;\n    return adventurers.map(adventurer => {\n      return <Adventurer adventurer={adventurer} />\n    });\n  }\n  \n  render() {\n    if (!this.props.adventurers) return '';\n    return (\n      <div className=\"adventurers\">\n        {this.getAdventurers()}\n        <div className=\"spacer-vertical\"></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    adventurerUpdate: state.adventurers.update\n  }\n}\n\nexport default connect(mapStateToProps)(Adventurers);","import React from 'react';\nimport './AdventurerDetail.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\n\nclass AdventurerDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBack = this.handleBack.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.scrollCombatLog();\n  }\n\n  getInventory(adventurer) {\n    const adventurerInventory = adventurer.inventory;\n    if (!adventurerInventory) return 'no inventory';\n    return adventurerInventory.map(item => {\n      let equippedIndicator = '';\n      if (adventurer.equipment[item.type]) {\n        if (adventurer.equipment[item.type].id === item.id) {\n          equippedIndicator += ' (equipped)';\n        }\n      }\n      return (\n        <div className=\"adventurerInventoryItem\">{item.name}{equippedIndicator}</div>\n      )\n    })\n  }\n\n  getCombatLog(adventurer) {\n    if (!adventurer) return 'no combat log';\n    const adventurerCombatLog = adventurer.getCombatLog();\n    if (adventurerCombatLog.length <= 0) {\n      return 'No combat log entries.'\n    }\n  \n    return adventurerCombatLog;\n    \n  }\n\n  scrollCombatLog() {\n    const cLog = document.querySelector('.adventurer-combat-log');\n    if (!cLog) return;\n    cLog.scrollTop = cLog.scrollHeight;\n  }\n\n  handleBack() {\n    const handled = breadcrumb.popBreadcrumb();\n    if (!handled) {\n      console.log('breadcrumb failed!');\n    }\n  }\n  \n  render() {\n    if ((!this.props.detailId && this.props.detailId !== 0) || !this.props.adventurers) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.detailId);\n    const adventurerClass = thisAdventurer.adventurerClass;\n    const classColors = {\n      thief: 'thief',\n      bard: 'bard',\n      soldier: 'soldier'\n    }\n    let adventurerClassColor, adventurerClassIconColor;\n    adventurerClassIconColor = \"adventurerClassIcon\"\n    adventurerClassColor = \"adventurerClass\";\n    adventurerClassColor += ` ${classColors[adventurerClass.name]}`\n    adventurerClassIconColor += ` ${classColors[adventurerClass.name]}`\n    const classIcon = adventurerClass.name.charAt(0);\n    \n    return (\n      <div className=\"AdventurerDetail primary\">\n        <div className=\"title-bar\">\n          <div className=\"back-button\"\n            onClick={this.handleBack}>&#8592;</div>\n          <div className=\"adventurer-title\">{thisAdventurer.name}</div>\n        </div>\n        <div className=\"primary-stats-bar\">\n          <div className={adventurerClassIconColor}>{classIcon}</div>\n          <div className=\"primary-cascade\">\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">exp</p>\n              <p className=\"adventurerStat\">{thisAdventurer.experience}</p>\n            </div>\n            <div className=\"adventurerStatGroupWide\">\n              <p className=\"adventurerStatLabel\">lvl</p>\n              <p className=\"adventurerStat\">{thisAdventurer.level}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"adventurerDetailsView\">\n          <div className=\"adventurerStatGroup\">\n            <p className={adventurerClassColor}>{adventurerClass.name}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">gold</p>\n            <p className=\"adventurerStat\">{thisAdventurer.gold}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">hp</p>\n            <p className=\"adventurerStat\">{thisAdventurer.hp}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">str</p>\n            <p className=\"adventurerStat\">{thisAdventurer.strength}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">spd</p>\n            <p className=\"adventurerStat\">{thisAdventurer.speed}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">cun</p>\n            <p className=\"adventurerStat\">{thisAdventurer.cunning}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">int</p>\n            <p className=\"adventurerStat\">{thisAdventurer.intelligence}</p>\n          </div>\n          <div className=\"adventurerStatGroup\">\n            <p className=\"adventurerStatLabel\">con</p>\n            <p className=\"adventurerStat\">{thisAdventurer.constitution}</p>\n          </div>\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Inventory</p>\n        <div className=\"adventurerInventoryDetails\">\n          {this.getInventory(thisAdventurer)}\n        </div>\n        <p className=\"adventurerInventoryHeadline\">Combat Log</p>\n        <div className=\"adventurer-combat-log\">\n          {this.getCombatLog(thisAdventurer)}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    detailId: state.detail.id\n  }\n}\n\nexport default connect(mapStateToProps)(AdventurerDetail);","import React from 'react';\nimport './AdventurersPartial.css';\n\n// component imports\nimport Adventurer from '../Adventurer/Adventurer';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PARTIAL_ADVENTURERS } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\n\nclass AdventurersPartial extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAdventurers = this.getAdventurers.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  getAdventurers(adventurers) {\n    return adventurers.map(adventurer => {\n      return <Adventurer adventurer={adventurer} />\n    });\n  }\n\n  handleBack() {\n    this.props.setPartialAdventurers(null);\n    const handled = breadcrumb.popBreadcrumb();\n    if (!handled) {\n      console.log('breadcrumb failed!');\n    }\n  }\n\n  render() {\n    if (!this.props.adventurers || !this.props.partialAdventurers) return '';\n    let partialAdventurers = this.props.partialAdventurers;\n    let adventurers = this.props.adventurers;\n    partialAdventurers = partialAdventurers.map(adventurerId => {\n      return adventurers.find(adventurer => adventurer.id === adventurerId);\n    })\n    \n    return (\n      <div className=\"adventurers\">\n        <div className=\"back-button partial-back primary\"\n            onClick={this.handleBack}>&#8592;</div>\n        {this.getAdventurers(partialAdventurers)}\n        <div className=\"spacer-vertical\"></div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    partialAdventurers: state.adventurers.partialAdventurers,\n    adventurers: state.adventurers.adventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPartialAdventurers: (payload) => dispatch({ type: SET_PARTIAL_ADVENTURERS, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurersPartial);","import React from 'react';\nimport './DungeonLevel.css';\n\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PARTIAL_ADVENTURERS, SET_MOBILE_SCREEN, SET_PC_DETAIL } from '../../actions/types';\n\n// utility imports\nimport breadcrumb from '../../Utilities/breadcrumb';\nimport screenInfo from '../../Utilities/screenInfo';\nimport mobileScreens from '../../Utilities/mobileScreens';\nimport pcMenus from '../../Utilities/pcMenus';\n\nclass DungeonLevel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdventurerList = this.handleAdventurerList.bind(this);\n  }\n\n  handleAdventurerList(levelAdventurers) {\n    const adventurerIds = levelAdventurers.map(adventurer => adventurer.adventurerId);\n    this.props.setPartialAdventurers(adventurerIds);\n    const dunDOM = document.querySelector('.Dungeon');\n    const scrollY = dunDOM.scrollTop;\n    breadcrumb.addBreadcrumb({ display: 'dungeon', screenPos: scrollY});\n    if (screenInfo.getIsMobile()) {\n      const allScreens = mobileScreens.getAllScreens();\n      this.props.setMobileScreen(allScreens.adventurersPartial);\n    } else {\n      this.props.setPCDetail(pcMenus.adventurersPartial);\n    }\n  }\n\n  render() {\n    if (!this.props.level) return '';\n    const level = this.props.level;\n    let levelAdventurers = [];\n    const dungeonAdventurers = this.props.dungeonAdventurers;\n    if (dungeonAdventurers) {\n      levelAdventurers = dungeonAdventurers.filter(adventurer => adventurer.level === level.number);\n    }\n    return (\n      <div className=\"levelDisplay primary\">\n        <div className=\"levelNumber\">LEVEL {level.number}</div>\n        <div className=\"adventurersNumberContainer\">\n          <div className=\"adventurersNumber\"\n            onClick={() => this.handleAdventurerList(levelAdventurers)}>\n            {levelAdventurers.length > 0 ? (levelAdventurers.length) : ''}\n          </div>\n          <div className=\"adventurersNumberLabel\">adventurers</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonAdventurers: state.dungeon.adventurers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPartialAdventurers: (payload) => dispatch({ type: SET_PARTIAL_ADVENTURERS, payload: payload }),\n    setMobileScreen: (screen) => dispatch({ type: SET_MOBILE_SCREEN, screen: screen }),\n    setPCDetail: (detail) => dispatch({ type: SET_PC_DETAIL, detail: detail })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonLevel);","import React from 'react';\nimport './Dungeon.css';\n\nimport DungeonLevel from '../DungeonLevel/DungeonLevel';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass Dungeon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLevels = this.getLevels.bind(this);\n  }\n  \n  getLevels() {\n    const levels = this.props.levels;\n    const levelsToDisplay = levels.filter(level => level.number <= this.props.exploredLevel);\n    return levelsToDisplay.map(level => {\n      return <DungeonLevel level={level} />\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"Dungeon primary-dark\">\n        {this.getLevels()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    levels: state.dungeon.levels,\n    exploredLevel: state.dungeon.exploredLevel\n  }\n}\n\nexport default connect(mapStateToProps)(Dungeon);","import React from 'react';\nimport './Details.css';\n\n// component imports\nimport DetailPCMenu from '../DetailPCMenu/DetailPCMenu';\nimport Adventurers from '../Adventurers/Adventurers';\nimport AdventurerDetail from '../AdventurerDetail/AdventurerDetail';\nimport AdventurersPartial from '../AdventurersPartial/AdventurersPartial';\nimport Dungeon from '../Dungeon/Dungeon';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\nimport menuTypes from '../../Utilities/pcMenus';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n    this.getDetail = this.getDetail.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const forms = Object.values(menuTypes);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[menuTypes.adventurers] = <Adventurers />;\n    this.formTable[menuTypes.adventurer] = <AdventurerDetail />;\n    this.formTable[menuTypes.dungeon] = <Dungeon />;\n    this.formTable[menuTypes.adventurersPartial] = <AdventurersPartial />;\n  }\n\n  getDetail() {\n    if (!this.state.initialized) return '';\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    if (!this.props.pcDetailMenu) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n\n    if (this.formTable[this.props.pcDetailMenu] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.pcDetailMenu];\n  }\n  \n  render() {\n    return (\n      <div className=\"Details primary-dark\">\n        <DetailPCMenu />\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pcDetailMenu: state.pcMenu.detail,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);","import React from 'react';\nimport './GameScreen.css';\n\n// import Title from '../../Components/Title/Title';\nimport Store from '../../Components/Store/Store';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport Days from '../../Components/Days/Days';\nimport Details from '../../Components/Details/Details';\n\nimport { connect } from 'react-redux';\n\nclass GameScreen extends React.Component {\n  render() {\n    return (\n      <div className=\"GameScreen flex-container primary-light\">\n        <div className=\"CommerceColumn\">\n          <Days />\n          <Store />\n          <Suppliers />\n        </div>\n        <Details />\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name\n  }\n}\n\nexport default connect(mapStateToProps)(GameScreen);","import React from 'react';\nimport './Title.css';\n\nclass Title extends React.Component {\n  render() {\n    return (\n      <div className=\"Title\">VENDOR</div>\n    )\n  }\n}\n\nexport default Title;","import React from 'react';\nimport './StartScreen.css';\n\nimport Title from '../../Components/Title/Title';\n\nimport game from '../../game_modules/main';\n\nimport { connect } from 'react-redux';\nimport { SET_STORE_NAME, SET_GAME_STATE } from '../../actions/types';\n\n\nclass StartScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false\n    }\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleNameInput = this.handleNameInput.bind(this);\n  }\n\n  componentDidMount() {\n    \n  }\n  \n  handleStart() {\n    const newName = this.props.name;\n    if (!newName || newName === '') {\n      return;\n    }\n    game.init({ name: newName });\n    this.props.setStarted(true);\n  }\n\n  handleNameInput(e) {\n    if (e.charCode === 13) {\n      this.handleStart();\n    }\n    if (!this.props.edited) {\n      this.setState({ edited: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"StartScreen primary-surface\">\n        <Title />\n        <div className=\"NameInput\">\n          <div className=\"nameInputGroup\">\n            <label htmlFor=\"name\" className=\"NameLabel\">Name: </label>\n            <input id=\"name\" \n              value={this.props.name}\n              type=\"text\"\n              onChange={(val) => this.props.setStoreName(val.target.value)}\n              onKeyPress={this.handleNameInput}\n            />\n          </div>\n          <button onClick={this.handleStart} \n            className=\"StartButton\">\n              Start!    \n          </button>\n        </div>\n          \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    name: state.storeState.name,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStoreName: (name) => dispatch({ type: SET_STORE_NAME, name: name }),\n    setStarted: (value) => dispatch({ type: SET_GAME_STATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartScreen);","const userPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default userPutRequests;","import React from 'react';\nimport './ProfileViewer.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\nimport { fetchUser } from '../../actions'\n\n// utitlity imports\nimport userPutRequests from '../../Utilities/userPutRequests';\n\nclass ProfileViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  handleClose() {\n    if (this.props.profileActive) {\n      this.props.setProfileActive(false);\n    }\n  }\n\n  *updateUser(data) {\n    yield userPutRequests.makeRequest('user', data);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateUser = this.updateUser(data);\n    updateUser.next().value.then(() => {\n      this.props.fetchUser();\n      this.props.setProfileActive(false);\n    });\n  }\n  \n  render() {\n    let newNickname = '';\n    let newImportNickname = false;\n    let newId = null;\n    console.log(this.props.auth);\n\n    if (this.props.auth) {\n      newNickname = this.props.auth.nickname;\n      newImportNickname = this.props.auth.import_nickname;\n      newId = this.props.auth.id;\n    }\n\n    return (\n      <div className=\"ProfileViewer primary-surface\">\n        <div className=\"ProfileForm\">\n          <form action={'/profile'}\n            className=\"input-fields-area\"\n            id=\"ProfileForm\"\n            method=\"POST\"\n            onSubmit={this.handleSubmit}>\n              <div className=\"input-group\">\n                <label className=\"item-label\" htmlFor=\"nickname\">Nickname</label>\n                <input type=\"text\" name=\"nickname\" id=\"nickname\" className=\"input-text\" placeholder=\"nickname\"\n                  maxLength=\"40\" defaultValue={newNickname}></input>\n              </div>\n              <div className=\"input-group\">\n                <input type=\"checkbox\" name=\"import_nickname\" id=\"import_nickname\" class=\"input-checkbox\" defaultChecked={newImportNickname} value={true}></input>\n                <label className=\"item-label\" htmlFor=\"import_nickname\">Import nickname as store name by default</label>\n              </div>\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"submit\" value=\"Update Profile\" className=\"button profile-submit\"></input>\n          </form>\n        </div>\n        <div className=\"CloseButton\"\n          onClick={this.handleClose}>\n            X\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    profileActive: state.profile.active,\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value }),\n    fetchUser: () => dispatch(fetchUser())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileViewer);","import React from 'react';\nimport './MobileStoreHeadbar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass MobileStoreHeadbar extends React.Component {\n  render() {\n    return (\n      <div className=\"MobileStoreHeadbar\">\n        <h2 className=\"StoreName\">{this.props.storeName}</h2>\n        <div className=\"GoldDisplay\">\n            <div className=\"StoreGold\"><span className=\"CoinSymbol\" role=\"img\" aria-label=\"coin\">&#x2689; </span>{this.props.gold}</div>\n          </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storeName: state.storeState.name,\n    gold: state.storeState.gold,\n  }\n}\n\nexport default connect(mapStateToProps)(MobileStoreHeadbar);","import React from 'react';\nimport './MobileMenu.css';\n\n// component imports\nimport Days from '../Days/Days';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_MOBILE_DROPDOWN } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleScreenChange = this.handleScreenChange.bind(this);\n    this.getMobileDropdown = this.getMobileDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    mobileScreens.init();\n  }\n  \n  handlePrevious() {\n    mobileScreens.previousScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleNext() {\n    mobileScreens.nextScreen();\n    mobileScreens.updateScreen();\n    if (this.props.mobileDropdown) {\n      this.props.setMobileDropdown(false);\n    }\n  }\n\n  handleDropdown() {\n    this.props.setMobileDropdown(!this.props.mobileDropdown)\n  }\n\n  handleScreenChange(newScreen) {\n    mobileScreens.setScreen(newScreen);\n    mobileScreens.updateScreen();\n    this.props.setMobileDropdown(false);\n  }\n\n  getMobileDropdown() {\n    const allScreens = mobileScreens.getScreens();\n    if (this.props.mobileDropdown) {\n      return (\n        <div className=\"MobileDropdown primary-medium\">\n          <Days />\n          {allScreens.map(screen => {\n            return (\n              <div className=\"mobileDropdownOption\"\n                onClick={() => this.handleScreenChange(screen)}>{screen}</div>\n            )\n      })}\n      </div>)\n      \n    } else {\n      return false;\n    }\n  }\n  \n  render() {\n    let mobileMenuName = this.props.mobileScreen;\n    let allScreens = mobileScreens.getAllScreens();\n    if (mobileMenuName === allScreens.adventurersPartial) {\n      mobileMenuName = allScreens.adventurers;\n    }\n    return (\n      <div className=\"MobileMenu primary-saturated\">\n        <span className=\"previousScreen screenArrow\"\n          onClick={this.handlePrevious}\n        >&#8592;</span>\n        <span className=\"mobileTitle\"\n          onClick={this.handleDropdown}>{mobileMenuName}</span>\n        <span className=\"nextScreen screenArrow\"\n          onClick={this.handleNext}\n        >&#8594;</span>\n        {this.getMobileDropdown()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    mobileDropdown: state.mobileMenu.dropdown,\n    dungeonLevelExplored: state.dungeon.exploredLevel\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMobileDropdown: (value) => dispatch({ type: SET_MOBILE_DROPDOWN, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileMenu);","import React from 'react';\nimport './MobileGameScreen.css';\n\nimport Store from '../../Components/Store/Store';\nimport MobileStoreHeadbar from '../../Components/MobileStoreHeadbar/MobileStoreHeadbar';\nimport Suppliers from '../../Components/Suppliers/Suppliers';\nimport MobileMenu from '../../Components/MobileMenu/MobileMenu';\nimport Adventurers from '../../Components/Adventurers/Adventurers';\nimport AdventurerDetail from '../../Components/AdventurerDetail/AdventurerDetail';\nimport AdventurersPartial from '../../Components/AdventurersPartial/AdventurersPartial';\nimport Dungeon from '../../Components/Dungeon/Dungeon';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_UPDATE } from '../../actions/types';\n\n// utility imports\nimport mobileScreens from '../../Utilities/mobileScreens';\n\nclass MobileGameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentScreen: 'store',\n      initialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n    this.setState({ initialized: true });\n  }\n\n  loadFormTable() {\n    const allScreens = mobileScreens.getAllScreens();\n    const forms = Object.values(allScreens);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = null;\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[allScreens.store] = <Store />;\n    this.formTable[allScreens.suppliers] = (\n      <div>\n        <MobileStoreHeadbar />\n        <Suppliers />\n      </div>\n    );\n    this.formTable[allScreens.adventurers] = <Adventurers />;\n    this.formTable[allScreens.adventurer] = <AdventurerDetail />;\n    this.formTable[allScreens.dungeon] = <Dungeon />;\n    this.formTable[allScreens.adventurersPartial] = <AdventurersPartial />;\n  }\n\n  getCurrentScreen() {\n    if (!this.state.initialized) return '';\n    if (this.props.detailUpdate) {\n      this.props.setDetailUpdate(false);\n      return '';\n    }\n    if (!this.props.mobileScreen) {\n      return (<div className=\"BlankForm\">no details to display</div>)\n    }\n\n    if (this.formTable[this.props.mobileScreen] === undefined) {\n      return this.formTable['blank'];\n    }\n    return this.formTable[this.props.mobileScreen];\n  }\n  \n  render() {\n    return (\n      <div className=\"MobileGameScreen primary-dark\">\n        <MobileMenu />\n        {this.getCurrentScreen()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileScreen: state.mobileMenu.screen,\n    detailUpdate: state.detail.update\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDetailUpdate: (value) => dispatch({ type: SET_DETAIL_UPDATE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileGameScreen);","import React from 'react';\nimport './MenuBar.css';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_PROFILE_ACTIVE } from '../../actions/types';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mobileOpen: false\n    }\n\n    this.handleProfileActive = this.handleProfileActive.bind(this);\n    this.getLoginContainer = this.getLoginContainer.bind(this);\n    this.renderProfileLink = this.renderProfileLink.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderEditorLink = this.renderEditorLink.bind(this);\n    this.handleFullscreen = this.handleFullscreen.bind(this);\n    this.getFullScreenControls = this.getFullScreenControls.bind(this);\n    this.handleMobileOpen = this.handleMobileOpen.bind(this);\n  }\n\n  handleProfileActive() {\n    if (!this.props.profileActive) {\n      this.props.setProfileActive(true);\n    }\n    this.handleMobileOpen();\n  }\n\n  handleMobileOpen() {\n    if (this.props.profileActive && !this.state.mobileOpen) {\n      return;\n    }\n    this.setState({ mobileOpen: !this.state.mobileOpen});\n  }\n\n  renderProfileLink() {\n    switch(this.props.auth) {\n      case null:\n        return '';\n      case false:\n        return '';\n      default:\n        return <li key=\"profile\" class=\"profileLink\" onClick={this.handleProfileActive}>profile</li>\n    }\n  }\n\n  renderLogin() {\n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li key=\"login\"><a href=\"/auth/facebook\" className=\"facebookLogo\"><span>f</span></a></li>\n        );\n      default:\n        return (\n          <li key=\"login\"><a href=\"/api/logout\">logout</a></li>\n        );\n    }\n  }\n\n  renderEditorLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner' && screenInfo.getIsPc()) {\n          return (\n            <li key=\"editorLink\"><a className=\"EditorLink\" href=\"/editor\">editor</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n\n  getLoginContainer() {\n    if (!this.props.isPc) {\n      return (\n        <div className=\"hamburgerContainer\"\n          onClick={this.handleMobileOpen}>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n          <div className=\"hamburgerLine primary\"></div>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"LoginContainer\">\n        {this.renderProfileLink()}\n        {this.renderEditorLink()}\n        {this.renderLogin()}\n      </ul>\n    )\n  }\n\n  getMobileMenu() {\n    if (!this.props.isPc && this.state.mobileOpen) {\n      let mobileOffsetStyle = {};\n      let menuOffsets = 2;\n        if (this.props.auth) {\n          menuOffsets += 1;\n        }\n        // set style by default for tablet\n        mobileOffsetStyle.height = `calc(${(menuOffsets * 2.4)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        if (this.props.isMobile) {\n          mobileOffsetStyle.height = `calc(${(menuOffsets * 1.8)}rem + ${(menuOffsets * 2) * 0.8}rem - 1px)`;\n        } \n        \n        \n      return (\n        <div className=\"mobileMenuContainer primary\"\n          onClick={this.handleMobileOpen}>\n          <ul className=\"LoginContainer mobileMenu primary-light\"\n            style={mobileOffsetStyle}\n            >\n            {this.getFullScreenControls()}\n            {this.renderProfileLink()}\n            {this.renderLogin()}\n          </ul>\n        </div>\n        \n      )\n    }\n  }\n\n  handleFullscreen() {\n    if (!this.props.isFullscreen) {\n      screenInfo.goFullScreen();\n    } else {\n      screenInfo.leaveFullScreen();\n    }\n  }\n\n  getFullScreenControls() {\n    if (!this.props.isFullscreen) {\n      return <li key=\"goFullscreen\" \n        className=\"Fullscreen screenLink\"\n        onClick={this.handleFullscreen}>[  ]</li>\n    } else {\n      return <li key=\"exitFullscren\"\n        className=\"ExitFullScreen screenLink\"\n        onClick={this.handleFullscreen}>&#9580;</li>\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar primary-light\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        {this.getLoginContainer()}\n        {this.getMobileMenu()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc,\n    isFullscreen: state.app.isFullscreen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setProfileActive: (value) => dispatch({ type: SET_PROFILE_ACTIVE, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\n// game module imports\nimport GameScreen from '../../Containers/GameScreen/GameScreen';\nimport StartScreen from '../../Containers/StartScreen/StartScreen';\nimport ProfileViewer from '../../Containers/ProfileViewer/ProfileViewer';\nimport MobileGameScreen from '../../Containers/MobileGameScreen/MobileGameScreen';\n\n// utility imports\nimport screenInfo from '../../Utilities/screenInfo';\n\n// component imports\nimport MenuBar from '../../Components/MenuBar/MenuBar';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainView = this.getMainView.bind(this);\n    this.getProfileViewer = this.getProfileViewer.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n    screenInfo.init();\n  }\n\n  getMainView() {\n    const gameState = this.props.started;\n    if (!gameState) {\n      return (\n        <StartScreen />\n      )\n    } else {\n      if (!this.props.isPc) {\n        return (\n          <MobileGameScreen />\n        )\n      } else {\n        return (\n          <GameScreen />\n        )\n      }\n    }\n  }\n\n  getProfileViewer() {\n    const profileStatus = this.props.profileActive;\n    if (profileStatus) {\n      return (\n        <ProfileViewer />\n      )\n    }\n  }  \n\n  render() {\n    return (\n      <div className=\"App\"\n        ref={ref => {\n          this.container = ref;\n        }}>\n        <MenuBar />\n        {this.getMainView()}\n        {this.getProfileViewer()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.gameState.started,\n    profileActive: state.profile.active,\n    isMobile: state.app.isMobile,\n    isPc: state.app.isPc\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);","import { SET_DAY } from '../actions/types';\n\nconst initialState = {\n  day: 1\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DAY:\n      return {\n        ...state,\n        day: action.day\n      }\n    default:\n      return state;\n  }\n}","import { SET_GAME_STATE,\n  SET_UPDATES,\n  SET_STORE_UPDATE}\n   from '../actions/types';\n\nconst initialState = {\n  started: false,\n  storeUpdate: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_STATE:\n      return {\n        ...state,\n        started: action.value\n      }\n    case SET_UPDATES:\n      const updates = action.payload;\n      const { storeUpdate } = updates;\n      return {\n        ...state,\n        storeUpdate: storeUpdate\n      }\n    case SET_STORE_UPDATE:\n      return {\n        ...state,\n        storeUpdate: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_STORE_NAME,\n  SET_STORE_GOLD,\n  SET_STORE_INVENTORY,\n  SET_STORE_FILTER,\n  SET_STORE_FILTER_ACTIVE,\n  SET_STORE_UPDATE_STATUS,\n  SET_STORE_MOBILE_DETAIL,\n  SET_STORE_MOBILE_DETAIL_ITEM } from '../actions/types';\n\nconst initialState = {\n  name: '',\n  gold: 0,\n  filterActive: false,\n  filter: 'all',\n  needsUpdate: false,\n  inventory: [],\n  inventoryCount: 0,\n  mobileDetail: null,\n  mobileItemDetail: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_STORE_NAME:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_STORE_GOLD:\n      return {\n        ...state,\n        gold: action.amount\n      }\n    case SET_STORE_INVENTORY:\n      const newInventory = action.inventory;\n      let newCount = state.inventoryCount;\n      if (Array.isArray(newInventory)) {\n        newCount = newInventory.length;\n      }\n      return {\n        ...state,\n        inventory: newInventory,\n        inventoryCount: newCount\n      }\n    case SET_STORE_FILTER_ACTIVE:\n      return {\n        ...state,\n        filterActive: action.value\n      }\n    case SET_STORE_FILTER:\n      return {\n        ...state,\n        filter: action.filter\n      }\n    case SET_STORE_UPDATE_STATUS:\n      const newStatus = !state.needsUpdate;\n      return {\n        ...state,\n        needsUpdate: newStatus\n      }\n    case SET_STORE_MOBILE_DETAIL:\n      return {\n        ...state,\n        mobileDetail: action.detail\n      }\n    case SET_STORE_MOBILE_DETAIL_ITEM:\n      return {\n        ...state,\n        mobileItemDetail: action.itemDetail\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS, SET_SUPPLIERS_INITIALIZED } from '../actions/types';\n\nconst initialState = {\n  suppliers: null,\n  count: 0,\n  initialized: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      let number = 0;\n      if (Array.isArray(action.payload)) {\n        number = action.payload.length;\n      }    \n      return {\n          ...state,\n          suppliers: action.payload,\n          count: number\n        }\n      case SET_SUPPLIERS_INITIALIZED:\n        return {\n          ...state,\n          initialized: action.value\n        }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLY_READY, SET_SUPPLY_SPAWNED } from '../actions/types';\n\nconst initialState = {\n  ready: false,\n  spawned: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLY_READY:\n      return {\n        ...state,\n        ready: action.value\n      }\n    case SET_SUPPLY_SPAWNED:\n      return {\n        ...state,\n        spawned: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_PROFILE_ACTIVE } from '../actions/types';\n\nconst initialState = {\n  active: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PROFILE_ACTIVE:\n      return {\n        ...state,\n        active: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_IS_FULLSCREEN, SET_IS_PC, SET_IS_MOBILE } from '../actions/types';\n\nconst initialState = {\n  isFullscreen: false,\n  isPc: true,\n  isMobile: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: action.value\n      }\n    case SET_IS_PC:\n      return {\n        ...state,\n        isPc: action.value\n      }\n    case SET_IS_MOBILE:\n      return {\n        ...state,\n        isMobile: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_MOBILE_SCREEN, SET_MOBILE_DROPDOWN } from '../actions/types';\n\nconst intitialState = {\n  screen: 'store',\n  dropdown: false\n}\n\nexport default function(state = intitialState, action) {\n  switch(action.type) {\n    case SET_MOBILE_SCREEN:\n      return {\n        ...state,\n        screen: action.screen\n      }\n    case SET_MOBILE_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS, SET_PARTIAL_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null,\n  partialAdventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    case SET_PARTIAL_ADVENTURERS:\n      return {\n        ...state,\n        partialAdventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_PC_DETAIL, SET_PC_DROPDOWN } from '../actions/types';\nimport pcMenus from '../Utilities/pcMenus';\n\nconst initialState = {\n  detail: pcMenus.adventurers,\n  dropdown: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_PC_DETAIL:\n      return {\n        ...state,\n        detail: action.detail\n      }\n    case SET_PC_DROPDOWN:\n      return {\n        ...state,\n        dropdown: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_ID, SET_DETAIL_UPDATE } from '../actions/types';\n\nconst initialState = {\n  id: null,\n  update: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_ID:\n      return {\n        ...state,\n        id: action.id\n      }\n    case SET_DETAIL_UPDATE: {\n      return {\n        ...state,\n        update: action.value\n      }\n    }\n    default:\n      return state;\n  }\n}","import { SET_DUNGEON_LEVELS, \n  SET_DUNGEON_LEVEL_EXPLORED,\n  SET_DUNGEON_ADVENTURERS\n} from '../actions/types';\n\nconst initialState = {\n  levels: null,\n  exploredLevel: 0,\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DUNGEON_LEVELS:\n      return {\n        ...state,\n        levels: action.payload\n      }\n    case SET_DUNGEON_LEVEL_EXPLORED:\n      return {\n        ...state,\n        exploredLevel: action.level\n      }\n    case SET_DUNGEON_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.adventurers\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport daysReducer from './daysReducer';\nimport gameStateReducer from './gameStateReducer'\nimport storeReducer from './storeReducer';\nimport authReducer from './authReducer';\nimport suppliersReducer from './suppliersReducer';\nimport suppliesReducer from './suppliesReducer';\nimport profileReducer from './profileReducer';\nimport appStateReducer from './appStateReducer';\nimport mobileMenuReducer from './mobileMenuReducer';\nimport adventurersReducer from './adventurersReducer';\nimport pcDetailReducer from './pcDetailReducer';\nimport detailReducer from './detailReducer';\nimport dungeonReducer from './dungeonReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  days: daysReducer,\n  gameState: gameStateReducer,\n  storeState: storeReducer,\n  suppliers: suppliersReducer,\n  supplies: suppliesReducer,\n  profile: profileReducer,\n  app: appStateReducer,\n  mobileMenu: mobileMenuReducer,\n  adventurers: adventurersReducer,\n  pcMenu: pcDetailReducer,\n  detail: detailReducer,\n  dungeon: dungeonReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// This is a comment made to test the build pipeline to the backend.\n// and this should test the pipeline to heroku.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}