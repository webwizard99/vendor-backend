{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","actions/types.js","actions/index.js","utilities/formTypes.js","Components/PotionsList/PotionsList.jsx","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","Components/TownBehaviorList/TownBehaviorList.jsx","Components/DungeonBehaviorList/DungeonBehaviorList.jsx","Components/BehaviorList/BehaviorList.jsx","Components/AdventurerClassList/AdventurerClassList.jsx","Components/AdventurerList/AdventurerList.jsx","Components/NPCList/NPCList.jsx","Components/MonsterDropListList/MonsterDropListList.jsx","Components/MonsterBehaviorList/MonsterBehaviorList.jsx","Components/MonsterList/MonsterList.jsx","Components/DungeonTileList/DungeonTileList.jsx","Components/DungeonList/DungeonList.jsx","Containers/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","utilities/itemPostRequests.js","utilities/itemPutRequests.js","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","Components/DeleteOfferingButton/DeleteOfferingButton.jsx","Components/AddOfferingButton/AddOfferingButton.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Components/TownBehaviorDisplay/TownBehaviorDisplay.jsx","Components/TownBehaviorForm/TownBehaviorForm.jsx","Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay.jsx","Components/DungeonBehaviorForm/DungeonBehaviorForm.jsx","Components/AdventurerClassDisplay/AdventurerClassDisplay.jsx","Components/AdventurerClassForm/AdventurerClassForm.jsx","Components/AdventurerDisplay/AdventurerDisplay.jsx","Components/AdventurerForm/AdventurerForm.jsx","Components/MonsterDropListDisplay/MonsterDropListDisplay.jsx","utilities/breadcrumb.js","Components/MonsterDropListForm/MonsterDropListForm.jsx","Components/MonsterBehaviorDisplay/MonsterBehaviorDisplay.jsx","Components/MonsterBehaviorForm/MonsterBehaviorForm.jsx","utilities/boolean.js","Components/MonsterDisplay/MonsterDisplay.jsx","utilities/formComposer.js","Components/MonsterForm/MonsterForm.jsx","Components/DungeonTileDisplay/DungeonTileDisplay.jsx","Components/DungeonTileForm/DungeonTileForm.jsx","Containers/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/behaviorsReducer.js","reducers/adventurerClassReducer.js","reducers/adventurerReducer.js","reducers/dropListReducer.js","reducers/monsterBehaviorReducer.js","reducers/monsterReducer.js","reducers/breadcrumbReducer.js","reducers/dungeonTileReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","SET_DETAIL_FORM","SET_DIALOG","fetchUser","dispatch","a","axios","get","res","payload","data","fetchPotions","fetchWeapons","fetchArmor","fetchSuppliers","fetchTownBehaviors","fetchDungeonBehaviors","fetchAdventurerClasses","fetchAdventurers","loadAdventurerDetails","fetchMonsterDropLists","loadItems","fetchMonsterBehaviors","fetchMonsters","loadMonsterDetails","fetchDungeonTiles","potion","weapon","armor","supplier","town_behavior","dungeon_behavior","adventurer_class","adventurer","monster_drop_list","monster_behavior","monster","dungeon_tile","PotionsList","componentDidMount","handleNew","setRefresh","setDisplayForm","form","formTypes","edit","targetId","potions","newPotions","map","potionClass","id","item","name","detail","value","WeaponsList","weapons","newWeapons","weaponClass","ArmorList","newArmor","armorClass","ItemList","SupplierList","suppliers","newSuppliers","supplierClass","TownBehaviorList","townBehaviors","newTownBehaviors","townBehavior","townBehaviorClass","behaviors","DungeonBehaviorList","dungeonBehaviors","newDungeonBehaviors","dungeonBehavior","dungeonBehaviorClass","BehaviorList","AdventurerClassList","adventurerClasses","newAdventurerClasses","adventurerClass","adventurerClassClass","classes","AdventurerList","adventurers","newAdventurers","NPCList","MonsterDropListList","monsterDropLists","newMonsterDropLists","monsterDropList","monsterDropListClass","dropLists","MonsterBehaviorList","monsterBehaviors","newMonsterBehaviors","monsterBehavior","monsterBehaviorClass","MonsterList","monsters","newMonsters","monsterClass","DungeonTileLIst","dungeonTiles","newDungeonTiles","dungeonTile","dungeonTileClass","tiles","DungeonList","ObjectListColumn","shouldComponentUpdate","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","handleCloseButton","CloseFormButton","itemPostRequests","makeRequest","postRoute","postBody","subBody","JSON","stringify","postRes","fetch","method","headers","body","itemPutRequests","putRoute","putBody","putRes","PotionForm","addPotion","handleSubmit","potionType","e","preventDefault","displayId","itemPutRequest","itemPostRequest","FormData","target","next","then","newHeading","newName","newValue","newDetails","newRarity","newPotionType","newLevel","newId","newItemId","refresh","thisPotion","find","details","rarity","level","itemId","action","onSubmit","htmlFor","required","placeholder","maxLength","defaultValue","min","max","getPotionOptions","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","deleteType","deleteId","response","json","deleteRes","makeRequestSupplier","route","offeringIds","makeRequestDropList","monsterDroplistId","dropIds","PotionDisplay","deletePotion","window","dialogRef","setDialog","text","WeaponForm","addWeapon","newDamage","thisWeapon","damage","WeaponDisplay","deleteWeapon","ArmorForm","addArmor","thisArmor","ArmorDisplay","deleteArmor","DeleteOfferingButton","AddOfferingButton","itemTypes","SupplierForm","initialized","initializeFields","getOfferingOptions","handleChange","addFormOffering","deleteOffering","updateSupplier","offerings","thisSupplier","initialState","presentIds","length","offering","markup","push","existingIdCount","deletedIds","newOfferingIndex","newOfferingKeys","Object","values","itemType","updatedState","existing","offeringId","newDeleted","newCount","offeringIndex","indexOf","splice","stateUpdate","getAttribute","onChange","deletedMap","includes","index","newOfferingsCount","SupplierDisplay","deleteSupplier","forEach","refOffering","TownBehaviorDisplay","deleteTownBehavior","thisTownBehavior","buy_potion","sell_potion","upgrade_potion","buy_weapon","sell_weapon","upgrade_weapon","buy_armor","sell_armor","upgrade_armor","wealth","enter_dungeon","use_tavern","retire","emigrate","garrison_wall","TownBehaviorForm","addTownBehavior","putRequest","postRequest","newBuyPotion","newSellPotion","newUpgradePotion","newBuyWeapon","newSellWeapon","newUpgradeWeapon","newBuyArmor","newSellArmor","newUpgradeArmor","newWealth","newEnterDungeon","newUseTavern","newRetire","newEmigrate","newGarisonWall","step","DungeonBehaviorDisplay","deleteDungeonBehavior","thisDungeonBehavior","advance_tile","conserve_health","use_potion","rest","return_to_town","check_for_traps","disarm_trap","avoid_trap","search_for_treasure","fight_monster","flee_encounter","defend","attack","check_monster_weakness","explore_level","advance_next_level","fill_inventory","upgrade_inventory","fight_boss_monster","prefer_weaker_monster","try_for_level","DungeonBehaviorForm","addDungeonBehavior","newAdvanceTile","newConserveHealth","newUsePotion","newRest","newReturnToTown","newCheckForTraps","newDisarmTrap","newAvoidTrap","newSearchForTreasure","newFightMonster","newFleeEncounter","newDefend","newAttack","newCheckMonsterWeakness","newExploreLevel","newAdvanceNextLevel","newFillInventory","newUpgradeInventory","newFightBossMonster","newPreferWeakerMonster","newTryForLevel","AdventurerClassDisplay","deleteAdventurerClass","thisAdventurerClass","bargaining","perception","artifacts","traps","agility","tactics","martial_weapons","anatomy","AdventurerClassForm","addAdventurerClass","newBargaining","newPerception","newArtifacts","newTraps","newAgility","newTactics","newMartialWeapons","newAnatomy","AdventurerDisplay","setInitialized","componentDidUpdate","deleteAdventurer","val","thisAdventurer","strength","speed","cunning","intelligence","constitution","dungeonBehaviorId","townBehaviorId","adventurerClassId","dungeonBehaviorName","townBehaviorName","adventurerClassname","AdventurerForm","getDungeonBehaviorOptions","getTownBehaviorOptions","getAdventurerClassOptions","addAdventurer","dungeonOption","townOption","classOption","newDungeonBehavior","newTownBehavior","newAdventurerClass","newStrength","newSpeed","newCunning","newIntelligence","newConstitution","dungeoBehaviorId","undefined","MonsterDropListDisplay","getDrops","deleteDropList","drops","drop","itemName","drop_type","dropChance","thisDropList","dropList","thisName","thisGoldMin","gold_min","thisGoldMax","gold_max","thisGoldChance","gold_chance","thisDrops","breadcrumb","Breadcrumb","displayPayload","formDataPayload","formData","formDataName","prototype","dispatchDisplay","store","dispatchFormdata","dispatchBreadcrumb","breadcrumbPayload","clearBreadcrumbState","setNewBreadcrumb","clearBreadcrumb","revertToBreadcrumb","clearBreadcrumbForm","MonsterDropListForm","getDropListOptions","addFormDrop","deleteDrop","updateMonsterDropList","breadcrumbPass","breadcrumbActive","breadcrumbFormData","newGoldMin","newGoldMax","newGoldChance","newDrops","breadcrumbName","newDropIndex","newDropKeys","propName","allItemsOfType","label","dropId","dropIndex","putRequests","postRequests","newMonsterDroplistId","MonsterBehaviorDisplay","deleteMonsterBehavior","thisMonsterBehavior","confront_weakened_adventurer","special_move","heal","block_flee","migrate","MonsterBehaviorForm","addMonsterBehavior","newConfrontWeakenedAdventurer","newSpecialMove","newHeal","newBlockFlee","newMigrate","boolean","displayBooloean","boolVal","MonsterDisplay","deleteMonster","thisMonster","boss","hp","defense","stealth","initiative","special","dropListId","monsterBehaviorId","monsterDropListName","monsterBehaviorName","formComposer","getObjectFromForm","formBody","formToObject","MonsterForm","intialized","getMonsterBehaviorOptions","getMonsterDropListOptions","addMonster","handleBreadcrumb","handleDropListChange","initializeMonsterDropListId","thisMonsterDropList","breadcrumbFormdata","breadcrumbFormdataName","monsterForm","monsterDropListId","Number","parseInt","monsterOption","resDropList","document","querySelector","currentEdit","currentId","newMonsterDropList","newMonsterBehavior","newBoss","newHp","newDefense","newStealth","newInitiative","newSpecial","checked","DungeonTileDisplay","deleteDungeonTile","thisDungeonTile","stairs_up","treasure","encounter","trap","DungeonTileForm","addDungeonTile","newStairsUp","newTreasure","newEncounter","newTrap","DetailView","formTable","getDetail","loadFormTable","tempTable","display","formType","displayType","DialogBox","handleNo","clicked","classList","contains","ref","yesCallback","noCallback","App","getDialog","combineReducers","newTargetId","newEdit","newForm","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.591981b1.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_DETAIL_REFRESH = \"SET_DETAIL_REFRESH\";\nexport const SET_TOWN_BEHAVIORS = \"SET_TOWN_BEHAVIORS\";\nexport const SET_DUNGEON_BEHAVIORS = \"SET_DUNGEON_BEHAVIORS\";\nexport const SET_ADVENTURER_CLASSES = \"SET_ADVENTURER_CLASSES\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_MONSTER_DROP_LISTS = \"SET_MONSTER_DROP_LISTS\";\nexport const SET_MONSTER_BEHAVIORS = \"SET_MONSTER_BEHAVIORS\";\nexport const SET_MONSTERS = 'SET_MONSTERS';\nexport const SET_BREADCRUMB = 'SET_BREADCRUMB';\nexport const SET_BREADCRUMB_FORMDATA = 'SET_BREADCRUMB_FORMDATA';\nexport const SET_DUNGEON_TILES = \"SET_DUNGEON_TILES\";","import axios from 'axios';\nimport { FETCH_USER,\n  SET_POTIONS, \n  SET_WEAPONS, \n  SET_ARMOR, \n  SET_SUPPLIERS,\n  SET_TOWN_BEHAVIORS,\n  SET_DUNGEON_BEHAVIORS,\n  SET_ADVENTURER_CLASSES,\n  SET_ADVENTURERS,\n  SET_MONSTER_DROP_LISTS,\n  SET_MONSTER_BEHAVIORS,\n  SET_MONSTERS,\n  SET_DUNGEON_TILES } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}\n\nexport const fetchTownBehaviors = () => async dispatch => {\n  const res = await axios.get('/town_behaviors');\n  dispatch({ type: SET_TOWN_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchDungeonBehaviors = () => async dispatch => {\n  const res = await axios.get('/dungeon_behaviors');\n  dispatch({ type: SET_DUNGEON_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchAdventurerClasses = () => async dispatch => {\n  const res = await axios.get('/adventurer_classes');\n  dispatch({ type: SET_ADVENTURER_CLASSES, payload: res.data });\n}\n\nexport const fetchAdventurers = () => async dispatch => {\n  const res = await axios.get('/adventurers');\n  dispatch({ type: SET_ADVENTURERS, payload: res.data });\n}\n\nexport const loadAdventurerDetails = () => async dispatch => {\n  dispatch(fetchTownBehaviors());\n  dispatch(fetchDungeonBehaviors());\n  dispatch(fetchAdventurerClasses());\n}\n\nexport const fetchMonsterDropLists = () => async dispatch => {\n  const res = await axios.get('/monster_drop_lists');\n  dispatch({ type: SET_MONSTER_DROP_LISTS, payload: res.data });\n}\n\nexport const loadItems = () => async dispatch => {\n  dispatch(fetchPotions());\n  dispatch(fetchWeapons());\n  dispatch(fetchArmor());\n}\n\nexport const fetchMonsterBehaviors = () => async dispatch => {\n  const res = await axios.get('/monster_behaviors');\n  dispatch({ type: SET_MONSTER_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchMonsters = () => async dispatch => {\n  const res = await axios.get('/monsters');\n  dispatch({ type: SET_MONSTERS, payload: res.data });\n}\n\nexport const loadMonsterDetails = () => async dispatch => {\n  dispatch(fetchMonsterBehaviors());\n  dispatch(fetchMonsterDropLists());\n}\n\nexport const fetchDungeonTiles = () => async dispatch => {\n  const res = await axios.get('/dungeon_tiles');\n  dispatch({ type: SET_DUNGEON_TILES, payload: res.data });\n}","export default {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor',\n  supplier: 'supplier',\n  town_behavior: 'town_behavior',\n  dungeon_behavior: 'dungeon_behavior',\n  adventurer_class: 'adventurer_class',\n  adventurer: 'adventurer',\n  monster_drop_list: 'monster_drop_list',\n  monster_behavior: 'monster_behavior',\n  monster: 'monster',\n  dungeon_tile: 'dungeon_tile'\n}","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.potion, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === formTypes.potion && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: formTypes.potion, edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.weapon, edit: false, targetId: null });\n  }\n  \n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === formTypes.weapon && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.weapon, edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchArmor();\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.armor, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === formTypes.armor && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.armor, edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchSuppliers();\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.supplier, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\"\n        onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === formTypes.supplier && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.supplier, edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import React from 'react';\nimport './TownBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass TownBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.props.fetchTownBehaviors();\n  }\n\n  getTitle() {\n    return 'Town Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.town_behavior, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewTownBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.townBehaviors) {\n      return '';\n    } else {\n      const newTownBehaviors = this.props.townBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newTownBehaviors.map(townBehavior => {\n            let townBehaviorClass = \"ListDetail\";\n            if (this.props.form === formTypes.town_behavior && this.props.targetId === townBehavior.id) {\n              townBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={townBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.town_behavior, edit: false, targetId: townBehavior.id })}\n                >{townBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorList);","import React from 'react';\nimport './DungeonBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass DungeonBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDungeonBehaviors();\n  }\n\n  getTitle() {\n    return 'Dungeon Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewDungeonBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.dungeonBehaviors) {\n      return '';\n    } else {\n      const newDungeonBehaviors = this.props.dungeonBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newDungeonBehaviors.map(dungeonBehavior => {\n            let dungeonBehaviorClass = \"ListDetail\";\n            if (this.props.form === formTypes.dungeon_behavior && dungeonBehavior.id === this.props.targetId) {\n              dungeonBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={dungeonBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: false, targetId: dungeonBehavior.id })}\n                >{dungeonBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorList);","import React from 'react';\nimport './BehaviorList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport TownBehaviorList from '../TownBehaviorList/TownBehaviorList';\nimport DungeonBehaviorList from '../DungeonBehaviorList/DungeonBehaviorList';\n\nclass BehaviorList extends ExpandableList {\n  getTitle() {\n    return 'Behaviors';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <TownBehaviorList />\n        <DungeonBehaviorList />\n      </div>\n    )\n  }\n}\n\nexport default BehaviorList;","import React from 'react';\nimport './AdventurerClassList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utitlity imports\nimport formTypes from '../../utilities/formTypes';\n\nclass AdventurerClassList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurerClasses();\n  }\n  \n  getTitle() {\n    return 'Classes';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerClassButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurerClasses) {\n      return '';\n    } else {\n      const newAdventurerClasses = this.props.adventurerClasses;\n      return (\n        <div className=\"detailList\">\n          {newAdventurerClasses.map(adventurerClass => {\n            let adventurerClassClass = \"ListDetail\";\n            if (this.props.form === formTypes.adventurer_class && this.props.targetId === adventurerClass.id) {\n              adventurerClassClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClassClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: false, targetId: adventurerClass.id })}\n                >{adventurerClass.name}</span>\n              </p>\n            );\n          })}\n        </div>\n      )\n    }\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassList);","import React from 'react';\nimport './AdventurerList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\nimport AdventurerClassList from '../AdventurerClassList/AdventurerClassList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass AdventurerList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurers();\n  }\n  \n  getTitle() {\n    return 'Adventurers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.adventurer, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurers) {\n      return (\n        <div className=\"detailList\">\n          <AdventurerClassList />\n        </div>\n      )\n    } else {\n      const newAdventurers = this.props.adventurers;\n      return (\n        <div className=\"detailList\">\n          { newAdventurers.map(adventurer => {\n            let adventurerClass = \"ListDetail\";\n            if (this.props.form === formTypes.adventurer && this.props.targetId === adventurer.id) {\n              adventurerClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer, edit: false, targetId: adventurer.id })}\n                  >{adventurer.name}</span>\n              </p>\n            )\n          })}\n          <AdventurerClassList />\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerList);","import React from 'react';\nimport './NPCList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport BehaviorList from '../BehaviorList/BehaviorList';\nimport AdventurerList from '../AdventurerList/AdventurerList';\n\nclass NPCList extends ExpandableList {\n  getTitle() {\n    return 'NPCs';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <BehaviorList />\n        <AdventurerList />\n      </div>\n    )\n  }\n}\n\nexport default NPCList;","import React from 'react';\nimport './MonsterDropListList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterDropListList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterDropLists();\n  }\n  \n  getTitle() {\n    return 'Monster Drop Lists';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterDropListButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterDropLists) {\n      return '';\n    }\n    const newMonsterDropLists = this.props.monsterDropLists;\n    return (\n      <div className=\"detailList\">\n        { newMonsterDropLists.map(monsterDropList => {\n          let monsterDropListClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster_drop_list && this.props.targetId === monsterDropList.id) {\n            monsterDropListClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterDropListClass}\n              onClick={() => this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: monsterDropList.id })}\n              >{monsterDropList.monster_drop_list.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListList);","import React from 'react';\nimport './MonsterBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n    this.displayContents = this.displayContents.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterBehaviors();\n  }\n\n  getTitle() {\n    return 'Monster Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterBehaviors) {\n      return '';\n    }\n    const newMonsterBehaviors = this.props.monsterBehaviors;\n    return (\n      <div className=\"detailList\">\n        {newMonsterBehaviors.map(monsterBehavior => {\n          let monsterBehaviorClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster_behavior && monsterBehavior.id === this.props.targetId) {\n            monsterBehaviorClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterBehaviorClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: false, targetId: monsterBehavior.id })}\n              >{monsterBehavior.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorList);","import React from 'react';\nimport './MonsterList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\nimport MonsterDropListList from '../MonsterDropListList/MonsterDropListList';\nimport MonsterBehaviorList from '../MonsterBehaviorList/MonsterBehaviorList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsters } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsters();\n  }\n  \n  getTitle() {\n    return 'Monsters';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    );\n  }\n\n  displayContents() {\n    if (!this.props.monsters) {\n      return (\n        <div className=\"detailList\">\n          <MonsterDropListList />\n          <MonsterBehaviorList />\n        </div>\n      )\n    }\n    const newMonsters = this.props.monsters;\n    return (\n      <div className=\"detailList\">\n        { newMonsters.map(monster => {\n          let monsterClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster && this.props.targetId === monster.id) {\n            monsterClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.monster, edit: false, targetId: monster.id })}\n                >{monster.name}\n                \n                </span>\n            </p>\n          )\n        })}\n        <MonsterDropListList />\n        <MonsterBehaviorList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsters: state.monsters.monsters,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsters: () => dispatch(fetchMonsters()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterList);","import React from 'react';\nimport './DungeonTileList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonTiles } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass DungeonTileLIst extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n    this.displayContents = this.displayContents.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDungeonTiles();\n  }\n\n  getTitle() {\n    return 'Dungeon Tiles';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.dungeon_tile, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewDungeonTileButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.dungeonTiles) {\n      return '';\n    }\n    const newDungeonTiles = this.props.dungeonTiles;\n    return (\n      <div className=\"detailList\">\n        {newDungeonTiles.map(dungeonTile => {\n          let dungeonTileClass = \"ListDetail\";\n          if (this.props.form === formTypes.dungeon_tile && dungeonTile.id === this.props.targetId) {\n            dungeonTileClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={dungeonTileClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_tile, edit: false, targetId: dungeonTile.id })}\n                >{dungeonTile.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonTiles: state.dungeonTiles.tiles,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonTiles: () => dispatch(fetchDungeonTiles()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonTileLIst);","import React from 'react';\nimport './DungeonList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport DungeonTileList from '../DungeonTileList/DungeonTileList';\n\nclass DungeonList extends ExpandableList {\n  getTitle() {\n    return 'Dungeon';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <DungeonTileList />\n      </div>\n    )\n  }\n}\n\nexport default DungeonList;","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../../Components/ItemList/ItemList';\nimport SupplierList from '../../Components/SupplierList/SupplierList';\nimport NPCList from '../../Components/NPCList/NPCList';\nimport MonsterList from '../../Components/MonsterList/MonsterList';\nimport DungeonList from '../../Components/DungeonList/DungeonList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n        <NPCList />\n        <MonsterList />\n        <DungeonList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","const itemPostRequests = (function() {\n  return {\n    makeRequest: async function(postRoute, postBody) {\n      let subBody = {};\n      for ( let [ key, value ] of postBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const postRes = fetch(`/${postRoute}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return postRes;\n    }\n  }\n}());\n\nexport default itemPostRequests;","const itemPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default itemPutRequests;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass PotionForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addPotion = this.addPotion.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.potion, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addPotion(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('potion', data);\n    } else {\n      yield itemPostRequest.makeRequest('potion', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target)\n    let addPotion = this.addPotion(data);\n    addPotion.next().value.then(() => {\n      this.props.fetchPotions();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.potion, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n    \n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newPotionType = '';\n    let newLevel = '';\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit && !this.props.refresh) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" required name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" required name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" required name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" required name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestSupplier: async function(payload) {\n      const {\n        route, id, offeringIds\n      } = payload;\n\n      let data = {\n        id: id,\n        offeringIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestDropList: async function(payload) {\n      const {\n        route, id, monsterDroplistId, dropIds\n      } = payload;\n\n      let data = {\n        id: id,\n        monsterDroplistId: monsterDroplistId,\n        dropIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n    \n    this.deletePotion = this.deletePotion.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deletePotion() {\n    yield deleteRequests.makeRequest('potion', this.props.displayId);\n  }\n\n  handleYes() {\n    let deletePotion = this.deletePotion();\n    deletePotion.next().value.then(() => {\n      this.props.fetchPotions();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: formTypes.potion, edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons} from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass WeaponForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addWeapon = this.addWeapon.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.weapon, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addWeapon(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('weapon', data);\n    } else {\n      yield itemPostRequest.makeRequest('weapon', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let addWeapon = this.addWeapon(data);\n    addWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.weapon, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" required defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" required defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" required name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteWeapon = this.deleteWeapon.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteWeapon() {\n    yield deleteRequests.makeRequest('weapon', this.props.displayId);\n  }\n\n  handleYes() {\n    let deleteWeapon = this.deleteWeapon();\n    deleteWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.weapon, edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass ArmorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addArmor = this.addArmor.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.armor, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addArmor(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('armor', data);\n    } else {\n      yield itemPostRequest.makeRequest('armor', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addArmor = this.addArmor(data);\n    this.addArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.armor, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          onSubmit={this.handleSubmit}\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteArmor = this.deleteArmor.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteArmor() {\n    yield deleteRequests.makeRequest('armor', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteArmor = this.deleteArmor();\n    deleteArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n    \n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.armor, edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","import React from 'react';\nimport './DeleteOfferingButton.css';\n\nclass DeleteOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteOfferingButton\">\n        <span className=\"offeringButtonIcon\">X</span>\n      </div>\n    )\n  }\n}\n\nexport default DeleteOfferingButton;","import React from 'react';\nimport './AddOfferingButton.css';\n\nclass AddOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddOfferingButton\">\n        <span className=\"addOfferingButtonIcon\">+</span>\n      </div>\n    )\n  }\n}\n\nexport default AddOfferingButton;","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addFormOffering = this.addFormOffering.bind(this);\n    this.deleteOffering = this.deleteOffering.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateSupplier = this.updateSupplier.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.suppliers) return;\n    let newName = '';\n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      newName = thisSupplier.name;\n      offerings = thisSupplier.offerings;\n    }\n   \n\n    let initialState = {};\n\n    initialState['name'] = newName;\n    let presentIds = [];\n    if (offerings.length > 0) {\n      for (const offering of offerings) {\n        initialState[`offering-${offering.id}-type`] = offering.type;\n        initialState[`offering-${offering.id}-markup`] = offering.markup;\n        presentIds.push(offering.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = offerings.length;\n    initialState.deletedIds = [];\n    initialState.newOfferingIndex = 0;\n    initialState.newOfferingKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.supplier, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  addFormOffering() {\n    // limit offerings to 5\n    const totalCount = this.state.newOfferingKeys.length + this.state.existingIdCount;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newOfferingIndex = this.state.newOfferingIndex;\n    updatedState[`new-offering-${newOfferingIndex}-type`] = 1;\n    updatedState[`new-offering-${newOfferingIndex}-markup`] = 100;\n    let newOfferingKeys = this.state.newOfferingKeys;\n    newOfferingKeys.push(newOfferingIndex);\n    updatedState.newOfferingKeys = newOfferingKeys;\n    newOfferingIndex += 1;\n    updatedState.newOfferingIndex = newOfferingIndex;\n    this.setState(updatedState);\n    \n  }\n\n  deleteOffering(payload) {\n    const { existing, offeringId } = payload\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(offeringId);\n      newCount -= 1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newOfferingKeys = this.state.newOfferingKeys;\n      const offeringIndex = newOfferingKeys.indexOf(offeringId);\n      if (offeringIndex < 0 || (offeringIndex !== 0 && !offeringIndex)) return;\n      newOfferingKeys.splice(offeringIndex, 1);\n      updatedState.newOfferingKeys = newOfferingKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value\n    this.setState(stateUpdate);\n  }\n\n  *updateSupplier(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('supplier', data);\n    } else {\n      yield itemPostRequest.makeRequest('supplier', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateSupplier = this.updateSupplier(data);\n    updateSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.supplier, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n    \n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      offerings = thisSupplier.offerings;\n    }\n    \n    let newHeading = 'New Supplier';\n    if (this.props.edit) {\n      newHeading = this.state.name;\n    }\n    let newId = null;\n    if (this.props.edit) {\n      newId = this.props.displayId;\n    }\n    const newOfferingKeys = this.state.newOfferingKeys;\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/supplier'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"supplier name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group form-subgroup\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.length <= 0 ? '' : offerings.map(offering => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(offering.id)) {\n                  return ''\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"offering-select\" \n                        name={`offering-${offering.id}-type`} \n                        id={`offering-${offering.id}-type`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-type`]}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\" \n                        type=\"number\" \n                        name={`offering-${offering.id}-markup`} \n                        id={`offering-${offering.id}-markup`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-markup`]}>\n                      </input>\n                      <span className=\"offeringDelete\"\n                        onClick={() => this.deleteOffering({ existing: true, offeringId: offering.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n            {newOfferingKeys.length <= 0 ? '' : newOfferingKeys.map(index => {\n              return (\n                <div className=\"form-inner-span\">\n                  <div className=\"form-half-span form-left-half\">\n                    <select className=\"offering-select\"\n                      name={`new-offering-${index}-type`}\n                      id={`new-offering-${index}-type`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-type`]}>\n                        {this.getOfferingOptions()}\n                    </select>\n                  </div>\n                  <div className=\"form-half-span form-right-half\">\n                    <input className=\"input-number\"\n                      type=\"number\"\n                      name={`new-offering-${index}-markup`}\n                      id={`new-offering-${index}-markup`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-markup`]}>\n                    </input>\n                    <span className=\"offeringDelete\"\n                      onClick={() => this.deleteOffering({ existing: false, offeringId: index })}\n                    >\n                      <DeleteOfferingButton />\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n            <div className=\"offeringAdd form-full-span form-center-content\"\n              onClick={this.addFormOffering}\n            >\n              <AddOfferingButton />\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n          <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n          <input type=\"hidden\" name=\"newIndexes\" value={this.state.newOfferingKeys} />\n          <input type=\"hidden\" name=\"newOfferingsCount\" value={this.state.newOfferingsCount} />\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <div className=\"supplier-submit-container\">\n          <input type=\"submit\" value={this.props.edit ? 'Update Supplier' : 'Create Supplier' } className=\"button create-button\"></input>\n          </div>          \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass SupplierDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteSupplier = this.deleteSupplier.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteSupplierButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Supplier and Offerings from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteSupplier(payload) {\n    yield deleteRequests.makeRequestSupplier(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'supplier';\n    payload.id = this.props.displayId;\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const offerings = thisSupplier.offerings;\n    let offeringIds = [];\n    if (offerings.length > 0) {\n      offerings.forEach(refOffering => {\n        offeringIds.push(refOffering.id);\n      });\n    }\n    payload.offeringIds = offeringIds;\n\n    // invoke delete request\n    let deleteSupplier = this.deleteSupplier(payload);\n    deleteSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.supplier, edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display subgroup-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './TownBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass TownBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteTownBehavior = this.deleteTownBehavior.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteTownBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Town Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteTownBehavior() {\n    yield deleteRequests.makeRequest('town_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteTownBehavior = this.deleteTownBehavior();\n    deleteTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n    const { name,\n      buy_potion,\n      sell_potion,\n      upgrade_potion,\n      buy_weapon,\n      sell_weapon,\n      upgrade_weapon,\n      buy_armor,\n      sell_armor,\n      upgrade_armor,\n      wealth,\n      enter_dungeon,\n      use_tavern,\n      retire,\n      emigrate,\n      garrison_wall\n    } = thisTownBehavior;\n\n    return (\n      <div className=\"TownBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"TownBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.town_behavior, edit: true, targetId: thisTownBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy potion</span>\n            <span className=\"display-text\">{buy_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell potion</span>\n            <span className=\"display-text\">{sell_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade potion</span>\n            <span className=\"display-text\">{upgrade_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy weapon</span>\n            <span className=\"display-text\">{buy_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell weapon</span>\n            <span className=\"display-text\">{sell_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade weapon</span>\n            <span className=\"display-text\">{upgrade_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy armor</span>\n            <span className=\"display-text\">{buy_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell armor</span>\n            <span className=\"display-text\">{sell_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade armor</span>\n            <span className=\"display-text\">{upgrade_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">wealth</span>\n            <span className=\"display-text\">{wealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">enter dungeon</span>\n            <span className=\"display-text\">{enter_dungeon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use tavern</span>\n            <span className=\"display-text\">{use_tavern}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">retire</span>\n            <span className=\"display-text\">{retire}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">emigrate</span>\n            <span className=\"display-text\">{emigrate}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">garrison wall</span>\n            <span className=\"display-text\">{garrison_wall}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorDisplay);","import React from 'react';\nimport './TownBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass TownBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addTownBehavior = this.addTownBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.town_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addTownBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('town_behavior', data);\n    } else {\n      yield postRequest.makeRequest('town_behavior', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addTownBehavior = this.addTownBehavior(data);\n    this.addTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.town_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false })\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Town Behavior';\n    let newName = '';\n    let newId;\n    let newBuyPotion = 0;\n    let newSellPotion = 0;\n    let newUpgradePotion = 0;\n    let newBuyWeapon = 0;\n    let newSellWeapon = 0;\n    let newUpgradeWeapon = 0;\n    let newBuyArmor = 0;\n    let newSellArmor = 0;\n    let newUpgradeArmor = 0;\n    let newWealth = 0;\n    let newEnterDungeon = 0;\n    let newUseTavern = 0;\n    let newRetire = 0;\n    let newEmigrate = 0;\n    let newGarisonWall = 0;\n\n    if (this.props.edit) {\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n      newName = thisTownBehavior.name;\n      newHeading = newName;\n      newId = thisTownBehavior.id;\n      newBuyPotion = thisTownBehavior.buy_potion;\n      newSellPotion = thisTownBehavior.sell_potion;\n      newUpgradePotion = thisTownBehavior.upgrade_potion;\n      newBuyWeapon = thisTownBehavior.buy_weapon;\n      newSellWeapon= thisTownBehavior.sell_weapon;\n      newUpgradeWeapon = thisTownBehavior.upgrade_weapon;\n      newBuyArmor = thisTownBehavior.buy_armor;\n      newSellArmor = thisTownBehavior.sell_armor;\n      newUpgradeArmor = thisTownBehavior.upgrade_armor;\n      newWealth = thisTownBehavior.wealth;\n      newEnterDungeon = thisTownBehavior.enter_dungeon;\n      newUseTavern = thisTownBehavior.use_tavern;\n      newRetire = thisTownBehavior.retire;\n      newEmigrate = thisTownBehavior.emigrate;\n      newGarisonWall = thisTownBehavior.garrison_wall;\n    }\n    return (\n      <div className=\"TownBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Town Behavior: {newHeading}</h2>\n          <div className=\"close-town-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n      <form action={'/town_behaviors'}\n        className=\"input-fields-area\"\n        id=\"TownBehaviorPostForm\"\n        method=\"POST\"\n        onSubmit={this.handleSubmit}>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n              maxLength=\"26\" required defaultValue={newName}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_potion\">buy potion</label>\n            <input type=\"number\" name=\"buy_potion\" id=\"buy_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_potion\">sell potion</label>\n            <input type=\"number\" name=\"sell_potion\" id=\"sell_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_potion\">upgrade potion</label>\n            <input type=\"number\" name=\"upgrade_potion\" id=\"upgrade_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradePotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_weapon\">buy weapon</label>\n            <input type=\"number\" name=\"buy_weapon\" id=\"buy_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_weapon\">sell weapon</label>\n            <input type=\"number\" name=\"sell_weapon\" id=\"sell_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_weapon\">upgrade weapon</label>\n            <input type=\"number\" name=\"upgrade_weapon\" id=\"upgrade_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_armor\">buy armor</label>\n            <input type=\"number\" name=\"buy_armor\" id=\"buy_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_armor\">sell armor</label>\n            <input type=\"number\" name=\"sell_armor\" id=\"sell_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_armor\">upgrade armor</label>\n            <input type=\"number\" name=\"upgrade_armor\" id=\"upgrade_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"wealth\">wealth</label>\n            <input type=\"number\" name=\"wealth\" id=\"wealth\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newWealth}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"enter_dungeon\">enter dungeon</label>\n            <input type=\"number\" name=\"enter_dungeon\" id=\"enter_dungeon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEnterDungeon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"use_tavern\">use tavern</label>\n            <input type=\"number\" name=\"use_tavern\" id=\"use_tavern\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUseTavern}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"retire\">retire</label>\n            <input type=\"number\" name=\"retire\" id=\"retire\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRetire}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"emigrate\">emigrate</label>\n            <input type=\"number\" name=\"emigrate\" id=\"emigrate\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEmigrate}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"garrison_wall\">garrison wall</label>\n            <input type=\"number\" name=\"garrison_wall\" id=\"garrison_wall\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newGarisonWall}></input>\n          </div>\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <input type=\"submit\" value={this.props.edit ? 'Update Town Behavior' : 'Create Town Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorForm);","import React from 'react';\nimport './DungeonBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass DungeonBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteDungeonBehavior = this.deleteDungeonBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteDungeonBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Dungeon Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteDungeonBehavior() {\n    yield deleteRequests.makeRequest('dungeon_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteDungeonBehavior = this.deleteDungeonBehavior();\n    deleteDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n    const {\n      name,\n      advance_tile,\n      conserve_health,\n      use_potion,\n      rest,\n      return_to_town,\n      check_for_traps,\n      disarm_trap,\n      avoid_trap,\n      search_for_treasure,\n      fight_monster,\n      flee_encounter,\n      defend,\n      attack,\n      check_monster_weakness,\n      explore_level,\n      advance_next_level,\n      fill_inventory,\n      upgrade_inventory,\n      fight_boss_monster,\n      prefer_weaker_monster,\n      try_for_level\n    } = thisDungeonBehavior;\n\n    return (\n      <div className=\"DungeonBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"DungeonBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: true, targetId: thisDungeonBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance tile</span>\n            <span className=\"display-text\">{advance_tile}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">conserve health</span>\n            <span className=\"display-text\">{conserve_health}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use potion</span>\n            <span className=\"display-text\">{use_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">rest</span>\n            <span className=\"display-text\">{rest}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">return to town</span>\n            <span className=\"display-text\">{return_to_town}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check for traps</span>\n            <span className=\"display-text\">{check_for_traps}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">disarm trap</span>\n            <span className=\"display-text\">{disarm_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">avoid trap</span>\n            <span className=\"display-text\">{avoid_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">search for treasure</span>\n            <span className=\"display-text\">{search_for_treasure}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight monster</span>\n            <span className=\"display-text\">{fight_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">flee encounter</span>\n            <span className=\"display-text\">{flee_encounter}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defend</span>\n            <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">attack</span>\n            <span className=\"display-text\">{attack}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check monster weakness</span>\n            <span className=\"display-text\">{check_monster_weakness}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">explore level</span>\n            <span className=\"display-text\">{explore_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance next level</span>\n            <span className=\"display-text\">{advance_next_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fill inventory</span>\n            <span className=\"display-text\">{fill_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade inventory</span>\n            <span className=\"display-text\">{upgrade_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight boss monster</span>\n            <span className=\"display-text\">{fight_boss_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">prefer weaker monster</span>\n            <span className=\"display-text\">{prefer_weaker_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">try for level</span>\n            <span className=\"display-text\">{try_for_level}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorDisplay);","import React from 'react';\nimport './DungeonBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass DungeonBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addDungeonBehavior = this.addDungeonBehavior.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.dungeon_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addDungeonBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('dungeon_behavior', data);\n    } else {\n      yield postRequest.makeRequest('dungeon_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addDungeonBehavior = this.addDungeonBehavior(data);\n    this.addDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.dungeon_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading ='New Dungeon Behavior';\n    let newName = '';\n    let newId;\n    let newAdvanceTile = 0;\n    let newConserveHealth = 0;\n    let newUsePotion = 0;\n    let newRest = 0;\n    let newReturnToTown = 0;\n    let newCheckForTraps = 0;\n    let newDisarmTrap = 0;\n    let newAvoidTrap = 0;\n    let newSearchForTreasure = 0;\n    let newFightMonster = 0;\n    let newFleeEncounter = 0;\n    let newDefend = 0;\n    let newAttack = 0;\n    let newCheckMonsterWeakness = 0;\n    let newExploreLevel = 0;\n    let newAdvanceNextLevel = 0;\n    let newFillInventory = 0;\n    let newUpgradeInventory = 0;\n    let newFightBossMonster = 0;\n    let newPreferWeakerMonster = 0;\n    let newTryForLevel = 0;\n\n    if (this.props.edit) {\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n      newName = thisDungeonBehavior.name;\n      newHeading = newName;\n      newId = thisDungeonBehavior.id;\n      newAdvanceTile = thisDungeonBehavior.advance_tile;\n      newConserveHealth = thisDungeonBehavior.conserve_health;\n      newUsePotion = thisDungeonBehavior.use_potion;\n      newRest = thisDungeonBehavior.rest;\n      newReturnToTown = thisDungeonBehavior.return_to_town;\n      newCheckForTraps = thisDungeonBehavior.check_for_traps;\n      newDisarmTrap = thisDungeonBehavior.disarm_trap;\n      newAvoidTrap = thisDungeonBehavior.avoid_trap;\n      newSearchForTreasure = thisDungeonBehavior.search_for_treasure;\n      newFightMonster = thisDungeonBehavior.fight_monster;\n      newFleeEncounter = thisDungeonBehavior.flee_encounter;\n      newDefend = thisDungeonBehavior.defend;\n      newAttack = thisDungeonBehavior.attack;\n      newCheckMonsterWeakness = thisDungeonBehavior.check_monster_weakness;\n      newExploreLevel = thisDungeonBehavior.explore_level;\n      newAdvanceNextLevel = thisDungeonBehavior.advance_next_level;\n      newFillInventory = thisDungeonBehavior.fill_inventory;\n      newUpgradeInventory = thisDungeonBehavior.upgrade_inventory;\n      newFightBossMonster = thisDungeonBehavior.fight_boss_monster;\n      newPreferWeakerMonster = thisDungeonBehavior.prefer_weaker_monster;\n      newTryForLevel = thisDungeonBehavior.try_for_level;\n    }\n    return (\n      <div className=\"DungeonBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Dungeon Behavior: {newHeading}</h2>\n          <div className=\"close-dungeon-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        <form action={'/dungeon_behavior'}\n          className=\"input-fields-area\"\n          id=\"DungeonBehaviorPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_tile\">advance tile</label>\n              <input type=\"number\" name=\"advance_tile\" id=\"advance_tile\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceTile}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"conserve_health\">conserve health</label>\n              <input type=\"number\" name=\"conserve_health\" id=\"conserve_health\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConserveHealth}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"use_potion\">use potion</label>\n              <input type=\"number\" name=\"use_potion\" id=\"use_potion\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUsePotion}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rest\">rest</label>\n              <input type=\"number\" name=\"rest\" id=\"rest\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRest}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"return_to_town\">return to town</label>\n              <input type=\"number\" name=\"return_to_town\" id=\"return_to_town\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newReturnToTown}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_for_traps\">check for traps</label>\n              <input type=\"number\" name=\"check_for_traps\" id=\"check_for_traps\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckForTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"disarm_trap\">disarm trap</label>\n              <input type=\"number\" name=\"disarm_trap\" id=\"disarm_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDisarmTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"avoid_trap\">avoid trap</label>\n              <input type=\"number\" name=\"avoid_trap\" id=\"avoid_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAvoidTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"search_for_treasure\">search for treasure</label>\n              <input type=\"number\" name=\"search_for_treasure\" id=\"search_for_treasure\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSearchForTreasure}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_monster\">fight monster</label>\n              <input type=\"number\" name=\"fight_monster\" id=\"fight_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"flee_encounter\">flee encounter</label>\n              <input type=\"number\" name=\"flee_encounter\" id=\"flee_encounter\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFleeEncounter}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"attack\">attack</label>\n              <input type=\"number\" name=\"attack\" id=\"attack\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAttack}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_monster_weakness\">check monster weakness</label>\n              <input type=\"number\" name=\"check_monster_weakness\" id=\"check_monster_weakness\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckMonsterWeakness}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"explore_level\">explore level</label>\n              <input type=\"number\" name=\"explore_level\" id=\"explore_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newExploreLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_next_level\">advance next level</label>\n              <input type=\"number\" name=\"advance_next_level\" id=\"advance_next_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceNextLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fill_inventory\">fill inventory</label>\n              <input type=\"number\" name=\"fill_inventory\" id=\"fill_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFillInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"upgrade_inventory\">upgrade inventory</label>\n              <input type=\"number\" name=\"upgrade_inventory\" id=\"upgrade_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_boss_monster\">fight boss monster</label>\n              <input type=\"number\" name=\"fight_boss_monster\" id=\"fight_boss_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightBossMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"prefer_weaker_monster\">prefer weaker monster</label>\n              <input type=\"number\" name=\"prefer_weaker_monster\" id=\"prefer_weaker_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newPreferWeakerMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"try_for_level\">try for level</label>\n              <input type=\"number\" name=\"try_for_level\" id=\"try_for_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newTryForLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Dungeon Behavior' : 'Create Dungeon Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorForm);","import React from 'react';\nimport './AdventurerClassDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerClassDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteAdventurerClass = this.deleteAdventurerClass.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerClassButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer Class from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurerClass() {\n    yield deleteRequests.makeRequest('adventurer_class', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurerClass = this.deleteAdventurerClass();\n    deleteAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n    const {\n      name,\n      bargaining,\n      perception,\n      artifacts,\n      traps,\n      agility,\n      tactics,\n      martial_weapons,\n      armor,\n      anatomy\n    } = thisAdventurerClass;\n\n    return (\n      <div className=\"AdventurerClassDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerClassEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: true, targetId: thisAdventurerClass.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Bargaining</span>\n              <span className=\"display-text\">{bargaining}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Perception</span>\n              <span className=\"display-text\">{perception}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Artifacts</span>\n              <span className=\"display-text\">{artifacts}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Traps</span>\n              <span className=\"display-text\">{traps}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Agility</span>\n              <span className=\"display-text\">{agility}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Tactics</span>\n              <span className=\"display-text\">{tactics}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Martial Weapons</span>\n              <span className=\"display-text\">{martial_weapons}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Armor</span>\n              <span className=\"display-text\">{armor}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Anatomy</span>\n              <span className=\"display-text\">{anatomy}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassDisplay);","import React from 'react';\nimport './AdventurerClassForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerClassForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addAdventurerClass = this.addAdventurerClass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.adventurer_class, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurerClass(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer_class', data);\n    } else {\n      yield postRequest.makeRequest('adventurer_class', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurerClass = this.addAdventurerClass(data);\n    this.addAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.adventurer_class, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Adventurer Class';\n    let newName = '';\n    let newId;\n    let newBargaining = 0;\n    let newPerception = 0;\n    let newArtifacts = 0;\n    let newTraps = 0;\n    let newAgility = 0;\n    let newTactics = 0;\n    let newMartialWeapons = 0;\n    let newArmor = 0;\n    let newAnatomy = 0;\n\n    if (this.props.edit) {\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n      newName = thisAdventurerClass.name;\n      newHeading = newName;\n      newId = thisAdventurerClass.id;\n      newBargaining = thisAdventurerClass.bargaining;\n      newPerception = thisAdventurerClass.perception;\n      newArtifacts = thisAdventurerClass.artifacts;\n      newTraps = thisAdventurerClass.traps;\n      newAgility = thisAdventurerClass.agility;\n      newTactics = thisAdventurerClass.tactics;\n      newMartialWeapons = thisAdventurerClass.martial_weapons;\n      newArmor = thisAdventurerClass.armor;\n      newAnatomy = thisAdventurerClass.anatomy;\n    }\n    return (\n      <div className=\"AdventurerClassForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer Class: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer_class'}\n          className=\"input-fields-area\"\n          id=\"AdventurerClassPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"class name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"bargaining\">bargaining</label>\n              <input type=\"number\" name=\"bargaining\" id=\"bargaining\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newBargaining}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"perception\">perception</label>\n              <input type=\"number\" name=\"perception\" id=\"perception\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newPerception}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"artifacts\">artifacts</label>\n              <input type=\"number\" name=\"artifacts\" id=\"artifacts\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArtifacts}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"traps\">traps</label>\n              <input type=\"number\" name=\"traps\" id=\"traps\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"agility\">agility</label>\n              <input type=\"number\" name=\"agility\" id=\"agility\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAgility}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"tactics\">tactics</label>\n              <input type=\"number\" name=\"tactics\" id=\"tactics\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTactics}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"martial_weapons\">martial weapon</label>\n              <input type=\"number\" name=\"martial_weapons\" id=\"martial_weapons\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newMartialWeapons}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArmor}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"anatomy\">anatomy</label>\n              <input type=\"number\" name=\"anatomy\" id=\"anatomy\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAnatomy}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer Class' : 'Create Adventurer Class' } className=\"button create-button\"></input>\n          </form>\n          <p>Points should total 45</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassForm);\n","import React from 'react';\nimport './AdventurerDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.setInitialized = this.setInitialized.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.deleteAdventurer = this.deleteAdventurer.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.adventurerClasses || !this.props.townBehaviors || !this.props.dungeonBehaviors) {\n      this.props.loadAdventurerDetails();\n      this.setInitialized(true);\n    } else {\n      if (!this.state.initialized) {\n        this.setInitialized(true);\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized && (this.props.adventurerClasses && this.props.townBehaviors && this.props.dungeonBehaviors)) {\n      this.setInitialized(true);\n    }\n  }\n\n  setInitialized(val) {\n    this.setState({ initialized: val});\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurer() {\n    yield deleteRequests.makeRequest('adventurer', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurer = this.deleteAdventurer();\n    deleteAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.adventurers || !this.state.initialized) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n    const {\n      name,\n      strength,\n      speed,\n      cunning,\n      intelligence,\n      constitution,\n      dungeonBehaviorId,\n      townBehaviorId,\n      adventurerClassId\n    } = thisAdventurer;\n    if (!this.props.dungeonBehaviors || !this.props.townBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === dungeonBehaviorId);\n    const dungeonBehaviorName = thisDungeonBehavior.name;\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === townBehaviorId);\n    const townBehaviorName = thisTownBehavior.name;\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === adventurerClassId);\n    const adventurerClassname = thisAdventurerClass.name;\n\n    return (\n      <div className=\"AdventurerDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer, edit: true, targetId: thisAdventurer.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Strength</span>\n            <span className=\"display-text\">{strength}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Speed</span>\n            <span className=\"display-text\">{speed}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Cunning</span>\n            <span className=\"display-text\">{cunning}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Intelligence</span>\n            <span className=\"display-text\">{intelligence}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Constitution</span>\n            <span className=\"display-text\">{constitution}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Dungeon Behavior</span>\n            <span className=\"display-text\">{dungeonBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Town Behavior</span>\n            <span className=\"display-text\">{townBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Class</span>\n            <span className=\"display-text\">{adventurerClassname}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    displayId: state.detail.targetId,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerDisplay);","import React from 'react'\nimport './AdventurerForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDungeonBehaviorOptions = this.getDungeonBehaviorOptions.bind(this);\n    this.getTownBehaviorOptions = this.getTownBehaviorOptions.bind(this);\n    this.getAdventurerClassOptions = this.getAdventurerClassOptions.bind(this);\n    this.addAdventurer = this.addAdventurer.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getDungeonBehaviorOptions() {\n    const dungeonOptions = this.props.dungeonBehaviors;\n    return dungeonOptions.map(dungeonOption => {\n      return <option value={dungeonOption.id}>{dungeonOption.name}</option>\n    });\n  }\n\n  getTownBehaviorOptions() {\n    const townOptions = this.props.townBehaviors;\n    return townOptions.map(townOption => {\n      return <option value={townOption.id}>{townOption.name}</option>\n    });\n  }\n\n  getAdventurerClassOptions() {\n    const classOptions = this.props.adventurerClasses;\n    return classOptions.map(classOption => {\n      return <option value={classOption.id}>{classOption.name}</option>\n    });\n  }\n\n  componentDidMount() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      this.props.loadAdventurerDetails();\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.adventurer, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurer(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer', data);\n    } else {\n      yield postRequest.makeRequest('adventurer', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurer = this.addAdventurer(data);\n    this.addAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.adventurer, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    let newHeading = 'New Adventurer';\n    let newId;\n    let newName = '';\n    let newStrength = 0;\n    let newSpeed = 0;\n    let newCunning = 0;\n    let newIntelligence = 0;\n    let newConstitution = 0;\n    let newDungeonBehavior, newTownBehavior, newAdventurerClass;\n\n    if (this.props.edit) {\n      const allAdventurers = this.props.adventurers;\n      const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === thisAdventurer.dungeoBehaviorId);\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === thisAdventurer.townBehaviorId);\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === thisAdventurer.adventurerClassId);\n      newId = thisAdventurer.id;\n      newName = thisAdventurer.name;\n      newHeading = newName;\n      newStrength = thisAdventurer.strength;\n      newSpeed = thisAdventurer.speed;\n      newCunning = thisAdventurer.cunning;\n      newIntelligence = thisAdventurer.intelligence;\n      newConstitution = thisAdventurer.constitution;\n      newDungeonBehavior = thisDungeonBehavior;\n      newTownBehavior = thisTownBehavior;\n      newAdventurerClass = thisAdventurerClass;\n    }\n\n    return (\n      <div className=\"AdventurerForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer'}\n          className=\"input-fields-area\"\n          id=\"AdventurerPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"adventurer name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"strength\">strength</label>\n              <input type=\"number\" name=\"strength\" id=\"strength\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newStrength}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"speed\">speed</label>\n              <input type=\"number\" name=\"speed\" id=\"speed\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newSpeed}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"cunning\">cunning</label>\n              <input type=\"number\" name=\"cunning\" id=\"cunning\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newCunning}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"intelligence\">intelligence</label>\n              <input type=\"number\" name=\"intelligence\" id=\"intelligence\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newIntelligence}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"constitution\">constitution</label>\n              <input type=\"number\" name=\"constitution\" id=\"constitution\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newConstitution}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"dungeonBehaviorId\">dungeon behavior</label>\n              <select className=\"dungeon-behavior-select\"\n                name=\"dungeonBehaviorId\"\n                id=\"dungeonBehaviorId\"\n                defaultValue={newDungeonBehavior === undefined ? null : newDungeonBehavior.id}>\n                  {this.getDungeonBehaviorOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"townBehaviorId\">town behavior</label>\n              <select className=\"town-behavior-select\"\n                name=\"townBehaviorId\"\n                id=\"townBehaviorId\"\n                defaultValue={newTownBehavior === undefined ? null : newTownBehavior.id}>\n                  {this.getTownBehaviorOptions()}\n              </select>  \n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"adventurerClassId\">class</label>\n              <select className=\"adventurer-class-select\"\n                name=\"adventurerClassId\"\n                id=\"adventurerClassId\"\n                defaultValue={newAdventurerClass === undefined ? null : newAdventurerClass.id}>\n                  {this.getAdventurerClassOptions()}\n              </select>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer' : 'Create Adventurer' } className=\"button create-button\"></input>\n        </form>\n        <p>Points should total 15</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurers: state.adventurers.adventurers,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerForm);","import React from 'react';\nimport './MonsterDropListDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists, loadItems } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport itemTypes from '../../utilities/itemTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterDropListDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDrops = this.getDrops.bind(this);\n    this.deleteDropList = this.deleteDropList.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) {\n      this.props.loadItems();\n    }\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterDropListButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster DropList and Drops from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  getDrops(drops) {\n    if (!drops) return '';\n    return (\n      <div className=\"monster-drops-display subgroup-display\">\n          <span className=\"display-label full-span\">Drops</span>\n          <span className=\"display-label pad half-span\">Item</span>\n          <span className=\"display-label pad half-span\">Drop Chance</span>\n          {drops.map(drop => {\n            let itemName = ''\n            switch (drop.drop_type) {\n              case itemTypes.armor:\n                let allArmor = this.props.armor;\n                let thisArmor = allArmor.find(armor => armor.id === drop.itemId);\n                itemName = thisArmor.item.name;\n                break;\n              case itemTypes.potion:\n                let allPotions = this.props.potions;\n                let thisPotion = allPotions.find(potion => potion.id === drop.itemId);\n                itemName = thisPotion.item.name;\n                break;\n              case itemTypes.weapon:\n                let allWeapons = this.props.weapons;\n                let thisWeapon = allWeapons.find(weapon => weapon.id === drop.itemId);\n                itemName = thisWeapon.item.name;\n                break;\n              default:\n                itemName = 'Unknown Item Type'\n            }\n\n            return (\n              <div className=\"inner-span\">\n                <span className=\"display-text half-span left-half\">\n                  {itemName}\n                </span>\n                <span className=\"display-text half-span right-half\">\n                  {drop.dropChance}\n                </span>\n              </div>\n            )            \n          })}\n        </div>\n    )\n  }\n\n  *deleteDropList(payload) {\n    yield deleteRequests.makeRequestDropList(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'monster_drop_list';\n    payload.id = this.props.displayId;\n    const allDropLists = this.props.monsterDropLists;\n    const thisDropList = allDropLists.find(dropList => dropList.id === this.props.displayId);\n    const monsterDroplistId = thisDropList.monster_drop_list.id;\n    payload.monsterDroplistId = monsterDroplistId;\n    const drops = thisDropList.drops;\n    let dropIds = [];\n    if (drops.length > 0) {\n      drops.forEach(drop => {\n        dropIds.push(drop.id);\n      });\n    }\n    payload.dropIds = dropIds;\n\n    // invoke delete request\n    let deleteDropList = this.deleteDropList(payload);\n    deleteDropList.next().value.then(() => {\n      this.props.fetchMonsterDropLists();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null })\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.monsterDropLists || !this.props.armor || !this.props.potions || !this.props.weapons) return '';\n    const allMonsterDropLists = this.props.monsterDropLists;\n    const thisDropList = allMonsterDropLists.find(monsterDropList => monsterDropList.id === this.props.displayId);\n    const thisMonsterDropList = thisDropList.monster_drop_list;\n    const thisName = thisMonsterDropList.name;\n    const thisGoldMin = thisDropList.gold_min;\n    const thisGoldMax = thisDropList.gold_max;\n    const thisGoldChance = thisDropList.gold_chance;\n    const thisDrops = thisDropList.drops;\n\n    return (\n      <div className=\"MonsterDropListDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{thisName}</h2>\n          <div className=\"MonsterDropListEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: true, targetId: this.props.displayId })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold min</span>\n          <span className=\"display-text\">{thisGoldMin}</span>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold max</span>\n          <span className=\"display-text\">{thisGoldMax}</span>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold chance</span>\n          <span className=\"display-text\">{thisGoldChance}</span>\n        </div>\n        {this.getDrops(thisDrops)}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    displayId: state.detail.targetId,\n    armor: state.armor.armor,\n    potions: state.potions.potions,\n    weapons: state.weapons.weapons\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    loadItems: () => dispatch(loadItems()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListDisplay);","import { store } from '../index';\nimport { SET_DETAIL_FORM, SET_BREADCRUMB, SET_BREADCRUMB_FORMDATA } from '../actions/types'\n\nconst breadcrumb = (function(){\n  let breadcrumb = null;\n  \n  const Breadcrumb = function(payload) {\n    const {\n      displayPayload,\n      formDataPayload,\n      name\n    } = payload;\n    this.displayPayload = displayPayload;\n    this.formData = formDataPayload.formData;\n    this.formDataName = formDataPayload.formDataName;\n    this.name = name;\n  }\n\n  Breadcrumb.prototype.dispatchDisplay = function() {\n    store.dispatch({ type: SET_DETAIL_FORM, payload: this.displayPayload });\n  }\n\n  Breadcrumb.prototype.dispatchFormdata = function() {\n    store.dispatch({ type: SET_BREADCRUMB_FORMDATA, payload: { formData: this.formData, formDataName: this.formDataName } });\n  }\n\n  Breadcrumb.prototype.dispatchBreadcrumb = function() {\n    const newName = this.name;\n    const breadcrumbPayload = { active: true, name: newName };\n    store.dispatch({ type: SET_BREADCRUMB, payload: breadcrumbPayload });\n  }\n\n  const setBreadcrumb = function(newBreadcrumb) {\n    breadcrumb = newBreadcrumb;\n  }\n\n  const clearBreadcrumbState = function() {\n    store.dispatch({ type: SET_BREADCRUMB, payload: { value: false, name: '' }});\n    \n  }\n\n  const clearBreadcrumbFormdata = function() {\n    store.dispatch({ type: SET_BREADCRUMB_FORMDATA, payload: { formData: null, formDataName: '' } });\n  }\n\n  return {\n    setNewBreadcrumb: function(payload) {\n      breadcrumb = new Breadcrumb(payload);\n      breadcrumb.dispatchFormdata();\n      breadcrumb.dispatchBreadcrumb();\n    },\n\n    clearBreadcrumb: function() {\n      setBreadcrumb(null);\n      clearBreadcrumbState();  \n    },\n\n    revertToBreadcrumb: function() {\n      clearBreadcrumbState();\n      breadcrumb.dispatchDisplay();\n    },\n\n    clearBreadcrumbForm: function() {\n      clearBreadcrumbFormdata();\n    }\n  }\n}());\n\nexport default breadcrumb;","import React from 'react';\nimport './MonsterDropListForm.css';\n\n//component imports\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists, loadItems } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport formTypes from '../../utilities/formTypes';\nimport postRequests from '../../utilities/itemPostRequests';\nimport putRequests from '../../utilities/itemPutRequests';\nimport breadcrumb from '../../utilities/breadcrumb';\n\nclass MonsterDropListForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getDropListOptions = this.getDropListOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.addFormDrop = this.addFormDrop.bind(this);\n    this.deleteDrop = this.deleteDrop.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getForm = this.getForm.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateMonsterDropList = this.updateMonsterDropList.bind(this);\n  }\n\n  componentDidMount() {\n    // create breadcrumb testing state variable\n    let breadcrumbPass = false;\n    // if no breadcrumb exists, load component as normal\n    if (!this.props.breadcrumbActive) {\n      breadcrumbPass = true;\n    }\n    // if breadcrumb is active but formData isn't loaded, fail test\n    if (this.props.breadcrumbActive && !this.props.breadcrumbFormData) {\n      breadcrumbPass = false;\n    }\n    // if breadcrumb and formData are present, pass test\n    if (this.props.breadcrumbActive && this.props.breadcrumbFormData) {\n      breadcrumbPass = true;\n    }\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) {\n      this.props.loadItems();\n    }\n    if (breadcrumbPass) {\n      this.initializeFields();\n    }\n  }\n\n  componentDidUpdate() {\n    let breadcrumbPass = false;\n    if (this.props.breadcrumbActive && this.props.breadcrumbFormData) {\n      breadcrumbPass = true;\n    }\n    if (!this.state.initialized && breadcrumbPass) {\n      this.initializeFields();\n    }\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.monsterDropLists) return;\n    let newName = '';\n    let newGoldMin = 0;\n    let newGoldMax = 0;\n    let newGoldChance = 0;\n    let newDrops = [];\n    if (this.props.edit) {\n      const allDropLists = this.props.monsterDropLists;\n      const thisDropList = allDropLists.find(dropList => dropList.id === this.props.displayId);\n      const thisMonsterDropList = thisDropList.monster_drop_list;\n      newName = thisMonsterDropList.name;\n      newGoldMin = thisDropList.gold_min;\n      newGoldMax = thisDropList.gold_max;\n      newGoldChance = thisDropList.gold_chance;\n      newDrops = thisDropList.drops;\n    }\n\n    if (this.props.breadcrumbActive && this.props.breadcrumbName === formTypes.monster_drop_list) {\n      const breadcrumbForm = this.props.breadcrumbFormData;\n      const breadcrumbName = breadcrumbForm.name;\n      if (breadcrumbName) {\n        newName = breadcrumbName;\n      }\n    }\n\n    let initialState = {};\n    initialState['name'] = newName;\n    initialState['gold_min'] = newGoldMin;\n    initialState['gold_max'] = newGoldMax;\n    initialState['gold_chance'] = newGoldChance;\n    let presentIds = [];\n    if (newDrops.length > 0) {\n      for (const drop of newDrops) {\n        initialState[`drop-${drop.id}-item-id`] = `{ \"id\":\"${drop.itemId}\", \"type\":\"${drop.drop_type}\"}`;\n        initialState[`drop-${drop.id}-drop-chance`] = drop.dropChance;\n        presentIds.push(drop.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = newDrops.length;\n    initialState.deletedIds = [];\n    initialState.newDropIndex = 0;\n    initialState.newDropKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  getDropListOptions() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) return '';\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      let propName = itemType;\n      if (itemType !== itemTypes.armor) {\n        propName += 's';\n      }\n      const allItemsOfType = this.props[`${propName}`];\n      return (\n        <optgroup label={itemType}>\n          {allItemsOfType.map(item => {\n            return <option value={`{ \"id\":\"${item.id}\", \"type\":\"${itemType}\"}`}>{item.item.name}</option>\n          })}\n        </optgroup>\n      )\n    });\n  }\n\n  addFormDrop() {\n    // limit drops to 5\n    const totalCount = this.state.newDropKeys.length;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newDropIndex = this.state.newDropIndex;\n    updatedState[`new-drop-${newDropIndex}-item-id`] = `{ \"id\":\"${0}\", \"type\":\"${itemTypes.potion}\"}`;\n    updatedState[`new-drop-${newDropIndex}-drop-chance`] = 0;\n    let newDropKeys = this.state.newDropKeys;\n    newDropKeys.push(newDropIndex);\n    updatedState.newDropKeys = newDropKeys;\n    newDropIndex += 1;\n    updatedState.newDropIndex = newDropIndex;\n    this.setState(updatedState);\n  }\n\n  deleteDrop(payload) {\n    const { existing, dropId } = payload;\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(dropId);\n      newCount -=1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newDropKeys = this.state.newDropKeys;\n      const dropIndex = newDropKeys.indexOf(dropId);\n      if (dropIndex < 0 || (dropIndex !== 0 && !dropIndex)) return;\n      newDropKeys.splice(dropIndex, 1);\n      updatedState.newDropKeys = newDropKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.breadcrumbActive && this.props.breadcrumbName === formTypes.monster_drop_list) {\n      breadcrumb.revertToBreadcrumb();\n    } else {\n      if (this.props.edit === false) {\n        this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: formTypes.monster_drop_list, targetId: this.props.displayId, edit: false });\n      }\n    }\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value;\n    this.setState(stateUpdate);\n  }\n\n  *updateMonsterDropList(data) {\n    if (this.props.edit) {\n      yield putRequests.makeRequest('monster_drop_list', data);\n    } else {\n      yield postRequests.makeRequest('monster_drop_list', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateMonsterDropList = this.updateMonsterDropList(data);\n    updateMonsterDropList.next().value.then(() => {\n      this.props.fetchMonsterDropLists();\n      if (this.props.breadcrumbActive && this.props.breadcrumbName === formTypes.monster_drop_list) {\n        breadcrumb.revertToBreadcrumb();\n      } else {\n        if (this.props.edit) {\n          this.props.setDisplayForm({ form: formTypes.monster_drop_list, targetId: this.props.displayId, edit: false });\n        } else {\n          this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n        }\n      }\n    });\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n\n    let drops = [];\n    let newMonsterDroplistId = null;\n    if (this.props.edit) {\n      const allDropsLists = this.props.monsterDropLists;\n      const thisDropList = allDropsLists.find(dropList => dropList.id === this.props.displayId);\n      drops = thisDropList.drops;\n      newMonsterDroplistId = thisDropList.monster_drop_list.id\n    }\n\n    let newHeading = 'New Monster Drop List';\n    let newId = null;\n    \n    if (this.props.edit) {\n      newHeading = this.state.name;\n      newId = this.props.displayId;\n\n    }\n\n    const newDropKeys = this.state.newDropKeys;\n\n    return (\n      <div className=\"MonsterDropListForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-monster-droplist-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster_drop_list'}\n          className=\"input-fields-area\"\n          id=\"MonsterDropListPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"monster droplist name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div> \n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_min\">gold min</label>\n              <input type=\"number\" name=\"gold_min\" id=\"gold_min\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_min}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_max\">gold max</label>\n              <input type=\"number\" name=\"gold_max\" id=\"gold_max\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_max}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_chance\">gold chance</label>\n              <input type=\"number\" name=\"gold_chance\" id=\"gold_chance\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_chance}></input>\n            </div>\n            <div className=\"drops-group form-subgroup\">\n              <span className=\"item-label form-full-span\">Drops</span>\n              <span className=\"item-label form-pad form-half-span\">Item</span>\n              <span className=\"item-label form-pad form-half-span\">Drop Chance</span>\n              {drops.length <= 0 ? '' : drops.map(drop => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(drop.id)) {\n                  return '';\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"drop-select\"\n                        name={`drop-${drop.id}-item-id`}\n                        id={`drop-${drop.id}-item-id`}\n                        onChange={this.handleChange}\n                        value={this.state[`drop-${drop.id}-item-id`]}>\n                          {this.getDropListOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\"\n                        type=\"number\"\n                        name={`drop-${drop.id}-drop-chance`}\n                        id={`drop-${drop.id}-drop-chance`}\n                        onChange={this.handleChange}\n                        value={this.state[`drop-${drop.id}-drop-chance`]}>\n                      </input>\n                      <span className=\"dropDelete\"\n                        onClick={() => this.deleteDrop({ existing: true, dropId: drop.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n              {newDropKeys.length <= 0 ? '' : newDropKeys.map(index => {\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"drop-select\"\n                        name={`new-drop-${index}-item-id`}\n                        id={`new-drop-${index}-item-id`}\n                        onChange={this.handleChange}\n                        value={this.state[`new-drop-${index}-item-id`]}>\n                          {this.getDropListOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\"\n                        type=\"number\"\n                        name={`new-drop-${index}-drop-chance`}\n                        id={`new-drop-${index}-drop-chance`}\n                        onChange={this.handleChange}\n                        value={this.state[`new-drop-${index}-drop-chance`]}>\n                      </input>\n                      <span className=\"dropDelete\"\n                        onClick={() => this.deleteDrop({ existing: false, dropId: index })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n              <div className=\"dropAdd form-full-span form-center-content\"\n                onClick={this.addFormDrop}\n              >\n                <AddOfferingButton />\n              </div>\n              <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n              <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n              <input type=\"hidden\" name=\"newIndexes\" value={this.state.newDropKeys} />\n              {/* <input type=\"hidden\" name=\"newDropsCount\" value={this.state.newD} */}\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"hidden\" name=\"monsterDroplistId\" value={newMonsterDroplistId} />\n              <input type=\"submit\" value={this.props.edit ? 'Update Monster Droplist' : 'Create Monster Droplist'} className=\"button create-button\"></input>\n            </div>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    displayId: state.detail.targetId,\n    monsterDropLists: state.dropLists.monster,\n    armor: state.armor.armor,\n    potions: state.potions.potions,\n    weapons: state.weapons.weapons,\n    breadcrumbActive: state.breadcrumb.active,\n    breadcrumbName: state.breadcrumb.name,\n    breadcrumbFormData: state.breadcrumb.formData\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    loadItems: () => dispatch(loadItems())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListForm);","import React from 'react';\nimport './MonsterBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteMonsterBehavior = this.deleteMonsterBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteMonsterBehavior() {\n    yield deleteRequests.makeRequest('monster_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteMonsterBehavior = this.deleteMonsterBehavior();\n    deleteMonsterBehavior.next().value.then(() => {\n      this.props.fetchMonsterBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allMonsterBehaviors = this.props.monsterBehaviors;\n    const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === this.props.displayId);\n    const {\n      name,\n      confront_weakened_adventurer,\n      special_move,\n      defend,\n      heal,\n      block_flee,\n      migrate\n    } = thisMonsterBehavior;\n\n    return (\n      <div className=\"MonsterBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"MonsterBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: true, targetId: thisMonsterBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">confront weakened adventuer</span>\n              <span className=\"display-text\">{confront_weakened_adventurer}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">special move</span>\n              <span className=\"display-text\">{special_move}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">defend</span>\n              <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">heal</span>\n              <span className=\"display-text\">{heal}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">block flee</span>\n              <span className=\"display-text\">{block_flee}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">migrate</span>\n              <span className=\"display-text\">{migrate}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorDisplay);","import React from 'react';\nimport './MonsterBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass MonsterBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addMonsterBehavior = this.addMonsterBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addMonsterBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('monster_behavior', data);\n    } else {\n      yield postRequest.makeRequest('monster_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addMonsterBehavior = this.addMonsterBehavior(data);\n    this.addMonsterBehavior.next().value.then(() => {\n      this.props.fetchMonsterBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.monster_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Monster Behavior';\n    let newName = '';\n    let newId;\n    let newConfrontWeakenedAdventurer = 0;\n    let newSpecialMove = 0;\n    let newDefend = 0;\n    let newHeal = 0;\n    let newBlockFlee = 0;\n    let newMigrate = 0;\n\n    if (this.props.edit) {\n      const allMonsterBehaviors = this.props.monsterBehaviors;\n      const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === this.props.displayId);\n      newName = thisMonsterBehavior.name;\n      newHeading = newName;\n      newId = thisMonsterBehavior.id;\n      newConfrontWeakenedAdventurer = thisMonsterBehavior.confront_weakened_adventurer;\n      newSpecialMove = thisMonsterBehavior.special_move;\n      newDefend = thisMonsterBehavior.defend;\n      newHeal = thisMonsterBehavior.heal;\n      newBlockFlee = thisMonsterBehavior.block_flee;\n      newMigrate = thisMonsterBehavior.migrate;\n    }\n    return (\n      <div className=\"MonsterBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Monster Behavior: {newHeading}</h2>\n          <div className=\"close-monster-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster_behaviors'}\n          className=\"input-fields-area\"\n          id=\"MonsterBehavior\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"confront_weakened_adventurer\">confront weakened adventurer</label>\n              <input type=\"number\" name=\"confront_weakened_adventurer\" id=\"confront_weakened_adventurer\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConfrontWeakenedAdventurer}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"special_move\">special move</label>\n              <input type=\"number\" name=\"special_move\" id=\"special_move\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSpecialMove}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"heal\">heal</label>\n              <input type=\"number\" name=\"heal\" id=\"heal\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newHeal}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"block_flee\">block flee</label>\n              <input type=\"number\" name=\"block_flee\" id=\"block_flee\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBlockFlee}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"migrate\">migrate</label>\n              <input type=\"number\" name=\"migrate\" id=\"migrate\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newMigrate}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <div className=\"supplier-submit-container\">\n            <input type=\"submit\" value={this.props.edit ? 'Update Monster Behavior' : 'Create Monster Behavior' } className=\"button create-button\"></input>\n            </div>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorForm);","const boolean = (function(){\n  return {\n    displayBooloean: function(boolVal) {\n      if (boolVal) {\n        return 'true'\n      } else {\n        return 'false'\n      }\n    }\n  }\n}());\n\nexport default boolean;","import React from 'react';\nimport './MonsterDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsters, loadMonsterDetails } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport boolean from '../../utilities/boolean';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.setInitialized = this.setInitialized.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.deleteMonster = this.deleteMonster.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.monsterDropLists || !this.props.monsterBehaviors) {\n      this.props.loadMonsterDetails();\n      this.setInitialized(true);\n    } else {\n      if (!this.state.initialized) {\n        this.setInitialized(true);\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if(!this.state.initialized && (this.props.monsterBehaviors && this.props.monsterDropLists)) {\n      this.setInitialized(true);\n    }\n  }\n\n  setInitialized(val) {\n    this.setState({ initialized: val });\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteMonster() {\n    yield deleteRequests.makeRequest('monster', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteMonster = this.deleteMonster();\n    deleteMonster.next().value.then(() => {\n      this.props.fetchMonsters();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.monsters || !this.state.initialized) return '';\n    const allMonsters = this.props.monsters;\n    const thisMonster = allMonsters.find(monster => monster.id === this.props.displayId);\n    const {\n      name,\n      boss,\n      level,\n      hp,\n      damage,\n      defense,\n      stealth,\n      initiative,\n      special,\n      heal,\n      dropListId,\n      monsterBehaviorId\n    } = thisMonster;\n    const allMonsterDropLists = this.props.monsterDropLists;\n    const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === dropListId);\n    const monsterDropListName = thisMonsterDropList.monster_drop_list.name;\n    const allMonsterBehaviors = this.props.monsterBehaviors;\n    const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === monsterBehaviorId);\n    const monsterBehaviorName = thisMonsterBehavior.name;\n\n    return (\n      <div className=\"MonsterDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster, edit: true, targetId: thisMonster.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">boss</span>\n            <span className=\"display-text\">{boolean.displayBooloean(boss)}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">level</span>\n            <span className=\"display-text\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">hp</span>\n            <span className=\"display-text\">{hp}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defense</span>\n            <span className=\"display-text\">{defense}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">stealth</span>\n            <span className=\"display-text\">{stealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">initiative</span>\n            <span className=\"display-text\">{initiative}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">special</span>\n            <span className=\"display-text\">{special}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">heal</span>\n            <span className=\"display-text\">{heal}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">drop list</span>\n            <span className=\"display-text\">{monsterDropListName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">behavior</span>\n            <span className=\"display-text\">{monsterBehaviorName}</span>\n          </div>\n        </div>\n      </div>\n    )\n      \n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsters: state.monsters.monsters,\n    displayId: state.detail.targetId,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    monsterDropLists: state.dropLists.monster\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchMonsters: () => dispatch(fetchMonsters()),\n    loadMonsterDetails: () => dispatch(loadMonsterDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDisplay);","const formComposer = (function(){\n  const formToObject = function(formBody) {\n    let subBody = {};\n    for ( let [ key, value ] of formBody) {\n      subBody[key] = value\n    }\n    return subBody;\n  }\n  return {\n    getObjectFromForm: function(formBody) {\n      return formToObject(formBody);\n    }\n  }\n}());\n\nexport default formComposer;","import React from 'react';\nimport './MonsterForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport EditButton from '../EditButton/EditButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsters, loadMonsterDetails } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport formComposer from '../../utilities/formComposer';\nimport breadcrumb from '../../utilities/breadcrumb';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass MonsterForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropList: null,\n      intialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.getMonsterBehaviorOptions = this.getMonsterBehaviorOptions.bind(this);\n    this.getMonsterDropListOptions = this.getMonsterDropListOptions.bind(this);\n    this.addMonster = this.addMonster.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBreadcrumb = this.handleBreadcrumb.bind(this);\n    this.handleDropListChange = this.handleDropListChange.bind(this);\n    this.initializeMonsterDropListId = this.initializeMonsterDropListId.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.monsterBehaviors || !this.props.monsterDropLists) {\n      this.props.loadMonsterDetails();\n    } else {\n      if (!this.state.intialized) {\n        this.initializeMonsterDropListId();\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.monsterBehaviors && this.props.monsterDropLists & !this.state.intialized) {\n      this.initializeMonsterDropListId();\n    }\n  }\n\n  initializeMonsterDropListId() {\n    let stateUpdate = {};\n    stateUpdate.intialized = true;\n    if (this.props.edit) {\n      const allMonsters = this.props.monsters;\n      const thisMonster = allMonsters.find(monster => monster.id === this.props.displayId);\n      const allMonsterDropLists = this.props.monsterDropLists;\n      const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === thisMonster.dropListId);\n      stateUpdate.dropList = thisMonsterDropList.id;\n    }\n    if (this.props.breadcrumbFormdata && this.props.breadcrumbFormdataName === formTypes.monster) {\n      const monsterForm = this.props.breadcrumbFormdata;\n      const monsterDropListId = Number.parseInt(monsterForm.dropListId);\n      stateUpdate.dropList = monsterDropListId;\n    } \n    this.setState(stateUpdate);\n  \n  }\n  \n  getMonsterBehaviorOptions() {\n    const monsterOptions = this.props.monsterBehaviors;\n    return monsterOptions.map(monsterOption => {\n      return <option value={monsterOption.id}>{monsterOption.name}</option>\n    });\n  }\n\n  getMonsterDropListOptions() {\n    const dropLists = this.props.monsterDropLists;\n    return dropLists.map(dropList => {\n      return <option value={dropList.id}>{dropList.monster_drop_list.name}</option>\n    });\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.breadcrumbFormdata) {\n      breadcrumb.clearBreadcrumbForm();\n    }\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster, targetId: this.props.displayId, edit: false });\n    } \n  }\n\n  handleDropListChange(e) {\n    let dropListId = e.target.value;\n    if (dropListId === '--choose a droplist--') return;\n    if (dropListId === 'new droplist') {\n      this.handleBreadcrumb(null);\n    }\n    this.setState({\n      dropList: dropListId\n    });\n  }\n\n  handleBreadcrumb(dropListId) {\n    // set dropList id to load appropriate drop list into\n    // monster form\n    let resDropList;\n    if (dropListId !== null) {\n      resDropList = Number.parseInt(dropListId);\n    } else {\n      resDropList = dropListId;\n    }\n    // breadcrumb payload composition to pass into breadcrumb module\n    let breadcrumbPayload = {};\n    breadcrumbPayload.name = formTypes.monster_drop_list;\n    // load form data into breadcrumb payload\n    const monsterForm = document.querySelector('#MonsterPostForm');\n    let data = new FormData(monsterForm);\n    data = formComposer.getObjectFromForm(data);\n    let formDataPayload = {};\n    formDataPayload.formData = data;\n    formDataPayload.formDataName = formTypes.monster;\n    breadcrumbPayload.formDataPayload = formDataPayload;\n    // compose display payload to point back to MonsterForm with\n    // appropriate display values\n    const currentEdit = this.props.edit;\n    const currentId = this.props.displayId;\n    const displayPayload = { form: formTypes.monster, edit: currentEdit, targetId: currentId };\n    breadcrumbPayload.displayPayload = displayPayload;\n    // set breadcrumb\n    breadcrumb.setNewBreadcrumb(breadcrumbPayload);\n    // switch to dependent form\n    if (resDropList === null) {\n      this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: null });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: true, targetId: resDropList });\n    }\n  }\n\n  *addMonster(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('monster', data);\n    } else {\n      yield postRequest.makeRequest('monster', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addMonster = this.addMonster(data);\n    this.addMonster.next().value.then(() => {\n      this.props.fetchMonsters();\n      if (this.props.breadcrumbFormdata && this.props.breadcrumbFormdataName === formTypes.monster) {\n        breadcrumb.clearBreadcrumbForm();\n      }\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.monster, edit: false, targetId: this.props.displayId });\n      } else {\n        this.props.setDisplayForm({ form: null, edit: false, targetId: null });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.props.monsterBehaviors || !this.props.monsterDropLists) {\n      return '';\n    }\n    let newHeading = 'New Monster';\n    let newId;\n    let newName = '';\n    let newBoss = false;\n    let newLevel = 1;\n    let newHp = 1;\n    let newDamage = 0;\n    let newDefense = 0;\n    let newStealth = 0;\n    let newInitiative = 0;\n    let newSpecial = 0;\n    let newHeal = 0;\n    let newMonsterDropList, newMonsterBehavior;\n    \n    if (this.props.edit) {\n      const allMonsters = this.props.monsters;\n      const thisMonster = allMonsters.find(monster => monster.id === this.props.displayId);\n      const allMonsterDropLists = this.props.monsterDropLists;\n      const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === thisMonster.dropListId);\n      const allMonsterBehaviors = this.props.monsterBehaviors;\n      const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === thisMonster.monsterBehaviorId);\n      newId = thisMonster.id;\n      newName = thisMonster.name;\n      newHeading = newName;\n      newBoss = thisMonster.boss;\n      newLevel = thisMonster.level;\n      newHp = thisMonster.hp;\n      newDamage = thisMonster.damage;\n      newDefense = thisMonster.defense;\n      newStealth = thisMonster.stealth;\n      newInitiative = thisMonster.initiative;\n      newSpecial = thisMonster.special;\n      newHeal = thisMonster.heal;\n      newMonsterDropList = thisMonsterDropList;\n      newMonsterBehavior = thisMonsterBehavior;\n    }\n    if (this.props.breadcrumbFormdata && this.props.breadcrumbFormdataName === formTypes.monster) {\n      const monsterForm = this.props.breadcrumbFormdata;\n      const dropListId = Number.parseInt(monsterForm.dropListId);\n      const monsterBehaviorId = Number.parseInt(monsterForm.monsterBehaviorId);\n      const allMonsterDropLists = this.props.monsterDropLists;\n      const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === dropListId);\n      const allMonsterBehaviors = this.props.monsterBehaviors;\n      const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === monsterBehaviorId);\n      newId = Number.parseInt(monsterForm.id);\n      newName = monsterForm.name;\n      newHeading = newName;\n      newBoss = monsterForm.boss === 'true' ? true: false;\n      newLevel = Number.parseInt(monsterForm.level);\n      newHp = Number.parseInt(monsterForm.hp);\n      newDamage = Number.parseInt(monsterForm.damage);\n      newDefense = Number.parseInt(monsterForm.defense);\n      newStealth = Number.parseInt(monsterForm.stealth);\n      newInitiative = Number.parseInt(monsterForm.initiative);\n      newSpecial = Number.parseInt(monsterForm.special);\n      newHeal = Number.parseInt(monsterForm.heal);\n      newMonsterDropList = thisMonsterDropList;\n      newMonsterBehavior = thisMonsterBehavior;\n    }\n    \n\n    return (\n      <div className=\"MonsterForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Monster: {newHeading}</h2>\n          <div className=\"close-monster-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster'}\n          className=\"input-fields-area\"\n          id=\"MonsterPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"monster name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"monsterBehaviorId\">monster behavior</label>\n              <select className=\"monster-behavior-select\"\n                name=\"monsterBehaviorId\"\n                id=\"monsterBehaviorId\"\n                defaultValue={newMonsterBehavior === undefined ? null : newMonsterBehavior.id}>\n                  {this.getMonsterBehaviorOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"dropListId\">monster droplist</label>\n              <select className=\"monster-droplist-select\"\n                name=\"dropListId\"\n                id=\"dropListId\"\n                onChange={this.handleDropListChange}\n                defaultValue={newMonsterDropList === undefined ? null : newMonsterDropList.id}>\n                  <option value={undefined}>--choose a droplist--</option>\n                  <option value={null} onClick={() => this.handleBreadcrumb(null)}>new droplist</option>\n                  {this.getMonsterDropListOptions()}\n              </select>\n              <div className=\"edit-monster-droplist-button\" onClick={() => this.handleBreadcrumb(newMonsterDropList === null ? null : this.state.dropList)}>\n                <EditButton />\n              </div>\n            </div>\n            <input type=\"hidden\" name=\"boss\" value={false} />\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"boss\">boss</label>\n              {newBoss === true ? (<input type=\"checkbox\" name=\"boss\" id=\"boss\" className=\"input-boolean\" placeholder=\"#\"\n                value={true} checked defaultValue={newBoss}></input>) :\n                (<input type=\"checkbox\" name=\"boss\" id=\"boss\" className=\"input-boolean\" placeholder=\"#\"\n                value={true} defaultValue={newBoss}></input>)}\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"30\" required defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"hp\">hp</label>\n              <input type=\"number\" name=\"hp\" id=\"hp\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"1000\" required defaultValue={newHp}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">damage</label>\n              <input type=\"number\" name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newDamage}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defense\">defense</label>\n              <input type=\"number\" name=\"defense\" id=\"defense\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newDefense}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"stealth\">stealth</label>\n              <input type=\"number\" name=\"stealth\" id=\"stealth\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newStealth}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"initiative\">initiative</label>\n              <input type=\"number\" name=\"initiative\" id=\"initiative\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newInitiative}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"special\">special</label>\n              <input type=\"number\" name=\"special\" id=\"special\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"1000\" step=\"50\" required defaultValue={newSpecial}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"heal\">heal</label>\n              <input type=\"number\" name=\"heal\" id=\"heal\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newHeal}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Monster' : 'Create Monster' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    monsters: state.monsters.monsters,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    monsterDropLists: state.dropLists.monster,\n    displayId: state.detail.targetId,\n    breadcrumbFormdata: state.breadcrumb.formData,\n    breadcrumbFormdataName: state.breadcrumb.formDataName\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsters: () => dispatch(fetchMonsters()),\n    loadMonsterDetails: () => dispatch(loadMonsterDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterForm);","import React from 'react';\nimport './DungeonTileDisplay.css';\n\n// component imports\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonTiles } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport boolean from '../../utilities/boolean';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass DungeonTileDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteDungeonTile = this.deleteDungeonTile.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteDungeonTileButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Dungeon Tile from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteDungeonTile() {\n    yield deleteRequests.makeRequest('dungeon_tile', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteDungeonTile = this.deleteDungeonTile();\n    deleteDungeonTile.next().value.then(() => {\n      this.props.fetchDungeonTiles();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allDungeonTiles = this.props.dungeonTiles;\n    const thisDungeonTile = allDungeonTiles.find(dungeonTile => dungeonTile.id === this.props.displayId);\n    const {\n      name,\n      boss,\n      stairs_up,\n      treasure,\n      encounter,\n      trap\n    } = thisDungeonTile;\n\n    return (\n      <div className=\"DungeonTileDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"DungeonBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_tile, edit: true, targetId: thisDungeonTile.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">boss</span>\n            <span className=\"display-text\">{boolean.displayBooloean(boss)}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">stairs up</span>\n            <span className=\"display-text\">{boolean.displayBooloean(stairs_up)}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">treasure</span>\n            <span className=\"display-text\">{treasure}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">encounter</span>\n            <span className=\"display-text\">{encounter}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">trap</span>\n            <span className=\"display-text\">{trap}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonTiles: state.dungeonTiles.tiles,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonTiles: () => dispatch(fetchDungeonTiles()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonTileDisplay);","import React from 'react';\nimport './DungeonTileForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonTiles } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass DungeonTileForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addDungeonTile = this.addDungeonTile.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.dungeon_tile, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addDungeonTile(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('dungeon_tile', data);\n    } else {\n      yield postRequest.makeRequest('dungeon_tile', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addDungeonTile = this.addDungeonTile(data);\n    this.addDungeonTile.next().value.then(() => {\n      this.props.fetchDungeonTiles();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.dungeon_tile, edit: false, targetId: this.props.displayId });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Dungeon Tile';\n    let newName = '';\n    let newId;\n    let newBoss;\n    let newStairsUp;\n    let newTreasure;\n    let newEncounter;\n    let newTrap;\n\n    if (this.props.edit) {\n      const allDungeonTiles = this.props.dungeonTiles;\n      const thisDungeonTile = allDungeonTiles.find(dungeonTile => dungeonTile.id === this.props.displayId);\n      newName = thisDungeonTile.name;\n      newHeading = newName;\n      newId = thisDungeonTile.id;\n      newBoss = thisDungeonTile.boss;\n      newStairsUp = thisDungeonTile.stairs_up;\n      newTreasure = thisDungeonTile.treasure;\n      newEncounter = thisDungeonTile.encounter;\n      newTrap = thisDungeonTile.trap;\n    }\n    return (\n      <div className=\"DungeonTileForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Dungeon Tile: {newHeading}</h2>\n          <div className=\"close-dungeon-tile-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        <form action={'/dungeon_tile'}\n          className=\"input-fields-area\"\n          id=\"DungeonTilePostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"tile name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <input type=\"hidden\" name=\"boss\" value={false} />\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"boss\">boss</label>\n              {newBoss === true ? (<input type=\"checkbox\" name=\"boss\" id=\"boss\" className=\"input-boolean\" placeholder=\"#\"\n                value={true} checked defaultValue={newBoss}></input>) :\n                (<input type=\"checkbox\" name=\"boss\" id=\"boss\" className=\"input-boolean\" placeholder=\"#\"\n                value={true} defaultValue={newBoss}></input>)}\n            </div>\n            <input type=\"hidden\" name=\"stairs_up\" value={false} />\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"stairs_up\">stairs up</label>\n              {newStairsUp === true ? (<input type=\"checkbox\" name=\"stairs_up\" id=\"stairs_up\" className=\"input-boolean\" placeholder=\"#\"\n                value={true} checked defaultValue={newStairsUp}></input>) :\n                (<input type=\"checkbox\" name=\"stairs_up\" id=\"stairs_up\" className=\"input-boolean\" placeholder=\"#\"\n                value={true} defaultValue={newStairsUp}></input>)}\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"treasure\">treasure</label>\n              <input type=\"number\" name=\"treasure\" id=\"treasure\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newTreasure}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"encounter\">encounter</label>\n              <input type=\"number\" name=\"encounter\" id=\"encounter\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEncounter}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"trap\">trap</label>\n              <input type=\"number\" name=\"trap\" id=\"trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newTrap}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Dungeon Tile' : 'Create Dungeon Tile' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    dungeonTiles: state.dungeonTiles.tiles,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonTiles: () => dispatch(fetchDungeonTiles())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonTileForm);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\n// item components\nimport PotionForm from '../../Components/PotionForm/PotionForm';\nimport PotionDisplay from '../../Components/PotionDisplay/PotionDisplay';\nimport WeaponForm from '../../Components/WeaponForm/WeaponForm';\nimport WeaponDisplay from '../../Components/WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../../Components/ArmorForm/ArmorForm';\nimport ArmorDisplay from '../../Components/ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../../Components/SupplierForm/SupplierForm';\nimport SupplierDisplay from '../../Components/SupplierDisplay/SupplierDisplay';\n// npc components\nimport TownBehaviorDisplay from '../../Components/TownBehaviorDisplay/TownBehaviorDisplay';\nimport TownBehaviorForm from '../../Components/TownBehaviorForm/TownBehaviorForm';\nimport DungeonBehaviorDisplay from '../../Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay';\nimport DungeonBehaviorForm from '../../Components/DungeonBehaviorForm/DungeonBehaviorForm';\nimport AdventurerClassDisplay from '../../Components/AdventurerClassDisplay/AdventurerClassDisplay';\nimport AdventurerClassForm from '../../Components/AdventurerClassForm/AdventurerClassForm';\nimport AdventurerDisplay from '../../Components/AdventurerDisplay/AdventurerDisplay';\nimport AdventurerForm from '../../Components/AdventurerForm/AdventurerForm';\n// monster components\nimport MonsterDropListDisplay from '../../Components/MonsterDropListDisplay/MonsterDropListDisplay';\nimport MonsterDropListForm from '../../Components/MonsterDropListForm/MonsterDropListForm';\nimport MonsterBehaviorDisplay from '../../Components/MonsterBehaviorDisplay/MonsterBehaviorDisplay'\nimport MonsterBehaviorForm from '../../Components/MonsterBehaviorForm/MonsterBehaviorForm';\nimport MonsterDisplay from '../../Components/MonsterDisplay/MonsterDisplay';\nimport MonsterForm from '../../Components/MonsterForm/MonsterForm';\n// dungeon components\nimport DungeonTileDisplay from '../../Components/DungeonTileDisplay/DungeonTileDisplay';\nimport DungeonTileForm from '../../Components/DungeonTileForm/DungeonTileForm';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport breadcrumb from '../../utilities/breadcrumb';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n  }\n\n  loadFormTable() {\n    const forms = Object.values(formTypes);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = { display: null, form: null };\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[formTypes.potion].display = <PotionDisplay />;\n    this.formTable[formTypes.potion].form = <PotionForm />;\n    this.formTable[formTypes.armor].display = <ArmorDisplay />;\n    this.formTable[formTypes.armor].form = <ArmorForm />;\n    this.formTable[formTypes.weapon].display = <WeaponDisplay />;\n    this.formTable[formTypes.weapon].form = <WeaponForm />;\n    this.formTable[formTypes.supplier].display = <SupplierDisplay />;\n    this.formTable[formTypes.supplier].form = <SupplierForm />;\n    this.formTable[formTypes.town_behavior].display = <TownBehaviorDisplay />;\n    this.formTable[formTypes.town_behavior].form = <TownBehaviorForm />;\n    this.formTable[formTypes.dungeon_behavior].display = <DungeonBehaviorDisplay />;\n    this.formTable[formTypes.dungeon_behavior].form = <DungeonBehaviorForm />;\n    this.formTable[formTypes.adventurer_class].display = <AdventurerClassDisplay />;\n    this.formTable[formTypes.adventurer_class].form = <AdventurerClassForm />;\n    this.formTable[formTypes.adventurer].display = <AdventurerDisplay />;\n    this.formTable[formTypes.adventurer].form = <AdventurerForm />;\n    this.formTable[formTypes.monster_drop_list].display = <MonsterDropListDisplay />;\n    this.formTable[formTypes.monster_drop_list].form = <MonsterDropListForm />;\n    this.formTable[formTypes.monster_behavior].display = <MonsterBehaviorDisplay />;\n    this.formTable[formTypes.monster_behavior].form = <MonsterBehaviorForm />;\n    this.formTable[formTypes.monster].display = <MonsterDisplay />;\n    this.formTable[formTypes.monster].form = <MonsterForm />;\n    this.formTable[formTypes.dungeon_tile].display = <DungeonTileDisplay />;\n    this.formTable[formTypes.dungeon_tile].form = <DungeonTileForm />;\n  }\n\n  \n  getDetail() {\n    if (this.props.breadcrumbActive && (this.props.breadcrumbName !== this.props.formType)) {\n      breadcrumb.clearBreadcrumb();\n      breadcrumb.clearBreadcrumbForm();\n    }\n\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n    // set display blank for refresh state to wipe display state\n    if (this.props.refresh) {\n      this.props.setRefresh(false);\n      return '';\n    }\n    if (this.formTable[this.props.formType] === undefined) {\n      return this.formTable['blank'];\n    }\n    let displayType = '';\n    if (this.props.edit || this.props.targetId == null) {\n      displayType = 'form';\n    } else {\n      displayType = 'display';\n    }\n    return this.formTable[this.props.formType][displayType];\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit,\n    refresh: state.detail.refresh,\n    breadcrumbName: state.breadcrumb.name,\n    breadcrumbActive: state.breadcrumb.active\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../../Containers/ObjectListColumn/ObjectListColumn';\nimport DetailView from '../../Containers/DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false,\n  refresh: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    case SET_DETAIL_REFRESH:\n      return {\n        ...state,\n        refresh: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_TOWN_BEHAVIORS, SET_DUNGEON_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  townBehaviors: null,\n  dungeonBehaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SET_TOWN_BEHAVIORS:\n      return {\n        ...state,\n        townBehaviors: action.payload\n      }\n    case SET_DUNGEON_BEHAVIORS:\n      return {\n        ...state,\n        dungeonBehaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURER_CLASSES } from '../actions/types';\n\nconst initialState = {\n  classes: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURER_CLASSES:\n      return {\n        ...state,\n        classes: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_DROP_LISTS } from '../actions/types';\n\nconst initialState = {\n  monster: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_DROP_LISTS:\n      return {\n        ...state,\n        monster: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  behaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_BEHAVIORS:\n      return {\n        ...state,\n        behaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTERS } from '../actions/types';\n\nconst initialState = {\n  monsters: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTERS:\n      return {\n        ...state,\n        monsters: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_BREADCRUMB, SET_BREADCRUMB_FORMDATA } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  name: '',\n  formData: null,\n  formDataName: ''\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_BREADCRUMB:\n      const active = action.payload.active;\n      const name = action.payload.name;\n      return {\n        ...state,\n        active: active,\n        name: name\n      }\n    case SET_BREADCRUMB_FORMDATA:\n      return {\n        ...state,\n        formData: action.payload.formData,\n        formDataName: action.payload.formDataName\n      }\n    default:\n      return state;\n  }\n}","import { SET_DUNGEON_TILES } from '../actions/types';\n\nconst initialState = {\n  tiles: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DUNGEON_TILES:\n      return {\n        ...state,\n        tiles: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\nimport behaviorsReducer from './behaviorsReducer';\nimport adventurerClassReducer from './adventurerClassReducer';\nimport adventurerReducer from './adventurerReducer';\nimport dropListReducer from './dropListReducer';\nimport monsterBehaviorReducer from './monsterBehaviorReducer';\nimport monsterReducer from './monsterReducer';\nimport breadcrumbReducer from './breadcrumbReducer';\nimport dungeonTileReducer from './dungeonTileReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer,\n  behaviors: behaviorsReducer,\n  adventurerClasses: adventurerClassReducer,\n  adventurers: adventurerReducer,\n  dropLists: dropListReducer,\n  monsterBehaviors: monsterBehaviorReducer,\n  monsters: monsterReducer,\n  breadcrumb: breadcrumbReducer,\n  dungeonTiles: dungeonTileReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}