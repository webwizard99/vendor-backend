{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","actions/types.js","actions/index.js","Components/PotionsList/PotionsList.jsx","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","Components/TownBehaviorList/TownBehaviorList.jsx","Components/DungeonBehaviorList/DungeonBehaviorList.jsx","Components/BehaviorList/BehaviorList.jsx","Components/AdventurerClassList/AdventurerClassList.jsx","Components/AdventurerList/AdventurerList.jsx","Components/NPCList/NPCList.jsx","Components/MonsterDropListList/MonsterDropListList.jsx","Components/MonsterList/MonsterList.jsx","Containers/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","utilities/itemPostRequests.js","utilities/itemPutRequests.js","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","Components/DeleteOfferingButton/DeleteOfferingButton.jsx","Components/AddOfferingButton/AddOfferingButton.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Components/TownBehaviorDisplay/TownBehaviorDisplay.jsx","Components/TownBehaviorForm/TownBehaviorForm.jsx","Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay.jsx","Components/DungeonBehaviorForm/DungeonBehaviorForm.jsx","Components/AdventurerClassDisplay/AdventurerClassDisplay.jsx","Components/AdventurerClassForm/AdventurerClassForm.jsx","Components/AdventurerDisplay/AdventurerDisplay.jsx","Components/AdventurerForm/AdventurerForm.jsx","Containers/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/behaviorsReducer.js","reducers/adventurerClassReducer.js","reducers/adventurerReducer.js","reducers/dropListReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","SET_DETAIL_FORM","fetchUser","dispatch","a","axios","get","res","payload","data","fetchPotions","fetchWeapons","fetchArmor","fetchSuppliers","fetchTownBehaviors","fetchDungeonBehaviors","fetchAdventurerClasses","fetchAdventurers","loadAdventurerDetails","fetchMonsterDropLists","PotionsList","componentDidMount","handleNew","setRefresh","setDisplayForm","form","edit","targetId","potions","newPotions","map","potion","potionClass","id","item","name","detail","value","WeaponsList","weapons","newWeapons","weapon","weaponClass","ArmorList","armor","newArmor","armorClass","ItemList","SupplierList","suppliers","newSuppliers","supplier","supplierClass","TownBehaviorList","townBehaviors","newTownBehaviors","townBehavior","townBehaviorClass","behaviors","DungeonBehaviorList","dungeonBehaviors","newDungeonBehaviors","dungeonBehavior","dungeonBehaviorClass","BehaviorList","AdventurerClassList","adventurerClasses","newAdventurerClasses","adventurerClass","adventurerClassClass","classes","AdventurerList","adventurers","newAdventurers","adventurer","NPCList","MonsterDropListList","monsterDropLists","newMonsterDropLists","monsterDropList","monsterDropListClass","monster_drop_list","dropLists","monster","MonsterList","ObjectListColumn","shouldComponentUpdate","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","handleCloseButton","CloseFormButton","itemPostRequests","makeRequest","postRoute","postBody","subBody","JSON","stringify","postRes","fetch","method","headers","body","itemPutRequests","putRoute","putBody","putRes","PotionForm","addPotion","handleSubmit","potionType","e","preventDefault","displayId","itemPutRequest","itemPostRequest","FormData","target","next","then","newHeading","newName","newValue","newDetails","newRarity","newPotionType","newLevel","newId","newItemId","refresh","thisPotion","find","details","rarity","level","itemId","action","onSubmit","htmlFor","required","placeholder","maxLength","defaultValue","min","max","getPotionOptions","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","deleteType","deleteId","response","json","deleteRes","makeRequestSupplier","route","offeringIds","PotionDisplay","deletePotion","window","dialogRef","setDialog","text","WeaponForm","addWeapon","newDamage","thisWeapon","damage","WeaponDisplay","deleteWeapon","ArmorForm","addArmor","thisArmor","ArmorDisplay","deleteArmor","DeleteOfferingButton","AddOfferingButton","itemTypes","SupplierForm","initialized","initializeFields","getOfferingOptions","handleChange","addFormOffering","deleteOffering","updateSupplier","offerings","thisSupplier","initialState","presentIds","length","offering","markup","push","existingIdCount","deletedIds","newOfferingIndex","newOfferingKeys","Object","values","itemType","updatedState","existing","offeringId","newDeleted","newCount","offeringIndex","indexOf","splice","stateUpdate","getAttribute","onChange","deletedMap","includes","index","newOfferingsCount","SupplierDisplay","deleteSupplier","forEach","refOffering","TownBehaviorDisplay","deleteTownBehavior","thisTownBehavior","buy_potion","sell_potion","upgrade_potion","buy_weapon","sell_weapon","upgrade_weapon","buy_armor","sell_armor","upgrade_armor","wealth","enter_dungeon","use_tavern","retire","emigrate","garrison_wall","TownBehaviorForm","addTownBehavior","putRequest","postRequest","newBuyPotion","newSellPotion","newUpgradePotion","newBuyWeapon","newSellWeapon","newUpgradeWeapon","newBuyArmor","newSellArmor","newUpgradeArmor","newWealth","newEnterDungeon","newUseTavern","newRetire","newEmigrate","newGarisonWall","step","DungeonBehaviorDisplay","deleteDungeonBehavior","thisDungeonBehavior","advance_tile","conserve_health","use_potion","rest","return_to_town","check_for_traps","disarm_trap","avoid_trap","search_for_treasure","fight_monster","flee_encounter","defend","attack","check_monster_weakness","explore_level","advance_next_level","fill_inventory","upgrade_inventory","fight_boss_monster","prefer_weaker_monster","try_for_level","DungeonBehaviorForm","addDungeonBehavior","newAdvanceTile","newConserveHealth","newUsePotion","newRest","newReturnToTown","newCheckForTraps","newDisarmTrap","newAvoidTrap","newSearchForTreasure","newFightMonster","newFleeEncounter","newDefend","newAttack","newCheckMonsterWeakness","newExploreLevel","newAdvanceNextLevel","newFillInventory","newUpgradeInventory","newFightBossMonster","newPreferWeakerMonster","newTryForLevel","AdventurerClassDisplay","deleteAdventurerClass","thisAdventurerClass","bargaining","perception","artifacts","traps","agility","tactics","martial_weapons","anatomy","AdventurerClassForm","addAdventurerClass","newBargaining","newPerception","newArtifacts","newTraps","newAgility","newTactics","newMartialWeapons","newAnatomy","AdventurerDisplay","deleteAdventurer","thisAdventurer","strength","speed","cunning","intelligence","constitution","dungeon_behavior_id","town_behavior_id","adventurer_class_id","dungeonBehaviorName","townBehaviorName","adventurerClassname","AdventurerForm","getDungeonBehaviorOptions","getTownBehaviorOptions","getAdventurerClassOptions","addAdventurer","dungeonOption","townOption","classOption","newDungeonBehavior","newTownBehavior","newAdventurerClass","newStrength","newSpeed","newCunning","newIntelligence","newConstitution","dungeoBehaviorId","townBehaviorId","adventurerClassId","undefined","DetailView","getDetail","getPotionDetail","getWeaponDetail","getArmorDetail","getSupplierDetail","getTownBehaviorDetail","getDungeonBehaviorDetail","getAdventurerClassDetail","getAdventurerDetail","getMonsterDropListDetail","formType","DialogBox","handleNo","clicked","classList","contains","ref","yesCallback","noCallback","App","getDialog","combineReducers","newTargetId","newEdit","newForm","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37bc1acf.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_DETAIL_REFRESH = \"SET_DETAIL_REFRESH\";\nexport const SET_TOWN_BEHAVIORS = \"SET_TOWN_BEHAVIORS\";\nexport const SET_DUNGEON_BEHAVIORS = \"SET_DUNGEON_BEHAVIORS\";\nexport const SET_ADVENTURER_CLASSES = \"SET_ADVENTURER_CLASSES\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_MONSTER_DROP_LISTS = \"SET_MONSTER_DROP_LISTS\";","import axios from 'axios';\nimport { FETCH_USER,\n  SET_POTIONS, \n  SET_WEAPONS, \n  SET_ARMOR, \n  SET_SUPPLIERS,\n  SET_TOWN_BEHAVIORS,\n  SET_DUNGEON_BEHAVIORS,\n  SET_ADVENTURER_CLASSES,\n  SET_ADVENTURERS,\n  SET_MONSTER_DROP_LISTS } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}\n\nexport const fetchTownBehaviors = () => async dispatch => {\n  const res = await axios.get('/town_behaviors');\n  dispatch({ type: SET_TOWN_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchDungeonBehaviors = () => async dispatch => {\n  const res = await axios.get('/dungeon_behaviors');\n  dispatch({ type: SET_DUNGEON_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchAdventurerClasses = () => async dispatch => {\n  const res = await axios.get('/adventurer_classes');\n  dispatch({ type: SET_ADVENTURER_CLASSES, payload: res.data });\n}\n\nexport const fetchAdventurers = () => async dispatch => {\n  const res = await axios.get('/adventurers');\n  dispatch({ type: SET_ADVENTURERS, payload: res.data });\n}\n\nexport const loadAdventurerDetails = () => async dispatch => {\n  dispatch(fetchTownBehaviors());\n  dispatch(fetchDungeonBehaviors());\n  dispatch(fetchAdventurerClasses());\n}\n\nexport const fetchMonsterDropLists = () => async dispatch => {\n  const res = await axios.get('/monster_drop_lists');\n  dispatch({ type: SET_MONSTER_DROP_LISTS, payload: res.data });\n}","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'potion', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === \"potion\" && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: null });\n  }\n  \n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === \"weapon\" && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchArmor();\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'armor', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === 'armor' && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'armor', edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchSuppliers();\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'supplier', edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\"\n        onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === 'supplier' && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import React from 'react';\nimport './TownBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass TownBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.props.fetchTownBehaviors();\n  }\n\n  getTitle() {\n    return 'Town Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'town_behavior', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewTownBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.townBehaviors) {\n      return '';\n    } else {\n      const newTownBehaviors = this.props.townBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newTownBehaviors.map(townBehavior => {\n            let townBehaviorClass = \"ListDetail\";\n            if (this.props.form === 'town_behavior' && this.props.targetId === townBehavior.id) {\n              townBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={townBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'town_behavior', edit: false, targetId: townBehavior.id })}\n                >{townBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorList);","import React from 'react';\nimport './DungeonBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DungeonBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDungeonBehaviors();\n  }\n\n  getTitle() {\n    return 'Dungeon Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'dungeon_behavior', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewDungeonBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.dungeonBehaviors) {\n      return '';\n    } else {\n      const newDungeonBehaviors = this.props.dungeonBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newDungeonBehaviors.map(dungeonBehavior => {\n            let dungeonBehaviorClass = \"ListDetail\";\n            if (this.props.form === 'dungeon_behavior' && dungeonBehavior.id === this.props.targetId) {\n              dungeonBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={dungeonBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'dungeon_behavior', edit: false, targetId: dungeonBehavior.id })}\n                >{dungeonBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorList);","import React from 'react';\nimport './BehaviorList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport TownBehaviorList from '../TownBehaviorList/TownBehaviorList';\nimport DungeonBehaviorList from '../DungeonBehaviorList/DungeonBehaviorList';\n\nclass BehaviorList extends ExpandableList {\n  getTitle() {\n    return 'Behaviors';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <TownBehaviorList />\n        <DungeonBehaviorList />\n      </div>\n    )\n  }\n}\n\nexport default BehaviorList;","import React from 'react';\nimport './AdventurerClassList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass AdventurerClassList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurerClasses();\n  }\n  \n  getTitle() {\n    return 'Classes';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'adventurer_class', edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerClassButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurerClasses) {\n      return '';\n    } else {\n      const newAdventurerClasses = this.props.adventurerClasses;\n      return (\n        <div className=\"detailList\">\n          {newAdventurerClasses.map(adventurerClass => {\n            let adventurerClassClass = \"ListDetail\";\n            if (this.props.form === 'adventurer_class' && this.props.targetId === adventurerClass.id) {\n              adventurerClassClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClassClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'adventurer_class', edit: false, targetId: adventurerClass.id })}\n                >{adventurerClass.name}</span>\n              </p>\n            );\n          })}\n        </div>\n      )\n    }\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassList);","import React from 'react';\nimport './AdventurerList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\nimport AdventurerClassList from '../AdventurerClassList/AdventurerClassList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass AdventurerList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurers();\n  }\n  \n  getTitle() {\n    return 'Adventurers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'adventurer', edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurers) {\n      return (\n        <div className=\"detailList\">\n          <AdventurerClassList />\n        </div>\n      )\n    } else {\n      const newAdventurers = this.props.adventurers;\n      return (\n        <div className=\"detailList\">\n          { newAdventurers.map(adventurer => {\n            let adventurerClass = \"ListDetail\";\n            if (this.props.form === 'adventurer' && this.props.targetId === adventurer.id) {\n              adventurerClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'adventurer', edit: false, targetId: adventurer.id })}\n                  >{adventurer.name}</span>\n              </p>\n            )\n          })}\n          <AdventurerClassList />\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerList);","import React from 'react';\nimport './NPCList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport BehaviorList from '../BehaviorList/BehaviorList';\nimport AdventurerList from '../AdventurerList/AdventurerList';\n\nclass NPCList extends ExpandableList {\n  getTitle() {\n    return 'NPCs';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <BehaviorList />\n        <AdventurerList />\n      </div>\n    )\n  }\n}\n\nexport default NPCList;","import React from 'react';\nimport './MonsterDropListList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass MonsterDropListList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterDropLists();\n  }\n  \n  getTitle() {\n    return 'Monster Drop Lists';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'monster_drop_list', edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterDropListButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterDropLists) {\n      return '';\n    }\n    const newMonsterDropLists = this.props.monsterDropLists;\n    return (\n      <div className=\"detailList\">\n        { newMonsterDropLists.map(monsterDropList => {\n          let monsterDropListClass = \"ListDetail\";\n          if (this.props.form === 'monster_drop_list' && this.props.targetId === monsterDropList.id) {\n            monsterDropListClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterDropListClass}\n              onClick={() => this.props.setDisplayForm({ form: 'monster_drop_list', edit: false, targetId: monsterDropList.id })}\n              >{monsterDropList.monster_drop_list.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListList);","import React from 'react';\nimport './MonsterList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport MonsterDropListList from '../MonsterDropListList/MonsterDropListList';\n\nclass MonsterList extends ExpandableList {\n  getTitle() {\n    return 'Monsters';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <MonsterDropListList />\n      </div>\n    )\n  }\n}\n\nexport default MonsterList;","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../../Components/ItemList/ItemList';\nimport SupplierList from '../../Components/SupplierList/SupplierList';\nimport NPCList from '../../Components/NPCList/NPCList';\nimport MonsterList from '../../Components/MonsterList/MonsterList';\n\n// redux imports\n// comment to update code\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n        <NPCList />\n        <MonsterList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","const itemPostRequests = (function() {\n  return {\n    makeRequest: async function(postRoute, postBody) {\n      let subBody = {};\n      for ( let [ key, value ] of postBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const postRes = fetch(`/${postRoute}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return postRes;\n    }\n  }\n}());\n\nexport default itemPostRequests;","const itemPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default itemPutRequests;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\n// gratitous comment to push code.\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass PotionForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addPotion = this.addPotion.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addPotion(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('potion', data);\n    } else {\n      yield itemPostRequest.makeRequest('potion', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target)\n    let addPotion = this.addPotion(data);\n    addPotion.next().value.then(() => {\n      this.props.fetchPotions();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n    \n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newPotionType = '';\n    let newLevel = '';\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit && !this.props.refresh) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" required name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" required name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" required name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" required name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestSupplier: async function(payload) {\n      const {\n        route, id, offeringIds\n      } = payload;\n\n      let data = {\n        id: id,\n        offeringIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n    \n    this.deletePotion = this.deletePotion.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deletePotion() {\n    yield deleteRequests.makeRequest('potion', this.props.displayId);\n  }\n\n  handleYes() {\n    let deletePotion = this.deletePotion();\n    deletePotion.next().value.then(() => {\n      this.props.fetchPotions();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: 'potion', edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons} from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass WeaponForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addWeapon = this.addWeapon.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addWeapon(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('weapon', data);\n    } else {\n      yield itemPostRequest.makeRequest('weapon', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let addWeapon = this.addWeapon(data);\n    addWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" required defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" required defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" required name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteWeapon = this.deleteWeapon.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteWeapon() {\n    yield deleteRequests.makeRequest('weapon', this.props.displayId);\n  }\n\n  handleYes() {\n    let deleteWeapon = this.deleteWeapon();\n    deleteWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass ArmorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addArmor = this.addArmor.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'armor', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addArmor(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('armor', data);\n    } else {\n      yield itemPostRequest.makeRequest('armor', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addArmor = this.addArmor(data);\n    this.addArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'armor', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          onSubmit={this.handleSubmit}\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteArmor = this.deleteArmor.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteArmor() {\n    yield deleteRequests.makeRequest('armor', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteArmor = this.deleteArmor();\n    deleteArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n    \n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'armor', edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","import React from 'react';\nimport './DeleteOfferingButton.css';\n\nclass DeleteOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteOfferingButton\">\n        <span className=\"offeringButtonIcon\">X</span>\n      </div>\n    )\n  }\n}\n\nexport default DeleteOfferingButton;","import React from 'react';\nimport './AddOfferingButton.css';\n\nclass AddOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddOfferingButton\">\n        <span className=\"addOfferingButtonIcon\">+</span>\n      </div>\n    )\n  }\n}\n\nexport default AddOfferingButton;","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addFormOffering = this.addFormOffering.bind(this);\n    this.deleteOffering = this.deleteOffering.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateSupplier = this.updateSupplier.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.suppliers) return;\n    let newName = '';\n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      newName = thisSupplier.name;\n      offerings = thisSupplier.offerings;\n    }\n   \n\n    let initialState = {};\n\n    initialState['name'] = newName;\n    let presentIds = [];\n    if (offerings.length > 0) {\n      for (const offering of offerings) {\n        initialState[`offering-${offering.id}-type`] = offering.type;\n        initialState[`offering-${offering.id}-markup`] = offering.markup;\n        presentIds.push(offering.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = offerings.length;\n    initialState.deletedIds = [];\n    initialState.newOfferingIndex = 0;\n    initialState.newOfferingKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'supplier', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  addFormOffering() {\n    // limit offerings to 5\n    const totalCount = this.state.newOfferingKeys.length + this.state.existingIdCount;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newOfferingIndex = this.state.newOfferingIndex;\n    updatedState[`new-offering-${newOfferingIndex}-type`] = 1;\n    updatedState[`new-offering-${newOfferingIndex}-markup`] = 100;\n    let newOfferingKeys = this.state.newOfferingKeys;\n    newOfferingKeys.push(newOfferingIndex);\n    updatedState.newOfferingKeys = newOfferingKeys;\n    newOfferingIndex += 1;\n    updatedState.newOfferingIndex = newOfferingIndex;\n    this.setState(updatedState);\n    \n  }\n\n  deleteOffering(payload) {\n    const { existing, offeringId } = payload\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(offeringId);\n      newCount -= 1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newOfferingKeys = this.state.newOfferingKeys;\n      const offeringIndex = newOfferingKeys.indexOf(offeringId);\n      if (offeringIndex < 0 || (offeringIndex !== 0 && !offeringIndex)) return;\n      newOfferingKeys.splice(offeringIndex, 1);\n      updatedState.newOfferingKeys = newOfferingKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value\n    this.setState(stateUpdate);\n  }\n\n  *updateSupplier(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('supplier', data);\n    } else {\n      yield itemPostRequest.makeRequest('supplier', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateSupplier = this.updateSupplier(data);\n    updateSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'supplier', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n    \n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      offerings = thisSupplier.offerings;\n    }\n    \n    let newHeading = 'New Supplier';\n    if (this.props.edit) {\n      newHeading = this.state.name;\n    }\n    let newId = null;\n    if (this.props.edit) {\n      newId = this.props.displayId;\n    }\n    const newOfferingKeys = this.state.newOfferingKeys;\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/supplier'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"supplier name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.length <= 0 ? '' : offerings.map(offering => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(offering.id)) {\n                  return ''\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"offering-select\" \n                        name={`offering-${offering.id}-type`} \n                        id={`offering-${offering.id}-type`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-type`]}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\" \n                        type=\"number\" \n                        name={`offering-${offering.id}-markup`} \n                        id={`offering-${offering.id}-markup`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-markup`]}>\n                      </input>\n                      <span className=\"offeringDelete\"\n                        onClick={() => this.deleteOffering({ existing: true, offeringId: offering.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n            {newOfferingKeys.length <= 0 ? '' : newOfferingKeys.map(index => {\n              return (\n                <div className=\"form-inner-span\">\n                  <div className=\"form-half-span form-left-half\">\n                    <select className=\"offering-select\"\n                      name={`new-offering-${index}-type`}\n                      id={`new-offering-${index}-type`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-type`]}>\n                        {this.getOfferingOptions()}\n                    </select>\n                  </div>\n                  <div className=\"form-half-span form-right-half\">\n                    <input className=\"input-number\"\n                      type=\"number\"\n                      name={`new-offering-${index}-markup`}\n                      id={`new-offering-${index}-markup`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-markup`]}>\n                    </input>\n                    <span className=\"offeringDelete\"\n                      onClick={() => this.deleteOffering({ existing: false, offeringId: index })}\n                    >\n                      <DeleteOfferingButton />\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n            <div className=\"offeringAdd form-full-span form-center-content\"\n              onClick={this.addFormOffering}\n            >\n              <AddOfferingButton />\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n          <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n          <input type=\"hidden\" name=\"newIndexes\" value={this.state.newOfferingKeys} />\n          <input type=\"hidden\" name=\"newOfferingsCount\" value={this.state.newOfferingsCount} />\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <div className=\"supplier-submit-container\">\n          <input type=\"submit\" value={this.props.edit ? 'Update Supplier' : 'Create Supplier' } className=\"button create-button\"></input>\n          </div>          \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass SupplierDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteSupplier = this.deleteSupplier.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteSupplierButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Supplier and Offerings from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteSupplier(payload) {\n    yield deleteRequests.makeRequestSupplier(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'supplier';\n    payload.id = this.props.displayId;\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const offerings = thisSupplier.offerings;\n    let offeringIds = [];\n    if (offerings.length > 0) {\n      offerings.forEach(refOffering => {\n        offeringIds.push(refOffering.id);\n      });\n    }\n    payload.offeringIds = offeringIds;\n\n    // invoke delete request\n    let deleteSupplier = this.deleteSupplier(payload);\n    deleteSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, displayId: null });\n    });\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './TownBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass TownBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteTownBehavior = this.deleteTownBehavior.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteTownBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Town Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteTownBehavior() {\n    yield deleteRequests.makeRequest('town_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteTownBehavior = this.deleteTownBehavior();\n    deleteTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n    const { name,\n      buy_potion,\n      sell_potion,\n      upgrade_potion,\n      buy_weapon,\n      sell_weapon,\n      upgrade_weapon,\n      buy_armor,\n      sell_armor,\n      upgrade_armor,\n      wealth,\n      enter_dungeon,\n      use_tavern,\n      retire,\n      emigrate,\n      garrison_wall\n    } = thisTownBehavior;\n\n    return (\n      <div className=\"TownBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"TownBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: 'town_behavior', edit: true, targetId: thisTownBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy potion</span>\n            <span className=\"display-text\">{buy_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell potion</span>\n            <span className=\"display-text\">{sell_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade potion</span>\n            <span className=\"display-text\">{upgrade_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy weapon</span>\n            <span className=\"display-text\">{buy_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell weapon</span>\n            <span className=\"display-text\">{sell_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade weapon</span>\n            <span className=\"display-text\">{upgrade_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy armor</span>\n            <span className=\"display-text\">{buy_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell armor</span>\n            <span className=\"display-text\">{sell_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade armor</span>\n            <span className=\"display-text\">{upgrade_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">wealth</span>\n            <span className=\"display-text\">{wealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">enter dungeon</span>\n            <span className=\"display-text\">{enter_dungeon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use tavern</span>\n            <span className=\"display-text\">{use_tavern}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">retire</span>\n            <span className=\"display-text\">{retire}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">emigrate</span>\n            <span className=\"display-text\">{emigrate}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">garrison wall</span>\n            <span className=\"display-text\">{garrison_wall}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorDisplay);","import React from 'react';\nimport './TownBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass TownBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addTownBehavior = this.addTownBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'town_behavior', targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addTownBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('town_behavior', data);\n    } else {\n      yield postRequest.makeRequest('town_behavior', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addTownBehavior = this.addTownBehavior(data);\n    this.addTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'town_behavior', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false })\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Town Behavior';\n    let newName = '';\n    let newId;\n    let newBuyPotion = 0;\n    let newSellPotion = 0;\n    let newUpgradePotion = 0;\n    let newBuyWeapon = 0;\n    let newSellWeapon = 0;\n    let newUpgradeWeapon = 0;\n    let newBuyArmor = 0;\n    let newSellArmor = 0;\n    let newUpgradeArmor = 0;\n    let newWealth = 0;\n    let newEnterDungeon = 0;\n    let newUseTavern = 0;\n    let newRetire = 0;\n    let newEmigrate = 0;\n    let newGarisonWall = 0;\n\n    if (this.props.edit) {\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n      newName = thisTownBehavior.name;\n      newHeading = newName;\n      newId = thisTownBehavior.id;\n      newBuyPotion = thisTownBehavior.buy_potion;\n      newSellPotion = thisTownBehavior.sell_potion;\n      newUpgradePotion = thisTownBehavior.upgrade_potion;\n      newBuyWeapon = thisTownBehavior.buy_weapon;\n      newSellWeapon= thisTownBehavior.sell_weapon;\n      newUpgradeWeapon = thisTownBehavior.upgrade_weapon;\n      newBuyArmor = thisTownBehavior.buy_armor;\n      newSellArmor = thisTownBehavior.sell_armor;\n      newUpgradeArmor = thisTownBehavior.upgrade_armor;\n      newWealth = thisTownBehavior.wealth;\n      newEnterDungeon = thisTownBehavior.enter_dungeon;\n      newUseTavern = thisTownBehavior.use_tavern;\n      newRetire = thisTownBehavior.retire;\n      newEmigrate = thisTownBehavior.emigrate;\n      newGarisonWall = thisTownBehavior.garrison_wall;\n    }\n    return (\n      <div className=\"TownBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Town Behavior: {newHeading}</h2>\n          <div className=\"close-town-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n      <form action={'/town_behaviors'}\n        className=\"input-fields-area\"\n        id=\"TownBehaviorPostForm\"\n        method=\"POST\"\n        onSubmit={this.handleSubmit}>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n              maxLength=\"26\" required defaultValue={newName}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_potion\">buy potion</label>\n            <input type=\"number\" name=\"buy_potion\" id=\"buy_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_potion\">sell potion</label>\n            <input type=\"number\" name=\"sell_potion\" id=\"sell_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_potion\">upgrade potion</label>\n            <input type=\"number\" name=\"upgrade_potion\" id=\"upgrade_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradePotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_weapon\">buy weapon</label>\n            <input type=\"number\" name=\"buy_weapon\" id=\"buy_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_weapon\">sell weapon</label>\n            <input type=\"number\" name=\"sell_weapon\" id=\"sell_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_weapon\">upgrade weapon</label>\n            <input type=\"number\" name=\"upgrade_weapon\" id=\"upgrade_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_armor\">buy armor</label>\n            <input type=\"number\" name=\"buy_armor\" id=\"buy_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_armor\">sell armor</label>\n            <input type=\"number\" name=\"sell_armor\" id=\"sell_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_armor\">upgrade armor</label>\n            <input type=\"number\" name=\"upgrade_armor\" id=\"upgrade_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"wealth\">wealth</label>\n            <input type=\"number\" name=\"wealth\" id=\"wealth\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newWealth}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"enter_dungeon\">enter dungeon</label>\n            <input type=\"number\" name=\"enter_dungeon\" id=\"enter_dungeon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEnterDungeon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"use_tavern\">use tavern</label>\n            <input type=\"number\" name=\"use_tavern\" id=\"use_tavern\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUseTavern}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"retire\">retire</label>\n            <input type=\"number\" name=\"retire\" id=\"retire\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRetire}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"emigrate\">emigrate</label>\n            <input type=\"number\" name=\"emigrate\" id=\"emigrate\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEmigrate}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"garrison_wall\">garrison wall</label>\n            <input type=\"number\" name=\"garrison_wall\" id=\"garrison_wall\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newGarisonWall}></input>\n          </div>\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <input type=\"submit\" value={this.props.edit ? 'Update Town Behavior' : 'Create Town Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorForm);","import React from 'react';\nimport './DungeonBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass DungeonBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteDungeonBehavior = this.deleteDungeonBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteDungeonBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Dungeon Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteDungeonBehavior() {\n    yield deleteRequests.makeRequest('dungeon_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteDungeonBehavior = this.deleteDungeonBehavior();\n    deleteDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n    const {\n      name,\n      advance_tile,\n      conserve_health,\n      use_potion,\n      rest,\n      return_to_town,\n      check_for_traps,\n      disarm_trap,\n      avoid_trap,\n      search_for_treasure,\n      fight_monster,\n      flee_encounter,\n      defend,\n      attack,\n      check_monster_weakness,\n      explore_level,\n      advance_next_level,\n      fill_inventory,\n      upgrade_inventory,\n      fight_boss_monster,\n      prefer_weaker_monster,\n      try_for_level\n    } = thisDungeonBehavior;\n\n    return (\n      <div className=\"DungeonBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"DungeonBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: 'dungeon_behavior', edit: true, targetId: thisDungeonBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance tile</span>\n            <span className=\"display-text\">{advance_tile}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">conserve health</span>\n            <span className=\"display-text\">{conserve_health}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use potion</span>\n            <span className=\"display-text\">{use_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">rest</span>\n            <span className=\"display-text\">{rest}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">return to town</span>\n            <span className=\"display-text\">{return_to_town}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check for traps</span>\n            <span className=\"display-text\">{check_for_traps}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">disarm trap</span>\n            <span className=\"display-text\">{disarm_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">avoid trap</span>\n            <span className=\"display-text\">{avoid_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">search for treasure</span>\n            <span className=\"display-text\">{search_for_treasure}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight monster</span>\n            <span className=\"display-text\">{fight_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">flee encounter</span>\n            <span className=\"display-text\">{flee_encounter}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defend</span>\n            <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">attack</span>\n            <span className=\"display-text\">{attack}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check monster weakness</span>\n            <span className=\"display-text\">{check_monster_weakness}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">explore level</span>\n            <span className=\"display-text\">{explore_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance next level</span>\n            <span className=\"display-text\">{advance_next_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fill inventory</span>\n            <span className=\"display-text\">{fill_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade inventory</span>\n            <span className=\"display-text\">{upgrade_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight boss monster</span>\n            <span className=\"display-text\">{fight_boss_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">prefer weaker monster</span>\n            <span className=\"display-text\">{prefer_weaker_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">try for level</span>\n            <span className=\"display-text\">{try_for_level}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorDisplay);","import React from 'react';\nimport './DungeonBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass DungeonBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addDungeonBehavior = this.addDungeonBehavior.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'dungeon_behavior', targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addDungeonBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('dungeon_behavior', data);\n    } else {\n      yield postRequest.makeRequest('dungeon_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addDungeonBehavior = this.addDungeonBehavior(data);\n    this.addDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'dungeon_behavior', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading ='New Dungeon Behavior';\n    let newName = '';\n    let newId;\n    let newAdvanceTile = 0;\n    let newConserveHealth = 0;\n    let newUsePotion = 0;\n    let newRest = 0;\n    let newReturnToTown = 0;\n    let newCheckForTraps = 0;\n    let newDisarmTrap = 0;\n    let newAvoidTrap = 0;\n    let newSearchForTreasure = 0;\n    let newFightMonster = 0;\n    let newFleeEncounter = 0;\n    let newDefend = 0;\n    let newAttack = 0;\n    let newCheckMonsterWeakness = 0;\n    let newExploreLevel = 0;\n    let newAdvanceNextLevel = 0;\n    let newFillInventory = 0;\n    let newUpgradeInventory = 0;\n    let newFightBossMonster = 0;\n    let newPreferWeakerMonster = 0;\n    let newTryForLevel = 0;\n\n    if (this.props.edit) {\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n      newName = thisDungeonBehavior.name;\n      newHeading = newName;\n      newId = thisDungeonBehavior.id;\n      newAdvanceTile = thisDungeonBehavior.advance_tile;\n      newConserveHealth = thisDungeonBehavior.conserve_health;\n      newUsePotion = thisDungeonBehavior.use_potion;\n      newRest = thisDungeonBehavior.rest;\n      newReturnToTown = thisDungeonBehavior.return_to_town;\n      newCheckForTraps = thisDungeonBehavior.check_for_traps;\n      newDisarmTrap = thisDungeonBehavior.disarm_trap;\n      newAvoidTrap = thisDungeonBehavior.avoid_trap;\n      newSearchForTreasure = thisDungeonBehavior.search_for_treasure;\n      newFightMonster = thisDungeonBehavior.fight_monster;\n      newFleeEncounter = thisDungeonBehavior.flee_encounter;\n      newDefend = thisDungeonBehavior.defend;\n      newAttack = thisDungeonBehavior.attack;\n      newCheckMonsterWeakness = thisDungeonBehavior.check_monster_weakness;\n      newExploreLevel = thisDungeonBehavior.explore_level;\n      newAdvanceNextLevel = thisDungeonBehavior.advance_next_level;\n      newFillInventory = thisDungeonBehavior.fill_inventory;\n      newUpgradeInventory = thisDungeonBehavior.upgrade_inventory;\n      newFightBossMonster = thisDungeonBehavior.fight_boss_monster;\n      newPreferWeakerMonster = thisDungeonBehavior.prefer_weaker_monster;\n      newTryForLevel = thisDungeonBehavior.try_for_level;\n    }\n    return (\n      <div className=\"DungeonBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Dungeon Behavior: {newHeading}</h2>\n          <div className=\"close-dungeon-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        <form action={'/dungeon_behavior'}\n          className=\"input-fields-area\"\n          id=\"DungeonBehaviorPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_tile\">advance tile</label>\n              <input type=\"number\" name=\"advance_tile\" id=\"advance_tile\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceTile}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"conserve_health\">conserve health</label>\n              <input type=\"number\" name=\"conserve_health\" id=\"conserve_health\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConserveHealth}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"use_potion\">use potion</label>\n              <input type=\"number\" name=\"use_potion\" id=\"use_potion\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUsePotion}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rest\">rest</label>\n              <input type=\"number\" name=\"rest\" id=\"rest\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRest}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"return_to_town\">return to town</label>\n              <input type=\"number\" name=\"return_to_town\" id=\"return_to_town\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newReturnToTown}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_for_traps\">check for traps</label>\n              <input type=\"number\" name=\"check_for_traps\" id=\"check_for_traps\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckForTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"disarm_trap\">disarm trap</label>\n              <input type=\"number\" name=\"disarm_trap\" id=\"disarm_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDisarmTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"avoid_trap\">avoid trap</label>\n              <input type=\"number\" name=\"avoid_trap\" id=\"avoid_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAvoidTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"search_for_treasure\">search for treasure</label>\n              <input type=\"number\" name=\"search_for_treasure\" id=\"search_for_treasure\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSearchForTreasure}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_monster\">fight monster</label>\n              <input type=\"number\" name=\"fight_monster\" id=\"fight_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"flee_encounter\">flee encounter</label>\n              <input type=\"number\" name=\"flee_encounter\" id=\"flee_encounter\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFleeEncounter}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"attack\">attack</label>\n              <input type=\"number\" name=\"attack\" id=\"attack\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAttack}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_monster_weakness\">check monster weakness</label>\n              <input type=\"number\" name=\"check_monster_weakness\" id=\"check_monster_weakness\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckMonsterWeakness}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"explore_level\">explore level</label>\n              <input type=\"number\" name=\"explore_level\" id=\"explore_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newExploreLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_next_level\">advance next level</label>\n              <input type=\"number\" name=\"advance_next_level\" id=\"advance_next_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceNextLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fill_inventory\">fill inventory</label>\n              <input type=\"number\" name=\"fill_inventory\" id=\"fill_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFillInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"upgrade_inventory\">upgrade inventory</label>\n              <input type=\"number\" name=\"upgrade_inventory\" id=\"upgrade_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_boss_monster\">fight boss monster</label>\n              <input type=\"number\" name=\"fight_boss_monster\" id=\"fight_boss_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightBossMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"prefer_weaker_monster\">prefer weaker monster</label>\n              <input type=\"number\" name=\"prefer_weaker_monster\" id=\"prefer_weaker_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newPreferWeakerMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"try_for_level\">try for level</label>\n              <input type=\"number\" name=\"try_for_level\" id=\"try_for_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newTryForLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Dungeon Behavior' : 'Create Dungeon Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorForm);","import React from 'react';\nimport './AdventurerClassDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerClassDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteAdventurerClass = this.deleteAdventurerClass.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerClassButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer Class from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurerClass() {\n    yield deleteRequests.makeRequest('adventurer_class', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurerClass = this.deleteAdventurerClass();\n    deleteAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n    const {\n      name,\n      bargaining,\n      perception,\n      artifacts,\n      traps,\n      agility,\n      tactics,\n      martial_weapons,\n      armor,\n      anatomy\n    } = thisAdventurerClass;\n\n    return (\n      <div className=\"AdventurerClassDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerClassEditButton\" onClick={() => this.props.setDisplayForm({ form: 'adventurer_class', edit: true, targetId: thisAdventurerClass.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Bargaining</span>\n              <span className=\"display-text\">{bargaining}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Perception</span>\n              <span className=\"display-text\">{perception}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Artifacts</span>\n              <span className=\"display-text\">{artifacts}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Traps</span>\n              <span className=\"display-text\">{traps}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Agility</span>\n              <span className=\"display-text\">{agility}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Tactics</span>\n              <span className=\"display-text\">{tactics}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Martial Weapons</span>\n              <span className=\"display-text\">{martial_weapons}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Armor</span>\n              <span className=\"display-text\">{armor}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Anatomy</span>\n              <span className=\"display-text\">{anatomy}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassDisplay);","import React from 'react';\nimport './AdventurerClassForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerClassForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addAdventurerClass = this.addAdventurerClass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'adventurer_class', targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurerClass(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer_class', data);\n    } else {\n      yield postRequest.makeRequest('adventurer_class', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurerClass = this.addAdventurerClass(data);\n    this.addAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'adventurer_class', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Adventurer Class';\n    let newName = '';\n    let newId;\n    let newBargaining = 0;\n    let newPerception = 0;\n    let newArtifacts = 0;\n    let newTraps = 0;\n    let newAgility = 0;\n    let newTactics = 0;\n    let newMartialWeapons = 0;\n    let newArmor = 0;\n    let newAnatomy = 0;\n\n    if (this.props.edit) {\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n      newName = thisAdventurerClass.name;\n      newHeading = newName;\n      newId = thisAdventurerClass.id;\n      newBargaining = thisAdventurerClass.bargaining;\n      newPerception = thisAdventurerClass.perception;\n      newArtifacts = thisAdventurerClass.artifacts;\n      newTraps = thisAdventurerClass.traps;\n      newAgility = thisAdventurerClass.agility;\n      newTactics = thisAdventurerClass.tactics;\n      newMartialWeapons = thisAdventurerClass.martial_weapons;\n      newArmor = thisAdventurerClass.armor;\n      newAnatomy = thisAdventurerClass.anatomy;\n    }\n    return (\n      <div className=\"AdventurerClassForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer Class: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer_class'}\n          className=\"input-fields-area\"\n          id=\"AdventurerClassPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"class name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"bargaining\">bargaining</label>\n              <input type=\"number\" name=\"bargaining\" id=\"bargaining\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newBargaining}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"perception\">perception</label>\n              <input type=\"number\" name=\"perception\" id=\"perception\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newPerception}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"artifacts\">artifacts</label>\n              <input type=\"number\" name=\"artifacts\" id=\"artifacts\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArtifacts}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"traps\">traps</label>\n              <input type=\"number\" name=\"traps\" id=\"traps\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"agility\">agility</label>\n              <input type=\"number\" name=\"agility\" id=\"agility\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAgility}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"tactics\">tactics</label>\n              <input type=\"number\" name=\"tactics\" id=\"tactics\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTactics}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"martial_weapons\">martial weapon</label>\n              <input type=\"number\" name=\"martial_weapons\" id=\"martial_weapons\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newMartialWeapons}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArmor}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"anatomy\">anatomy</label>\n              <input type=\"number\" name=\"anatomy\" id=\"anatomy\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAnatomy}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer Class' : 'Create Adventurer Class' } className=\"button create-button\"></input>\n          </form>\n          <p>Points should total 45</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassForm);\n","import React from 'react';\nimport './AdventurerDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.deleteAdventurer = this.deleteAdventurer.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.adventurerClasses || !this.props.townBehaviors || !this.props.dungeonBehaviors) {\n      this.props.loadAdventurerDetails();\n    }\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurer() {\n    yield deleteRequests.makeRequest('adventurer', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurer = this.deleteAdventurer();\n    deleteAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n    const {\n      name,\n      strength,\n      speed,\n      cunning,\n      intelligence,\n      constitution,\n      dungeon_behavior_id,\n      town_behavior_id,\n      adventurer_class_id\n    } = thisAdventurer;\n    if (!this.props.dungeonBehaviors || !this.props.townBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === dungeon_behavior_id);\n    const dungeonBehaviorName = thisDungeonBehavior.name;\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === town_behavior_id);\n    const townBehaviorName = thisTownBehavior.name;\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === adventurer_class_id);\n    const adventurerClassname = thisAdventurerClass.name;\n\n    return (\n      <div className=\"AdventurerDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerEditButton\" onClick={() => this.props.setDisplayForm({ form: 'adventurer', edit: true, targetId: thisAdventurer.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Strength</span>\n            <span className=\"display-text\">{strength}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Speed</span>\n            <span className=\"display-text\">{speed}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Cunning</span>\n            <span className=\"display-text\">{cunning}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Intelligence</span>\n            <span className=\"display-text\">{intelligence}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Constitution</span>\n            <span className=\"display-text\">{constitution}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Dungeon Behavior</span>\n            <span className=\"display-text\">{dungeonBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Town Behavior</span>\n            <span className=\"display-text\">{townBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Class</span>\n            <span className=\"display-text\">{adventurerClassname}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    displayId: state.detail.targetId,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerDisplay);","import React from 'react'\nimport './AdventurerForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDungeonBehaviorOptions = this.getDungeonBehaviorOptions.bind(this);\n    this.getTownBehaviorOptions = this.getTownBehaviorOptions.bind(this);\n    this.getAdventurerClassOptions = this.getAdventurerClassOptions.bind(this);\n    this.addAdventurer = this.addAdventurer.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getDungeonBehaviorOptions() {\n    const dungeonOptions = this.props.dungeonBehaviors;\n    return dungeonOptions.map(dungeonOption => {\n      return <option value={dungeonOption.id}>{dungeonOption.name}</option>\n    });\n  }\n\n  getTownBehaviorOptions() {\n    const townOptions = this.props.townBehaviors;\n    return townOptions.map(townOption => {\n      return <option value={townOption.id}>{townOption.name}</option>\n    });\n  }\n\n  getAdventurerClassOptions() {\n    const classOptions = this.props.adventurerClasses;\n    return classOptions.map(classOption => {\n      return <option value={classOption.id}>{classOption.name}</option>\n    });\n  }\n\n  componentDidMount() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      this.props.loadAdventurerDetails();\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'adventurer', targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurer(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer', data);\n    } else {\n      yield postRequest.makeRequest('adventurer', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurer = this.addAdventurer(data);\n    this.addAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'adventurer', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    let newHeading = 'New Adventurer';\n    let newId;\n    let newName = '';\n    let newStrength = 0;\n    let newSpeed = 0;\n    let newCunning = 0;\n    let newIntelligence = 0;\n    let newConstitution = 0;\n    let newDungeonBehavior, newTownBehavior, newAdventurerClass;\n\n    if (this.props.edit) {\n      const allAdventurers = this.props.adventurers;\n      const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === thisAdventurer.dungeoBehaviorId);\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === thisAdventurer.townBehaviorId);\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === thisAdventurer.adventurerClassId);\n      newId = thisAdventurer.id;\n      newName = thisAdventurer.name;\n      newHeading = newName;\n      newStrength = thisAdventurer.strength;\n      newSpeed = thisAdventurer.speed;\n      newCunning = thisAdventurer.cunning;\n      newIntelligence = thisAdventurer.intelligence;\n      newConstitution = thisAdventurer.constitution;\n      newDungeonBehavior = thisDungeonBehavior;\n      newTownBehavior = thisTownBehavior;\n      newAdventurerClass = thisAdventurerClass;\n    }\n\n    return (\n      <div className=\"AdventurerForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer Class: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer'}\n          className=\"input-fields-area\"\n          id=\"AdventurerPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"adventurer name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"strength\">strength</label>\n              <input type=\"number\" name=\"strength\" id=\"strength\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newStrength}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"speed\">speed</label>\n              <input type=\"number\" name=\"speed\" id=\"speed\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newSpeed}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"cunning\">cunning</label>\n              <input type=\"number\" name=\"cunning\" id=\"cunning\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newCunning}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"intelligence\">intelligence</label>\n              <input type=\"number\" name=\"intelligence\" id=\"intelligence\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newIntelligence}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"constitution\">constitution</label>\n              <input type=\"number\" name=\"constitution\" id=\"constitution\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newConstitution}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"dungeonBehaviorId\">dungeon behavior</label>\n              <select className=\"dungeon-behavior-select\"\n                name=\"dungeonBehaviorId\"\n                id=\"dungeonBehaviorId\"\n                defaultValue={newDungeonBehavior === undefined ? null : newDungeonBehavior.id}>\n                  {this.getDungeonBehaviorOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"townBehaviorId\">town behavior</label>\n              <select className=\"town-behavior-select\"\n                name=\"townBehaviorId\"\n                id=\"townBehaviorId\"\n                defaultValue={newTownBehavior === undefined ? null : newTownBehavior.id}>\n                  {this.getTownBehaviorOptions()}\n              </select>  \n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"adventurerClassId\">class</label>\n              <select className=\"adventurer-class-select\"\n                name=\"adventurerClassId\"\n                id=\"adventurerClassId\"\n                defaultValue={newAdventurerClass === undefined ? null : newAdventurerClass.id}>\n                  {this.getAdventurerClassOptions()}\n              </select>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer' : 'Create Adventurer' } className=\"button create-button\"></input>\n        </form>\n        <p>Points should total 15</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurers: state.adventurers.adventurers,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerForm);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\n// item components\nimport PotionForm from '../../Components/PotionForm/PotionForm';\nimport PotionDisplay from '../../Components/PotionDisplay/PotionDisplay';\nimport WeaponForm from '../../Components/WeaponForm/WeaponForm';\nimport WeaponDisplay from '../../Components/WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../../Components/ArmorForm/ArmorForm';\nimport ArmorDisplay from '../../Components/ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../../Components/SupplierForm/SupplierForm';\nimport SupplierDisplay from '../../Components/SupplierDisplay/SupplierDisplay';\n// npc components\nimport TownBehaviorDisplay from '../../Components/TownBehaviorDisplay/TownBehaviorDisplay';\nimport TownBehaviorForm from '../../Components/TownBehaviorForm/TownBehaviorForm';\nimport DungeonBehaviorDisplay from '../../Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay';\nimport DungeonBehaviorForm from '../../Components/DungeonBehaviorForm/DungeonBehaviorForm';\nimport AdventurerClassDisplay from '../../Components/AdventurerClassDisplay/AdventurerClassDisplay';\nimport AdventurerClassForm from '../../Components/AdventurerClassForm/AdventurerClassForm';\nimport AdventurerDisplay from '../../Components/AdventurerDisplay/AdventurerDisplay';\nimport AdventurerForm from '../../Components/AdventurerForm/AdventurerForm';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.getPotionDetail = this.getPotionDetail.bind(this);\n    this.getWeaponDetail = this.getWeaponDetail.bind(this);\n    this.getArmorDetail = this.getArmorDetail.bind(this);\n    this.getSupplierDetail = this.getSupplierDetail.bind(this);\n    this.getTownBehaviorDetail = this.getTownBehaviorDetail.bind(this);\n    this.getDungeonBehaviorDetail = this.getDungeonBehaviorDetail.bind(this);\n    this.getAdventurerClassDetail = this.getAdventurerClassDetail.bind(this);\n    this.getAdventurerDetail = this.getAdventurerDetail.bind(this);\n    this.getMonsterDropListDetail = this.getMonsterDropListDetail.bind(this);\n  }\n\n  getPotionDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <PotionForm />\n    } else {\n      return <PotionDisplay />\n    }\n  }\n\n  getWeaponDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <WeaponForm />\n    } else {\n      return <WeaponDisplay />\n    }\n  }\n\n  getArmorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <ArmorForm />\n    } else {\n      return <ArmorDisplay />\n    }\n  }\n\n  getSupplierDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <SupplierForm />\n    } else {\n      return <SupplierDisplay />\n    }\n  }\n\n  getTownBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <TownBehaviorForm />\n    } else {\n      return <TownBehaviorDisplay />\n    }\n  }\n\n  getDungeonBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <DungeonBehaviorForm />;\n    } else {\n      return <DungeonBehaviorDisplay />\n    }\n  }\n\n  getAdventurerClassDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <AdventurerClassForm />\n    } else {\n      return <AdventurerClassDisplay />\n    }\n  }\n\n  getAdventurerDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <AdventurerForm />;\n    } else {\n      return <AdventurerDisplay />;\n    }\n  }\n\n  getMonsterDropListDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return 'MonsterDropListForm';\n    } else {\n      return 'MonsterDropListDisplay';\n    }\n  }\n\n  getDetail() {\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n    if (this.props.refresh) {\n      this.props.setRefresh(false);\n      return '';\n    }\n\n    switch(this.props.formType) {\n      case 'potion':\n        return this.getPotionDetail();\n      case 'weapon':\n        return this.getWeaponDetail();\n      case 'armor':\n        return this.getArmorDetail();\n      case 'supplier':\n        return this.getSupplierDetail();\n      case 'town_behavior':\n        return this.getTownBehaviorDetail();\n      case 'dungeon_behavior':\n        return this.getDungeonBehaviorDetail();\n      case 'adventurer_class':\n        return this.getAdventurerClassDetail();\n      case 'adventurer':\n        return this.getAdventurerDetail();\n      case 'monster_drop_list':\n        return this.getMonsterDropListDetail();\n      default:\n        return (<div className=\"BlankForm\">detail type unknown</div>)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit,\n    refresh: state.detail.refresh\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../../Containers/ObjectListColumn/ObjectListColumn';\nimport DetailView from '../../Containers/DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false,\n  refresh: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    case SET_DETAIL_REFRESH:\n      return {\n        ...state,\n        refresh: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_TOWN_BEHAVIORS, SET_DUNGEON_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  townBehaviors: null,\n  dungeonBehaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SET_TOWN_BEHAVIORS:\n      return {\n        ...state,\n        townBehaviors: action.payload\n      }\n    case SET_DUNGEON_BEHAVIORS:\n      return {\n        ...state,\n        dungeonBehaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURER_CLASSES } from '../actions/types';\n\nconst initialState = {\n  classes: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURER_CLASSES:\n      return {\n        ...state,\n        classes: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_DROP_LISTS } from '../actions/types';\n\nconst initialState = {\n  monster: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_DROP_LISTS:\n      return {\n        ...state,\n        monster: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\nimport behaviorsReducer from './behaviorsReducer';\nimport adventurerClassReducer from './adventurerClassReducer';\nimport adventurerReducer from './adventurerReducer';\nimport dropListReducer from './dropListReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer,\n  behaviors: behaviorsReducer,\n  adventurerClasses: adventurerClassReducer,\n  adventurers: adventurerReducer,\n  dropLists: dropListReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}