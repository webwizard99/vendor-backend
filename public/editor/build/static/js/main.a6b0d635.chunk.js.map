{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","Components/PotionsList/PotionsList.jsx","actions/types.js","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","actions/index.js","Components/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Components/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/Fetchers/Fetchers.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","PotionsList","window","fetcher","fetchPotions","setDisplayForm","form","edit","targetId","potions","newPotions","map","potion","potionClass","id","item","name","detail","dispatch","payload","WeaponsList","fetchWeapons","weapons","newWeapons","weapon","weaponClass","ArmorList","fetchArmor","armor","newArmor","armorClass","ItemList","SupplierList","fetchSuppliers","suppliers","newSuppliers","supplier","supplierClass","fetchUser","a","axios","get","res","data","ObjectListColumn","shouldComponentUpdate","componentDidMount","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","getMethod","handleCloseButton","CloseFormButton","PotionForm","potionType","value","e","preventDefault","displayId","console","log","newHeading","newName","newValue","newDetails","newRarity","newPotionType","newLevel","newId","newItemId","thisPotion","find","details","rarity","level","itemId","action","method","htmlFor","placeholder","maxLength","defaultValue","min","max","getPotionOptions","class","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","makeRequest","deleteType","deleteId","fetch","then","response","json","deleteRes","PotionDisplay","deletePotion","dialogRef","setDialog","text","next","WeaponForm","newDamage","thisWeapon","damage","WeaponDisplay","ArmorForm","thisArmor","ArmorDisplay","itemTypes","SupplierForm","getOfferingOptions","Object","values","itemType","thisSupplier","offerings","dir","offering","markup","SupplierDisplay","DetailView","getDetail","getPotionDetail","getWeaponDetail","getArmorDetail","getSupplierDetail","formType","DialogBox","handleNo","clicked","target","classList","contains","ref","yesCallback","noCallback","Fetcher","App","getDialog","Fetchers","initialState","combineReducers","newTargetId","newEdit","newForm","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a6b0d635.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  componentDidMount() {\n    window.fetcher.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: null })}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === \"potion\" && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  componentDidMount() {\n    window.fetcher.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: null })}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === \"weapon\" && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  componentDidMount() {\n    window.fetcher.fetchArmor();\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={() => this.props.setDisplayForm({ form: 'armor', edit: false, targetId: null })}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === 'armor' && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'armor', edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  componentDidMount() {\n    window.fetcher.fetchSuppliers();\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\">\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === 'supplier' && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import axios from 'axios';\nimport { FETCH_USER, SET_POTIONS, SET_WEAPONS, SET_ARMOR, SET_SUPPLIERS } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../ItemList/ItemList';\nimport SupplierList from '../SupplierList/SupplierList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  componentDidMount() {\n    // this.props.fetchPotions();\n    // this.props.fetchWeapons();\n    // this.props.fetchArmor();\n    // this.props.fetchSuppliers();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.getMethod = this.getMethod.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  getMethod() {\n    return ''\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass PotionForm extends DisplayForm {\n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  handleSubmit(e) {\n    console.log(e);\n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newPotionType = '';\n    let newLevel = '';\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"hidden\" name=\"_METHOD\" value={this.getMethod()}/>\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } class=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n\n      console.log(deleteRes);\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n    \n    this.deletePotion = this.deletePotion.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deletePotion() {\n    yield deleteRequests.makeRequest('potion', this.props.displayId);\n  }\n\n  handleYes() {\n    let deletePotion = this.deletePotion();\n    deletePotion.next().value.then(() => {\n      window.fetcher.fetchPotions();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: 'potion', edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchPotions: actions.fetchPotions\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass WeaponForm extends DisplayForm {\n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"hidden\" name=\"_METHOD\" value={this.getMethod()}/>\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } class=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  handleYes() {\n    deleteRequests.makeRequest('weapon', this.props.displayId);\n    this.props.setDialog({ active: false, text: '' });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass ArmorForm extends DisplayForm {\n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'armor', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"hidden\" name=\"_METHOD\" value={this.getMethod()}/>\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } class=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  handleYes() {\n    deleteRequests.makeRequest('armor', this.props.displayId);\n    this.props.setDialog({ active: false, text: '' });\n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'armor', edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n  }\n  \n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'supplier', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  getForm() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const newName = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n    console.dir(thisSupplier);\n    console.dir(offerings);\n    console.log(`offerings type: ${typeof offerings}`);\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newName}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/suppliers'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.map(offering => {\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      {/* <label className=\"item-label\" htmlFor={`offering-${offering.id}-type`}>\n                        Type\n                      </label> */}\n                      <select className=\"offering-select\" name={`offering-${offering.id}-type`} id={`offering-${offering.id}-type`} defaultValue={offering.type}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      {/* <label className=\"item-label\" htmlFor={`markup-${offering.id}-type`}>\n                        Markup\n                      </label> */}\n                      <input className=\"input-number\" type=\"number\" name={`markup-${offering.id}-type`} id={`markup-${offering.id}-type`} defaultValue={offering.markup}>\n                      </input>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\n\nclass SupplierDisplay extends DisplayStatic {\n  getDeleteButton() {\n    return (\n      <div className=\"DeleteSupplierButton\">\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\nimport PotionForm from '../PotionForm/PotionForm';\nimport PotionDisplay from '../PotionDisplay/PotionDisplay';\nimport WeaponForm from '../WeaponForm/WeaponForm';\nimport WeaponDisplay from '../WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../ArmorForm/ArmorForm';\nimport ArmorDisplay from '../ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../SupplierForm/SupplierForm';\nimport SupplierDisplay from '../SupplierDisplay/SupplierDisplay';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.getPotionDetail = this.getPotionDetail.bind(this);\n    this.getWeaponDetail = this.getWeaponDetail.bind(this);\n    this.getArmorDetail = this.getArmorDetail.bind(this);\n    this.getSupplierDetail = this.getSupplierDetail.bind(this);\n  }\n\n  getPotionDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <PotionForm />\n    } else {\n      return <PotionDisplay />\n    }\n  }\n\n  getWeaponDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <WeaponForm />\n    } else {\n      return <WeaponDisplay />\n    }\n  }\n\n  getArmorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <ArmorForm />\n    } else {\n      return <ArmorDisplay />\n    }\n  }\n\n  getSupplierDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <SupplierForm />\n    } else {\n      return <SupplierDisplay />\n    }\n  }\n\n  getDetail() {\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n\n    switch(this.props.formType) {\n      case 'potion':\n        return this.getPotionDetail();\n      case 'weapon':\n        return this.getWeaponDetail();\n      case 'armor':\n        return this.getArmorDetail();\n      case 'supplier':\n        return this.getSupplierDetail();\n      default:\n        return (<div className=\"BlankForm\">detail type unknown</div>)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit\n  }\n}\n\nexport default connect(mapStateToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass Fetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPotions = this.fetchPotions.bind(this);\n    this.fetchWeapons = this.fetchWeapons.bind(this);\n    this.fetchArmor = this.fetchArmor.bind(this);\n    this.fetchSuppliers = this.fetchSuppliers.bind(this);\n  }\n\n  componentWillMount() {\n    const thisRef = this;\n    window.fetcher = thisRef;\n  }\n\n  fetchPotions() {\n    this.props.fetchPotions();\n  }\n\n  fetchWeapons() {\n    this.props.fetchWeapons();\n  }\n\n  fetchArmor() {\n    this.props.fetchArmor();\n  }\n\n  fetchSuppliers() {\n    this.props.fetchSuppliers();\n  }\n\n\n  render() {\n    return ''\n  }\n}\n\nexport default connect(null, actions)(Fetcher);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../ObjectListColumn/ObjectListColumn';\nimport DetailView from '../DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\nimport Fetchers from '../Fetchers/Fetchers';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n        <Fetchers />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      // if (!newTargetId && newTargetId !== 0) {\n      //   newTargetId = state.targetId;\n      // }\n      // if (!newEdit) {\n      //   newEdit = state.edit;\n      // }\n      // if (!newForm) {\n      //   newForm = state.form;\n      // }\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}