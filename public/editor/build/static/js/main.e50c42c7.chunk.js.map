{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","actions/index.js","actions/types.js","Components/PotionsList/PotionsList.jsx","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","Containers/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","utilities/itemPostRequests.js","utilities/itemPutRequests.js","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","Components/DeleteOfferingButton/DeleteOfferingButton.jsx","Components/AddOfferingButton/AddOfferingButton.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Containers/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/behaviorsReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","fetchUser","dispatch","a","axios","get","res","payload","data","fetchPotions","fetchWeapons","fetchArmor","fetchSuppliers","fetchTownBehaviors","fetchDungeonBehaviors","PotionsList","componentDidMount","handleNew","setRefresh","setDisplayForm","form","edit","targetId","potions","newPotions","map","potion","potionClass","id","item","name","detail","value","WeaponsList","weapons","newWeapons","weapon","weaponClass","ArmorList","armor","newArmor","armorClass","ItemList","SupplierList","suppliers","newSuppliers","supplier","supplierClass","ObjectListColumn","shouldComponentUpdate","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","handleCloseButton","CloseFormButton","itemPostRequests","makeRequest","postRoute","postBody","subBody","JSON","stringify","postRes","fetch","method","headers","body","itemPutRequests","putRoute","putBody","putRes","PotionForm","addPotion","handleSubmit","potionType","e","preventDefault","displayId","itemPutRequest","itemPostRequest","FormData","target","next","then","newHeading","newName","newValue","newDetails","newRarity","newPotionType","newLevel","newId","newItemId","refresh","thisPotion","find","details","rarity","level","itemId","action","onSubmit","htmlFor","required","placeholder","maxLength","defaultValue","min","max","getPotionOptions","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","deleteType","deleteId","response","json","deleteRes","makeRequestSupplier","route","offeringIds","PotionDisplay","deletePotion","window","dialogRef","setDialog","text","WeaponForm","addWeapon","newDamage","thisWeapon","damage","WeaponDisplay","deleteWeapon","ArmorForm","addArmor","thisArmor","ArmorDisplay","deleteArmor","DeleteOfferingButton","AddOfferingButton","itemTypes","SupplierForm","initialized","initializeFields","getOfferingOptions","handleChange","addFormOffering","deleteOffering","updateSupplier","offerings","thisSupplier","initialState","presentIds","length","offering","markup","push","existingIdCount","deletedIds","newOfferingIndex","newOfferingKeys","Object","values","itemType","updatedState","existing","offeringId","newDeleted","newCount","offeringIndex","indexOf","splice","stateUpdate","getAttribute","onChange","deletedMap","includes","index","newOfferingsCount","SupplierDisplay","deleteSupplier","forEach","refOffering","DetailView","getDetail","getPotionDetail","getWeaponDetail","getArmorDetail","getSupplierDetail","formType","DialogBox","handleNo","clicked","classList","contains","ref","yesCallback","noCallback","App","getDialog","townBehaviors","dungeonBehaviors","combineReducers","newTargetId","newEdit","newForm","behaviors","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e50c42c7.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","import axios from 'axios';\nimport { FETCH_USER,\n  SET_POTIONS, \n  SET_WEAPONS, \n  SET_ARMOR, \n  SET_SUPPLIERS,\n  SET_TOWN_BEHAVIORS,\n  SET_DUNGEON_BEHAVIORS } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}\n\nexport const fetchTownBehaviors = () => async dispatch => {\n  const res = await axios.get('/town_behaviors');\n  dispatch({ type: SET_TOWN_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchDungeonBehaviors = () => async dispatch => {\n  const res = await axios.get('/dungeon_behaviors');\n  dispatch({ type: SET_DUNGEON_BEHAVIORS, payload: res.data });\n}","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_DETAIL_REFRESH = \"SET_DETAIL_REFRESH\";\nexport const SET_TOWN_BEHAVIORS = \"SET_TOWN_BEHAVIORS\";\nexport const SET_DUNGEON_BEHAVIORS = \"SET_DUNGEON_BEHAVIORS\";","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'potion', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === \"potion\" && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: null });\n  }\n  \n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === \"weapon\" && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchArmor();\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'armor', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === 'armor' && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'armor', edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchSuppliers();\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'supplier', edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\"\n        onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === 'supplier' && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../../Components/ItemList/ItemList';\nimport SupplierList from '../../Components/SupplierList/SupplierList';\n\n// redux imports\n// comment to update code\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","const itemPostRequests = (function() {\n  return {\n    makeRequest: async function(postRoute, postBody) {\n      let subBody = {};\n      for ( let [ key, value ] of postBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const postRes = fetch(`/${postRoute}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return postRes;\n    }\n  }\n}());\n\nexport default itemPostRequests;","const itemPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default itemPutRequests;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\n// gratitous comment to push code.\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass PotionForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addPotion = this.addPotion.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addPotion(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('potion', data);\n    } else {\n      yield itemPostRequest.makeRequest('potion', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target)\n    let addPotion = this.addPotion(data);\n    addPotion.next().value.then(() => {\n      this.props.fetchPotions();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n    \n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newPotionType = '';\n    let newLevel = '';\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit && !this.props.refresh) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" required name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" required name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" required name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" required name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestSupplier: async function(payload) {\n      const {\n        route, id, offeringIds\n      } = payload;\n\n      let data = {\n        id: id,\n        offeringIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n    \n    this.deletePotion = this.deletePotion.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deletePotion() {\n    yield deleteRequests.makeRequest('potion', this.props.displayId);\n  }\n\n  handleYes() {\n    let deletePotion = this.deletePotion();\n    deletePotion.next().value.then(() => {\n      this.props.fetchPotions();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: 'potion', edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons} from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass WeaponForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addWeapon = this.addWeapon.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addWeapon(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('weapon', data);\n    } else {\n      yield itemPostRequest.makeRequest('weapon', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let addWeapon = this.addWeapon(data);\n    addWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" required defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" required defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" required name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteWeapon = this.deleteWeapon.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteWeapon() {\n    yield deleteRequests.makeRequest('weapon', this.props.displayId);\n  }\n\n  handleYes() {\n    let deleteWeapon = this.deleteWeapon();\n    deleteWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass ArmorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addArmor = this.addArmor.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'armor', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addArmor(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('armor', data);\n    } else {\n      yield itemPostRequest.makeRequest('armor', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addArmor = this.addArmor(data);\n    this.addArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'armor', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          onSubmit={this.handleSubmit}\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteArmor = this.deleteArmor.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteArmor() {\n    yield deleteRequests.makeRequest('armor', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteArmor = this.deleteArmor();\n    deleteArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n    \n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'armor', edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","import React from 'react';\nimport './DeleteOfferingButton.css';\n\nclass DeleteOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteOfferingButton\">\n        <span className=\"offeringButtonIcon\">X</span>\n      </div>\n    )\n  }\n}\n\nexport default DeleteOfferingButton;","import React from 'react';\nimport './AddOfferingButton.css';\n\nclass AddOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddOfferingButton\">\n        <span className=\"addOfferingButtonIcon\">+</span>\n      </div>\n    )\n  }\n}\n\nexport default AddOfferingButton;","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addFormOffering = this.addFormOffering.bind(this);\n    this.deleteOffering = this.deleteOffering.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateSupplier = this.updateSupplier.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.suppliers) return;\n    let newName = '';\n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      newName = thisSupplier.name;\n      offerings = thisSupplier.offerings;\n    }\n   \n\n    let initialState = {};\n\n    initialState['name'] = newName;\n    let presentIds = [];\n    if (offerings.length > 0) {\n      for (const offering of offerings) {\n        initialState[`offering-${offering.id}-type`] = offering.type;\n        initialState[`offering-${offering.id}-markup`] = offering.markup;\n        presentIds.push(offering.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = offerings.length;\n    initialState.deletedIds = [];\n    initialState.newOfferingIndex = 0;\n    initialState.newOfferingKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'supplier', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  addFormOffering() {\n    // limit offerings to 5\n    const totalCount = this.state.newOfferingKeys.length + this.state.existingIdCount;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newOfferingIndex = this.state.newOfferingIndex;\n    updatedState[`new-offering-${newOfferingIndex}-type`] = 1;\n    updatedState[`new-offering-${newOfferingIndex}-markup`] = 100;\n    let newOfferingKeys = this.state.newOfferingKeys;\n    newOfferingKeys.push(newOfferingIndex);\n    updatedState.newOfferingKeys = newOfferingKeys;\n    newOfferingIndex += 1;\n    updatedState.newOfferingIndex = newOfferingIndex;\n    this.setState(updatedState);\n    \n  }\n\n  deleteOffering(payload) {\n    const { existing, offeringId } = payload\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(offeringId);\n      newCount -= 1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newOfferingKeys = this.state.newOfferingKeys;\n      const offeringIndex = newOfferingKeys.indexOf(offeringId);\n      if (offeringIndex < 0 || (offeringIndex !== 0 && !offeringIndex)) return;\n      newOfferingKeys.splice(offeringIndex, 1);\n      updatedState.newOfferingKeys = newOfferingKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value\n    this.setState(stateUpdate);\n  }\n\n  *updateSupplier(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('supplier', data);\n    } else {\n      yield itemPostRequest.makeRequest('supplier', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateSupplier = this.updateSupplier(data);\n    updateSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'supplier', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n    \n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      offerings = thisSupplier.offerings;\n    }\n    \n    let newHeading = 'New Supplier';\n    if (this.props.edit) {\n      newHeading = this.state.name;\n    }\n    let newId = null;\n    if (this.props.edit) {\n      newId = this.props.displayId;\n    }\n    const newOfferingKeys = this.state.newOfferingKeys;\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/supplier'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"supplier name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.length <= 0 ? '' : offerings.map(offering => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(offering.id)) {\n                  return ''\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"offering-select\" \n                        name={`offering-${offering.id}-type`} \n                        id={`offering-${offering.id}-type`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-type`]}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\" \n                        type=\"number\" \n                        name={`offering-${offering.id}-markup`} \n                        id={`offering-${offering.id}-markup`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-markup`]}>\n                      </input>\n                      <span className=\"offeringDelete\"\n                        onClick={() => this.deleteOffering({ existing: true, offeringId: offering.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n            {newOfferingKeys.length <= 0 ? '' : newOfferingKeys.map(index => {\n              return (\n                <div className=\"form-inner-span\">\n                  <div className=\"form-half-span form-left-half\">\n                    <select className=\"offering-select\"\n                      name={`new-offering-${index}-type`}\n                      id={`new-offering-${index}-type`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-type`]}>\n                        {this.getOfferingOptions()}\n                    </select>\n                  </div>\n                  <div className=\"form-half-span form-right-half\">\n                    <input className=\"input-number\"\n                      type=\"number\"\n                      name={`new-offering-${index}-markup`}\n                      id={`new-offering-${index}-markup`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-markup`]}>\n                    </input>\n                    <span className=\"offeringDelete\"\n                      onClick={() => this.deleteOffering({ existing: false, offeringId: index })}\n                    >\n                      <DeleteOfferingButton />\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n            <div className=\"offeringAdd form-full-span form-center-content\"\n              onClick={this.addFormOffering}\n            >\n              <AddOfferingButton />\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n          <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n          <input type=\"hidden\" name=\"newIndexes\" value={this.state.newOfferingKeys} />\n          <input type=\"hidden\" name=\"newOfferingsCount\" value={this.state.newOfferingsCount} />\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <div className=\"supplier-submit-container\">\n          <input type=\"submit\" value={this.props.edit ? 'Update Supplier' : 'Create Supplier' } className=\"button create-button\"></input>\n          </div>          \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass SupplierDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteSupplier = this.deleteSupplier.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteSupplierButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Supplier and Offerings from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteSupplier(payload) {\n    yield deleteRequests.makeRequestSupplier(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'supplier';\n    payload.id = this.props.displayId;\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const offerings = thisSupplier.offerings;\n    let offeringIds = [];\n    if (offerings.length > 0) {\n      offerings.forEach(refOffering => {\n        offeringIds.push(refOffering.id);\n      });\n    }\n    payload.offeringIds = offeringIds;\n\n    // invoke delete request\n    let deleteSupplier = this.deleteSupplier(payload);\n    deleteSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, displayId: null });\n    });\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\nimport PotionForm from '../../Components/PotionForm/PotionForm';\nimport PotionDisplay from '../../Components/PotionDisplay/PotionDisplay';\nimport WeaponForm from '../../Components/WeaponForm/WeaponForm';\nimport WeaponDisplay from '../../Components/WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../../Components/ArmorForm/ArmorForm';\nimport ArmorDisplay from '../../Components/ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../../Components/SupplierForm/SupplierForm';\nimport SupplierDisplay from '../../Components/SupplierDisplay/SupplierDisplay';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.getPotionDetail = this.getPotionDetail.bind(this);\n    this.getWeaponDetail = this.getWeaponDetail.bind(this);\n    this.getArmorDetail = this.getArmorDetail.bind(this);\n    this.getSupplierDetail = this.getSupplierDetail.bind(this);\n  }\n\n  getPotionDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <PotionForm />\n    } else {\n      return <PotionDisplay />\n    }\n  }\n\n  getWeaponDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <WeaponForm />\n    } else {\n      return <WeaponDisplay />\n    }\n  }\n\n  getArmorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <ArmorForm />\n    } else {\n      return <ArmorDisplay />\n    }\n  }\n\n  getSupplierDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <SupplierForm />\n    } else {\n      return <SupplierDisplay />\n    }\n  }\n\n  getDetail() {\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n    if (this.props.refresh) {\n      this.props.setRefresh(false);\n      return '';\n    }\n\n    switch(this.props.formType) {\n      case 'potion':\n        return this.getPotionDetail();\n      case 'weapon':\n        return this.getWeaponDetail();\n      case 'armor':\n        return this.getArmorDetail();\n      case 'supplier':\n        return this.getSupplierDetail();\n      default:\n        return (<div className=\"BlankForm\">detail type unknown</div>)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit,\n    refresh: state.detail.refresh\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../../Containers/ObjectListColumn/ObjectListColumn';\nimport DetailView from '../../Containers/DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false,\n  refresh: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    case SET_DETAIL_REFRESH:\n      return {\n        ...state,\n        refresh: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_TOWN_BEHAVIORS, SET_DUNGEON_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  townBehaviors: null,\n  dungeonBehaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SET_TOWN_BEHAVIORS:\n      return {\n        ...state,\n        townBehaviors: action.payload\n      }\n    case SET_DUNGEON_BEHAVIORS:\n      return {\n        ...state,\n        dungeonBehaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\nimport behaviorsReducer from './behaviorsReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer,\n  behaviors: behaviorsReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}