{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","actions/types.js","actions/index.js","utilities/formTypes.js","Components/PotionsList/PotionsList.jsx","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","Components/TownBehaviorList/TownBehaviorList.jsx","Components/DungeonBehaviorList/DungeonBehaviorList.jsx","Components/BehaviorList/BehaviorList.jsx","Components/AdventurerClassList/AdventurerClassList.jsx","Components/AdventurerList/AdventurerList.jsx","Components/NPCList/NPCList.jsx","Components/MonsterDropListList/MonsterDropListList.jsx","Components/MonsterBehaviorList/MonsterBehaviorList.jsx","Components/MonsterList/MonsterList.jsx","Containers/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","utilities/itemPostRequests.js","utilities/itemPutRequests.js","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","Components/DeleteOfferingButton/DeleteOfferingButton.jsx","Components/AddOfferingButton/AddOfferingButton.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Components/TownBehaviorDisplay/TownBehaviorDisplay.jsx","Components/TownBehaviorForm/TownBehaviorForm.jsx","Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay.jsx","Components/DungeonBehaviorForm/DungeonBehaviorForm.jsx","Components/AdventurerClassDisplay/AdventurerClassDisplay.jsx","Components/AdventurerClassForm/AdventurerClassForm.jsx","Components/AdventurerDisplay/AdventurerDisplay.jsx","Components/AdventurerForm/AdventurerForm.jsx","Components/MonsterDropListDisplay/MonsterDropListDisplay.jsx","Components/MonsterDropListForm/MonsterDropListForm.jsx","Components/MonsterBehaviorDisplay/MonsterBehaviorDisplay.jsx","Components/MonsterBehaviorForm/MonsterBehaviorForm.jsx","Components/MonsterDisplay/MonsterDisplay.jsx","Containers/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/behaviorsReducer.js","reducers/adventurerClassReducer.js","reducers/adventurerReducer.js","reducers/dropListReducer.js","reducers/monsterBehaviorReducer.js","reducers/monsterReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","SET_DETAIL_FORM","SET_DIALOG","fetchUser","dispatch","a","axios","get","res","payload","data","fetchPotions","fetchWeapons","fetchArmor","fetchSuppliers","fetchTownBehaviors","fetchDungeonBehaviors","fetchAdventurerClasses","fetchAdventurers","loadAdventurerDetails","fetchMonsterDropLists","loadItems","fetchMonsterBehaviors","fetchMonsters","loadMonsterDetails","PotionsList","componentDidMount","handleNew","setRefresh","setDisplayForm","form","formTypes","edit","targetId","potions","newPotions","map","potion","potionClass","id","item","name","detail","value","WeaponsList","weapons","newWeapons","weapon","weaponClass","ArmorList","armor","newArmor","armorClass","ItemList","SupplierList","suppliers","newSuppliers","supplier","supplierClass","TownBehaviorList","townBehaviors","newTownBehaviors","townBehavior","townBehaviorClass","behaviors","DungeonBehaviorList","dungeonBehaviors","newDungeonBehaviors","dungeonBehavior","dungeonBehaviorClass","BehaviorList","AdventurerClassList","adventurerClasses","newAdventurerClasses","adventurerClass","adventurerClassClass","classes","AdventurerList","adventurers","newAdventurers","adventurer","NPCList","MonsterDropListList","monsterDropLists","newMonsterDropLists","monsterDropList","monsterDropListClass","monster_drop_list","dropLists","monster","MonsterBehaviorList","monsterBehaviors","newMonsterBehaviors","monsterBehavior","monsterBehaviorClass","MonsterList","monsters","newMonsters","monsterClass","ObjectListColumn","shouldComponentUpdate","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","handleCloseButton","CloseFormButton","itemPostRequests","makeRequest","postRoute","postBody","subBody","JSON","stringify","postRes","fetch","method","headers","body","itemPutRequests","putRoute","putBody","putRes","PotionForm","addPotion","handleSubmit","potionType","e","preventDefault","displayId","itemPutRequest","itemPostRequest","FormData","target","next","then","newHeading","newName","newValue","newDetails","newRarity","newPotionType","newLevel","newId","newItemId","refresh","thisPotion","find","details","rarity","level","itemId","action","onSubmit","htmlFor","required","placeholder","maxLength","defaultValue","min","max","getPotionOptions","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","deleteType","deleteId","response","json","deleteRes","makeRequestSupplier","route","offeringIds","makeRequestDropList","monsterDroplistId","dropIds","PotionDisplay","deletePotion","window","dialogRef","setDialog","text","WeaponForm","addWeapon","newDamage","thisWeapon","damage","WeaponDisplay","deleteWeapon","ArmorForm","addArmor","thisArmor","ArmorDisplay","deleteArmor","DeleteOfferingButton","AddOfferingButton","itemTypes","SupplierForm","initialized","initializeFields","getOfferingOptions","handleChange","addFormOffering","deleteOffering","updateSupplier","offerings","thisSupplier","initialState","presentIds","length","offering","markup","push","existingIdCount","deletedIds","newOfferingIndex","newOfferingKeys","Object","values","itemType","updatedState","existing","offeringId","newDeleted","newCount","offeringIndex","indexOf","splice","stateUpdate","getAttribute","onChange","deletedMap","includes","index","newOfferingsCount","SupplierDisplay","deleteSupplier","forEach","refOffering","TownBehaviorDisplay","deleteTownBehavior","thisTownBehavior","buy_potion","sell_potion","upgrade_potion","buy_weapon","sell_weapon","upgrade_weapon","buy_armor","sell_armor","upgrade_armor","wealth","enter_dungeon","use_tavern","retire","emigrate","garrison_wall","TownBehaviorForm","addTownBehavior","putRequest","postRequest","newBuyPotion","newSellPotion","newUpgradePotion","newBuyWeapon","newSellWeapon","newUpgradeWeapon","newBuyArmor","newSellArmor","newUpgradeArmor","newWealth","newEnterDungeon","newUseTavern","newRetire","newEmigrate","newGarisonWall","step","DungeonBehaviorDisplay","deleteDungeonBehavior","thisDungeonBehavior","advance_tile","conserve_health","use_potion","rest","return_to_town","check_for_traps","disarm_trap","avoid_trap","search_for_treasure","fight_monster","flee_encounter","defend","attack","check_monster_weakness","explore_level","advance_next_level","fill_inventory","upgrade_inventory","fight_boss_monster","prefer_weaker_monster","try_for_level","DungeonBehaviorForm","addDungeonBehavior","newAdvanceTile","newConserveHealth","newUsePotion","newRest","newReturnToTown","newCheckForTraps","newDisarmTrap","newAvoidTrap","newSearchForTreasure","newFightMonster","newFleeEncounter","newDefend","newAttack","newCheckMonsterWeakness","newExploreLevel","newAdvanceNextLevel","newFillInventory","newUpgradeInventory","newFightBossMonster","newPreferWeakerMonster","newTryForLevel","AdventurerClassDisplay","deleteAdventurerClass","thisAdventurerClass","bargaining","perception","artifacts","traps","agility","tactics","martial_weapons","anatomy","AdventurerClassForm","addAdventurerClass","newBargaining","newPerception","newArtifacts","newTraps","newAgility","newTactics","newMartialWeapons","newAnatomy","AdventurerDisplay","setInitialized","componentDidUpdate","deleteAdventurer","val","thisAdventurer","strength","speed","cunning","intelligence","constitution","dungeonBehaviorId","townBehaviorId","adventurerClassId","dungeonBehaviorName","townBehaviorName","adventurerClassname","AdventurerForm","getDungeonBehaviorOptions","getTownBehaviorOptions","getAdventurerClassOptions","addAdventurer","dungeonOption","townOption","classOption","newDungeonBehavior","newTownBehavior","newAdventurerClass","newStrength","newSpeed","newCunning","newIntelligence","newConstitution","dungeoBehaviorId","undefined","MonsterDropListDisplay","getDrops","deleteDropList","drops","drop","itemName","drop_type","dropChance","thisDropList","dropList","thisName","thisGoldMin","gold_min","thisGoldMax","gold_max","thisGoldChance","gold_chance","thisDrops","MonsterDropListForm","getDropListOptions","addFormDrop","deleteDrop","updateMonsterDropList","newGoldMin","newGoldMax","newGoldChance","newDrops","newDropIndex","newDropKeys","propName","allItemsOfType","label","dropId","dropIndex","putRequests","postRequests","newMonsterDroplistId","MonsterBehaviorDisplay","deleteMonsterBehavior","thisMonsterBehavior","confront_weakened_adventurer","special_move","heal","block_flee","migrate","MonsterBehaviorForm","addMonsterBehavior","newConfrontWeakenedAdventurer","newSpecialMove","newHeal","newBlockFlee","newMigrate","MonsterDisplay","thisMonster","boss","hp","defense","stealth","initiative","special","dropListId","monsterBehaviorId","monsterDropListName","monsterBehaviorName","DetailView","getDetail","getPotionDetail","getWeaponDetail","getArmorDetail","getSupplierDetail","getTownBehaviorDetail","getDungeonBehaviorDetail","getAdventurerClassDetail","getAdventurerDetail","getMonsterDropListDetail","getMonsterBehaviorDetail","getMonsterDetail","formType","DialogBox","handleNo","clicked","classList","contains","ref","yesCallback","noCallback","App","getDialog","combineReducers","newTargetId","newEdit","newForm","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6653f8db.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_DETAIL_REFRESH = \"SET_DETAIL_REFRESH\";\nexport const SET_TOWN_BEHAVIORS = \"SET_TOWN_BEHAVIORS\";\nexport const SET_DUNGEON_BEHAVIORS = \"SET_DUNGEON_BEHAVIORS\";\nexport const SET_ADVENTURER_CLASSES = \"SET_ADVENTURER_CLASSES\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_MONSTER_DROP_LISTS = \"SET_MONSTER_DROP_LISTS\";\nexport const SET_MONSTER_BEHAVIORS = \"SET_MONSTER_BEHAVIORS\";\nexport const SET_MONSTERS = 'SET_MONSTERS';","import axios from 'axios';\nimport { FETCH_USER,\n  SET_POTIONS, \n  SET_WEAPONS, \n  SET_ARMOR, \n  SET_SUPPLIERS,\n  SET_TOWN_BEHAVIORS,\n  SET_DUNGEON_BEHAVIORS,\n  SET_ADVENTURER_CLASSES,\n  SET_ADVENTURERS,\n  SET_MONSTER_DROP_LISTS,\n  SET_MONSTER_BEHAVIORS,\n  SET_MONSTERS } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}\n\nexport const fetchTownBehaviors = () => async dispatch => {\n  const res = await axios.get('/town_behaviors');\n  dispatch({ type: SET_TOWN_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchDungeonBehaviors = () => async dispatch => {\n  const res = await axios.get('/dungeon_behaviors');\n  dispatch({ type: SET_DUNGEON_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchAdventurerClasses = () => async dispatch => {\n  const res = await axios.get('/adventurer_classes');\n  dispatch({ type: SET_ADVENTURER_CLASSES, payload: res.data });\n}\n\nexport const fetchAdventurers = () => async dispatch => {\n  const res = await axios.get('/adventurers');\n  dispatch({ type: SET_ADVENTURERS, payload: res.data });\n}\n\nexport const loadAdventurerDetails = () => async dispatch => {\n  dispatch(fetchTownBehaviors());\n  dispatch(fetchDungeonBehaviors());\n  dispatch(fetchAdventurerClasses());\n}\n\nexport const fetchMonsterDropLists = () => async dispatch => {\n  const res = await axios.get('/monster_drop_lists');\n  dispatch({ type: SET_MONSTER_DROP_LISTS, payload: res.data });\n}\n\nexport const loadItems = () => async dispatch => {\n  dispatch(fetchPotions());\n  dispatch(fetchWeapons());\n  dispatch(fetchArmor());\n}\n\nexport const fetchMonsterBehaviors = () => async dispatch => {\n  const res = await axios.get('/monster_behaviors');\n  dispatch({ type: SET_MONSTER_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchMonsters = () => async dispatch => {\n  const res = await axios.get('/monsters');\n  dispatch({ type: SET_MONSTERS, payload: res.data });\n}\n\nexport const loadMonsterDetails = () => async dispatch => {\n  dispatch(fetchMonsterBehaviors());\n  dispatch(fetchMonsterDropLists());\n}","export default {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor',\n  supplier: 'supplier',\n  town_behavior: 'town_behavior',\n  dungeon_behavior: 'dungeon_behavior',\n  adventurer_class: 'adventurer_class',\n  adventurer: 'adventurer',\n  monster_drop_list: 'monster_drop_list',\n  monster_behavior: 'monster_behavior',\n  monster: 'monster'\n}","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.potion, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === formTypes.potion && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: formTypes.potion, edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.weapon, edit: false, targetId: null });\n  }\n  \n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === formTypes.weapon && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.weapon, edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchArmor();\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.armor, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === formTypes.armor && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.armor, edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchSuppliers();\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.supplier, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\"\n        onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === formTypes.supplier && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.supplier, edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import React from 'react';\nimport './TownBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass TownBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.props.fetchTownBehaviors();\n  }\n\n  getTitle() {\n    return 'Town Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.town_behavior, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewTownBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.townBehaviors) {\n      return '';\n    } else {\n      const newTownBehaviors = this.props.townBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newTownBehaviors.map(townBehavior => {\n            let townBehaviorClass = \"ListDetail\";\n            if (this.props.form === formTypes.town_behavior && this.props.targetId === townBehavior.id) {\n              townBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={townBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.town_behavior, edit: false, targetId: townBehavior.id })}\n                >{townBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorList);","import React from 'react';\nimport './DungeonBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass DungeonBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDungeonBehaviors();\n  }\n\n  getTitle() {\n    return 'Dungeon Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewDungeonBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.dungeonBehaviors) {\n      return '';\n    } else {\n      const newDungeonBehaviors = this.props.dungeonBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newDungeonBehaviors.map(dungeonBehavior => {\n            let dungeonBehaviorClass = \"ListDetail\";\n            if (this.props.form === formTypes.dungeon_behavior && dungeonBehavior.id === this.props.targetId) {\n              dungeonBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={dungeonBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: false, targetId: dungeonBehavior.id })}\n                >{dungeonBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorList);","import React from 'react';\nimport './BehaviorList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport TownBehaviorList from '../TownBehaviorList/TownBehaviorList';\nimport DungeonBehaviorList from '../DungeonBehaviorList/DungeonBehaviorList';\n\nclass BehaviorList extends ExpandableList {\n  getTitle() {\n    return 'Behaviors';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <TownBehaviorList />\n        <DungeonBehaviorList />\n      </div>\n    )\n  }\n}\n\nexport default BehaviorList;","import React from 'react';\nimport './AdventurerClassList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utitlity imports\nimport formTypes from '../../utilities/formTypes';\n\nclass AdventurerClassList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurerClasses();\n  }\n  \n  getTitle() {\n    return 'Classes';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerClassButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurerClasses) {\n      return '';\n    } else {\n      const newAdventurerClasses = this.props.adventurerClasses;\n      return (\n        <div className=\"detailList\">\n          {newAdventurerClasses.map(adventurerClass => {\n            let adventurerClassClass = \"ListDetail\";\n            if (this.props.form === formTypes.adventurer_class && this.props.targetId === adventurerClass.id) {\n              adventurerClassClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClassClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: false, targetId: adventurerClass.id })}\n                >{adventurerClass.name}</span>\n              </p>\n            );\n          })}\n        </div>\n      )\n    }\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassList);","import React from 'react';\nimport './AdventurerList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\nimport AdventurerClassList from '../AdventurerClassList/AdventurerClassList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass AdventurerList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurers();\n  }\n  \n  getTitle() {\n    return 'Adventurers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.adventurer, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurers) {\n      return (\n        <div className=\"detailList\">\n          <AdventurerClassList />\n        </div>\n      )\n    } else {\n      const newAdventurers = this.props.adventurers;\n      return (\n        <div className=\"detailList\">\n          { newAdventurers.map(adventurer => {\n            let adventurerClass = \"ListDetail\";\n            if (this.props.form === formTypes.adventurer && this.props.targetId === adventurer.id) {\n              adventurerClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer, edit: false, targetId: adventurer.id })}\n                  >{adventurer.name}</span>\n              </p>\n            )\n          })}\n          <AdventurerClassList />\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerList);","import React from 'react';\nimport './NPCList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport BehaviorList from '../BehaviorList/BehaviorList';\nimport AdventurerList from '../AdventurerList/AdventurerList';\n\nclass NPCList extends ExpandableList {\n  getTitle() {\n    return 'NPCs';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <BehaviorList />\n        <AdventurerList />\n      </div>\n    )\n  }\n}\n\nexport default NPCList;","import React from 'react';\nimport './MonsterDropListList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterDropListList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterDropLists();\n  }\n  \n  getTitle() {\n    return 'Monster Drop Lists';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterDropListButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterDropLists) {\n      return '';\n    }\n    const newMonsterDropLists = this.props.monsterDropLists;\n    return (\n      <div className=\"detailList\">\n        { newMonsterDropLists.map(monsterDropList => {\n          let monsterDropListClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster_drop_list && this.props.targetId === monsterDropList.id) {\n            monsterDropListClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterDropListClass}\n              onClick={() => this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: monsterDropList.id })}\n              >{monsterDropList.monster_drop_list.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListList);","import React from 'react';\nimport './MonsterBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n    this.displayContents = this.displayContents.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterBehaviors();\n  }\n\n  getTitle() {\n    return 'Monster Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterBehaviors) {\n      return '';\n    }\n    const newMonsterBehaviors = this.props.monsterBehaviors;\n    return (\n      <div className=\"detailList\">\n        {newMonsterBehaviors.map(monsterBehavior => {\n          let monsterBehaviorClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster_behavior && monsterBehavior.id === this.props.targetId) {\n            monsterBehaviorClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterBehaviorClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: false, targetId: monsterBehavior.id })}\n              >{monsterBehavior.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorList);","import React from 'react';\nimport './MonsterList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\nimport MonsterDropListList from '../MonsterDropListList/MonsterDropListList';\nimport MonsterBehaviorList from '../MonsterBehaviorList/MonsterBehaviorList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsters } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsters();\n  }\n  \n  getTitle() {\n    return 'Monsters';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    );\n  }\n\n  displayContents() {\n    if (!this.props.monsters) {\n      return (\n        <div className=\"detailList\">\n          <MonsterDropListList />\n          <MonsterBehaviorList />\n        </div>\n      )\n    }\n    const newMonsters = this.props.monsters;\n    return (\n      <div className=\"detailList\">\n        { newMonsters.map(monster => {\n          let monsterClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster && this.props.targetId === monster.id) {\n            monsterClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.monster, edit: false, targetId: monster.id })}\n                >{monster.name}\n                \n                </span>\n            </p>\n          )\n        })}\n        <MonsterDropListList />\n        <MonsterBehaviorList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsters: state.monsters.monsters,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsters: () => dispatch(fetchMonsters()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterList);","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../../Components/ItemList/ItemList';\nimport SupplierList from '../../Components/SupplierList/SupplierList';\nimport NPCList from '../../Components/NPCList/NPCList';\nimport MonsterList from '../../Components/MonsterList/MonsterList';\n\n// redux imports\n// comment to update code\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n        <NPCList />\n        <MonsterList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","const itemPostRequests = (function() {\n  return {\n    makeRequest: async function(postRoute, postBody) {\n      let subBody = {};\n      for ( let [ key, value ] of postBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const postRes = fetch(`/${postRoute}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return postRes;\n    }\n  }\n}());\n\nexport default itemPostRequests;","const itemPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default itemPutRequests;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass PotionForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addPotion = this.addPotion.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.potion, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addPotion(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('potion', data);\n    } else {\n      yield itemPostRequest.makeRequest('potion', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target)\n    let addPotion = this.addPotion(data);\n    addPotion.next().value.then(() => {\n      this.props.fetchPotions();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.potion, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n    \n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newPotionType = '';\n    let newLevel = '';\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit && !this.props.refresh) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" required name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" required name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" required name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" required name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestSupplier: async function(payload) {\n      const {\n        route, id, offeringIds\n      } = payload;\n\n      let data = {\n        id: id,\n        offeringIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestDropList: async function(payload) {\n      const {\n        route, id, monsterDroplistId, dropIds\n      } = payload;\n\n      let data = {\n        id: id,\n        monsterDroplistId: monsterDroplistId,\n        dropIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n    \n    this.deletePotion = this.deletePotion.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deletePotion() {\n    yield deleteRequests.makeRequest('potion', this.props.displayId);\n  }\n\n  handleYes() {\n    let deletePotion = this.deletePotion();\n    deletePotion.next().value.then(() => {\n      this.props.fetchPotions();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: formTypes.potion, edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons} from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass WeaponForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addWeapon = this.addWeapon.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.weapon, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addWeapon(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('weapon', data);\n    } else {\n      yield itemPostRequest.makeRequest('weapon', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let addWeapon = this.addWeapon(data);\n    addWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.weapon, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" required defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" required defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" required name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteWeapon = this.deleteWeapon.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteWeapon() {\n    yield deleteRequests.makeRequest('weapon', this.props.displayId);\n  }\n\n  handleYes() {\n    let deleteWeapon = this.deleteWeapon();\n    deleteWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.weapon, edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass ArmorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addArmor = this.addArmor.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.armor, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addArmor(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('armor', data);\n    } else {\n      yield itemPostRequest.makeRequest('armor', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addArmor = this.addArmor(data);\n    this.addArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.armor, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          onSubmit={this.handleSubmit}\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteArmor = this.deleteArmor.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteArmor() {\n    yield deleteRequests.makeRequest('armor', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteArmor = this.deleteArmor();\n    deleteArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n    \n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.armor, edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","import React from 'react';\nimport './DeleteOfferingButton.css';\n\nclass DeleteOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteOfferingButton\">\n        <span className=\"offeringButtonIcon\">X</span>\n      </div>\n    )\n  }\n}\n\nexport default DeleteOfferingButton;","import React from 'react';\nimport './AddOfferingButton.css';\n\nclass AddOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddOfferingButton\">\n        <span className=\"addOfferingButtonIcon\">+</span>\n      </div>\n    )\n  }\n}\n\nexport default AddOfferingButton;","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addFormOffering = this.addFormOffering.bind(this);\n    this.deleteOffering = this.deleteOffering.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateSupplier = this.updateSupplier.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.suppliers) return;\n    let newName = '';\n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      newName = thisSupplier.name;\n      offerings = thisSupplier.offerings;\n    }\n   \n\n    let initialState = {};\n\n    initialState['name'] = newName;\n    let presentIds = [];\n    if (offerings.length > 0) {\n      for (const offering of offerings) {\n        initialState[`offering-${offering.id}-type`] = offering.type;\n        initialState[`offering-${offering.id}-markup`] = offering.markup;\n        presentIds.push(offering.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = offerings.length;\n    initialState.deletedIds = [];\n    initialState.newOfferingIndex = 0;\n    initialState.newOfferingKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.supplier, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  addFormOffering() {\n    // limit offerings to 5\n    const totalCount = this.state.newOfferingKeys.length + this.state.existingIdCount;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newOfferingIndex = this.state.newOfferingIndex;\n    updatedState[`new-offering-${newOfferingIndex}-type`] = 1;\n    updatedState[`new-offering-${newOfferingIndex}-markup`] = 100;\n    let newOfferingKeys = this.state.newOfferingKeys;\n    newOfferingKeys.push(newOfferingIndex);\n    updatedState.newOfferingKeys = newOfferingKeys;\n    newOfferingIndex += 1;\n    updatedState.newOfferingIndex = newOfferingIndex;\n    this.setState(updatedState);\n    \n  }\n\n  deleteOffering(payload) {\n    const { existing, offeringId } = payload\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(offeringId);\n      newCount -= 1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newOfferingKeys = this.state.newOfferingKeys;\n      const offeringIndex = newOfferingKeys.indexOf(offeringId);\n      if (offeringIndex < 0 || (offeringIndex !== 0 && !offeringIndex)) return;\n      newOfferingKeys.splice(offeringIndex, 1);\n      updatedState.newOfferingKeys = newOfferingKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value\n    this.setState(stateUpdate);\n  }\n\n  *updateSupplier(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('supplier', data);\n    } else {\n      yield itemPostRequest.makeRequest('supplier', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateSupplier = this.updateSupplier(data);\n    updateSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.supplier, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n    \n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      offerings = thisSupplier.offerings;\n    }\n    \n    let newHeading = 'New Supplier';\n    if (this.props.edit) {\n      newHeading = this.state.name;\n    }\n    let newId = null;\n    if (this.props.edit) {\n      newId = this.props.displayId;\n    }\n    const newOfferingKeys = this.state.newOfferingKeys;\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/supplier'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"supplier name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group form-subgroup\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.length <= 0 ? '' : offerings.map(offering => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(offering.id)) {\n                  return ''\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"offering-select\" \n                        name={`offering-${offering.id}-type`} \n                        id={`offering-${offering.id}-type`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-type`]}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\" \n                        type=\"number\" \n                        name={`offering-${offering.id}-markup`} \n                        id={`offering-${offering.id}-markup`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-markup`]}>\n                      </input>\n                      <span className=\"offeringDelete\"\n                        onClick={() => this.deleteOffering({ existing: true, offeringId: offering.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n            {newOfferingKeys.length <= 0 ? '' : newOfferingKeys.map(index => {\n              return (\n                <div className=\"form-inner-span\">\n                  <div className=\"form-half-span form-left-half\">\n                    <select className=\"offering-select\"\n                      name={`new-offering-${index}-type`}\n                      id={`new-offering-${index}-type`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-type`]}>\n                        {this.getOfferingOptions()}\n                    </select>\n                  </div>\n                  <div className=\"form-half-span form-right-half\">\n                    <input className=\"input-number\"\n                      type=\"number\"\n                      name={`new-offering-${index}-markup`}\n                      id={`new-offering-${index}-markup`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-markup`]}>\n                    </input>\n                    <span className=\"offeringDelete\"\n                      onClick={() => this.deleteOffering({ existing: false, offeringId: index })}\n                    >\n                      <DeleteOfferingButton />\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n            <div className=\"offeringAdd form-full-span form-center-content\"\n              onClick={this.addFormOffering}\n            >\n              <AddOfferingButton />\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n          <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n          <input type=\"hidden\" name=\"newIndexes\" value={this.state.newOfferingKeys} />\n          <input type=\"hidden\" name=\"newOfferingsCount\" value={this.state.newOfferingsCount} />\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <div className=\"supplier-submit-container\">\n          <input type=\"submit\" value={this.props.edit ? 'Update Supplier' : 'Create Supplier' } className=\"button create-button\"></input>\n          </div>          \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass SupplierDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteSupplier = this.deleteSupplier.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteSupplierButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Supplier and Offerings from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteSupplier(payload) {\n    yield deleteRequests.makeRequestSupplier(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'supplier';\n    payload.id = this.props.displayId;\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const offerings = thisSupplier.offerings;\n    let offeringIds = [];\n    if (offerings.length > 0) {\n      offerings.forEach(refOffering => {\n        offeringIds.push(refOffering.id);\n      });\n    }\n    payload.offeringIds = offeringIds;\n\n    // invoke delete request\n    let deleteSupplier = this.deleteSupplier(payload);\n    deleteSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.supplier, edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display subgroup-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './TownBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass TownBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteTownBehavior = this.deleteTownBehavior.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteTownBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Town Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteTownBehavior() {\n    yield deleteRequests.makeRequest('town_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteTownBehavior = this.deleteTownBehavior();\n    deleteTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n    const { name,\n      buy_potion,\n      sell_potion,\n      upgrade_potion,\n      buy_weapon,\n      sell_weapon,\n      upgrade_weapon,\n      buy_armor,\n      sell_armor,\n      upgrade_armor,\n      wealth,\n      enter_dungeon,\n      use_tavern,\n      retire,\n      emigrate,\n      garrison_wall\n    } = thisTownBehavior;\n\n    return (\n      <div className=\"TownBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"TownBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.town_behavior, edit: true, targetId: thisTownBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy potion</span>\n            <span className=\"display-text\">{buy_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell potion</span>\n            <span className=\"display-text\">{sell_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade potion</span>\n            <span className=\"display-text\">{upgrade_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy weapon</span>\n            <span className=\"display-text\">{buy_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell weapon</span>\n            <span className=\"display-text\">{sell_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade weapon</span>\n            <span className=\"display-text\">{upgrade_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy armor</span>\n            <span className=\"display-text\">{buy_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell armor</span>\n            <span className=\"display-text\">{sell_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade armor</span>\n            <span className=\"display-text\">{upgrade_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">wealth</span>\n            <span className=\"display-text\">{wealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">enter dungeon</span>\n            <span className=\"display-text\">{enter_dungeon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use tavern</span>\n            <span className=\"display-text\">{use_tavern}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">retire</span>\n            <span className=\"display-text\">{retire}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">emigrate</span>\n            <span className=\"display-text\">{emigrate}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">garrison wall</span>\n            <span className=\"display-text\">{garrison_wall}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorDisplay);","import React from 'react';\nimport './TownBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass TownBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addTownBehavior = this.addTownBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.town_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addTownBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('town_behavior', data);\n    } else {\n      yield postRequest.makeRequest('town_behavior', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addTownBehavior = this.addTownBehavior(data);\n    this.addTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.town_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false })\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Town Behavior';\n    let newName = '';\n    let newId;\n    let newBuyPotion = 0;\n    let newSellPotion = 0;\n    let newUpgradePotion = 0;\n    let newBuyWeapon = 0;\n    let newSellWeapon = 0;\n    let newUpgradeWeapon = 0;\n    let newBuyArmor = 0;\n    let newSellArmor = 0;\n    let newUpgradeArmor = 0;\n    let newWealth = 0;\n    let newEnterDungeon = 0;\n    let newUseTavern = 0;\n    let newRetire = 0;\n    let newEmigrate = 0;\n    let newGarisonWall = 0;\n\n    if (this.props.edit) {\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n      newName = thisTownBehavior.name;\n      newHeading = newName;\n      newId = thisTownBehavior.id;\n      newBuyPotion = thisTownBehavior.buy_potion;\n      newSellPotion = thisTownBehavior.sell_potion;\n      newUpgradePotion = thisTownBehavior.upgrade_potion;\n      newBuyWeapon = thisTownBehavior.buy_weapon;\n      newSellWeapon= thisTownBehavior.sell_weapon;\n      newUpgradeWeapon = thisTownBehavior.upgrade_weapon;\n      newBuyArmor = thisTownBehavior.buy_armor;\n      newSellArmor = thisTownBehavior.sell_armor;\n      newUpgradeArmor = thisTownBehavior.upgrade_armor;\n      newWealth = thisTownBehavior.wealth;\n      newEnterDungeon = thisTownBehavior.enter_dungeon;\n      newUseTavern = thisTownBehavior.use_tavern;\n      newRetire = thisTownBehavior.retire;\n      newEmigrate = thisTownBehavior.emigrate;\n      newGarisonWall = thisTownBehavior.garrison_wall;\n    }\n    return (\n      <div className=\"TownBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Town Behavior: {newHeading}</h2>\n          <div className=\"close-town-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n      <form action={'/town_behaviors'}\n        className=\"input-fields-area\"\n        id=\"TownBehaviorPostForm\"\n        method=\"POST\"\n        onSubmit={this.handleSubmit}>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n              maxLength=\"26\" required defaultValue={newName}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_potion\">buy potion</label>\n            <input type=\"number\" name=\"buy_potion\" id=\"buy_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_potion\">sell potion</label>\n            <input type=\"number\" name=\"sell_potion\" id=\"sell_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_potion\">upgrade potion</label>\n            <input type=\"number\" name=\"upgrade_potion\" id=\"upgrade_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradePotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_weapon\">buy weapon</label>\n            <input type=\"number\" name=\"buy_weapon\" id=\"buy_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_weapon\">sell weapon</label>\n            <input type=\"number\" name=\"sell_weapon\" id=\"sell_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_weapon\">upgrade weapon</label>\n            <input type=\"number\" name=\"upgrade_weapon\" id=\"upgrade_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_armor\">buy armor</label>\n            <input type=\"number\" name=\"buy_armor\" id=\"buy_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_armor\">sell armor</label>\n            <input type=\"number\" name=\"sell_armor\" id=\"sell_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_armor\">upgrade armor</label>\n            <input type=\"number\" name=\"upgrade_armor\" id=\"upgrade_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"wealth\">wealth</label>\n            <input type=\"number\" name=\"wealth\" id=\"wealth\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newWealth}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"enter_dungeon\">enter dungeon</label>\n            <input type=\"number\" name=\"enter_dungeon\" id=\"enter_dungeon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEnterDungeon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"use_tavern\">use tavern</label>\n            <input type=\"number\" name=\"use_tavern\" id=\"use_tavern\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUseTavern}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"retire\">retire</label>\n            <input type=\"number\" name=\"retire\" id=\"retire\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRetire}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"emigrate\">emigrate</label>\n            <input type=\"number\" name=\"emigrate\" id=\"emigrate\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEmigrate}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"garrison_wall\">garrison wall</label>\n            <input type=\"number\" name=\"garrison_wall\" id=\"garrison_wall\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newGarisonWall}></input>\n          </div>\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <input type=\"submit\" value={this.props.edit ? 'Update Town Behavior' : 'Create Town Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorForm);","import React from 'react';\nimport './DungeonBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass DungeonBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteDungeonBehavior = this.deleteDungeonBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteDungeonBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Dungeon Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteDungeonBehavior() {\n    yield deleteRequests.makeRequest('dungeon_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteDungeonBehavior = this.deleteDungeonBehavior();\n    deleteDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n    const {\n      name,\n      advance_tile,\n      conserve_health,\n      use_potion,\n      rest,\n      return_to_town,\n      check_for_traps,\n      disarm_trap,\n      avoid_trap,\n      search_for_treasure,\n      fight_monster,\n      flee_encounter,\n      defend,\n      attack,\n      check_monster_weakness,\n      explore_level,\n      advance_next_level,\n      fill_inventory,\n      upgrade_inventory,\n      fight_boss_monster,\n      prefer_weaker_monster,\n      try_for_level\n    } = thisDungeonBehavior;\n\n    return (\n      <div className=\"DungeonBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"DungeonBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: true, targetId: thisDungeonBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance tile</span>\n            <span className=\"display-text\">{advance_tile}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">conserve health</span>\n            <span className=\"display-text\">{conserve_health}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use potion</span>\n            <span className=\"display-text\">{use_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">rest</span>\n            <span className=\"display-text\">{rest}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">return to town</span>\n            <span className=\"display-text\">{return_to_town}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check for traps</span>\n            <span className=\"display-text\">{check_for_traps}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">disarm trap</span>\n            <span className=\"display-text\">{disarm_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">avoid trap</span>\n            <span className=\"display-text\">{avoid_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">search for treasure</span>\n            <span className=\"display-text\">{search_for_treasure}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight monster</span>\n            <span className=\"display-text\">{fight_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">flee encounter</span>\n            <span className=\"display-text\">{flee_encounter}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defend</span>\n            <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">attack</span>\n            <span className=\"display-text\">{attack}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check monster weakness</span>\n            <span className=\"display-text\">{check_monster_weakness}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">explore level</span>\n            <span className=\"display-text\">{explore_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance next level</span>\n            <span className=\"display-text\">{advance_next_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fill inventory</span>\n            <span className=\"display-text\">{fill_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade inventory</span>\n            <span className=\"display-text\">{upgrade_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight boss monster</span>\n            <span className=\"display-text\">{fight_boss_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">prefer weaker monster</span>\n            <span className=\"display-text\">{prefer_weaker_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">try for level</span>\n            <span className=\"display-text\">{try_for_level}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorDisplay);","import React from 'react';\nimport './DungeonBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass DungeonBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addDungeonBehavior = this.addDungeonBehavior.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.dungeon_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addDungeonBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('dungeon_behavior', data);\n    } else {\n      yield postRequest.makeRequest('dungeon_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addDungeonBehavior = this.addDungeonBehavior(data);\n    this.addDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.dungeon_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading ='New Dungeon Behavior';\n    let newName = '';\n    let newId;\n    let newAdvanceTile = 0;\n    let newConserveHealth = 0;\n    let newUsePotion = 0;\n    let newRest = 0;\n    let newReturnToTown = 0;\n    let newCheckForTraps = 0;\n    let newDisarmTrap = 0;\n    let newAvoidTrap = 0;\n    let newSearchForTreasure = 0;\n    let newFightMonster = 0;\n    let newFleeEncounter = 0;\n    let newDefend = 0;\n    let newAttack = 0;\n    let newCheckMonsterWeakness = 0;\n    let newExploreLevel = 0;\n    let newAdvanceNextLevel = 0;\n    let newFillInventory = 0;\n    let newUpgradeInventory = 0;\n    let newFightBossMonster = 0;\n    let newPreferWeakerMonster = 0;\n    let newTryForLevel = 0;\n\n    if (this.props.edit) {\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n      newName = thisDungeonBehavior.name;\n      newHeading = newName;\n      newId = thisDungeonBehavior.id;\n      newAdvanceTile = thisDungeonBehavior.advance_tile;\n      newConserveHealth = thisDungeonBehavior.conserve_health;\n      newUsePotion = thisDungeonBehavior.use_potion;\n      newRest = thisDungeonBehavior.rest;\n      newReturnToTown = thisDungeonBehavior.return_to_town;\n      newCheckForTraps = thisDungeonBehavior.check_for_traps;\n      newDisarmTrap = thisDungeonBehavior.disarm_trap;\n      newAvoidTrap = thisDungeonBehavior.avoid_trap;\n      newSearchForTreasure = thisDungeonBehavior.search_for_treasure;\n      newFightMonster = thisDungeonBehavior.fight_monster;\n      newFleeEncounter = thisDungeonBehavior.flee_encounter;\n      newDefend = thisDungeonBehavior.defend;\n      newAttack = thisDungeonBehavior.attack;\n      newCheckMonsterWeakness = thisDungeonBehavior.check_monster_weakness;\n      newExploreLevel = thisDungeonBehavior.explore_level;\n      newAdvanceNextLevel = thisDungeonBehavior.advance_next_level;\n      newFillInventory = thisDungeonBehavior.fill_inventory;\n      newUpgradeInventory = thisDungeonBehavior.upgrade_inventory;\n      newFightBossMonster = thisDungeonBehavior.fight_boss_monster;\n      newPreferWeakerMonster = thisDungeonBehavior.prefer_weaker_monster;\n      newTryForLevel = thisDungeonBehavior.try_for_level;\n    }\n    return (\n      <div className=\"DungeonBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Dungeon Behavior: {newHeading}</h2>\n          <div className=\"close-dungeon-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        <form action={'/dungeon_behavior'}\n          className=\"input-fields-area\"\n          id=\"DungeonBehaviorPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_tile\">advance tile</label>\n              <input type=\"number\" name=\"advance_tile\" id=\"advance_tile\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceTile}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"conserve_health\">conserve health</label>\n              <input type=\"number\" name=\"conserve_health\" id=\"conserve_health\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConserveHealth}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"use_potion\">use potion</label>\n              <input type=\"number\" name=\"use_potion\" id=\"use_potion\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUsePotion}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rest\">rest</label>\n              <input type=\"number\" name=\"rest\" id=\"rest\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRest}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"return_to_town\">return to town</label>\n              <input type=\"number\" name=\"return_to_town\" id=\"return_to_town\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newReturnToTown}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_for_traps\">check for traps</label>\n              <input type=\"number\" name=\"check_for_traps\" id=\"check_for_traps\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckForTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"disarm_trap\">disarm trap</label>\n              <input type=\"number\" name=\"disarm_trap\" id=\"disarm_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDisarmTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"avoid_trap\">avoid trap</label>\n              <input type=\"number\" name=\"avoid_trap\" id=\"avoid_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAvoidTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"search_for_treasure\">search for treasure</label>\n              <input type=\"number\" name=\"search_for_treasure\" id=\"search_for_treasure\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSearchForTreasure}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_monster\">fight monster</label>\n              <input type=\"number\" name=\"fight_monster\" id=\"fight_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"flee_encounter\">flee encounter</label>\n              <input type=\"number\" name=\"flee_encounter\" id=\"flee_encounter\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFleeEncounter}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"attack\">attack</label>\n              <input type=\"number\" name=\"attack\" id=\"attack\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAttack}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_monster_weakness\">check monster weakness</label>\n              <input type=\"number\" name=\"check_monster_weakness\" id=\"check_monster_weakness\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckMonsterWeakness}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"explore_level\">explore level</label>\n              <input type=\"number\" name=\"explore_level\" id=\"explore_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newExploreLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_next_level\">advance next level</label>\n              <input type=\"number\" name=\"advance_next_level\" id=\"advance_next_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceNextLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fill_inventory\">fill inventory</label>\n              <input type=\"number\" name=\"fill_inventory\" id=\"fill_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFillInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"upgrade_inventory\">upgrade inventory</label>\n              <input type=\"number\" name=\"upgrade_inventory\" id=\"upgrade_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_boss_monster\">fight boss monster</label>\n              <input type=\"number\" name=\"fight_boss_monster\" id=\"fight_boss_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightBossMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"prefer_weaker_monster\">prefer weaker monster</label>\n              <input type=\"number\" name=\"prefer_weaker_monster\" id=\"prefer_weaker_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newPreferWeakerMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"try_for_level\">try for level</label>\n              <input type=\"number\" name=\"try_for_level\" id=\"try_for_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newTryForLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Dungeon Behavior' : 'Create Dungeon Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorForm);","import React from 'react';\nimport './AdventurerClassDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerClassDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteAdventurerClass = this.deleteAdventurerClass.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerClassButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer Class from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurerClass() {\n    yield deleteRequests.makeRequest('adventurer_class', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurerClass = this.deleteAdventurerClass();\n    deleteAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n    const {\n      name,\n      bargaining,\n      perception,\n      artifacts,\n      traps,\n      agility,\n      tactics,\n      martial_weapons,\n      armor,\n      anatomy\n    } = thisAdventurerClass;\n\n    return (\n      <div className=\"AdventurerClassDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerClassEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: true, targetId: thisAdventurerClass.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Bargaining</span>\n              <span className=\"display-text\">{bargaining}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Perception</span>\n              <span className=\"display-text\">{perception}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Artifacts</span>\n              <span className=\"display-text\">{artifacts}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Traps</span>\n              <span className=\"display-text\">{traps}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Agility</span>\n              <span className=\"display-text\">{agility}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Tactics</span>\n              <span className=\"display-text\">{tactics}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Martial Weapons</span>\n              <span className=\"display-text\">{martial_weapons}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Armor</span>\n              <span className=\"display-text\">{armor}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Anatomy</span>\n              <span className=\"display-text\">{anatomy}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassDisplay);","import React from 'react';\nimport './AdventurerClassForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerClassForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addAdventurerClass = this.addAdventurerClass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.adventurer_class, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurerClass(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer_class', data);\n    } else {\n      yield postRequest.makeRequest('adventurer_class', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurerClass = this.addAdventurerClass(data);\n    this.addAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.adventurer_class, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Adventurer Class';\n    let newName = '';\n    let newId;\n    let newBargaining = 0;\n    let newPerception = 0;\n    let newArtifacts = 0;\n    let newTraps = 0;\n    let newAgility = 0;\n    let newTactics = 0;\n    let newMartialWeapons = 0;\n    let newArmor = 0;\n    let newAnatomy = 0;\n\n    if (this.props.edit) {\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n      newName = thisAdventurerClass.name;\n      newHeading = newName;\n      newId = thisAdventurerClass.id;\n      newBargaining = thisAdventurerClass.bargaining;\n      newPerception = thisAdventurerClass.perception;\n      newArtifacts = thisAdventurerClass.artifacts;\n      newTraps = thisAdventurerClass.traps;\n      newAgility = thisAdventurerClass.agility;\n      newTactics = thisAdventurerClass.tactics;\n      newMartialWeapons = thisAdventurerClass.martial_weapons;\n      newArmor = thisAdventurerClass.armor;\n      newAnatomy = thisAdventurerClass.anatomy;\n    }\n    return (\n      <div className=\"AdventurerClassForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer Class: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer_class'}\n          className=\"input-fields-area\"\n          id=\"AdventurerClassPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"class name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"bargaining\">bargaining</label>\n              <input type=\"number\" name=\"bargaining\" id=\"bargaining\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newBargaining}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"perception\">perception</label>\n              <input type=\"number\" name=\"perception\" id=\"perception\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newPerception}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"artifacts\">artifacts</label>\n              <input type=\"number\" name=\"artifacts\" id=\"artifacts\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArtifacts}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"traps\">traps</label>\n              <input type=\"number\" name=\"traps\" id=\"traps\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"agility\">agility</label>\n              <input type=\"number\" name=\"agility\" id=\"agility\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAgility}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"tactics\">tactics</label>\n              <input type=\"number\" name=\"tactics\" id=\"tactics\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTactics}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"martial_weapons\">martial weapon</label>\n              <input type=\"number\" name=\"martial_weapons\" id=\"martial_weapons\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newMartialWeapons}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArmor}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"anatomy\">anatomy</label>\n              <input type=\"number\" name=\"anatomy\" id=\"anatomy\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAnatomy}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer Class' : 'Create Adventurer Class' } className=\"button create-button\"></input>\n          </form>\n          <p>Points should total 45</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassForm);\n","import React from 'react';\nimport './AdventurerDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.setInitialized = this.setInitialized.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.deleteAdventurer = this.deleteAdventurer.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.adventurerClasses || !this.props.townBehaviors || !this.props.dungeonBehaviors) {\n      this.props.loadAdventurerDetails();\n      this.setInitialized(true);\n    } else {\n      if (!this.state.initialized) {\n        this.setInitialized(true);\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized && (this.props.adventurerClasses && this.props.townBehaviors && this.props.dungeonBehaviors)) {\n      this.setInitialized(true);\n    }\n  }\n\n  setInitialized(val) {\n    this.setState({ initialized: val});\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurer() {\n    yield deleteRequests.makeRequest('adventurer', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurer = this.deleteAdventurer();\n    deleteAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.adventurers || !this.state.initialized) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n    const {\n      name,\n      strength,\n      speed,\n      cunning,\n      intelligence,\n      constitution,\n      dungeonBehaviorId,\n      townBehaviorId,\n      adventurerClassId\n    } = thisAdventurer;\n    if (!this.props.dungeonBehaviors || !this.props.townBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === dungeonBehaviorId);\n    const dungeonBehaviorName = thisDungeonBehavior.name;\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === townBehaviorId);\n    const townBehaviorName = thisTownBehavior.name;\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === adventurerClassId);\n    const adventurerClassname = thisAdventurerClass.name;\n\n    return (\n      <div className=\"AdventurerDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer, edit: true, targetId: thisAdventurer.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Strength</span>\n            <span className=\"display-text\">{strength}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Speed</span>\n            <span className=\"display-text\">{speed}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Cunning</span>\n            <span className=\"display-text\">{cunning}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Intelligence</span>\n            <span className=\"display-text\">{intelligence}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Constitution</span>\n            <span className=\"display-text\">{constitution}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Dungeon Behavior</span>\n            <span className=\"display-text\">{dungeonBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Town Behavior</span>\n            <span className=\"display-text\">{townBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Class</span>\n            <span className=\"display-text\">{adventurerClassname}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    displayId: state.detail.targetId,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerDisplay);","import React from 'react'\nimport './AdventurerForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDungeonBehaviorOptions = this.getDungeonBehaviorOptions.bind(this);\n    this.getTownBehaviorOptions = this.getTownBehaviorOptions.bind(this);\n    this.getAdventurerClassOptions = this.getAdventurerClassOptions.bind(this);\n    this.addAdventurer = this.addAdventurer.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getDungeonBehaviorOptions() {\n    const dungeonOptions = this.props.dungeonBehaviors;\n    return dungeonOptions.map(dungeonOption => {\n      return <option value={dungeonOption.id}>{dungeonOption.name}</option>\n    });\n  }\n\n  getTownBehaviorOptions() {\n    const townOptions = this.props.townBehaviors;\n    return townOptions.map(townOption => {\n      return <option value={townOption.id}>{townOption.name}</option>\n    });\n  }\n\n  getAdventurerClassOptions() {\n    const classOptions = this.props.adventurerClasses;\n    return classOptions.map(classOption => {\n      return <option value={classOption.id}>{classOption.name}</option>\n    });\n  }\n\n  componentDidMount() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      this.props.loadAdventurerDetails();\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.adventurer, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurer(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer', data);\n    } else {\n      yield postRequest.makeRequest('adventurer', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurer = this.addAdventurer(data);\n    this.addAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.adventurer, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    let newHeading = 'New Adventurer';\n    let newId;\n    let newName = '';\n    let newStrength = 0;\n    let newSpeed = 0;\n    let newCunning = 0;\n    let newIntelligence = 0;\n    let newConstitution = 0;\n    let newDungeonBehavior, newTownBehavior, newAdventurerClass;\n\n    if (this.props.edit) {\n      const allAdventurers = this.props.adventurers;\n      const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === thisAdventurer.dungeoBehaviorId);\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === thisAdventurer.townBehaviorId);\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === thisAdventurer.adventurerClassId);\n      newId = thisAdventurer.id;\n      newName = thisAdventurer.name;\n      newHeading = newName;\n      newStrength = thisAdventurer.strength;\n      newSpeed = thisAdventurer.speed;\n      newCunning = thisAdventurer.cunning;\n      newIntelligence = thisAdventurer.intelligence;\n      newConstitution = thisAdventurer.constitution;\n      newDungeonBehavior = thisDungeonBehavior;\n      newTownBehavior = thisTownBehavior;\n      newAdventurerClass = thisAdventurerClass;\n    }\n\n    return (\n      <div className=\"AdventurerForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer Class: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer'}\n          className=\"input-fields-area\"\n          id=\"AdventurerPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"adventurer name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"strength\">strength</label>\n              <input type=\"number\" name=\"strength\" id=\"strength\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newStrength}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"speed\">speed</label>\n              <input type=\"number\" name=\"speed\" id=\"speed\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newSpeed}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"cunning\">cunning</label>\n              <input type=\"number\" name=\"cunning\" id=\"cunning\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newCunning}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"intelligence\">intelligence</label>\n              <input type=\"number\" name=\"intelligence\" id=\"intelligence\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newIntelligence}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"constitution\">constitution</label>\n              <input type=\"number\" name=\"constitution\" id=\"constitution\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newConstitution}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"dungeonBehaviorId\">dungeon behavior</label>\n              <select className=\"dungeon-behavior-select\"\n                name=\"dungeonBehaviorId\"\n                id=\"dungeonBehaviorId\"\n                defaultValue={newDungeonBehavior === undefined ? null : newDungeonBehavior.id}>\n                  {this.getDungeonBehaviorOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"townBehaviorId\">town behavior</label>\n              <select className=\"town-behavior-select\"\n                name=\"townBehaviorId\"\n                id=\"townBehaviorId\"\n                defaultValue={newTownBehavior === undefined ? null : newTownBehavior.id}>\n                  {this.getTownBehaviorOptions()}\n              </select>  \n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"adventurerClassId\">class</label>\n              <select className=\"adventurer-class-select\"\n                name=\"adventurerClassId\"\n                id=\"adventurerClassId\"\n                defaultValue={newAdventurerClass === undefined ? null : newAdventurerClass.id}>\n                  {this.getAdventurerClassOptions()}\n              </select>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer' : 'Create Adventurer' } className=\"button create-button\"></input>\n        </form>\n        <p>Points should total 15</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurers: state.adventurers.adventurers,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerForm);","import React from 'react';\nimport './MonsterDropListDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists, loadItems } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport itemTypes from '../../utilities/itemTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterDropListDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDrops = this.getDrops.bind(this);\n    this.deleteDropList = this.deleteDropList.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) {\n      this.props.loadItems();\n    }\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterDropListButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster DropList and Drops from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  getDrops(drops) {\n    if (!drops) return '';\n    return (\n      <div className=\"monster-drops-display subgroup-display\">\n          <span className=\"display-label full-span\">Drops</span>\n          <span className=\"display-label pad half-span\">Item</span>\n          <span className=\"display-label pad half-span\">Drop Chance</span>\n          {drops.map(drop => {\n            let itemName = ''\n            switch (drop.drop_type) {\n              case itemTypes.armor:\n                let allArmor = this.props.armor;\n                let thisArmor = allArmor.find(armor => armor.id === drop.itemId);\n                itemName = thisArmor.item.name;\n                break;\n              case itemTypes.potion:\n                let allPotions = this.props.potions;\n                let thisPotion = allPotions.find(potion => potion.id === drop.itemId);\n                itemName = thisPotion.item.name;\n                break;\n              case itemTypes.weapon:\n                let allWeapons = this.props.weapons;\n                let thisWeapon = allWeapons.find(weapon => weapon.id === drop.itemId);\n                itemName = thisWeapon.item.name;\n                break;\n              default:\n                itemName = 'Unknown Item Type'\n            }\n\n            return (\n              <div className=\"inner-span\">\n                <span className=\"display-text half-span left-half\">\n                  {itemName}\n                </span>\n                <span className=\"display-text half-span right-half\">\n                  {drop.dropChance}\n                </span>\n              </div>\n            )            \n          })}\n        </div>\n    )\n  }\n\n  *deleteDropList(payload) {\n    yield deleteRequests.makeRequestDropList(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'monster_drop_list';\n    payload.id = this.props.displayId;\n    const allDropLists = this.props.monsterDropLists;\n    const thisDropList = allDropLists.find(dropList => dropList.id === this.props.displayId);\n    const monsterDroplistId = thisDropList.monster_drop_list.id;\n    payload.monsterDroplistId = monsterDroplistId;\n    const drops = thisDropList.drops;\n    let dropIds = [];\n    if (drops.length > 0) {\n      drops.forEach(drop => {\n        dropIds.push(drop.id);\n      });\n    }\n    payload.dropIds = dropIds;\n\n    // invoke delete request\n    let deleteDropList = this.deleteDropList(payload);\n    deleteDropList.next().value.then(() => {\n      this.props.fetchMonsterDropLists();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null })\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.monsterDropLists || !this.props.armor || !this.props.potions || !this.props.weapons) return '';\n    const allMonsterDropLists = this.props.monsterDropLists;\n    const thisDropList = allMonsterDropLists.find(monsterDropList => monsterDropList.id === this.props.displayId);\n    const thisMonsterDropList = thisDropList.monster_drop_list;\n    const thisName = thisMonsterDropList.name;\n    const thisGoldMin = thisDropList.gold_min;\n    const thisGoldMax = thisDropList.gold_max;\n    const thisGoldChance = thisDropList.gold_chance;\n    const thisDrops = thisDropList.drops;\n\n    return (\n      <div className=\"MonsterDropListDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{thisName}</h2>\n          <div className=\"MonsterDropListEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: true, targetId: this.props.displayId })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold min</span>\n          <span className=\"display-text\">{thisGoldMin}</span>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold max</span>\n          <span className=\"display-text\">{thisGoldMax}</span>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold chance</span>\n          <span className=\"display-text\">{thisGoldChance}</span>\n        </div>\n        {this.getDrops(thisDrops)}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    displayId: state.detail.targetId,\n    armor: state.armor.armor,\n    potions: state.potions.potions,\n    weapons: state.weapons.weapons\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    loadItems: () => dispatch(loadItems()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListDisplay);","import React from 'react';\nimport './MonsterDropListForm.css';\n\n//component imports\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists, loadItems } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport formTypes from '../../utilities/formTypes';\nimport postRequests from '../../utilities/itemPostRequests';\nimport putRequests from '../../utilities/itemPutRequests';\n\nclass MonsterDropListForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getDropListOptions = this.getDropListOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.addFormDrop = this.addFormDrop.bind(this);\n    this.deleteDrop = this.deleteDrop.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getForm = this.getForm.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateMonsterDropList = this.updateMonsterDropList.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) {\n      this.props.loadItems();\n    }\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.monsterDropLists) return;\n    let newName = '';\n    let newGoldMin = 0;\n    let newGoldMax = 0;\n    let newGoldChance = 0;\n    let newDrops = [];\n    if (this.props.edit) {\n      const allDropLists = this.props.monsterDropLists;\n      const thisDropList = allDropLists.find(dropList => dropList.id === this.props.displayId);\n      const thisMonsterDropList = thisDropList.monster_drop_list;\n      newName = thisMonsterDropList.name;\n      newGoldMin = thisDropList.gold_min;\n      newGoldMax = thisDropList.gold_max;\n      newGoldChance = thisDropList.gold_chance;\n      newDrops = thisDropList.drops;\n    }\n\n    let initialState = {};\n    initialState['name'] = newName;\n    initialState['gold_min'] = newGoldMin;\n    initialState['gold_max'] = newGoldMax;\n    initialState['gold_chance'] = newGoldChance;\n    let presentIds = [];\n    if (newDrops.length > 0) {\n      for (const drop of newDrops) {\n        initialState[`drop-${drop.id}-item-id`] = `{ \"id\":\"${drop.itemId}\", \"type\":\"${drop.drop_type}\"}`;\n        initialState[`drop-${drop.id}-drop-chance`] = drop.dropChance;\n        presentIds.push(drop.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = newDrops.length;\n    initialState.deletedIds = [];\n    initialState.newDropIndex = 0;\n    initialState.newDropKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  getDropListOptions() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) return '';\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      let propName = itemType;\n      if (itemType !== itemTypes.armor) {\n        propName += 's';\n      }\n      const allItemsOfType = this.props[`${propName}`];\n      return (\n        <optgroup label={itemType}>\n          {allItemsOfType.map(item => {\n            return <option value={`{ \"id\":\"${item.id}\", \"type\":\"${itemType}\"}`}>{item.item.name}</option>\n          })}\n        </optgroup>\n      )\n    });\n  }\n\n  addFormDrop() {\n    // limit drops to 5\n    const totalCount = this.state.newDropKeys.length;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newDropIndex = this.state.newDropIndex;\n    updatedState[`new-drop-${newDropIndex}-item-id`] = `{ \"id\":\"${0}\", \"type\":\"${itemTypes.potion}\"}`;\n    updatedState[`new-drop-${newDropIndex}-drop-chance`] = 0;\n    let newDropKeys = this.state.newDropKeys;\n    newDropKeys.push(newDropIndex);\n    updatedState.newDropKeys = newDropKeys;\n    newDropIndex += 1;\n    updatedState.newDropIndex = newDropIndex;\n    this.setState(updatedState);\n  }\n\n  deleteDrop(payload) {\n    const { existing, dropId } = payload;\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(dropId);\n      newCount -=1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newDropKeys = this.state.newDropKeys;\n      const dropIndex = newDropKeys.indexOf(dropId);\n      if (dropIndex < 0 || (dropIndex !== 0 && !dropIndex)) return;\n      newDropKeys.splice(dropIndex, 1);\n      updatedState.newDropKeys = newDropKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster_drop_list, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value;\n    this.setState(stateUpdate);\n  }\n\n  *updateMonsterDropList(data) {\n    if (this.props.edit) {\n      yield putRequests.makeRequest('monster_drop_list', data);\n    } else {\n      yield postRequests.makeRequest('monster_drop_list', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateMonsterDropList = this.updateMonsterDropList(data);\n    updateMonsterDropList.next().value.then(() => {\n      this.props.fetchMonsterDropLists();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.monster_drop_list, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n\n    let drops = [];\n    let newMonsterDroplistId = null;\n    if (this.props.edit) {\n      const allDropsLists = this.props.monsterDropLists;\n      const thisDropList = allDropsLists.find(dropList => dropList.id === this.props.displayId);\n      drops = thisDropList.drops;\n      newMonsterDroplistId = thisDropList.monster_drop_list.id\n    }\n\n    let newHeading = 'New Monster Drop List';\n    let newId = null;\n    \n    if (this.props.edit) {\n      newHeading = this.state.name;\n      newId = this.props.displayId;\n\n    }\n\n    const newDropKeys = this.state.newDropKeys;\n\n    return (\n      <div className=\"MonsterDropListForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-monster-droplist-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster_drop_list'}\n          className=\"input-fields-area\"\n          id=\"MonsterDropListPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"monster droplist name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div> \n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_min\">gold min</label>\n              <input type=\"number\" name=\"gold_min\" id=\"gold_min\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_min}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_max\">gold max</label>\n              <input type=\"number\" name=\"gold_max\" id=\"gold_max\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_max}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_chance\">gold chance</label>\n              <input type=\"number\" name=\"gold_chance\" id=\"gold_chance\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_chance}></input>\n            </div>\n            <div className=\"drops-group form-subgroup\">\n              <span className=\"item-label form-full-span\">Drops</span>\n              <span className=\"item-label form-pad form-half-span\">Item</span>\n              <span className=\"item-label form-pad form-half-span\">Drop Chance</span>\n              {drops.length <= 0 ? '' : drops.map(drop => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(drop.id)) {\n                  return '';\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"drop-select\"\n                        name={`drop-${drop.id}-item-id`}\n                        id={`drop-${drop.id}-item-id`}\n                        onChange={this.handleChange}\n                        value={this.state[`drop-${drop.id}-item-id`]}>\n                          {this.getDropListOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\"\n                        type=\"number\"\n                        name={`drop-${drop.id}-drop-chance`}\n                        id={`drop-${drop.id}-drop-chance`}\n                        onChange={this.handleChange}\n                        value={this.state[`drop-${drop.id}-drop-chance`]}>\n                      </input>\n                      <span className=\"dropDelete\"\n                        onClick={() => this.deleteDrop({ existing: true, dropId: drop.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n              {newDropKeys.length <= 0 ? '' : newDropKeys.map(index => {\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"drop-select\"\n                        name={`new-drop-${index}-item-id`}\n                        id={`new-drop-${index}-item-id`}\n                        onChange={this.handleChange}\n                        value={this.state[`new-drop-${index}-item-id`]}>\n                          {this.getDropListOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\"\n                        type=\"number\"\n                        name={`new-drop-${index}-drop-chance`}\n                        id={`new-drop-${index}-drop-chance`}\n                        onChange={this.handleChange}\n                        value={this.state[`new-drop-${index}-drop-chance`]}>\n                      </input>\n                      <span className=\"dropDelete\"\n                        onClick={() => this.deleteDrop({ existing: false, dropId: index })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n              <div className=\"dropAdd form-full-span form-center-content\"\n                onClick={this.addFormDrop}\n              >\n                <AddOfferingButton />\n              </div>\n              <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n              <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n              <input type=\"hidden\" name=\"newIndexes\" value={this.state.newDropKeys} />\n              {/* <input type=\"hidden\" name=\"newDropsCount\" value={this.state.newD} */}\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"hidden\" name=\"monsterDroplistId\" value={newMonsterDroplistId} />\n              <input type=\"submit\" value={this.props.edit ? 'Update Monster Droplist' : 'Create Monster Droplist'} className=\"button create-button\"></input>\n            </div>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    displayId: state.detail.targetId,\n    monsterDropLists: state.dropLists.monster,\n    armor: state.armor.armor,\n    potions: state.potions.potions,\n    weapons: state.weapons.weapons\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    loadItems: () => dispatch(loadItems())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListForm);","import React from 'react';\nimport './MonsterBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteMonsterBehavior = this.deleteMonsterBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteMonsterBehavior() {\n    yield deleteRequests.makeRequest('monster_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteMonsterBehavior = this.deleteMonsterBehavior();\n    deleteMonsterBehavior.next().value.then(() => {\n      this.props.fetchMonsterBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allMonsterBehaviors = this.props.monsterBehaviors;\n    const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === this.props.displayId);\n    const {\n      name,\n      confront_weakened_adventurer,\n      special_move,\n      defend,\n      heal,\n      block_flee,\n      migrate\n    } = thisMonsterBehavior;\n\n    return (\n      <div className=\"MonsterBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"MonsterBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: true, targetId: thisMonsterBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">confront weakened adventuer</span>\n              <span className=\"display-text\">{confront_weakened_adventurer}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">special move</span>\n              <span className=\"display-text\">{special_move}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">defend</span>\n              <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">heal</span>\n              <span className=\"display-text\">{heal}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">block flee</span>\n              <span className=\"display-text\">{block_flee}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">migrate</span>\n              <span className=\"display-text\">{migrate}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorDisplay);","import React from 'react';\nimport './MonsterBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass MonsterBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addMonsterBehavior = this.addMonsterBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addMonsterBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('monster_behavior', data);\n    } else {\n      yield postRequest.makeRequest('monster_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addMonsterBehavior = this.addMonsterBehavior(data);\n    this.addMonsterBehavior.next().value.then(() => {\n      this.props.fetchMonsterBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.monster_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Monster Behavior';\n    let newName = '';\n    let newId;\n    let newConfrontWeakenedAdventurer = 0;\n    let newSpecialMove = 0;\n    let newDefend = 0;\n    let newHeal = 0;\n    let newBlockFlee = 0;\n    let newMigrate = 0;\n\n    if (this.props.edit) {\n      const allMonsterBehaviors = this.props.monsterBehaviors;\n      const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === this.props.displayId);\n      newName = thisMonsterBehavior.name;\n      newHeading = newName;\n      newId = thisMonsterBehavior.id;\n      newConfrontWeakenedAdventurer = thisMonsterBehavior.confront_weakened_adventurer;\n      newSpecialMove = thisMonsterBehavior.special_move;\n      newDefend = thisMonsterBehavior.defend;\n      newHeal = thisMonsterBehavior.heal;\n      newBlockFlee = thisMonsterBehavior.block_flee;\n      newMigrate = thisMonsterBehavior.migrate;\n    }\n    return (\n      <div className=\"MonsterBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Monster Behavior: {newHeading}</h2>\n          <div className=\"close-monster-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster_behaviors'}\n          className=\"input-fields-area\"\n          id=\"MonsterBehavior\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"confront_weakened_adventurer\">confront weakened adventurer</label>\n              <input type=\"number\" name=\"confront_weakened_adventurer\" id=\"confront_weakened_adventurer\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConfrontWeakenedAdventurer}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"special_move\">special move</label>\n              <input type=\"number\" name=\"special_move\" id=\"special_move\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSpecialMove}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"heal\">heal</label>\n              <input type=\"number\" name=\"heal\" id=\"heal\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newHeal}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"block_flee\">block flee</label>\n              <input type=\"number\" name=\"block_flee\" id=\"block_flee\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBlockFlee}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"migrate\">migrate</label>\n              <input type=\"number\" name=\"migrate\" id=\"migrate\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newMigrate}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <div className=\"supplier-submit-container\">\n            <input type=\"submit\" value={this.props.edit ? 'Update Monster Behavior' : 'Create Monster Behavior' } className=\"button create-button\"></input>\n            </div>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorForm);","import React from 'react';\nimport './MonsterDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsters, loadMonsterDetails } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.setInitialized = this.setInitialized.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.monsterDropLists || !this.props.monsterBehaviors) {\n      this.props.loadMonsterDetails();\n      this.setInitialized(true);\n    } else {\n      if (!this.state.initialized) {\n        this.setInitialized(true);\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if(!this.state.initialized && (this.props.monsterBehaviors && this.props.monsterDropLists)) {\n      this.setInitialized(true);\n    }\n  }\n\n  setInitialized(val) {\n    this.setState({ initialized: val });\n  }\n\n  getDeleteButton() {\n    return (\n      <div className=\"DeleteMonsterButton\">\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  getDisplay() {\n    if (!this.props.monsters || !this.state.initialized) return '';\n    const allMonsters = this.props.monsters;\n    const thisMonster = allMonsters.find(monster => monster.id === this.props.displayId);\n    const {\n      name,\n      boss,\n      level,\n      hp,\n      damage,\n      defense,\n      stealth,\n      initiative,\n      special,\n      heal,\n      dropListId,\n      monsterBehaviorId\n    } = thisMonster;\n    const allMonsterDropLists = this.props.monsterDropLists;\n    const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === dropListId);\n    const monsterDropListName = thisMonsterDropList.monster_drop_list.name;\n    const allMonsterBehaviors = this.props.monsterBehaviors;\n    const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === monsterBehaviorId);\n    const monsterBehaviorName = thisMonsterBehavior.name;\n\n    return (\n      <div className=\"MonsterDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster, edit: true, targetId: thisMonster.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">boss</span>\n            <span className=\"display-text\">{boss}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">level</span>\n            <span className=\"display-text\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">hp</span>\n            <span className=\"display-text\">{hp}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defense</span>\n            <span className=\"display-text\">{defense}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">stealth</span>\n            <span className=\"display-text\">{stealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">initiative</span>\n            <span className=\"display-text\">{initiative}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">special</span>\n            <span className=\"display-text\">{special}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">heal</span>\n            <span className=\"display-text\">{heal}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">drop list</span>\n            <span className=\"display-text\">{monsterDropListName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">behavior</span>\n            <span className=\"display-text\">{monsterBehaviorName}</span>\n          </div>\n        </div>\n      </div>\n    )\n      \n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsters: state.monsters.monsters,\n    displayId: state.detail.targetId,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    monsterDropLists: state.dropLists.monster\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsters: () => dispatch(fetchMonsters()),\n    loadMonsterDetails: () => dispatch(loadMonsterDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDisplay);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\n// item components\nimport PotionForm from '../../Components/PotionForm/PotionForm';\nimport PotionDisplay from '../../Components/PotionDisplay/PotionDisplay';\nimport WeaponForm from '../../Components/WeaponForm/WeaponForm';\nimport WeaponDisplay from '../../Components/WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../../Components/ArmorForm/ArmorForm';\nimport ArmorDisplay from '../../Components/ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../../Components/SupplierForm/SupplierForm';\nimport SupplierDisplay from '../../Components/SupplierDisplay/SupplierDisplay';\n// npc components\nimport TownBehaviorDisplay from '../../Components/TownBehaviorDisplay/TownBehaviorDisplay';\nimport TownBehaviorForm from '../../Components/TownBehaviorForm/TownBehaviorForm';\nimport DungeonBehaviorDisplay from '../../Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay';\nimport DungeonBehaviorForm from '../../Components/DungeonBehaviorForm/DungeonBehaviorForm';\nimport AdventurerClassDisplay from '../../Components/AdventurerClassDisplay/AdventurerClassDisplay';\nimport AdventurerClassForm from '../../Components/AdventurerClassForm/AdventurerClassForm';\nimport AdventurerDisplay from '../../Components/AdventurerDisplay/AdventurerDisplay';\nimport AdventurerForm from '../../Components/AdventurerForm/AdventurerForm';\n// monster components\nimport MonsterDropListDisplay from '../../Components/MonsterDropListDisplay/MonsterDropListDisplay';\nimport MonsterDropListForm from '../../Components/MonsterDropListForm/MonsterDropListForm';\nimport MonsterBehaviorDisplay from '../../Components/MonsterBehaviorDisplay/MonsterBehaviorDisplay'\nimport MonsterBehaviorForm from '../../Components/MonsterBehaviorForm/MonsterBehaviorForm';\nimport MonsterDisplay from '../../Components/MonsterDisplay/MonsterDisplay';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.getPotionDetail = this.getPotionDetail.bind(this);\n    this.getWeaponDetail = this.getWeaponDetail.bind(this);\n    this.getArmorDetail = this.getArmorDetail.bind(this);\n    this.getSupplierDetail = this.getSupplierDetail.bind(this);\n    this.getTownBehaviorDetail = this.getTownBehaviorDetail.bind(this);\n    this.getDungeonBehaviorDetail = this.getDungeonBehaviorDetail.bind(this);\n    this.getAdventurerClassDetail = this.getAdventurerClassDetail.bind(this);\n    this.getAdventurerDetail = this.getAdventurerDetail.bind(this);\n    this.getMonsterDropListDetail = this.getMonsterDropListDetail.bind(this);\n    this.getMonsterBehaviorDetail = this.getMonsterBehaviorDetail.bind(this);\n    this.getMonsterDetail = this.getMonsterDetail.bind(this);\n  }\n\n  getPotionDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <PotionForm />\n    } else {\n      return <PotionDisplay />\n    }\n  }\n\n  getWeaponDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <WeaponForm />\n    } else {\n      return <WeaponDisplay />\n    }\n  }\n\n  getArmorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <ArmorForm />\n    } else {\n      return <ArmorDisplay />\n    }\n  }\n\n  getSupplierDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <SupplierForm />\n    } else {\n      return <SupplierDisplay />\n    }\n  }\n\n  getTownBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <TownBehaviorForm />\n    } else {\n      return <TownBehaviorDisplay />\n    }\n  }\n\n  getDungeonBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <DungeonBehaviorForm />;\n    } else {\n      return <DungeonBehaviorDisplay />\n    }\n  }\n\n  getAdventurerClassDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <AdventurerClassForm />\n    } else {\n      return <AdventurerClassDisplay />\n    }\n  }\n\n  getAdventurerDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <AdventurerForm />;\n    } else {\n      return <AdventurerDisplay />;\n    }\n  }\n\n  getMonsterDropListDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <MonsterDropListForm />;\n    } else {\n      return <MonsterDropListDisplay />;\n    }\n  }\n\n  getMonsterBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <MonsterBehaviorForm />;\n    } else {\n      return <MonsterBehaviorDisplay />;\n    }\n  }\n\n  getMonsterDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return 'MonsterForm';\n    } else {\n      return <MonsterDisplay />;\n    }\n  }\n\n  getDetail() {\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n    if (this.props.refresh) {\n      this.props.setRefresh(false);\n      return '';\n    }\n\n    switch(this.props.formType) {\n      case formTypes.potion:\n        return this.getPotionDetail();\n      case formTypes.weapon:\n        return this.getWeaponDetail();\n      case formTypes.armor:\n        return this.getArmorDetail();\n      case formTypes.supplier:\n        return this.getSupplierDetail();\n      case formTypes.town_behavior:\n        return this.getTownBehaviorDetail();\n      case formTypes.dungeon_behavior:\n        return this.getDungeonBehaviorDetail();\n      case formTypes.adventurer_class:\n        return this.getAdventurerClassDetail();\n      case formTypes.adventurer:\n        return this.getAdventurerDetail();\n      case formTypes.monster_drop_list:\n        return this.getMonsterDropListDetail();\n      case formTypes.monster_behavior:\n        return this.getMonsterBehaviorDetail();\n      case formTypes.monster:\n        return this.getMonsterDetail();\n      default:\n        return (<div className=\"BlankForm\">detail type unknown</div>)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit,\n    refresh: state.detail.refresh\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../../Containers/ObjectListColumn/ObjectListColumn';\nimport DetailView from '../../Containers/DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false,\n  refresh: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    case SET_DETAIL_REFRESH:\n      return {\n        ...state,\n        refresh: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_TOWN_BEHAVIORS, SET_DUNGEON_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  townBehaviors: null,\n  dungeonBehaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SET_TOWN_BEHAVIORS:\n      return {\n        ...state,\n        townBehaviors: action.payload\n      }\n    case SET_DUNGEON_BEHAVIORS:\n      return {\n        ...state,\n        dungeonBehaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURER_CLASSES } from '../actions/types';\n\nconst initialState = {\n  classes: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURER_CLASSES:\n      return {\n        ...state,\n        classes: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_DROP_LISTS } from '../actions/types';\n\nconst initialState = {\n  monster: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_DROP_LISTS:\n      return {\n        ...state,\n        monster: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  behaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_BEHAVIORS:\n      return {\n        ...state,\n        behaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTERS } from '../actions/types';\n\nconst initialState = {\n  monsters: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTERS:\n      return {\n        ...state,\n        monsters: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\nimport behaviorsReducer from './behaviorsReducer';\nimport adventurerClassReducer from './adventurerClassReducer';\nimport adventurerReducer from './adventurerReducer';\nimport dropListReducer from './dropListReducer';\nimport monsterBehaviorReducer from './monsterBehaviorReducer';\nimport monsterReducer from './monsterReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer,\n  behaviors: behaviorsReducer,\n  adventurerClasses: adventurerClassReducer,\n  adventurers: adventurerReducer,\n  dropLists: dropListReducer,\n  monsterBehaviors: monsterBehaviorReducer,\n  monsters: monsterReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}