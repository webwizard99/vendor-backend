{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","actions/types.js","actions/index.js","utilities/formTypes.js","Components/PotionsList/PotionsList.jsx","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","Components/TownBehaviorList/TownBehaviorList.jsx","Components/DungeonBehaviorList/DungeonBehaviorList.jsx","Components/BehaviorList/BehaviorList.jsx","Components/AdventurerClassList/AdventurerClassList.jsx","Components/AdventurerList/AdventurerList.jsx","Components/NPCList/NPCList.jsx","Components/MonsterDropListList/MonsterDropListList.jsx","Components/MonsterBehaviorList/MonsterBehaviorList.jsx","Components/MonsterList/MonsterList.jsx","Containers/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","utilities/itemPostRequests.js","utilities/itemPutRequests.js","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","Components/DeleteOfferingButton/DeleteOfferingButton.jsx","Components/AddOfferingButton/AddOfferingButton.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Components/TownBehaviorDisplay/TownBehaviorDisplay.jsx","Components/TownBehaviorForm/TownBehaviorForm.jsx","Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay.jsx","Components/DungeonBehaviorForm/DungeonBehaviorForm.jsx","Components/AdventurerClassDisplay/AdventurerClassDisplay.jsx","Components/AdventurerClassForm/AdventurerClassForm.jsx","Components/AdventurerDisplay/AdventurerDisplay.jsx","Components/AdventurerForm/AdventurerForm.jsx","Components/MonsterDropListDisplay/MonsterDropListDisplay.jsx","utilities/breadcrumb.js","Components/MonsterDropListForm/MonsterDropListForm.jsx","Components/MonsterBehaviorDisplay/MonsterBehaviorDisplay.jsx","Components/MonsterBehaviorForm/MonsterBehaviorForm.jsx","Components/MonsterDisplay/MonsterDisplay.jsx","utilities/formComposer.js","Components/MonsterForm/MonsterForm.jsx","Containers/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/behaviorsReducer.js","reducers/adventurerClassReducer.js","reducers/adventurerReducer.js","reducers/dropListReducer.js","reducers/monsterBehaviorReducer.js","reducers/monsterReducer.js","reducers/breadcrumbReducer.js","reducers/dungeonTileReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","SET_DETAIL_FORM","SET_DIALOG","fetchUser","dispatch","a","axios","get","res","payload","data","fetchPotions","fetchWeapons","fetchArmor","fetchSuppliers","fetchTownBehaviors","fetchDungeonBehaviors","fetchAdventurerClasses","fetchAdventurers","loadAdventurerDetails","fetchMonsterDropLists","loadItems","fetchMonsterBehaviors","fetchMonsters","loadMonsterDetails","fetchDungeonTiles","potion","weapon","armor","supplier","town_behavior","dungeon_behavior","adventurer_class","adventurer","monster_drop_list","monster_behavior","monster","dungeon_tile","PotionsList","componentDidMount","handleNew","setRefresh","setDisplayForm","form","formTypes","edit","targetId","potions","newPotions","map","potionClass","id","item","name","detail","value","WeaponsList","weapons","newWeapons","weaponClass","ArmorList","newArmor","armorClass","ItemList","SupplierList","suppliers","newSuppliers","supplierClass","TownBehaviorList","townBehaviors","newTownBehaviors","townBehavior","townBehaviorClass","behaviors","DungeonBehaviorList","dungeonBehaviors","newDungeonBehaviors","dungeonBehavior","dungeonBehaviorClass","BehaviorList","AdventurerClassList","adventurerClasses","newAdventurerClasses","adventurerClass","adventurerClassClass","classes","AdventurerList","adventurers","newAdventurers","NPCList","MonsterDropListList","monsterDropLists","newMonsterDropLists","monsterDropList","monsterDropListClass","dropLists","MonsterBehaviorList","monsterBehaviors","newMonsterBehaviors","monsterBehavior","monsterBehaviorClass","MonsterList","monsters","newMonsters","monsterClass","ObjectListColumn","shouldComponentUpdate","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","handleCloseButton","CloseFormButton","itemPostRequests","makeRequest","postRoute","postBody","subBody","JSON","stringify","postRes","fetch","method","headers","body","itemPutRequests","putRoute","putBody","putRes","PotionForm","addPotion","handleSubmit","potionType","e","preventDefault","displayId","itemPutRequest","itemPostRequest","FormData","target","next","then","newHeading","newName","newValue","newDetails","newRarity","newPotionType","newLevel","newId","newItemId","refresh","thisPotion","find","details","rarity","level","itemId","action","onSubmit","htmlFor","required","placeholder","maxLength","defaultValue","min","max","getPotionOptions","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","deleteType","deleteId","response","json","deleteRes","makeRequestSupplier","route","offeringIds","makeRequestDropList","monsterDroplistId","dropIds","PotionDisplay","deletePotion","window","dialogRef","setDialog","text","WeaponForm","addWeapon","newDamage","thisWeapon","damage","WeaponDisplay","deleteWeapon","ArmorForm","addArmor","thisArmor","ArmorDisplay","deleteArmor","DeleteOfferingButton","AddOfferingButton","itemTypes","SupplierForm","initialized","initializeFields","getOfferingOptions","handleChange","addFormOffering","deleteOffering","updateSupplier","offerings","thisSupplier","initialState","presentIds","length","offering","markup","push","existingIdCount","deletedIds","newOfferingIndex","newOfferingKeys","Object","values","itemType","updatedState","existing","offeringId","newDeleted","newCount","offeringIndex","indexOf","splice","stateUpdate","getAttribute","onChange","deletedMap","includes","index","newOfferingsCount","SupplierDisplay","deleteSupplier","forEach","refOffering","TownBehaviorDisplay","deleteTownBehavior","thisTownBehavior","buy_potion","sell_potion","upgrade_potion","buy_weapon","sell_weapon","upgrade_weapon","buy_armor","sell_armor","upgrade_armor","wealth","enter_dungeon","use_tavern","retire","emigrate","garrison_wall","TownBehaviorForm","addTownBehavior","putRequest","postRequest","newBuyPotion","newSellPotion","newUpgradePotion","newBuyWeapon","newSellWeapon","newUpgradeWeapon","newBuyArmor","newSellArmor","newUpgradeArmor","newWealth","newEnterDungeon","newUseTavern","newRetire","newEmigrate","newGarisonWall","step","DungeonBehaviorDisplay","deleteDungeonBehavior","thisDungeonBehavior","advance_tile","conserve_health","use_potion","rest","return_to_town","check_for_traps","disarm_trap","avoid_trap","search_for_treasure","fight_monster","flee_encounter","defend","attack","check_monster_weakness","explore_level","advance_next_level","fill_inventory","upgrade_inventory","fight_boss_monster","prefer_weaker_monster","try_for_level","DungeonBehaviorForm","addDungeonBehavior","newAdvanceTile","newConserveHealth","newUsePotion","newRest","newReturnToTown","newCheckForTraps","newDisarmTrap","newAvoidTrap","newSearchForTreasure","newFightMonster","newFleeEncounter","newDefend","newAttack","newCheckMonsterWeakness","newExploreLevel","newAdvanceNextLevel","newFillInventory","newUpgradeInventory","newFightBossMonster","newPreferWeakerMonster","newTryForLevel","AdventurerClassDisplay","deleteAdventurerClass","thisAdventurerClass","bargaining","perception","artifacts","traps","agility","tactics","martial_weapons","anatomy","AdventurerClassForm","addAdventurerClass","newBargaining","newPerception","newArtifacts","newTraps","newAgility","newTactics","newMartialWeapons","newAnatomy","AdventurerDisplay","setInitialized","componentDidUpdate","deleteAdventurer","val","thisAdventurer","strength","speed","cunning","intelligence","constitution","dungeonBehaviorId","townBehaviorId","adventurerClassId","dungeonBehaviorName","townBehaviorName","adventurerClassname","AdventurerForm","getDungeonBehaviorOptions","getTownBehaviorOptions","getAdventurerClassOptions","addAdventurer","dungeonOption","townOption","classOption","newDungeonBehavior","newTownBehavior","newAdventurerClass","newStrength","newSpeed","newCunning","newIntelligence","newConstitution","dungeoBehaviorId","undefined","MonsterDropListDisplay","getDrops","deleteDropList","drops","drop","itemName","drop_type","dropChance","thisDropList","dropList","thisName","thisGoldMin","gold_min","thisGoldMax","gold_max","thisGoldChance","gold_chance","thisDrops","breadcrumb","Breadcrumb","displayPayload","formDataPayload","formData","formDataName","prototype","dispatchDisplay","store","dispatchFormdata","dispatchBreadcrumb","breadcrumbPayload","clearBreadcrumbState","setNewBreadcrumb","clearBreadcrumb","revertToBreadcrumb","clearBreadcrumbForm","MonsterDropListForm","getDropListOptions","addFormDrop","deleteDrop","updateMonsterDropList","breadcrumbPass","breadcrumbActive","breadcrumbFormData","newGoldMin","newGoldMax","newGoldChance","newDrops","breadcrumbName","newDropIndex","newDropKeys","propName","allItemsOfType","label","dropId","dropIndex","putRequests","postRequests","newMonsterDroplistId","MonsterBehaviorDisplay","deleteMonsterBehavior","thisMonsterBehavior","confront_weakened_adventurer","special_move","heal","block_flee","migrate","MonsterBehaviorForm","addMonsterBehavior","newConfrontWeakenedAdventurer","newSpecialMove","newHeal","newBlockFlee","newMigrate","MonsterDisplay","deleteMonster","thisMonster","boss","hp","defense","stealth","initiative","special","dropListId","monsterBehaviorId","monsterDropListName","monsterBehaviorName","formComposer","getObjectFromForm","formBody","formToObject","MonsterForm","intialized","getMonsterBehaviorOptions","getMonsterDropListOptions","addMonster","handleBreadcrumb","handleDropListChange","initializeMonsterDropListId","thisMonsterDropList","breadcrumbFormdata","breadcrumbFormdataName","monsterForm","monsterDropListId","Number","parseInt","monsterOption","resDropList","document","querySelector","currentEdit","currentId","newMonsterDropList","newMonsterBehavior","newBoss","newHp","newDefense","newStealth","newInitiative","newSpecial","checked","DetailView","formTable","getDetail","loadFormTable","tempTable","display","formType","displayType","DialogBox","handleNo","clicked","classList","contains","ref","yesCallback","noCallback","App","getDialog","tiles","combineReducers","newTargetId","newEdit","newForm","dungeonTiles","Boolean","location","hostname","match","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f8e8883.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_DETAIL_REFRESH = \"SET_DETAIL_REFRESH\";\nexport const SET_TOWN_BEHAVIORS = \"SET_TOWN_BEHAVIORS\";\nexport const SET_DUNGEON_BEHAVIORS = \"SET_DUNGEON_BEHAVIORS\";\nexport const SET_ADVENTURER_CLASSES = \"SET_ADVENTURER_CLASSES\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_MONSTER_DROP_LISTS = \"SET_MONSTER_DROP_LISTS\";\nexport const SET_MONSTER_BEHAVIORS = \"SET_MONSTER_BEHAVIORS\";\nexport const SET_MONSTERS = 'SET_MONSTERS';\nexport const SET_BREADCRUMB = 'SET_BREADCRUMB';\nexport const SET_BREADCRUMB_FORMDATA = 'SET_BREADCRUMB_FORMDATA';\nexport const SET_DUNGEON_TILES = \"SET_DUNGEON_TILES\";","import axios from 'axios';\nimport { FETCH_USER,\n  SET_POTIONS, \n  SET_WEAPONS, \n  SET_ARMOR, \n  SET_SUPPLIERS,\n  SET_TOWN_BEHAVIORS,\n  SET_DUNGEON_BEHAVIORS,\n  SET_ADVENTURER_CLASSES,\n  SET_ADVENTURERS,\n  SET_MONSTER_DROP_LISTS,\n  SET_MONSTER_BEHAVIORS,\n  SET_MONSTERS,\n  SET_DUNGEON_TILES } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}\n\nexport const fetchTownBehaviors = () => async dispatch => {\n  const res = await axios.get('/town_behaviors');\n  dispatch({ type: SET_TOWN_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchDungeonBehaviors = () => async dispatch => {\n  const res = await axios.get('/dungeon_behaviors');\n  dispatch({ type: SET_DUNGEON_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchAdventurerClasses = () => async dispatch => {\n  const res = await axios.get('/adventurer_classes');\n  dispatch({ type: SET_ADVENTURER_CLASSES, payload: res.data });\n}\n\nexport const fetchAdventurers = () => async dispatch => {\n  const res = await axios.get('/adventurers');\n  dispatch({ type: SET_ADVENTURERS, payload: res.data });\n}\n\nexport const loadAdventurerDetails = () => async dispatch => {\n  dispatch(fetchTownBehaviors());\n  dispatch(fetchDungeonBehaviors());\n  dispatch(fetchAdventurerClasses());\n}\n\nexport const fetchMonsterDropLists = () => async dispatch => {\n  const res = await axios.get('/monster_drop_lists');\n  dispatch({ type: SET_MONSTER_DROP_LISTS, payload: res.data });\n}\n\nexport const loadItems = () => async dispatch => {\n  dispatch(fetchPotions());\n  dispatch(fetchWeapons());\n  dispatch(fetchArmor());\n}\n\nexport const fetchMonsterBehaviors = () => async dispatch => {\n  const res = await axios.get('/monster_behaviors');\n  dispatch({ type: SET_MONSTER_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchMonsters = () => async dispatch => {\n  const res = await axios.get('/monsters');\n  dispatch({ type: SET_MONSTERS, payload: res.data });\n}\n\nexport const loadMonsterDetails = () => async dispatch => {\n  dispatch(fetchMonsterBehaviors());\n  dispatch(fetchMonsterDropLists());\n}\n\nexport const fetchDungeonTiles = () => async dispatch => {\n  const res = await axios.get('/dungeon_tiles');\n  dispatch({ type: SET_DUNGEON_TILES, payload: res.data });\n}","export default {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor',\n  supplier: 'supplier',\n  town_behavior: 'town_behavior',\n  dungeon_behavior: 'dungeon_behavior',\n  adventurer_class: 'adventurer_class',\n  adventurer: 'adventurer',\n  monster_drop_list: 'monster_drop_list',\n  monster_behavior: 'monster_behavior',\n  monster: 'monster',\n  dungeon_tile: 'dungeon_tile'\n}","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.potion, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === formTypes.potion && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: formTypes.potion, edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.weapon, edit: false, targetId: null });\n  }\n  \n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === formTypes.weapon && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.weapon, edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchArmor();\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.armor, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === formTypes.armor && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.armor, edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchSuppliers();\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.supplier, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\"\n        onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === formTypes.supplier && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.supplier, edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import React from 'react';\nimport './TownBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass TownBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.props.fetchTownBehaviors();\n  }\n\n  getTitle() {\n    return 'Town Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.town_behavior, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewTownBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.townBehaviors) {\n      return '';\n    } else {\n      const newTownBehaviors = this.props.townBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newTownBehaviors.map(townBehavior => {\n            let townBehaviorClass = \"ListDetail\";\n            if (this.props.form === formTypes.town_behavior && this.props.targetId === townBehavior.id) {\n              townBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={townBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.town_behavior, edit: false, targetId: townBehavior.id })}\n                >{townBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorList);","import React from 'react';\nimport './DungeonBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass DungeonBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDungeonBehaviors();\n  }\n\n  getTitle() {\n    return 'Dungeon Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewDungeonBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.dungeonBehaviors) {\n      return '';\n    } else {\n      const newDungeonBehaviors = this.props.dungeonBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newDungeonBehaviors.map(dungeonBehavior => {\n            let dungeonBehaviorClass = \"ListDetail\";\n            if (this.props.form === formTypes.dungeon_behavior && dungeonBehavior.id === this.props.targetId) {\n              dungeonBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={dungeonBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: false, targetId: dungeonBehavior.id })}\n                >{dungeonBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorList);","import React from 'react';\nimport './BehaviorList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport TownBehaviorList from '../TownBehaviorList/TownBehaviorList';\nimport DungeonBehaviorList from '../DungeonBehaviorList/DungeonBehaviorList';\n\nclass BehaviorList extends ExpandableList {\n  getTitle() {\n    return 'Behaviors';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <TownBehaviorList />\n        <DungeonBehaviorList />\n      </div>\n    )\n  }\n}\n\nexport default BehaviorList;","import React from 'react';\nimport './AdventurerClassList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utitlity imports\nimport formTypes from '../../utilities/formTypes';\n\nclass AdventurerClassList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurerClasses();\n  }\n  \n  getTitle() {\n    return 'Classes';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerClassButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurerClasses) {\n      return '';\n    } else {\n      const newAdventurerClasses = this.props.adventurerClasses;\n      return (\n        <div className=\"detailList\">\n          {newAdventurerClasses.map(adventurerClass => {\n            let adventurerClassClass = \"ListDetail\";\n            if (this.props.form === formTypes.adventurer_class && this.props.targetId === adventurerClass.id) {\n              adventurerClassClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClassClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: false, targetId: adventurerClass.id })}\n                >{adventurerClass.name}</span>\n              </p>\n            );\n          })}\n        </div>\n      )\n    }\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassList);","import React from 'react';\nimport './AdventurerList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\nimport AdventurerClassList from '../AdventurerClassList/AdventurerClassList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass AdventurerList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurers();\n  }\n  \n  getTitle() {\n    return 'Adventurers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.adventurer, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurers) {\n      return (\n        <div className=\"detailList\">\n          <AdventurerClassList />\n        </div>\n      )\n    } else {\n      const newAdventurers = this.props.adventurers;\n      return (\n        <div className=\"detailList\">\n          { newAdventurers.map(adventurer => {\n            let adventurerClass = \"ListDetail\";\n            if (this.props.form === formTypes.adventurer && this.props.targetId === adventurer.id) {\n              adventurerClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer, edit: false, targetId: adventurer.id })}\n                  >{adventurer.name}</span>\n              </p>\n            )\n          })}\n          <AdventurerClassList />\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerList);","import React from 'react';\nimport './NPCList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport BehaviorList from '../BehaviorList/BehaviorList';\nimport AdventurerList from '../AdventurerList/AdventurerList';\n\nclass NPCList extends ExpandableList {\n  getTitle() {\n    return 'NPCs';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <BehaviorList />\n        <AdventurerList />\n      </div>\n    )\n  }\n}\n\nexport default NPCList;","import React from 'react';\nimport './MonsterDropListList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterDropListList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterDropLists();\n  }\n  \n  getTitle() {\n    return 'Monster Drop Lists';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterDropListButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterDropLists) {\n      return '';\n    }\n    const newMonsterDropLists = this.props.monsterDropLists;\n    return (\n      <div className=\"detailList\">\n        { newMonsterDropLists.map(monsterDropList => {\n          let monsterDropListClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster_drop_list && this.props.targetId === monsterDropList.id) {\n            monsterDropListClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterDropListClass}\n              onClick={() => this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: monsterDropList.id })}\n              >{monsterDropList.monster_drop_list.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListList);","import React from 'react';\nimport './MonsterBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n    this.displayContents = this.displayContents.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterBehaviors();\n  }\n\n  getTitle() {\n    return 'Monster Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterBehaviors) {\n      return '';\n    }\n    const newMonsterBehaviors = this.props.monsterBehaviors;\n    return (\n      <div className=\"detailList\">\n        {newMonsterBehaviors.map(monsterBehavior => {\n          let monsterBehaviorClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster_behavior && monsterBehavior.id === this.props.targetId) {\n            monsterBehaviorClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterBehaviorClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: false, targetId: monsterBehavior.id })}\n              >{monsterBehavior.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorList);","import React from 'react';\nimport './MonsterList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\nimport MonsterDropListList from '../MonsterDropListList/MonsterDropListList';\nimport MonsterBehaviorList from '../MonsterBehaviorList/MonsterBehaviorList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsters } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsters();\n  }\n  \n  getTitle() {\n    return 'Monsters';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    );\n  }\n\n  displayContents() {\n    if (!this.props.monsters) {\n      return (\n        <div className=\"detailList\">\n          <MonsterDropListList />\n          <MonsterBehaviorList />\n        </div>\n      )\n    }\n    const newMonsters = this.props.monsters;\n    return (\n      <div className=\"detailList\">\n        { newMonsters.map(monster => {\n          let monsterClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster && this.props.targetId === monster.id) {\n            monsterClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.monster, edit: false, targetId: monster.id })}\n                >{monster.name}\n                \n                </span>\n            </p>\n          )\n        })}\n        <MonsterDropListList />\n        <MonsterBehaviorList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsters: state.monsters.monsters,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsters: () => dispatch(fetchMonsters()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterList);","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../../Components/ItemList/ItemList';\nimport SupplierList from '../../Components/SupplierList/SupplierList';\nimport NPCList from '../../Components/NPCList/NPCList';\nimport MonsterList from '../../Components/MonsterList/MonsterList';\n\n// redux imports\n// comment to update code\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n        <NPCList />\n        <MonsterList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","const itemPostRequests = (function() {\n  return {\n    makeRequest: async function(postRoute, postBody) {\n      let subBody = {};\n      for ( let [ key, value ] of postBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const postRes = fetch(`/${postRoute}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return postRes;\n    }\n  }\n}());\n\nexport default itemPostRequests;","const itemPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default itemPutRequests;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass PotionForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addPotion = this.addPotion.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.potion, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addPotion(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('potion', data);\n    } else {\n      yield itemPostRequest.makeRequest('potion', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target)\n    let addPotion = this.addPotion(data);\n    addPotion.next().value.then(() => {\n      this.props.fetchPotions();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.potion, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n    \n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newPotionType = '';\n    let newLevel = '';\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit && !this.props.refresh) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" required name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" required name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" required name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" required name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestSupplier: async function(payload) {\n      const {\n        route, id, offeringIds\n      } = payload;\n\n      let data = {\n        id: id,\n        offeringIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestDropList: async function(payload) {\n      const {\n        route, id, monsterDroplistId, dropIds\n      } = payload;\n\n      let data = {\n        id: id,\n        monsterDroplistId: monsterDroplistId,\n        dropIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n    \n    this.deletePotion = this.deletePotion.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deletePotion() {\n    yield deleteRequests.makeRequest('potion', this.props.displayId);\n  }\n\n  handleYes() {\n    let deletePotion = this.deletePotion();\n    deletePotion.next().value.then(() => {\n      this.props.fetchPotions();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: formTypes.potion, edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons} from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass WeaponForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addWeapon = this.addWeapon.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.weapon, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addWeapon(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('weapon', data);\n    } else {\n      yield itemPostRequest.makeRequest('weapon', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let addWeapon = this.addWeapon(data);\n    addWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.weapon, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" required defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" required defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" required name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteWeapon = this.deleteWeapon.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteWeapon() {\n    yield deleteRequests.makeRequest('weapon', this.props.displayId);\n  }\n\n  handleYes() {\n    let deleteWeapon = this.deleteWeapon();\n    deleteWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.weapon, edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass ArmorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addArmor = this.addArmor.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.armor, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addArmor(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('armor', data);\n    } else {\n      yield itemPostRequest.makeRequest('armor', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addArmor = this.addArmor(data);\n    this.addArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.armor, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          onSubmit={this.handleSubmit}\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteArmor = this.deleteArmor.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteArmor() {\n    yield deleteRequests.makeRequest('armor', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteArmor = this.deleteArmor();\n    deleteArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n    \n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.armor, edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","import React from 'react';\nimport './DeleteOfferingButton.css';\n\nclass DeleteOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteOfferingButton\">\n        <span className=\"offeringButtonIcon\">X</span>\n      </div>\n    )\n  }\n}\n\nexport default DeleteOfferingButton;","import React from 'react';\nimport './AddOfferingButton.css';\n\nclass AddOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddOfferingButton\">\n        <span className=\"addOfferingButtonIcon\">+</span>\n      </div>\n    )\n  }\n}\n\nexport default AddOfferingButton;","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addFormOffering = this.addFormOffering.bind(this);\n    this.deleteOffering = this.deleteOffering.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateSupplier = this.updateSupplier.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.suppliers) return;\n    let newName = '';\n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      newName = thisSupplier.name;\n      offerings = thisSupplier.offerings;\n    }\n   \n\n    let initialState = {};\n\n    initialState['name'] = newName;\n    let presentIds = [];\n    if (offerings.length > 0) {\n      for (const offering of offerings) {\n        initialState[`offering-${offering.id}-type`] = offering.type;\n        initialState[`offering-${offering.id}-markup`] = offering.markup;\n        presentIds.push(offering.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = offerings.length;\n    initialState.deletedIds = [];\n    initialState.newOfferingIndex = 0;\n    initialState.newOfferingKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.supplier, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  addFormOffering() {\n    // limit offerings to 5\n    const totalCount = this.state.newOfferingKeys.length + this.state.existingIdCount;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newOfferingIndex = this.state.newOfferingIndex;\n    updatedState[`new-offering-${newOfferingIndex}-type`] = 1;\n    updatedState[`new-offering-${newOfferingIndex}-markup`] = 100;\n    let newOfferingKeys = this.state.newOfferingKeys;\n    newOfferingKeys.push(newOfferingIndex);\n    updatedState.newOfferingKeys = newOfferingKeys;\n    newOfferingIndex += 1;\n    updatedState.newOfferingIndex = newOfferingIndex;\n    this.setState(updatedState);\n    \n  }\n\n  deleteOffering(payload) {\n    const { existing, offeringId } = payload\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(offeringId);\n      newCount -= 1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newOfferingKeys = this.state.newOfferingKeys;\n      const offeringIndex = newOfferingKeys.indexOf(offeringId);\n      if (offeringIndex < 0 || (offeringIndex !== 0 && !offeringIndex)) return;\n      newOfferingKeys.splice(offeringIndex, 1);\n      updatedState.newOfferingKeys = newOfferingKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value\n    this.setState(stateUpdate);\n  }\n\n  *updateSupplier(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('supplier', data);\n    } else {\n      yield itemPostRequest.makeRequest('supplier', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateSupplier = this.updateSupplier(data);\n    updateSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.supplier, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n    \n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      offerings = thisSupplier.offerings;\n    }\n    \n    let newHeading = 'New Supplier';\n    if (this.props.edit) {\n      newHeading = this.state.name;\n    }\n    let newId = null;\n    if (this.props.edit) {\n      newId = this.props.displayId;\n    }\n    const newOfferingKeys = this.state.newOfferingKeys;\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/supplier'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"supplier name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group form-subgroup\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.length <= 0 ? '' : offerings.map(offering => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(offering.id)) {\n                  return ''\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"offering-select\" \n                        name={`offering-${offering.id}-type`} \n                        id={`offering-${offering.id}-type`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-type`]}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\" \n                        type=\"number\" \n                        name={`offering-${offering.id}-markup`} \n                        id={`offering-${offering.id}-markup`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-markup`]}>\n                      </input>\n                      <span className=\"offeringDelete\"\n                        onClick={() => this.deleteOffering({ existing: true, offeringId: offering.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n            {newOfferingKeys.length <= 0 ? '' : newOfferingKeys.map(index => {\n              return (\n                <div className=\"form-inner-span\">\n                  <div className=\"form-half-span form-left-half\">\n                    <select className=\"offering-select\"\n                      name={`new-offering-${index}-type`}\n                      id={`new-offering-${index}-type`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-type`]}>\n                        {this.getOfferingOptions()}\n                    </select>\n                  </div>\n                  <div className=\"form-half-span form-right-half\">\n                    <input className=\"input-number\"\n                      type=\"number\"\n                      name={`new-offering-${index}-markup`}\n                      id={`new-offering-${index}-markup`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-markup`]}>\n                    </input>\n                    <span className=\"offeringDelete\"\n                      onClick={() => this.deleteOffering({ existing: false, offeringId: index })}\n                    >\n                      <DeleteOfferingButton />\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n            <div className=\"offeringAdd form-full-span form-center-content\"\n              onClick={this.addFormOffering}\n            >\n              <AddOfferingButton />\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n          <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n          <input type=\"hidden\" name=\"newIndexes\" value={this.state.newOfferingKeys} />\n          <input type=\"hidden\" name=\"newOfferingsCount\" value={this.state.newOfferingsCount} />\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <div className=\"supplier-submit-container\">\n          <input type=\"submit\" value={this.props.edit ? 'Update Supplier' : 'Create Supplier' } className=\"button create-button\"></input>\n          </div>          \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass SupplierDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteSupplier = this.deleteSupplier.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteSupplierButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Supplier and Offerings from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteSupplier(payload) {\n    yield deleteRequests.makeRequestSupplier(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'supplier';\n    payload.id = this.props.displayId;\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const offerings = thisSupplier.offerings;\n    let offeringIds = [];\n    if (offerings.length > 0) {\n      offerings.forEach(refOffering => {\n        offeringIds.push(refOffering.id);\n      });\n    }\n    payload.offeringIds = offeringIds;\n\n    // invoke delete request\n    let deleteSupplier = this.deleteSupplier(payload);\n    deleteSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.supplier, edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display subgroup-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './TownBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass TownBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteTownBehavior = this.deleteTownBehavior.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteTownBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Town Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteTownBehavior() {\n    yield deleteRequests.makeRequest('town_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteTownBehavior = this.deleteTownBehavior();\n    deleteTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n    const { name,\n      buy_potion,\n      sell_potion,\n      upgrade_potion,\n      buy_weapon,\n      sell_weapon,\n      upgrade_weapon,\n      buy_armor,\n      sell_armor,\n      upgrade_armor,\n      wealth,\n      enter_dungeon,\n      use_tavern,\n      retire,\n      emigrate,\n      garrison_wall\n    } = thisTownBehavior;\n\n    return (\n      <div className=\"TownBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"TownBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.town_behavior, edit: true, targetId: thisTownBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy potion</span>\n            <span className=\"display-text\">{buy_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell potion</span>\n            <span className=\"display-text\">{sell_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade potion</span>\n            <span className=\"display-text\">{upgrade_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy weapon</span>\n            <span className=\"display-text\">{buy_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell weapon</span>\n            <span className=\"display-text\">{sell_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade weapon</span>\n            <span className=\"display-text\">{upgrade_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy armor</span>\n            <span className=\"display-text\">{buy_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell armor</span>\n            <span className=\"display-text\">{sell_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade armor</span>\n            <span className=\"display-text\">{upgrade_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">wealth</span>\n            <span className=\"display-text\">{wealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">enter dungeon</span>\n            <span className=\"display-text\">{enter_dungeon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use tavern</span>\n            <span className=\"display-text\">{use_tavern}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">retire</span>\n            <span className=\"display-text\">{retire}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">emigrate</span>\n            <span className=\"display-text\">{emigrate}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">garrison wall</span>\n            <span className=\"display-text\">{garrison_wall}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorDisplay);","import React from 'react';\nimport './TownBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass TownBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addTownBehavior = this.addTownBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.town_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addTownBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('town_behavior', data);\n    } else {\n      yield postRequest.makeRequest('town_behavior', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addTownBehavior = this.addTownBehavior(data);\n    this.addTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.town_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false })\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Town Behavior';\n    let newName = '';\n    let newId;\n    let newBuyPotion = 0;\n    let newSellPotion = 0;\n    let newUpgradePotion = 0;\n    let newBuyWeapon = 0;\n    let newSellWeapon = 0;\n    let newUpgradeWeapon = 0;\n    let newBuyArmor = 0;\n    let newSellArmor = 0;\n    let newUpgradeArmor = 0;\n    let newWealth = 0;\n    let newEnterDungeon = 0;\n    let newUseTavern = 0;\n    let newRetire = 0;\n    let newEmigrate = 0;\n    let newGarisonWall = 0;\n\n    if (this.props.edit) {\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n      newName = thisTownBehavior.name;\n      newHeading = newName;\n      newId = thisTownBehavior.id;\n      newBuyPotion = thisTownBehavior.buy_potion;\n      newSellPotion = thisTownBehavior.sell_potion;\n      newUpgradePotion = thisTownBehavior.upgrade_potion;\n      newBuyWeapon = thisTownBehavior.buy_weapon;\n      newSellWeapon= thisTownBehavior.sell_weapon;\n      newUpgradeWeapon = thisTownBehavior.upgrade_weapon;\n      newBuyArmor = thisTownBehavior.buy_armor;\n      newSellArmor = thisTownBehavior.sell_armor;\n      newUpgradeArmor = thisTownBehavior.upgrade_armor;\n      newWealth = thisTownBehavior.wealth;\n      newEnterDungeon = thisTownBehavior.enter_dungeon;\n      newUseTavern = thisTownBehavior.use_tavern;\n      newRetire = thisTownBehavior.retire;\n      newEmigrate = thisTownBehavior.emigrate;\n      newGarisonWall = thisTownBehavior.garrison_wall;\n    }\n    return (\n      <div className=\"TownBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Town Behavior: {newHeading}</h2>\n          <div className=\"close-town-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n      <form action={'/town_behaviors'}\n        className=\"input-fields-area\"\n        id=\"TownBehaviorPostForm\"\n        method=\"POST\"\n        onSubmit={this.handleSubmit}>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n              maxLength=\"26\" required defaultValue={newName}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_potion\">buy potion</label>\n            <input type=\"number\" name=\"buy_potion\" id=\"buy_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_potion\">sell potion</label>\n            <input type=\"number\" name=\"sell_potion\" id=\"sell_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_potion\">upgrade potion</label>\n            <input type=\"number\" name=\"upgrade_potion\" id=\"upgrade_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradePotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_weapon\">buy weapon</label>\n            <input type=\"number\" name=\"buy_weapon\" id=\"buy_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_weapon\">sell weapon</label>\n            <input type=\"number\" name=\"sell_weapon\" id=\"sell_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_weapon\">upgrade weapon</label>\n            <input type=\"number\" name=\"upgrade_weapon\" id=\"upgrade_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_armor\">buy armor</label>\n            <input type=\"number\" name=\"buy_armor\" id=\"buy_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_armor\">sell armor</label>\n            <input type=\"number\" name=\"sell_armor\" id=\"sell_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_armor\">upgrade armor</label>\n            <input type=\"number\" name=\"upgrade_armor\" id=\"upgrade_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"wealth\">wealth</label>\n            <input type=\"number\" name=\"wealth\" id=\"wealth\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newWealth}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"enter_dungeon\">enter dungeon</label>\n            <input type=\"number\" name=\"enter_dungeon\" id=\"enter_dungeon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEnterDungeon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"use_tavern\">use tavern</label>\n            <input type=\"number\" name=\"use_tavern\" id=\"use_tavern\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUseTavern}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"retire\">retire</label>\n            <input type=\"number\" name=\"retire\" id=\"retire\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRetire}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"emigrate\">emigrate</label>\n            <input type=\"number\" name=\"emigrate\" id=\"emigrate\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEmigrate}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"garrison_wall\">garrison wall</label>\n            <input type=\"number\" name=\"garrison_wall\" id=\"garrison_wall\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newGarisonWall}></input>\n          </div>\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <input type=\"submit\" value={this.props.edit ? 'Update Town Behavior' : 'Create Town Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorForm);","import React from 'react';\nimport './DungeonBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass DungeonBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteDungeonBehavior = this.deleteDungeonBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteDungeonBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Dungeon Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteDungeonBehavior() {\n    yield deleteRequests.makeRequest('dungeon_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteDungeonBehavior = this.deleteDungeonBehavior();\n    deleteDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n    const {\n      name,\n      advance_tile,\n      conserve_health,\n      use_potion,\n      rest,\n      return_to_town,\n      check_for_traps,\n      disarm_trap,\n      avoid_trap,\n      search_for_treasure,\n      fight_monster,\n      flee_encounter,\n      defend,\n      attack,\n      check_monster_weakness,\n      explore_level,\n      advance_next_level,\n      fill_inventory,\n      upgrade_inventory,\n      fight_boss_monster,\n      prefer_weaker_monster,\n      try_for_level\n    } = thisDungeonBehavior;\n\n    return (\n      <div className=\"DungeonBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"DungeonBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: true, targetId: thisDungeonBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance tile</span>\n            <span className=\"display-text\">{advance_tile}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">conserve health</span>\n            <span className=\"display-text\">{conserve_health}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use potion</span>\n            <span className=\"display-text\">{use_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">rest</span>\n            <span className=\"display-text\">{rest}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">return to town</span>\n            <span className=\"display-text\">{return_to_town}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check for traps</span>\n            <span className=\"display-text\">{check_for_traps}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">disarm trap</span>\n            <span className=\"display-text\">{disarm_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">avoid trap</span>\n            <span className=\"display-text\">{avoid_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">search for treasure</span>\n            <span className=\"display-text\">{search_for_treasure}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight monster</span>\n            <span className=\"display-text\">{fight_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">flee encounter</span>\n            <span className=\"display-text\">{flee_encounter}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defend</span>\n            <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">attack</span>\n            <span className=\"display-text\">{attack}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check monster weakness</span>\n            <span className=\"display-text\">{check_monster_weakness}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">explore level</span>\n            <span className=\"display-text\">{explore_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance next level</span>\n            <span className=\"display-text\">{advance_next_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fill inventory</span>\n            <span className=\"display-text\">{fill_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade inventory</span>\n            <span className=\"display-text\">{upgrade_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight boss monster</span>\n            <span className=\"display-text\">{fight_boss_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">prefer weaker monster</span>\n            <span className=\"display-text\">{prefer_weaker_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">try for level</span>\n            <span className=\"display-text\">{try_for_level}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorDisplay);","import React from 'react';\nimport './DungeonBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass DungeonBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addDungeonBehavior = this.addDungeonBehavior.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.dungeon_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addDungeonBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('dungeon_behavior', data);\n    } else {\n      yield postRequest.makeRequest('dungeon_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addDungeonBehavior = this.addDungeonBehavior(data);\n    this.addDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.dungeon_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading ='New Dungeon Behavior';\n    let newName = '';\n    let newId;\n    let newAdvanceTile = 0;\n    let newConserveHealth = 0;\n    let newUsePotion = 0;\n    let newRest = 0;\n    let newReturnToTown = 0;\n    let newCheckForTraps = 0;\n    let newDisarmTrap = 0;\n    let newAvoidTrap = 0;\n    let newSearchForTreasure = 0;\n    let newFightMonster = 0;\n    let newFleeEncounter = 0;\n    let newDefend = 0;\n    let newAttack = 0;\n    let newCheckMonsterWeakness = 0;\n    let newExploreLevel = 0;\n    let newAdvanceNextLevel = 0;\n    let newFillInventory = 0;\n    let newUpgradeInventory = 0;\n    let newFightBossMonster = 0;\n    let newPreferWeakerMonster = 0;\n    let newTryForLevel = 0;\n\n    if (this.props.edit) {\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n      newName = thisDungeonBehavior.name;\n      newHeading = newName;\n      newId = thisDungeonBehavior.id;\n      newAdvanceTile = thisDungeonBehavior.advance_tile;\n      newConserveHealth = thisDungeonBehavior.conserve_health;\n      newUsePotion = thisDungeonBehavior.use_potion;\n      newRest = thisDungeonBehavior.rest;\n      newReturnToTown = thisDungeonBehavior.return_to_town;\n      newCheckForTraps = thisDungeonBehavior.check_for_traps;\n      newDisarmTrap = thisDungeonBehavior.disarm_trap;\n      newAvoidTrap = thisDungeonBehavior.avoid_trap;\n      newSearchForTreasure = thisDungeonBehavior.search_for_treasure;\n      newFightMonster = thisDungeonBehavior.fight_monster;\n      newFleeEncounter = thisDungeonBehavior.flee_encounter;\n      newDefend = thisDungeonBehavior.defend;\n      newAttack = thisDungeonBehavior.attack;\n      newCheckMonsterWeakness = thisDungeonBehavior.check_monster_weakness;\n      newExploreLevel = thisDungeonBehavior.explore_level;\n      newAdvanceNextLevel = thisDungeonBehavior.advance_next_level;\n      newFillInventory = thisDungeonBehavior.fill_inventory;\n      newUpgradeInventory = thisDungeonBehavior.upgrade_inventory;\n      newFightBossMonster = thisDungeonBehavior.fight_boss_monster;\n      newPreferWeakerMonster = thisDungeonBehavior.prefer_weaker_monster;\n      newTryForLevel = thisDungeonBehavior.try_for_level;\n    }\n    return (\n      <div className=\"DungeonBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Dungeon Behavior: {newHeading}</h2>\n          <div className=\"close-dungeon-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        <form action={'/dungeon_behavior'}\n          className=\"input-fields-area\"\n          id=\"DungeonBehaviorPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_tile\">advance tile</label>\n              <input type=\"number\" name=\"advance_tile\" id=\"advance_tile\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceTile}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"conserve_health\">conserve health</label>\n              <input type=\"number\" name=\"conserve_health\" id=\"conserve_health\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConserveHealth}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"use_potion\">use potion</label>\n              <input type=\"number\" name=\"use_potion\" id=\"use_potion\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUsePotion}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rest\">rest</label>\n              <input type=\"number\" name=\"rest\" id=\"rest\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRest}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"return_to_town\">return to town</label>\n              <input type=\"number\" name=\"return_to_town\" id=\"return_to_town\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newReturnToTown}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_for_traps\">check for traps</label>\n              <input type=\"number\" name=\"check_for_traps\" id=\"check_for_traps\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckForTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"disarm_trap\">disarm trap</label>\n              <input type=\"number\" name=\"disarm_trap\" id=\"disarm_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDisarmTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"avoid_trap\">avoid trap</label>\n              <input type=\"number\" name=\"avoid_trap\" id=\"avoid_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAvoidTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"search_for_treasure\">search for treasure</label>\n              <input type=\"number\" name=\"search_for_treasure\" id=\"search_for_treasure\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSearchForTreasure}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_monster\">fight monster</label>\n              <input type=\"number\" name=\"fight_monster\" id=\"fight_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"flee_encounter\">flee encounter</label>\n              <input type=\"number\" name=\"flee_encounter\" id=\"flee_encounter\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFleeEncounter}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"attack\">attack</label>\n              <input type=\"number\" name=\"attack\" id=\"attack\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAttack}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_monster_weakness\">check monster weakness</label>\n              <input type=\"number\" name=\"check_monster_weakness\" id=\"check_monster_weakness\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckMonsterWeakness}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"explore_level\">explore level</label>\n              <input type=\"number\" name=\"explore_level\" id=\"explore_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newExploreLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_next_level\">advance next level</label>\n              <input type=\"number\" name=\"advance_next_level\" id=\"advance_next_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceNextLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fill_inventory\">fill inventory</label>\n              <input type=\"number\" name=\"fill_inventory\" id=\"fill_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFillInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"upgrade_inventory\">upgrade inventory</label>\n              <input type=\"number\" name=\"upgrade_inventory\" id=\"upgrade_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_boss_monster\">fight boss monster</label>\n              <input type=\"number\" name=\"fight_boss_monster\" id=\"fight_boss_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightBossMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"prefer_weaker_monster\">prefer weaker monster</label>\n              <input type=\"number\" name=\"prefer_weaker_monster\" id=\"prefer_weaker_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newPreferWeakerMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"try_for_level\">try for level</label>\n              <input type=\"number\" name=\"try_for_level\" id=\"try_for_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newTryForLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Dungeon Behavior' : 'Create Dungeon Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorForm);","import React from 'react';\nimport './AdventurerClassDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerClassDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteAdventurerClass = this.deleteAdventurerClass.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerClassButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer Class from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurerClass() {\n    yield deleteRequests.makeRequest('adventurer_class', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurerClass = this.deleteAdventurerClass();\n    deleteAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n    const {\n      name,\n      bargaining,\n      perception,\n      artifacts,\n      traps,\n      agility,\n      tactics,\n      martial_weapons,\n      armor,\n      anatomy\n    } = thisAdventurerClass;\n\n    return (\n      <div className=\"AdventurerClassDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerClassEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer_class, edit: true, targetId: thisAdventurerClass.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Bargaining</span>\n              <span className=\"display-text\">{bargaining}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Perception</span>\n              <span className=\"display-text\">{perception}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Artifacts</span>\n              <span className=\"display-text\">{artifacts}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Traps</span>\n              <span className=\"display-text\">{traps}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Agility</span>\n              <span className=\"display-text\">{agility}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Tactics</span>\n              <span className=\"display-text\">{tactics}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Martial Weapons</span>\n              <span className=\"display-text\">{martial_weapons}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Armor</span>\n              <span className=\"display-text\">{armor}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Anatomy</span>\n              <span className=\"display-text\">{anatomy}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassDisplay);","import React from 'react';\nimport './AdventurerClassForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerClassForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addAdventurerClass = this.addAdventurerClass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.adventurer_class, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurerClass(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer_class', data);\n    } else {\n      yield postRequest.makeRequest('adventurer_class', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurerClass = this.addAdventurerClass(data);\n    this.addAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.adventurer_class, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Adventurer Class';\n    let newName = '';\n    let newId;\n    let newBargaining = 0;\n    let newPerception = 0;\n    let newArtifacts = 0;\n    let newTraps = 0;\n    let newAgility = 0;\n    let newTactics = 0;\n    let newMartialWeapons = 0;\n    let newArmor = 0;\n    let newAnatomy = 0;\n\n    if (this.props.edit) {\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n      newName = thisAdventurerClass.name;\n      newHeading = newName;\n      newId = thisAdventurerClass.id;\n      newBargaining = thisAdventurerClass.bargaining;\n      newPerception = thisAdventurerClass.perception;\n      newArtifacts = thisAdventurerClass.artifacts;\n      newTraps = thisAdventurerClass.traps;\n      newAgility = thisAdventurerClass.agility;\n      newTactics = thisAdventurerClass.tactics;\n      newMartialWeapons = thisAdventurerClass.martial_weapons;\n      newArmor = thisAdventurerClass.armor;\n      newAnatomy = thisAdventurerClass.anatomy;\n    }\n    return (\n      <div className=\"AdventurerClassForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer Class: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer_class'}\n          className=\"input-fields-area\"\n          id=\"AdventurerClassPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"class name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"bargaining\">bargaining</label>\n              <input type=\"number\" name=\"bargaining\" id=\"bargaining\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newBargaining}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"perception\">perception</label>\n              <input type=\"number\" name=\"perception\" id=\"perception\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newPerception}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"artifacts\">artifacts</label>\n              <input type=\"number\" name=\"artifacts\" id=\"artifacts\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArtifacts}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"traps\">traps</label>\n              <input type=\"number\" name=\"traps\" id=\"traps\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"agility\">agility</label>\n              <input type=\"number\" name=\"agility\" id=\"agility\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAgility}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"tactics\">tactics</label>\n              <input type=\"number\" name=\"tactics\" id=\"tactics\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTactics}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"martial_weapons\">martial weapon</label>\n              <input type=\"number\" name=\"martial_weapons\" id=\"martial_weapons\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newMartialWeapons}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArmor}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"anatomy\">anatomy</label>\n              <input type=\"number\" name=\"anatomy\" id=\"anatomy\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAnatomy}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer Class' : 'Create Adventurer Class' } className=\"button create-button\"></input>\n          </form>\n          <p>Points should total 45</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassForm);\n","import React from 'react';\nimport './AdventurerDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.setInitialized = this.setInitialized.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.deleteAdventurer = this.deleteAdventurer.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.adventurerClasses || !this.props.townBehaviors || !this.props.dungeonBehaviors) {\n      this.props.loadAdventurerDetails();\n      this.setInitialized(true);\n    } else {\n      if (!this.state.initialized) {\n        this.setInitialized(true);\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.initialized && (this.props.adventurerClasses && this.props.townBehaviors && this.props.dungeonBehaviors)) {\n      this.setInitialized(true);\n    }\n  }\n\n  setInitialized(val) {\n    this.setState({ initialized: val});\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurer() {\n    yield deleteRequests.makeRequest('adventurer', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurer = this.deleteAdventurer();\n    deleteAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.adventurers || !this.state.initialized) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n    const {\n      name,\n      strength,\n      speed,\n      cunning,\n      intelligence,\n      constitution,\n      dungeonBehaviorId,\n      townBehaviorId,\n      adventurerClassId\n    } = thisAdventurer;\n    if (!this.props.dungeonBehaviors || !this.props.townBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === dungeonBehaviorId);\n    const dungeonBehaviorName = thisDungeonBehavior.name;\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === townBehaviorId);\n    const townBehaviorName = thisTownBehavior.name;\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === adventurerClassId);\n    const adventurerClassname = thisAdventurerClass.name;\n\n    return (\n      <div className=\"AdventurerDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer, edit: true, targetId: thisAdventurer.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Strength</span>\n            <span className=\"display-text\">{strength}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Speed</span>\n            <span className=\"display-text\">{speed}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Cunning</span>\n            <span className=\"display-text\">{cunning}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Intelligence</span>\n            <span className=\"display-text\">{intelligence}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Constitution</span>\n            <span className=\"display-text\">{constitution}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Dungeon Behavior</span>\n            <span className=\"display-text\">{dungeonBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Town Behavior</span>\n            <span className=\"display-text\">{townBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Class</span>\n            <span className=\"display-text\">{adventurerClassname}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    displayId: state.detail.targetId,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerDisplay);","import React from 'react'\nimport './AdventurerForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDungeonBehaviorOptions = this.getDungeonBehaviorOptions.bind(this);\n    this.getTownBehaviorOptions = this.getTownBehaviorOptions.bind(this);\n    this.getAdventurerClassOptions = this.getAdventurerClassOptions.bind(this);\n    this.addAdventurer = this.addAdventurer.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getDungeonBehaviorOptions() {\n    const dungeonOptions = this.props.dungeonBehaviors;\n    return dungeonOptions.map(dungeonOption => {\n      return <option value={dungeonOption.id}>{dungeonOption.name}</option>\n    });\n  }\n\n  getTownBehaviorOptions() {\n    const townOptions = this.props.townBehaviors;\n    return townOptions.map(townOption => {\n      return <option value={townOption.id}>{townOption.name}</option>\n    });\n  }\n\n  getAdventurerClassOptions() {\n    const classOptions = this.props.adventurerClasses;\n    return classOptions.map(classOption => {\n      return <option value={classOption.id}>{classOption.name}</option>\n    });\n  }\n\n  componentDidMount() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      this.props.loadAdventurerDetails();\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.adventurer, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurer(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer', data);\n    } else {\n      yield postRequest.makeRequest('adventurer', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurer = this.addAdventurer(data);\n    this.addAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.adventurer, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    let newHeading = 'New Adventurer';\n    let newId;\n    let newName = '';\n    let newStrength = 0;\n    let newSpeed = 0;\n    let newCunning = 0;\n    let newIntelligence = 0;\n    let newConstitution = 0;\n    let newDungeonBehavior, newTownBehavior, newAdventurerClass;\n\n    if (this.props.edit) {\n      const allAdventurers = this.props.adventurers;\n      const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === thisAdventurer.dungeoBehaviorId);\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === thisAdventurer.townBehaviorId);\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === thisAdventurer.adventurerClassId);\n      newId = thisAdventurer.id;\n      newName = thisAdventurer.name;\n      newHeading = newName;\n      newStrength = thisAdventurer.strength;\n      newSpeed = thisAdventurer.speed;\n      newCunning = thisAdventurer.cunning;\n      newIntelligence = thisAdventurer.intelligence;\n      newConstitution = thisAdventurer.constitution;\n      newDungeonBehavior = thisDungeonBehavior;\n      newTownBehavior = thisTownBehavior;\n      newAdventurerClass = thisAdventurerClass;\n    }\n\n    return (\n      <div className=\"AdventurerForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer'}\n          className=\"input-fields-area\"\n          id=\"AdventurerPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"adventurer name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"strength\">strength</label>\n              <input type=\"number\" name=\"strength\" id=\"strength\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newStrength}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"speed\">speed</label>\n              <input type=\"number\" name=\"speed\" id=\"speed\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newSpeed}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"cunning\">cunning</label>\n              <input type=\"number\" name=\"cunning\" id=\"cunning\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newCunning}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"intelligence\">intelligence</label>\n              <input type=\"number\" name=\"intelligence\" id=\"intelligence\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newIntelligence}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"constitution\">constitution</label>\n              <input type=\"number\" name=\"constitution\" id=\"constitution\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newConstitution}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"dungeonBehaviorId\">dungeon behavior</label>\n              <select className=\"dungeon-behavior-select\"\n                name=\"dungeonBehaviorId\"\n                id=\"dungeonBehaviorId\"\n                defaultValue={newDungeonBehavior === undefined ? null : newDungeonBehavior.id}>\n                  {this.getDungeonBehaviorOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"townBehaviorId\">town behavior</label>\n              <select className=\"town-behavior-select\"\n                name=\"townBehaviorId\"\n                id=\"townBehaviorId\"\n                defaultValue={newTownBehavior === undefined ? null : newTownBehavior.id}>\n                  {this.getTownBehaviorOptions()}\n              </select>  \n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"adventurerClassId\">class</label>\n              <select className=\"adventurer-class-select\"\n                name=\"adventurerClassId\"\n                id=\"adventurerClassId\"\n                defaultValue={newAdventurerClass === undefined ? null : newAdventurerClass.id}>\n                  {this.getAdventurerClassOptions()}\n              </select>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer' : 'Create Adventurer' } className=\"button create-button\"></input>\n        </form>\n        <p>Points should total 15</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurers: state.adventurers.adventurers,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerForm);","import React from 'react';\nimport './MonsterDropListDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists, loadItems } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport itemTypes from '../../utilities/itemTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterDropListDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDrops = this.getDrops.bind(this);\n    this.deleteDropList = this.deleteDropList.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) {\n      this.props.loadItems();\n    }\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterDropListButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster DropList and Drops from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  getDrops(drops) {\n    if (!drops) return '';\n    return (\n      <div className=\"monster-drops-display subgroup-display\">\n          <span className=\"display-label full-span\">Drops</span>\n          <span className=\"display-label pad half-span\">Item</span>\n          <span className=\"display-label pad half-span\">Drop Chance</span>\n          {drops.map(drop => {\n            let itemName = ''\n            switch (drop.drop_type) {\n              case itemTypes.armor:\n                let allArmor = this.props.armor;\n                let thisArmor = allArmor.find(armor => armor.id === drop.itemId);\n                itemName = thisArmor.item.name;\n                break;\n              case itemTypes.potion:\n                let allPotions = this.props.potions;\n                let thisPotion = allPotions.find(potion => potion.id === drop.itemId);\n                itemName = thisPotion.item.name;\n                break;\n              case itemTypes.weapon:\n                let allWeapons = this.props.weapons;\n                let thisWeapon = allWeapons.find(weapon => weapon.id === drop.itemId);\n                itemName = thisWeapon.item.name;\n                break;\n              default:\n                itemName = 'Unknown Item Type'\n            }\n\n            return (\n              <div className=\"inner-span\">\n                <span className=\"display-text half-span left-half\">\n                  {itemName}\n                </span>\n                <span className=\"display-text half-span right-half\">\n                  {drop.dropChance}\n                </span>\n              </div>\n            )            \n          })}\n        </div>\n    )\n  }\n\n  *deleteDropList(payload) {\n    yield deleteRequests.makeRequestDropList(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'monster_drop_list';\n    payload.id = this.props.displayId;\n    const allDropLists = this.props.monsterDropLists;\n    const thisDropList = allDropLists.find(dropList => dropList.id === this.props.displayId);\n    const monsterDroplistId = thisDropList.monster_drop_list.id;\n    payload.monsterDroplistId = monsterDroplistId;\n    const drops = thisDropList.drops;\n    let dropIds = [];\n    if (drops.length > 0) {\n      drops.forEach(drop => {\n        dropIds.push(drop.id);\n      });\n    }\n    payload.dropIds = dropIds;\n\n    // invoke delete request\n    let deleteDropList = this.deleteDropList(payload);\n    deleteDropList.next().value.then(() => {\n      this.props.fetchMonsterDropLists();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null })\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.monsterDropLists || !this.props.armor || !this.props.potions || !this.props.weapons) return '';\n    const allMonsterDropLists = this.props.monsterDropLists;\n    const thisDropList = allMonsterDropLists.find(monsterDropList => monsterDropList.id === this.props.displayId);\n    const thisMonsterDropList = thisDropList.monster_drop_list;\n    const thisName = thisMonsterDropList.name;\n    const thisGoldMin = thisDropList.gold_min;\n    const thisGoldMax = thisDropList.gold_max;\n    const thisGoldChance = thisDropList.gold_chance;\n    const thisDrops = thisDropList.drops;\n\n    return (\n      <div className=\"MonsterDropListDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{thisName}</h2>\n          <div className=\"MonsterDropListEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: true, targetId: this.props.displayId })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold min</span>\n          <span className=\"display-text\">{thisGoldMin}</span>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold max</span>\n          <span className=\"display-text\">{thisGoldMax}</span>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold chance</span>\n          <span className=\"display-text\">{thisGoldChance}</span>\n        </div>\n        {this.getDrops(thisDrops)}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    displayId: state.detail.targetId,\n    armor: state.armor.armor,\n    potions: state.potions.potions,\n    weapons: state.weapons.weapons\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    loadItems: () => dispatch(loadItems()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListDisplay);","import { store } from '../index';\nimport { SET_DETAIL_FORM, SET_BREADCRUMB, SET_BREADCRUMB_FORMDATA } from '../actions/types'\n\nconst breadcrumb = (function(){\n  let breadcrumb = null;\n  \n  const Breadcrumb = function(payload) {\n    const {\n      displayPayload,\n      formDataPayload,\n      name\n    } = payload;\n    this.displayPayload = displayPayload;\n    this.formData = formDataPayload.formData;\n    this.formDataName = formDataPayload.formDataName;\n    this.name = name;\n  }\n\n  Breadcrumb.prototype.dispatchDisplay = function() {\n    store.dispatch({ type: SET_DETAIL_FORM, payload: this.displayPayload });\n  }\n\n  Breadcrumb.prototype.dispatchFormdata = function() {\n    store.dispatch({ type: SET_BREADCRUMB_FORMDATA, payload: { formData: this.formData, formDataName: this.formDataName } });\n  }\n\n  Breadcrumb.prototype.dispatchBreadcrumb = function() {\n    const newName = this.name;\n    const breadcrumbPayload = { active: true, name: newName };\n    store.dispatch({ type: SET_BREADCRUMB, payload: breadcrumbPayload });\n  }\n\n  const setBreadcrumb = function(newBreadcrumb) {\n    breadcrumb = newBreadcrumb;\n  }\n\n  const clearBreadcrumbState = function() {\n    store.dispatch({ type: SET_BREADCRUMB, payload: { value: false, name: '' }});\n    \n  }\n\n  const clearBreadcrumbFormdata = function() {\n    store.dispatch({ type: SET_BREADCRUMB_FORMDATA, payload: { formData: null, formDataName: '' } });\n  }\n\n  return {\n    setNewBreadcrumb: function(payload) {\n      breadcrumb = new Breadcrumb(payload);\n      breadcrumb.dispatchFormdata();\n      breadcrumb.dispatchBreadcrumb();\n    },\n\n    clearBreadcrumb: function() {\n      setBreadcrumb(null);\n      clearBreadcrumbState();  \n    },\n\n    revertToBreadcrumb: function() {\n      clearBreadcrumbState();\n      breadcrumb.dispatchDisplay();\n    },\n\n    clearBreadcrumbForm: function() {\n      clearBreadcrumbFormdata();\n    }\n  }\n}());\n\nexport default breadcrumb;","import React from 'react';\nimport './MonsterDropListForm.css';\n\n//component imports\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists, loadItems } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport formTypes from '../../utilities/formTypes';\nimport postRequests from '../../utilities/itemPostRequests';\nimport putRequests from '../../utilities/itemPutRequests';\nimport breadcrumb from '../../utilities/breadcrumb';\n\nclass MonsterDropListForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getDropListOptions = this.getDropListOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.addFormDrop = this.addFormDrop.bind(this);\n    this.deleteDrop = this.deleteDrop.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getForm = this.getForm.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateMonsterDropList = this.updateMonsterDropList.bind(this);\n  }\n\n  componentDidMount() {\n    // create breadcrumb testing state variable\n    let breadcrumbPass = false;\n    // if no breadcrumb exists, load component as normal\n    if (!this.props.breadcrumbActive) {\n      breadcrumbPass = true;\n    }\n    // if breadcrumb is active but formData isn't loaded, fail test\n    if (this.props.breadcrumbActive && !this.props.breadcrumbFormData) {\n      breadcrumbPass = false;\n    }\n    // if breadcrumb and formData are present, pass test\n    if (this.props.breadcrumbActive && this.props.breadcrumbFormData) {\n      breadcrumbPass = true;\n    }\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) {\n      this.props.loadItems();\n    }\n    if (breadcrumbPass) {\n      this.initializeFields();\n    }\n  }\n\n  componentDidUpdate() {\n    let breadcrumbPass = false;\n    if (this.props.breadcrumbActive && this.props.breadcrumbFormData) {\n      breadcrumbPass = true;\n    }\n    if (!this.state.initialized && breadcrumbPass) {\n      this.initializeFields();\n    }\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.monsterDropLists) return;\n    let newName = '';\n    let newGoldMin = 0;\n    let newGoldMax = 0;\n    let newGoldChance = 0;\n    let newDrops = [];\n    if (this.props.edit) {\n      const allDropLists = this.props.monsterDropLists;\n      const thisDropList = allDropLists.find(dropList => dropList.id === this.props.displayId);\n      const thisMonsterDropList = thisDropList.monster_drop_list;\n      newName = thisMonsterDropList.name;\n      newGoldMin = thisDropList.gold_min;\n      newGoldMax = thisDropList.gold_max;\n      newGoldChance = thisDropList.gold_chance;\n      newDrops = thisDropList.drops;\n    }\n\n    if (this.props.breadcrumbActive && this.props.breadcrumbName === formTypes.monster_drop_list) {\n      const breadcrumbForm = this.props.breadcrumbFormData;\n      const breadcrumbName = breadcrumbForm.name;\n      if (breadcrumbName) {\n        newName = breadcrumbName;\n      }\n    }\n\n    let initialState = {};\n    initialState['name'] = newName;\n    initialState['gold_min'] = newGoldMin;\n    initialState['gold_max'] = newGoldMax;\n    initialState['gold_chance'] = newGoldChance;\n    let presentIds = [];\n    if (newDrops.length > 0) {\n      for (const drop of newDrops) {\n        initialState[`drop-${drop.id}-item-id`] = `{ \"id\":\"${drop.itemId}\", \"type\":\"${drop.drop_type}\"}`;\n        initialState[`drop-${drop.id}-drop-chance`] = drop.dropChance;\n        presentIds.push(drop.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = newDrops.length;\n    initialState.deletedIds = [];\n    initialState.newDropIndex = 0;\n    initialState.newDropKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  getDropListOptions() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) return '';\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      let propName = itemType;\n      if (itemType !== itemTypes.armor) {\n        propName += 's';\n      }\n      const allItemsOfType = this.props[`${propName}`];\n      return (\n        <optgroup label={itemType}>\n          {allItemsOfType.map(item => {\n            return <option value={`{ \"id\":\"${item.id}\", \"type\":\"${itemType}\"}`}>{item.item.name}</option>\n          })}\n        </optgroup>\n      )\n    });\n  }\n\n  addFormDrop() {\n    // limit drops to 5\n    const totalCount = this.state.newDropKeys.length;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newDropIndex = this.state.newDropIndex;\n    updatedState[`new-drop-${newDropIndex}-item-id`] = `{ \"id\":\"${0}\", \"type\":\"${itemTypes.potion}\"}`;\n    updatedState[`new-drop-${newDropIndex}-drop-chance`] = 0;\n    let newDropKeys = this.state.newDropKeys;\n    newDropKeys.push(newDropIndex);\n    updatedState.newDropKeys = newDropKeys;\n    newDropIndex += 1;\n    updatedState.newDropIndex = newDropIndex;\n    this.setState(updatedState);\n  }\n\n  deleteDrop(payload) {\n    const { existing, dropId } = payload;\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(dropId);\n      newCount -=1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newDropKeys = this.state.newDropKeys;\n      const dropIndex = newDropKeys.indexOf(dropId);\n      if (dropIndex < 0 || (dropIndex !== 0 && !dropIndex)) return;\n      newDropKeys.splice(dropIndex, 1);\n      updatedState.newDropKeys = newDropKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.breadcrumbActive && this.props.breadcrumbName === formTypes.monster_drop_list) {\n      breadcrumb.revertToBreadcrumb();\n    } else {\n      if (this.props.edit === false) {\n        this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: formTypes.monster_drop_list, targetId: this.props.displayId, edit: false });\n      }\n    }\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value;\n    this.setState(stateUpdate);\n  }\n\n  *updateMonsterDropList(data) {\n    if (this.props.edit) {\n      yield putRequests.makeRequest('monster_drop_list', data);\n    } else {\n      yield postRequests.makeRequest('monster_drop_list', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateMonsterDropList = this.updateMonsterDropList(data);\n    updateMonsterDropList.next().value.then(() => {\n      this.props.fetchMonsterDropLists();\n      if (this.props.breadcrumbActive && this.props.breadcrumbName === formTypes.monster_drop_list) {\n        breadcrumb.revertToBreadcrumb();\n      } else {\n        if (this.props.edit) {\n          this.props.setDisplayForm({ form: formTypes.monster_drop_list, targetId: this.props.displayId, edit: false });\n        } else {\n          this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n        }\n      }\n    });\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n\n    let drops = [];\n    let newMonsterDroplistId = null;\n    if (this.props.edit) {\n      const allDropsLists = this.props.monsterDropLists;\n      const thisDropList = allDropsLists.find(dropList => dropList.id === this.props.displayId);\n      drops = thisDropList.drops;\n      newMonsterDroplistId = thisDropList.monster_drop_list.id\n    }\n\n    let newHeading = 'New Monster Drop List';\n    let newId = null;\n    \n    if (this.props.edit) {\n      newHeading = this.state.name;\n      newId = this.props.displayId;\n\n    }\n\n    const newDropKeys = this.state.newDropKeys;\n\n    return (\n      <div className=\"MonsterDropListForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-monster-droplist-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster_drop_list'}\n          className=\"input-fields-area\"\n          id=\"MonsterDropListPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"monster droplist name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div> \n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_min\">gold min</label>\n              <input type=\"number\" name=\"gold_min\" id=\"gold_min\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_min}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_max\">gold max</label>\n              <input type=\"number\" name=\"gold_max\" id=\"gold_max\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_max}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_chance\">gold chance</label>\n              <input type=\"number\" name=\"gold_chance\" id=\"gold_chance\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_chance}></input>\n            </div>\n            <div className=\"drops-group form-subgroup\">\n              <span className=\"item-label form-full-span\">Drops</span>\n              <span className=\"item-label form-pad form-half-span\">Item</span>\n              <span className=\"item-label form-pad form-half-span\">Drop Chance</span>\n              {drops.length <= 0 ? '' : drops.map(drop => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(drop.id)) {\n                  return '';\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"drop-select\"\n                        name={`drop-${drop.id}-item-id`}\n                        id={`drop-${drop.id}-item-id`}\n                        onChange={this.handleChange}\n                        value={this.state[`drop-${drop.id}-item-id`]}>\n                          {this.getDropListOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\"\n                        type=\"number\"\n                        name={`drop-${drop.id}-drop-chance`}\n                        id={`drop-${drop.id}-drop-chance`}\n                        onChange={this.handleChange}\n                        value={this.state[`drop-${drop.id}-drop-chance`]}>\n                      </input>\n                      <span className=\"dropDelete\"\n                        onClick={() => this.deleteDrop({ existing: true, dropId: drop.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n              {newDropKeys.length <= 0 ? '' : newDropKeys.map(index => {\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"drop-select\"\n                        name={`new-drop-${index}-item-id`}\n                        id={`new-drop-${index}-item-id`}\n                        onChange={this.handleChange}\n                        value={this.state[`new-drop-${index}-item-id`]}>\n                          {this.getDropListOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\"\n                        type=\"number\"\n                        name={`new-drop-${index}-drop-chance`}\n                        id={`new-drop-${index}-drop-chance`}\n                        onChange={this.handleChange}\n                        value={this.state[`new-drop-${index}-drop-chance`]}>\n                      </input>\n                      <span className=\"dropDelete\"\n                        onClick={() => this.deleteDrop({ existing: false, dropId: index })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n              <div className=\"dropAdd form-full-span form-center-content\"\n                onClick={this.addFormDrop}\n              >\n                <AddOfferingButton />\n              </div>\n              <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n              <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n              <input type=\"hidden\" name=\"newIndexes\" value={this.state.newDropKeys} />\n              {/* <input type=\"hidden\" name=\"newDropsCount\" value={this.state.newD} */}\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"hidden\" name=\"monsterDroplistId\" value={newMonsterDroplistId} />\n              <input type=\"submit\" value={this.props.edit ? 'Update Monster Droplist' : 'Create Monster Droplist'} className=\"button create-button\"></input>\n            </div>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    displayId: state.detail.targetId,\n    monsterDropLists: state.dropLists.monster,\n    armor: state.armor.armor,\n    potions: state.potions.potions,\n    weapons: state.weapons.weapons,\n    breadcrumbActive: state.breadcrumb.active,\n    breadcrumbName: state.breadcrumb.name,\n    breadcrumbFormData: state.breadcrumb.formData\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    loadItems: () => dispatch(loadItems())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListForm);","import React from 'react';\nimport './MonsterBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteMonsterBehavior = this.deleteMonsterBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteMonsterBehavior() {\n    yield deleteRequests.makeRequest('monster_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteMonsterBehavior = this.deleteMonsterBehavior();\n    deleteMonsterBehavior.next().value.then(() => {\n      this.props.fetchMonsterBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allMonsterBehaviors = this.props.monsterBehaviors;\n    const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === this.props.displayId);\n    const {\n      name,\n      confront_weakened_adventurer,\n      special_move,\n      defend,\n      heal,\n      block_flee,\n      migrate\n    } = thisMonsterBehavior;\n\n    return (\n      <div className=\"MonsterBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"MonsterBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: true, targetId: thisMonsterBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">confront weakened adventuer</span>\n              <span className=\"display-text\">{confront_weakened_adventurer}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">special move</span>\n              <span className=\"display-text\">{special_move}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">defend</span>\n              <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">heal</span>\n              <span className=\"display-text\">{heal}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">block flee</span>\n              <span className=\"display-text\">{block_flee}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">migrate</span>\n              <span className=\"display-text\">{migrate}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorDisplay);","import React from 'react';\nimport './MonsterBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass MonsterBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addMonsterBehavior = this.addMonsterBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addMonsterBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('monster_behavior', data);\n    } else {\n      yield postRequest.makeRequest('monster_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addMonsterBehavior = this.addMonsterBehavior(data);\n    this.addMonsterBehavior.next().value.then(() => {\n      this.props.fetchMonsterBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.monster_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Monster Behavior';\n    let newName = '';\n    let newId;\n    let newConfrontWeakenedAdventurer = 0;\n    let newSpecialMove = 0;\n    let newDefend = 0;\n    let newHeal = 0;\n    let newBlockFlee = 0;\n    let newMigrate = 0;\n\n    if (this.props.edit) {\n      const allMonsterBehaviors = this.props.monsterBehaviors;\n      const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === this.props.displayId);\n      newName = thisMonsterBehavior.name;\n      newHeading = newName;\n      newId = thisMonsterBehavior.id;\n      newConfrontWeakenedAdventurer = thisMonsterBehavior.confront_weakened_adventurer;\n      newSpecialMove = thisMonsterBehavior.special_move;\n      newDefend = thisMonsterBehavior.defend;\n      newHeal = thisMonsterBehavior.heal;\n      newBlockFlee = thisMonsterBehavior.block_flee;\n      newMigrate = thisMonsterBehavior.migrate;\n    }\n    return (\n      <div className=\"MonsterBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Monster Behavior: {newHeading}</h2>\n          <div className=\"close-monster-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster_behaviors'}\n          className=\"input-fields-area\"\n          id=\"MonsterBehavior\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"confront_weakened_adventurer\">confront weakened adventurer</label>\n              <input type=\"number\" name=\"confront_weakened_adventurer\" id=\"confront_weakened_adventurer\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConfrontWeakenedAdventurer}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"special_move\">special move</label>\n              <input type=\"number\" name=\"special_move\" id=\"special_move\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSpecialMove}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"heal\">heal</label>\n              <input type=\"number\" name=\"heal\" id=\"heal\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newHeal}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"block_flee\">block flee</label>\n              <input type=\"number\" name=\"block_flee\" id=\"block_flee\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBlockFlee}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"migrate\">migrate</label>\n              <input type=\"number\" name=\"migrate\" id=\"migrate\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newMigrate}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <div className=\"supplier-submit-container\">\n            <input type=\"submit\" value={this.props.edit ? 'Update Monster Behavior' : 'Create Monster Behavior' } className=\"button create-button\"></input>\n            </div>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorForm);","import React from 'react';\nimport './MonsterDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsters, loadMonsterDetails } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialized: false\n    }\n\n    this.setInitialized = this.setInitialized.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.deleteMonster = this.deleteMonster.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.monsterDropLists || !this.props.monsterBehaviors) {\n      this.props.loadMonsterDetails();\n      this.setInitialized(true);\n    } else {\n      if (!this.state.initialized) {\n        this.setInitialized(true);\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if(!this.state.initialized && (this.props.monsterBehaviors && this.props.monsterDropLists)) {\n      this.setInitialized(true);\n    }\n  }\n\n  setInitialized(val) {\n    this.setState({ initialized: val });\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteMonster() {\n    yield deleteRequests.makeRequest('monster', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteMonster = this.deleteMonster();\n    deleteMonster.next().value.then(() => {\n      this.props.fetchMonsters();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.monsters || !this.state.initialized) return '';\n    const allMonsters = this.props.monsters;\n    const thisMonster = allMonsters.find(monster => monster.id === this.props.displayId);\n    const {\n      name,\n      boss,\n      level,\n      hp,\n      damage,\n      defense,\n      stealth,\n      initiative,\n      special,\n      heal,\n      dropListId,\n      monsterBehaviorId\n    } = thisMonster;\n    const allMonsterDropLists = this.props.monsterDropLists;\n    const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === dropListId);\n    const monsterDropListName = thisMonsterDropList.monster_drop_list.name;\n    const allMonsterBehaviors = this.props.monsterBehaviors;\n    const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === monsterBehaviorId);\n    const monsterBehaviorName = thisMonsterBehavior.name;\n\n    return (\n      <div className=\"MonsterDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster, edit: true, targetId: thisMonster.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">boss</span>\n            <span className=\"display-text\">{boss}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">level</span>\n            <span className=\"display-text\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">hp</span>\n            <span className=\"display-text\">{hp}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defense</span>\n            <span className=\"display-text\">{defense}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">stealth</span>\n            <span className=\"display-text\">{stealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">initiative</span>\n            <span className=\"display-text\">{initiative}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">special</span>\n            <span className=\"display-text\">{special}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">heal</span>\n            <span className=\"display-text\">{heal}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">drop list</span>\n            <span className=\"display-text\">{monsterDropListName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">behavior</span>\n            <span className=\"display-text\">{monsterBehaviorName}</span>\n          </div>\n        </div>\n      </div>\n    )\n      \n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsters: state.monsters.monsters,\n    displayId: state.detail.targetId,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    monsterDropLists: state.dropLists.monster\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchMonsters: () => dispatch(fetchMonsters()),\n    loadMonsterDetails: () => dispatch(loadMonsterDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDisplay);","const formComposer = (function(){\n  const formToObject = function(formBody) {\n    let subBody = {};\n    for ( let [ key, value ] of formBody) {\n      subBody[key] = value\n    }\n    return subBody;\n  }\n  return {\n    getObjectFromForm: function(formBody) {\n      return formToObject(formBody);\n    }\n  }\n}());\n\nexport default formComposer;","import React from 'react';\nimport './MonsterForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport EditButton from '../EditButton/EditButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsters, loadMonsterDetails } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport formComposer from '../../utilities/formComposer';\nimport breadcrumb from '../../utilities/breadcrumb';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass MonsterForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropList: null,\n      intialized: false\n    }\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.getMonsterBehaviorOptions = this.getMonsterBehaviorOptions.bind(this);\n    this.getMonsterDropListOptions = this.getMonsterDropListOptions.bind(this);\n    this.addMonster = this.addMonster.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBreadcrumb = this.handleBreadcrumb.bind(this);\n    this.handleDropListChange = this.handleDropListChange.bind(this);\n    this.initializeMonsterDropListId = this.initializeMonsterDropListId.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.monsterBehaviors || !this.props.monsterDropLists) {\n      this.props.loadMonsterDetails();\n    } else {\n      if (!this.state.intialized) {\n        this.initializeMonsterDropListId();\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.monsterBehaviors && this.props.monsterDropLists & !this.state.intialized) {\n      this.initializeMonsterDropListId();\n    }\n  }\n\n  initializeMonsterDropListId() {\n    let stateUpdate = {};\n    stateUpdate.intialized = true;\n    if (this.props.edit) {\n      const allMonsters = this.props.monsters;\n      const thisMonster = allMonsters.find(monster => monster.id === this.props.displayId);\n      const allMonsterDropLists = this.props.monsterDropLists;\n      const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === thisMonster.dropListId);\n      stateUpdate.dropList = thisMonsterDropList.id;\n    }\n    if (this.props.breadcrumbFormdata && this.props.breadcrumbFormdataName === formTypes.monster) {\n      const monsterForm = this.props.breadcrumbFormdata;\n      const monsterDropListId = Number.parseInt(monsterForm.dropListId);\n      stateUpdate.dropList = monsterDropListId;\n    } \n    this.setState(stateUpdate);\n  \n  }\n  \n  getMonsterBehaviorOptions() {\n    const monsterOptions = this.props.monsterBehaviors;\n    return monsterOptions.map(monsterOption => {\n      return <option value={monsterOption.id}>{monsterOption.name}</option>\n    });\n  }\n\n  getMonsterDropListOptions() {\n    const dropLists = this.props.monsterDropLists;\n    return dropLists.map(dropList => {\n      return <option value={dropList.id}>{dropList.monster_drop_list.name}</option>\n    });\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.breadcrumbFormdata) {\n      breadcrumb.clearBreadcrumbForm();\n    }\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster, targetId: this.props.displayId, edit: false });\n    } \n  }\n\n  handleDropListChange(e) {\n    let dropListId = e.target.value;\n    if (dropListId === '--choose a droplist--') return;\n    if (dropListId === 'new droplist') {\n      this.handleBreadcrumb(null);\n    }\n    this.setState({\n      dropList: dropListId\n    });\n  }\n\n  handleBreadcrumb(dropListId) {\n    // set dropList id to load appropriate drop list into\n    // monster form\n    let resDropList;\n    if (dropListId !== null) {\n      resDropList = Number.parseInt(dropListId);\n    } else {\n      resDropList = dropListId;\n    }\n    // breadcrumb payload composition to pass into breadcrumb module\n    let breadcrumbPayload = {};\n    breadcrumbPayload.name = formTypes.monster_drop_list;\n    // load form data into breadcrumb payload\n    const monsterForm = document.querySelector('#MonsterPostForm');\n    let data = new FormData(monsterForm);\n    data = formComposer.getObjectFromForm(data);\n    let formDataPayload = {};\n    formDataPayload.formData = data;\n    formDataPayload.formDataName = formTypes.monster;\n    breadcrumbPayload.formDataPayload = formDataPayload;\n    // compose display payload to point back to MonsterForm with\n    // appropriate display values\n    const currentEdit = this.props.edit;\n    const currentId = this.props.displayId;\n    const displayPayload = { form: formTypes.monster, edit: currentEdit, targetId: currentId };\n    breadcrumbPayload.displayPayload = displayPayload;\n    // set breadcrumb\n    breadcrumb.setNewBreadcrumb(breadcrumbPayload);\n    // switch to dependent form\n    if (resDropList === null) {\n      this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: null });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: true, targetId: resDropList });\n    }\n  }\n\n  *addMonster(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('monster', data);\n    } else {\n      yield postRequest.makeRequest('monster', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addMonster = this.addMonster(data);\n    this.addMonster.next().value.then(() => {\n      this.props.fetchMonsters();\n      if (this.props.breadcrumbFormdata && this.props.breadcrumbFormdataName === formTypes.monster) {\n        breadcrumb.clearBreadcrumbForm();\n      }\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.monster, edit: false, targetId: this.props.displayId });\n      } else {\n        this.props.setDisplayForm({ form: null, edit: false, targetId: null });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.props.monsterBehaviors || !this.props.monsterDropLists) {\n      return '';\n    }\n    let newHeading = 'New Monster';\n    let newId;\n    let newName = '';\n    let newBoss = false;\n    let newLevel = 1;\n    let newHp = 1;\n    let newDamage = 0;\n    let newDefense = 0;\n    let newStealth = 0;\n    let newInitiative = 0;\n    let newSpecial = 0;\n    let newHeal = 0;\n    let newMonsterDropList, newMonsterBehavior;\n    \n    if (this.props.edit) {\n      const allMonsters = this.props.monsters;\n      const thisMonster = allMonsters.find(monster => monster.id === this.props.displayId);\n      const allMonsterDropLists = this.props.monsterDropLists;\n      const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === thisMonster.dropListId);\n      const allMonsterBehaviors = this.props.monsterBehaviors;\n      const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === thisMonster.monsterBehaviorId);\n      newId = thisMonster.id;\n      newName = thisMonster.name;\n      newHeading = newName;\n      newBoss = thisMonster.boss;\n      newLevel = thisMonster.level;\n      newHp = thisMonster.hp;\n      newDamage = thisMonster.damage;\n      newDefense = thisMonster.defense;\n      newStealth = thisMonster.stealth;\n      newInitiative = thisMonster.initiative;\n      newSpecial = thisMonster.special;\n      newHeal = thisMonster.heal;\n      newMonsterDropList = thisMonsterDropList;\n      newMonsterBehavior = thisMonsterBehavior;\n    }\n    if (this.props.breadcrumbFormdata && this.props.breadcrumbFormdataName === formTypes.monster) {\n      const monsterForm = this.props.breadcrumbFormdata;\n      const dropListId = Number.parseInt(monsterForm.dropListId);\n      const monsterBehaviorId = Number.parseInt(monsterForm.monsterBehaviorId);\n      const allMonsterDropLists = this.props.monsterDropLists;\n      const thisMonsterDropList = allMonsterDropLists.find(dropList => dropList.id === dropListId);\n      const allMonsterBehaviors = this.props.monsterBehaviors;\n      const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === monsterBehaviorId);\n      newId = Number.parseInt(monsterForm.id);\n      newName = monsterForm.name;\n      newHeading = newName;\n      newBoss = monsterForm.boss === 'true' ? true: false;\n      newLevel = Number.parseInt(monsterForm.level);\n      newHp = Number.parseInt(monsterForm.hp);\n      newDamage = Number.parseInt(monsterForm.damage);\n      newDefense = Number.parseInt(monsterForm.defense);\n      newStealth = Number.parseInt(monsterForm.stealth);\n      newInitiative = Number.parseInt(monsterForm.initiative);\n      newSpecial = Number.parseInt(monsterForm.special);\n      newHeal = Number.parseInt(monsterForm.heal);\n      newMonsterDropList = thisMonsterDropList;\n      newMonsterBehavior = thisMonsterBehavior;\n    }\n    \n\n    return (\n      <div className=\"MonsterForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Monster: {newHeading}</h2>\n          <div className=\"close-monster-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster'}\n          className=\"input-fields-area\"\n          id=\"MonsterPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"monster name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"monsterBehaviorId\">monster behavior</label>\n              <select className=\"monster-behavior-select\"\n                name=\"monsterBehaviorId\"\n                id=\"monsterBehaviorId\"\n                defaultValue={newMonsterBehavior === undefined ? null : newMonsterBehavior.id}>\n                  {this.getMonsterBehaviorOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"dropListId\">monster droplist</label>\n              <select className=\"monster-droplist-select\"\n                name=\"dropListId\"\n                id=\"dropListId\"\n                onChange={this.handleDropListChange}\n                defaultValue={newMonsterDropList === undefined ? null : newMonsterDropList.id}>\n                  <option value={undefined}>--choose a droplist--</option>\n                  <option value={null} onClick={() => this.handleBreadcrumb(null)}>new droplist</option>\n                  {this.getMonsterDropListOptions()}\n              </select>\n              <div className=\"edit-monster-droplist-button\" onClick={() => this.handleBreadcrumb(newMonsterDropList === null ? null : this.state.dropList)}>\n                <EditButton />\n              </div>\n            </div>\n            <input type=\"hidden\" name=\"boss\" value={false} />\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"boss\">boss</label>\n              {newBoss === true ? (<input type=\"checkbox\" name=\"boss\" id=\"boss\" className=\"input-boolean\" placeholder=\"#\"\n                value={true} checked defaultValue={newBoss}></input>) :\n                (<input type=\"checkbox\" name=\"boss\" id=\"boss\" className=\"input-boolean\" placeholder=\"#\"\n                value={true} defaultValue={newBoss}></input>)}\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"30\" required defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"hp\">hp</label>\n              <input type=\"number\" name=\"hp\" id=\"hp\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"1000\" required defaultValue={newHp}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">damage</label>\n              <input type=\"number\" name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newDamage}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defense\">defense</label>\n              <input type=\"number\" name=\"defense\" id=\"defense\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newDefense}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"stealth\">stealth</label>\n              <input type=\"number\" name=\"stealth\" id=\"stealth\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newStealth}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"initiative\">initiative</label>\n              <input type=\"number\" name=\"initiative\" id=\"initiative\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newInitiative}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"special\">special</label>\n              <input type=\"number\" name=\"special\" id=\"special\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"1000\" step=\"50\" required defaultValue={newSpecial}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"heal\">heal</label>\n              <input type=\"number\" name=\"heal\" id=\"heal\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"200\" required defaultValue={newHeal}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Monster' : 'Create Monster' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    monsters: state.monsters.monsters,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    monsterDropLists: state.dropLists.monster,\n    displayId: state.detail.targetId,\n    breadcrumbFormdata: state.breadcrumb.formData,\n    breadcrumbFormdataName: state.breadcrumb.formDataName\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsters: () => dispatch(fetchMonsters()),\n    loadMonsterDetails: () => dispatch(loadMonsterDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterForm);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\n// item components\nimport PotionForm from '../../Components/PotionForm/PotionForm';\nimport PotionDisplay from '../../Components/PotionDisplay/PotionDisplay';\nimport WeaponForm from '../../Components/WeaponForm/WeaponForm';\nimport WeaponDisplay from '../../Components/WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../../Components/ArmorForm/ArmorForm';\nimport ArmorDisplay from '../../Components/ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../../Components/SupplierForm/SupplierForm';\nimport SupplierDisplay from '../../Components/SupplierDisplay/SupplierDisplay';\n// npc components\nimport TownBehaviorDisplay from '../../Components/TownBehaviorDisplay/TownBehaviorDisplay';\nimport TownBehaviorForm from '../../Components/TownBehaviorForm/TownBehaviorForm';\nimport DungeonBehaviorDisplay from '../../Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay';\nimport DungeonBehaviorForm from '../../Components/DungeonBehaviorForm/DungeonBehaviorForm';\nimport AdventurerClassDisplay from '../../Components/AdventurerClassDisplay/AdventurerClassDisplay';\nimport AdventurerClassForm from '../../Components/AdventurerClassForm/AdventurerClassForm';\nimport AdventurerDisplay from '../../Components/AdventurerDisplay/AdventurerDisplay';\nimport AdventurerForm from '../../Components/AdventurerForm/AdventurerForm';\n// monster components\nimport MonsterDropListDisplay from '../../Components/MonsterDropListDisplay/MonsterDropListDisplay';\nimport MonsterDropListForm from '../../Components/MonsterDropListForm/MonsterDropListForm';\nimport MonsterBehaviorDisplay from '../../Components/MonsterBehaviorDisplay/MonsterBehaviorDisplay'\nimport MonsterBehaviorForm from '../../Components/MonsterBehaviorForm/MonsterBehaviorForm';\nimport MonsterDisplay from '../../Components/MonsterDisplay/MonsterDisplay';\nimport MonsterForm from '../../Components/MonsterForm/MonsterForm';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport breadcrumb from '../../utilities/breadcrumb';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.loadFormTable = this.loadFormTable.bind(this);\n  }\n\n  formTable = {};\n\n  componentDidMount() {\n    this.loadFormTable();\n  }\n\n  loadFormTable() {\n    const forms = Object.values(formTypes);\n    let tempTable = {};\n    for (let form of forms) {\n      tempTable[form] = { display: null, form: null };\n    }\n    this.formTable = tempTable;\n    this.formTable['blank'] = (<div className=\"BlankForm\">detail type unknown</div>);\n    this.formTable[formTypes.potion].display = <PotionDisplay />;\n    this.formTable[formTypes.potion].form = <PotionForm />;\n    this.formTable[formTypes.armor].display = <ArmorDisplay />;\n    this.formTable[formTypes.armor].form = <ArmorForm />;\n    this.formTable[formTypes.weapon].display = <WeaponDisplay />;\n    this.formTable[formTypes.weapon].form = <WeaponForm />;\n    this.formTable[formTypes.supplier].display = <SupplierDisplay />;\n    this.formTable[formTypes.supplier].form = <SupplierForm />;\n    this.formTable[formTypes.town_behavior].display = <TownBehaviorDisplay />;\n    this.formTable[formTypes.town_behavior].form = <TownBehaviorForm />;\n    this.formTable[formTypes.dungeon_behavior].display = <DungeonBehaviorDisplay />;\n    this.formTable[formTypes.dungeon_behavior].form = <DungeonBehaviorForm />;\n    this.formTable[formTypes.adventurer_class].display = <AdventurerClassDisplay />;\n    this.formTable[formTypes.adventurer_class].form = <AdventurerClassForm />;\n    this.formTable[formTypes.adventurer].display = <AdventurerDisplay />;\n    this.formTable[formTypes.adventurer].form = <AdventurerForm />;\n    this.formTable[formTypes.monster_drop_list].display = <MonsterDropListDisplay />;\n    this.formTable[formTypes.monster_drop_list].form = <MonsterDropListForm />;\n    this.formTable[formTypes.monster_behavior].display = <MonsterBehaviorDisplay />;\n    this.formTable[formTypes.monster_behavior].form = <MonsterBehaviorForm />;\n    this.formTable[formTypes.monster].display = <MonsterDisplay />;\n    this.formTable[formTypes.monster].form = <MonsterForm />;\n  }\n\n  \n  getDetail() {\n    if (this.props.breadcrumbActive && (this.props.breadcrumbName !== this.props.formType)) {\n      breadcrumb.clearBreadcrumb();\n      breadcrumb.clearBreadcrumbForm();\n    }\n\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n    // set display blank for refresh state to wipe display state\n    if (this.props.refresh) {\n      this.props.setRefresh(false);\n      return '';\n    }\n    if (this.formTable[this.props.formType] === undefined) {\n      return this.formTable['blank'];\n    }\n    let displayType = '';\n    if (this.props.edit || this.props.targetId == null) {\n      displayType = 'form';\n    } else {\n      displayType = 'display';\n    }\n    return this.formTable[this.props.formType][displayType];\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit,\n    refresh: state.detail.refresh,\n    breadcrumbName: state.breadcrumb.name,\n    breadcrumbActive: state.breadcrumb.active\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../../Containers/ObjectListColumn/ObjectListColumn';\nimport DetailView from '../../Containers/DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false,\n  refresh: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    case SET_DETAIL_REFRESH:\n      return {\n        ...state,\n        refresh: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_TOWN_BEHAVIORS, SET_DUNGEON_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  townBehaviors: null,\n  dungeonBehaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SET_TOWN_BEHAVIORS:\n      return {\n        ...state,\n        townBehaviors: action.payload\n      }\n    case SET_DUNGEON_BEHAVIORS:\n      return {\n        ...state,\n        dungeonBehaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURER_CLASSES } from '../actions/types';\n\nconst initialState = {\n  classes: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURER_CLASSES:\n      return {\n        ...state,\n        classes: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_DROP_LISTS } from '../actions/types';\n\nconst initialState = {\n  monster: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_DROP_LISTS:\n      return {\n        ...state,\n        monster: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  behaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_BEHAVIORS:\n      return {\n        ...state,\n        behaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTERS } from '../actions/types';\n\nconst initialState = {\n  monsters: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTERS:\n      return {\n        ...state,\n        monsters: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_BREADCRUMB, SET_BREADCRUMB_FORMDATA } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  name: '',\n  formData: null,\n  formDataName: ''\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_BREADCRUMB:\n      const active = action.payload.active;\n      const name = action.payload.name;\n      return {\n        ...state,\n        active: active,\n        name: name\n      }\n    case SET_BREADCRUMB_FORMDATA:\n      return {\n        ...state,\n        formData: action.payload.formData,\n        formDataName: action.payload.formDataName\n      }\n    default:\n      return state;\n  }\n}","import { SET_DUNGEON_TILES } from '../actions/types';\n\nconst initialState = {\n  tiles: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DUNGEON_TILES:\n      return {\n        ...state,\n        tiles: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\nimport behaviorsReducer from './behaviorsReducer';\nimport adventurerClassReducer from './adventurerClassReducer';\nimport adventurerReducer from './adventurerReducer';\nimport dropListReducer from './dropListReducer';\nimport monsterBehaviorReducer from './monsterBehaviorReducer';\nimport monsterReducer from './monsterReducer';\nimport breadcrumbReducer from './breadcrumbReducer';\nimport dungeonTileReducer from './dungeonTileReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer,\n  behaviors: behaviorsReducer,\n  adventurerClasses: adventurerClassReducer,\n  adventurers: adventurerReducer,\n  dropLists: dropListReducer,\n  monsterBehaviors: monsterBehaviorReducer,\n  monsters: monsterReducer,\n  breadcrumb: breadcrumbReducer,\n  dungeonTiles: dungeonTileReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nexport const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}