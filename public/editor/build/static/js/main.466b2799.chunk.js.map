{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","Components/PotionsList/PotionsList.jsx","actions/types.js","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","actions/index.js","Components/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Components/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/PotionFetcher/PotionFetcher.jsx","Components/WeaponsFetcher/WeaponsFetcher.jsx","Components/Fetchers/Fetchers.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","PotionsList","window","potionFetcher","fetchPotions","setDisplayForm","form","edit","targetId","potions","newPotions","map","potion","potionClass","id","item","name","detail","dispatch","payload","WeaponsList","weaponsFetcher","fetchWeapons","weapons","newWeapons","weapon","weaponClass","ArmorList","armor","newArmor","armorClass","ItemList","SupplierList","suppliers","newSuppliers","supplier","supplierClass","fetchUser","a","axios","get","res","data","fetchArmor","fetchSuppliers","ObjectListColumn","shouldComponentUpdate","componentDidMount","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","getMethod","handleCloseButton","CloseFormButton","PotionForm","potionType","value","e","preventDefault","displayId","newHeading","newName","newValue","newDetails","newPotionType","newLevel","newRarity","newId","newItemId","thisPotion","find","details","rarity","level","itemId","action","method","htmlFor","placeholder","maxLength","defaultValue","min","max","getPotionOptions","class","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","makeRequest","deleteType","deleteId","fetch","deleteRes","PotionDisplay","dialogRef","setDialog","text","console","log","WeaponForm","newDamage","thisWeapon","damage","WeaponDisplay","ArmorForm","thisArmor","ArmorDisplay","itemTypes","SupplierForm","getOfferingOptions","Object","values","itemType","thisSupplier","offerings","dir","offering","markup","SupplierDisplay","DetailView","getDetail","getPotionDetail","getWeaponDetail","getArmorDetail","getSupplierDetail","formType","DialogBox","handleNo","clicked","target","classList","contains","ref","yesCallback","noCallback","PotionFetcher","WeaponsFetcher","Fetcher","App","getDialog","Fetchers","initialState","combineReducers","newTargetId","newEdit","newForm","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.466b2799.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  componentDidMount() {\n    window.potionFetcher.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: null })}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === \"potion\" && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  componentDidMount() {\n    window.weaponsFetcher.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: null })}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === \"weapon\" && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={() => this.props.setDisplayForm({ form: 'armor', edit: false, targetId: null })}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === 'armor' && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'armor', edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\">\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === 'supplier' && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import axios from 'axios';\nimport { FETCH_USER, SET_POTIONS, SET_WEAPONS, SET_ARMOR, SET_SUPPLIERS } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../ItemList/ItemList';\nimport SupplierList from '../SupplierList/SupplierList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  componentDidMount() {\n    // this.props.fetchPotions();\n    // this.props.fetchWeapons();\n    this.props.fetchArmor();\n    this.props.fetchSuppliers();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.getMethod = this.getMethod.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  getMethod() {\n    return ''\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass PotionForm extends DisplayForm {\n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newPotionType = '';\n    let newLevel = '';\n    let newRarity = 1000;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"hidden\" name=\"_METHOD\" value={this.getMethod()}/>\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } class=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  handleYes() {\n    console.log('Delete handler in potion display component reached!');\n    deleteRequests.makeRequest('potion', this.props.displayId);\n    this.props.setDialog({ active: false, text: ''});\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: 'potion', edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass WeaponForm extends DisplayForm {\n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"hidden\" name=\"_METHOD\" value={this.getMethod()}/>\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } class=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  handleYes() {\n    deleteRequests.makeRequest('weapon', this.props.displayId);\n    this.props.setDialog({ active: false, text: '' });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass ArmorForm extends DisplayForm {\n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'armor', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"hidden\" name=\"_METHOD\" value={this.getMethod()}/>\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } class=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  handleYes() {\n    deleteRequests.makeRequest('armor', this.props.displayId);\n    this.props.setDialog({ active: false, text: '' });\n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'armor', edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n  }\n  \n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'supplier', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  getForm() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const newName = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n    console.dir(thisSupplier);\n    console.dir(offerings);\n    console.log(`offerings type: ${typeof offerings}`);\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newName}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/suppliers'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.map(offering => {\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      {/* <label className=\"item-label\" htmlFor={`offering-${offering.id}-type`}>\n                        Type\n                      </label> */}\n                      <select className=\"offering-select\" name={`offering-${offering.id}-type`} id={`offering-${offering.id}-type`} defaultValue={offering.type}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      {/* <label className=\"item-label\" htmlFor={`markup-${offering.id}-type`}>\n                        Markup\n                      </label> */}\n                      <input className=\"input-number\" type=\"number\" name={`markup-${offering.id}-type`} id={`markup-${offering.id}-type`} defaultValue={offering.markup}>\n                      </input>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\n\nclass SupplierDisplay extends DisplayStatic {\n  getDeleteButton() {\n    return (\n      <div className=\"DeleteSupplierButton\">\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\nimport PotionForm from '../PotionForm/PotionForm';\nimport PotionDisplay from '../PotionDisplay/PotionDisplay';\nimport WeaponForm from '../WeaponForm/WeaponForm';\nimport WeaponDisplay from '../WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../ArmorForm/ArmorForm';\nimport ArmorDisplay from '../ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../SupplierForm/SupplierForm';\nimport SupplierDisplay from '../SupplierDisplay/SupplierDisplay';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.getPotionDetail = this.getPotionDetail.bind(this);\n    this.getWeaponDetail = this.getWeaponDetail.bind(this);\n    this.getArmorDetail = this.getArmorDetail.bind(this);\n    this.getSupplierDetail = this.getSupplierDetail.bind(this);\n  }\n\n  getPotionDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <PotionForm />\n    } else {\n      return <PotionDisplay />\n    }\n  }\n\n  getWeaponDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <WeaponForm />\n    } else {\n      return <WeaponDisplay />\n    }\n  }\n\n  getArmorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <ArmorForm />\n    } else {\n      return <ArmorDisplay />\n    }\n  }\n\n  getSupplierDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <SupplierForm />\n    } else {\n      return <SupplierDisplay />\n    }\n  }\n\n  getDetail() {\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n\n    switch(this.props.formType) {\n      case 'potion':\n        return this.getPotionDetail();\n      case 'weapon':\n        return this.getWeaponDetail();\n      case 'armor':\n        return this.getArmorDetail();\n      case 'supplier':\n        return this.getSupplierDetail();\n      default:\n        return (<div className=\"BlankForm\">detail type unknown</div>)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit\n  }\n}\n\nexport default connect(mapStateToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass PotionFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.fetchPotions = this.fetchPotions.bind(this);\n  }\n\n  componentDidMount() {\n    const thisRef = this;\n    window.potionFetcher = thisRef;\n  }\n\n  fetchPotions() {\n    this.props.fetchPotions();\n  }\n\n  render() {\n    return '';\n  }\n}\n\nexport default connect(null, actions)(PotionFetcher);","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass WeaponsFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchWeapons = this.fetchWeapons.bind(this);\n  }\n\n  componentDidMount() {\n    const thisRef = this;\n    window.weaponsFetcher = thisRef;\n  }\n\n  fetchWeapons() {\n    this.props.fetchWeapons();\n  }\n\n  render() {\n    return '';\n  }\n}\n\nexport default connect(null, actions)(WeaponsFetcher);","import React from 'react';\n\nimport PotionFetcher from '../PotionFetcher/PotionFetcher';\nimport WeaponsFetcher from '../WeaponsFetcher/WeaponsFetcher';\n\nclass Fetcher extends React.Component {\n  render() {\n    return (\n      <div className=\"Fetcher\">\n        <PotionFetcher />\n        <WeaponsFetcher />\n      </div>\n    )\n  }\n}\n\nexport default Fetcher;","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../ObjectListColumn/ObjectListColumn';\nimport DetailView from '../DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\nimport Fetchers from '../Fetchers/Fetchers';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n        <Fetchers />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      // if (!newTargetId && newTargetId !== 0) {\n      //   newTargetId = state.targetId;\n      // }\n      // if (!newEdit) {\n      //   newEdit = state.edit;\n      // }\n      // if (!newForm) {\n      //   newForm = state.form;\n      // }\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}