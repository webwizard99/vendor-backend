{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","actions/types.js","actions/index.js","utilities/formTypes.js","Components/PotionsList/PotionsList.jsx","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","Components/TownBehaviorList/TownBehaviorList.jsx","Components/DungeonBehaviorList/DungeonBehaviorList.jsx","Components/BehaviorList/BehaviorList.jsx","Components/AdventurerClassList/AdventurerClassList.jsx","Components/AdventurerList/AdventurerList.jsx","Components/NPCList/NPCList.jsx","Components/MonsterDropListList/MonsterDropListList.jsx","Components/MonsterBehaviorList/MonsterBehaviorList.jsx","Components/MonsterList/MonsterList.jsx","Containers/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","utilities/itemPostRequests.js","utilities/itemPutRequests.js","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","Components/DeleteOfferingButton/DeleteOfferingButton.jsx","Components/AddOfferingButton/AddOfferingButton.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Components/TownBehaviorDisplay/TownBehaviorDisplay.jsx","Components/TownBehaviorForm/TownBehaviorForm.jsx","Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay.jsx","Components/DungeonBehaviorForm/DungeonBehaviorForm.jsx","Components/AdventurerClassDisplay/AdventurerClassDisplay.jsx","Components/AdventurerClassForm/AdventurerClassForm.jsx","Components/AdventurerDisplay/AdventurerDisplay.jsx","Components/AdventurerForm/AdventurerForm.jsx","Components/MonsterDropListDisplay/MonsterDropListDisplay.jsx","Components/MonsterDropListForm/MonsterDropListForm.jsx","Components/MonsterBehaviorDisplay/MonsterBehaviorDisplay.jsx","Components/MonsterBehaviorForm/MonsterBehaviorForm.jsx","Containers/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/behaviorsReducer.js","reducers/adventurerClassReducer.js","reducers/adventurerReducer.js","reducers/dropListReducer.js","reducers/monsterBehaviorReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","SET_DETAIL_FORM","fetchUser","dispatch","a","axios","get","res","payload","data","fetchPotions","fetchWeapons","fetchArmor","fetchSuppliers","fetchTownBehaviors","fetchDungeonBehaviors","fetchAdventurerClasses","fetchAdventurers","loadAdventurerDetails","fetchMonsterDropLists","loadItems","fetchMonsterBehaviors","potion","weapon","armor","supplier","town_behavior","dungeon_behavior","adventurer_class","adventurer","monster_drop_list","monster_behavior","PotionsList","componentDidMount","handleNew","setRefresh","setDisplayForm","form","formTypes","edit","targetId","potions","newPotions","map","potionClass","id","item","name","detail","value","WeaponsList","weapons","newWeapons","weaponClass","ArmorList","newArmor","armorClass","ItemList","SupplierList","suppliers","newSuppliers","supplierClass","TownBehaviorList","townBehaviors","newTownBehaviors","townBehavior","townBehaviorClass","behaviors","DungeonBehaviorList","dungeonBehaviors","newDungeonBehaviors","dungeonBehavior","dungeonBehaviorClass","BehaviorList","AdventurerClassList","adventurerClass","adventurerClasses","newAdventurerClasses","adventurerClassClass","classes","AdventurerList","adventurers","newAdventurers","NPCList","MonsterDropListList","monsterDropLists","newMonsterDropLists","monsterDropList","monsterDropListClass","dropLists","monster","MonsterBehaviorList","monsterBehaviors","newMonsterBehaviors","monsterBehavior","monsterBehaviorClass","MonsterList","ObjectListColumn","shouldComponentUpdate","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","handleCloseButton","CloseFormButton","itemPostRequests","makeRequest","postRoute","postBody","subBody","JSON","stringify","postRes","fetch","method","headers","body","itemPutRequests","putRoute","putBody","putRes","PotionForm","addPotion","handleSubmit","potionType","e","preventDefault","displayId","itemPutRequest","itemPostRequest","FormData","target","next","then","newHeading","newName","newValue","newDetails","newRarity","newPotionType","newLevel","newId","newItemId","refresh","thisPotion","find","details","rarity","level","itemId","action","onSubmit","htmlFor","required","placeholder","maxLength","defaultValue","min","max","getPotionOptions","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","deleteType","deleteId","response","json","deleteRes","makeRequestSupplier","route","offeringIds","makeRequestDropList","monsterDroplistId","dropIds","PotionDisplay","deletePotion","window","dialogRef","setDialog","text","WeaponForm","addWeapon","newDamage","thisWeapon","damage","WeaponDisplay","deleteWeapon","ArmorForm","addArmor","thisArmor","ArmorDisplay","deleteArmor","DeleteOfferingButton","AddOfferingButton","itemTypes","SupplierForm","initialized","initializeFields","getOfferingOptions","handleChange","addFormOffering","deleteOffering","updateSupplier","offerings","thisSupplier","initialState","presentIds","length","offering","markup","push","existingIdCount","deletedIds","newOfferingIndex","newOfferingKeys","Object","values","itemType","updatedState","existing","offeringId","newDeleted","newCount","offeringIndex","indexOf","splice","stateUpdate","getAttribute","onChange","deletedMap","includes","index","newOfferingsCount","SupplierDisplay","deleteSupplier","forEach","refOffering","TownBehaviorDisplay","deleteTownBehavior","thisTownBehavior","buy_potion","sell_potion","upgrade_potion","buy_weapon","sell_weapon","upgrade_weapon","buy_armor","sell_armor","upgrade_armor","wealth","enter_dungeon","use_tavern","retire","emigrate","garrison_wall","TownBehaviorForm","addTownBehavior","putRequest","postRequest","newBuyPotion","newSellPotion","newUpgradePotion","newBuyWeapon","newSellWeapon","newUpgradeWeapon","newBuyArmor","newSellArmor","newUpgradeArmor","newWealth","newEnterDungeon","newUseTavern","newRetire","newEmigrate","newGarisonWall","step","DungeonBehaviorDisplay","deleteDungeonBehavior","thisDungeonBehavior","advance_tile","conserve_health","use_potion","rest","return_to_town","check_for_traps","disarm_trap","avoid_trap","search_for_treasure","fight_monster","flee_encounter","defend","attack","check_monster_weakness","explore_level","advance_next_level","fill_inventory","upgrade_inventory","fight_boss_monster","prefer_weaker_monster","try_for_level","DungeonBehaviorForm","addDungeonBehavior","newAdvanceTile","newConserveHealth","newUsePotion","newRest","newReturnToTown","newCheckForTraps","newDisarmTrap","newAvoidTrap","newSearchForTreasure","newFightMonster","newFleeEncounter","newDefend","newAttack","newCheckMonsterWeakness","newExploreLevel","newAdvanceNextLevel","newFillInventory","newUpgradeInventory","newFightBossMonster","newPreferWeakerMonster","newTryForLevel","AdventurerClassDisplay","deleteAdventurerClass","thisAdventurerClass","bargaining","perception","artifacts","traps","agility","tactics","martial_weapons","anatomy","AdventurerClassForm","addAdventurerClass","newBargaining","newPerception","newArtifacts","newTraps","newAgility","newTactics","newMartialWeapons","newAnatomy","AdventurerDisplay","deleteAdventurer","console","log","thisAdventurer","strength","speed","cunning","intelligence","constitution","dungeon_behavior_id","town_behavior_id","adventurer_class_id","dungeonBehaviorName","townBehaviorName","adventurerClassname","AdventurerForm","getDungeonBehaviorOptions","getTownBehaviorOptions","getAdventurerClassOptions","addAdventurer","dungeonOption","townOption","classOption","newDungeonBehavior","newTownBehavior","newAdventurerClass","newStrength","newSpeed","newCunning","newIntelligence","newConstitution","dungeoBehaviorId","townBehaviorId","adventurerClassId","undefined","MonsterDropListDisplay","getDrops","deleteDropList","drops","drop","itemName","drop_type","dropChance","thisDropList","dropList","thisName","thisGoldMin","gold_min","thisGoldMax","gold_max","thisGoldChance","gold_chance","thisDrops","MonsterDropListForm","getDropListOptions","addFormDrop","deleteDrop","updateMonsterDropList","newGoldMin","newGoldMax","newGoldChance","newDrops","newDropIndex","newDropKeys","propName","allItemsOfType","label","dropId","dropIndex","putRequests","postRequests","newMonsterDroplistId","MonsterBehaviorDisplay","thisMonsterBehavior","confront_weakened_adventurer","special_move","heal","block_flee","migrate","MonsterBehaviorForm","addMonsterBehavior","newConfrontWeakenedAdventurer","newSpecialMove","newHeal","newBlockFlee","newMigrate","DetailView","getDetail","getPotionDetail","getWeaponDetail","getArmorDetail","getSupplierDetail","getTownBehaviorDetail","getDungeonBehaviorDetail","getAdventurerClassDetail","getAdventurerDetail","getMonsterDropListDetail","getMonsterBehaviorDetail","formType","DialogBox","handleNo","clicked","classList","contains","ref","yesCallback","noCallback","App","getDialog","combineReducers","newTargetId","newEdit","newForm","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7e54ca64.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_DETAIL_REFRESH = \"SET_DETAIL_REFRESH\";\nexport const SET_TOWN_BEHAVIORS = \"SET_TOWN_BEHAVIORS\";\nexport const SET_DUNGEON_BEHAVIORS = \"SET_DUNGEON_BEHAVIORS\";\nexport const SET_ADVENTURER_CLASSES = \"SET_ADVENTURER_CLASSES\";\nexport const SET_ADVENTURERS = \"SET_ADVENTURERS\";\nexport const SET_MONSTER_DROP_LISTS = \"SET_MONSTER_DROP_LISTS\";\nexport const SET_MONSTER_BEHAVIORS = \"SET_MONSTER_BEHAVIORS\";","import axios from 'axios';\nimport { FETCH_USER,\n  SET_POTIONS, \n  SET_WEAPONS, \n  SET_ARMOR, \n  SET_SUPPLIERS,\n  SET_TOWN_BEHAVIORS,\n  SET_DUNGEON_BEHAVIORS,\n  SET_ADVENTURER_CLASSES,\n  SET_ADVENTURERS,\n  SET_MONSTER_DROP_LISTS,\n  SET_MONSTER_BEHAVIORS } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}\n\nexport const fetchTownBehaviors = () => async dispatch => {\n  const res = await axios.get('/town_behaviors');\n  dispatch({ type: SET_TOWN_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchDungeonBehaviors = () => async dispatch => {\n  const res = await axios.get('/dungeon_behaviors');\n  dispatch({ type: SET_DUNGEON_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchAdventurerClasses = () => async dispatch => {\n  const res = await axios.get('/adventurer_classes');\n  dispatch({ type: SET_ADVENTURER_CLASSES, payload: res.data });\n}\n\nexport const fetchAdventurers = () => async dispatch => {\n  const res = await axios.get('/adventurers');\n  dispatch({ type: SET_ADVENTURERS, payload: res.data });\n}\n\nexport const loadAdventurerDetails = () => async dispatch => {\n  dispatch(fetchTownBehaviors());\n  dispatch(fetchDungeonBehaviors());\n  dispatch(fetchAdventurerClasses());\n}\n\nexport const fetchMonsterDropLists = () => async dispatch => {\n  const res = await axios.get('/monster_drop_lists');\n  dispatch({ type: SET_MONSTER_DROP_LISTS, payload: res.data });\n}\n\nexport const loadItems = () => async dispatch => {\n  dispatch(fetchPotions());\n  dispatch(fetchWeapons());\n  dispatch(fetchArmor());\n}\n\nexport const fetchMonsterBehaviors = () => async dispatch => {\n  const res = await axios.get('/monster_behaviors');\n  dispatch({ type: SET_MONSTER_BEHAVIORS, payload: res.data });\n}","export default {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor',\n  supplier: 'supplier',\n  town_behavior: 'town_behavior',\n  dungeon_behavior: 'dungeon_behavior',\n  adventurer_class: 'adventurer_class',\n  adventurer: 'adventurer',\n  monster_drop_list: 'monster_drop_list',\n  monster_behavior: 'monster_behavior'\n}","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.potion, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === formTypes.potion && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: formTypes.potion, edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.weapon, edit: false, targetId: null });\n  }\n  \n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === formTypes.weapon && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.weapon, edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchArmor();\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.armor, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === formTypes.armor && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.armor, edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchSuppliers();\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.supplier, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\"\n        onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === formTypes.supplier && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.supplier, edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import React from 'react';\nimport './TownBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass TownBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.props.fetchTownBehaviors();\n  }\n\n  getTitle() {\n    return 'Town Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.town_behavior, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewTownBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.townBehaviors) {\n      return '';\n    } else {\n      const newTownBehaviors = this.props.townBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newTownBehaviors.map(townBehavior => {\n            let townBehaviorClass = \"ListDetail\";\n            if (this.props.form === formTypes.town_behavior && this.props.targetId === townBehavior.id) {\n              townBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={townBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.town_behavior, edit: false, targetId: townBehavior.id })}\n                >{townBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorList);","import React from 'react';\nimport './DungeonBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass DungeonBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDungeonBehaviors();\n  }\n\n  getTitle() {\n    return 'Dungeon Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewDungeonBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.dungeonBehaviors) {\n      return '';\n    } else {\n      const newDungeonBehaviors = this.props.dungeonBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newDungeonBehaviors.map(dungeonBehavior => {\n            let dungeonBehaviorClass = \"ListDetail\";\n            if (this.props.form === formTypes.dungeon_behavior && dungeonBehavior.id === this.props.targetId) {\n              dungeonBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={dungeonBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: false, targetId: dungeonBehavior.id })}\n                >{dungeonBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorList);","import React from 'react';\nimport './BehaviorList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport TownBehaviorList from '../TownBehaviorList/TownBehaviorList';\nimport DungeonBehaviorList from '../DungeonBehaviorList/DungeonBehaviorList';\n\nclass BehaviorList extends ExpandableList {\n  getTitle() {\n    return 'Behaviors';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <TownBehaviorList />\n        <DungeonBehaviorList />\n      </div>\n    )\n  }\n}\n\nexport default BehaviorList;","import React from 'react';\nimport './AdventurerClassList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utitlity imports\nimport formTypes from '../../utilities/formTypes';\n\nclass AdventurerClassList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurerClasses();\n  }\n  \n  getTitle() {\n    return 'Classes';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.adventurerClass, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerClassButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurerClasses) {\n      return '';\n    } else {\n      const newAdventurerClasses = this.props.adventurerClasses;\n      return (\n        <div className=\"detailList\">\n          {newAdventurerClasses.map(adventurerClass => {\n            let adventurerClassClass = \"ListDetail\";\n            if (this.props.form === formTypes.adventurer_class && this.props.targetId === adventurerClass.id) {\n              adventurerClassClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClassClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.adventurerClass, edit: false, targetId: adventurerClass.id })}\n                >{adventurerClass.name}</span>\n              </p>\n            );\n          })}\n        </div>\n      )\n    }\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassList);","import React from 'react';\nimport './AdventurerList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\nimport AdventurerClassList from '../AdventurerClassList/AdventurerClassList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass AdventurerList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurers();\n  }\n  \n  getTitle() {\n    return 'Adventurers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.adventurer, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurers) {\n      return (\n        <div className=\"detailList\">\n          <AdventurerClassList />\n        </div>\n      )\n    } else {\n      const newAdventurers = this.props.adventurers;\n      return (\n        <div className=\"detailList\">\n          { newAdventurers.map(adventurer => {\n            let adventurerClass = \"ListDetail\";\n            if (this.props.form === formTypes.adventurer && this.props.targetId === adventurer.id) {\n              adventurerClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClass}\n                  onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer, edit: false, targetId: adventurer.id })}\n                  >{adventurer.name}</span>\n              </p>\n            )\n          })}\n          <AdventurerClassList />\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerList);","import React from 'react';\nimport './NPCList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport BehaviorList from '../BehaviorList/BehaviorList';\nimport AdventurerList from '../AdventurerList/AdventurerList';\n\nclass NPCList extends ExpandableList {\n  getTitle() {\n    return 'NPCs';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <BehaviorList />\n        <AdventurerList />\n      </div>\n    )\n  }\n}\n\nexport default NPCList;","import React from 'react';\nimport './MonsterDropListList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterDropListList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterDropLists();\n  }\n  \n  getTitle() {\n    return 'Monster Drop Lists';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterDropListButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterDropLists) {\n      return '';\n    }\n    const newMonsterDropLists = this.props.monsterDropLists;\n    return (\n      <div className=\"detailList\">\n        { newMonsterDropLists.map(monsterDropList => {\n          let monsterDropListClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster_drop_list && this.props.targetId === monsterDropList.id) {\n            monsterDropListClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterDropListClass}\n              onClick={() => this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: false, targetId: monsterDropList.id })}\n              >{monsterDropList.monster_drop_list.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListList);","import React from 'react';\nimport './MonsterBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n    this.displayContents = this.displayContents.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchMonsterBehaviors();\n  }\n\n  getTitle() {\n    return 'Monster Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewMonsterBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.monsterBehaviors) {\n      return '';\n    }\n    const newMonsterBehaviors = this.props.monsterBehaviors;\n    return (\n      <div className=\"detailList\">\n        {newMonsterBehaviors.map(monsterBehavior => {\n          let monsterBehaviorClass = \"ListDetail\";\n          if (this.props.form === formTypes.monster_behavior && monsterBehavior.id === this.props.targetId) {\n            monsterBehaviorClass += \" activeItem\";\n          }\n          return (\n            <p>\n              <span className={monsterBehaviorClass}\n                onClick={() => this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: false, targetId: monsterBehavior.id })}\n              >{monsterBehavior.name}</span>\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorList);","import React from 'react';\nimport './MonsterList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport MonsterDropListList from '../MonsterDropListList/MonsterDropListList';\nimport MonsterBehaviorList from '../MonsterBehaviorList/MonsterBehaviorList';\n\nclass MonsterList extends ExpandableList {\n  getTitle() {\n    return 'Monsters';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <MonsterDropListList />\n        <MonsterBehaviorList />\n      </div>\n    )\n  }\n}\n\nexport default MonsterList;","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../../Components/ItemList/ItemList';\nimport SupplierList from '../../Components/SupplierList/SupplierList';\nimport NPCList from '../../Components/NPCList/NPCList';\nimport MonsterList from '../../Components/MonsterList/MonsterList';\n\n// redux imports\n// comment to update code\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n        <NPCList />\n        <MonsterList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","const itemPostRequests = (function() {\n  return {\n    makeRequest: async function(postRoute, postBody) {\n      let subBody = {};\n      for ( let [ key, value ] of postBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const postRes = fetch(`/${postRoute}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return postRes;\n    }\n  }\n}());\n\nexport default itemPostRequests;","const itemPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default itemPutRequests;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass PotionForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addPotion = this.addPotion.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.potion, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addPotion(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('potion', data);\n    } else {\n      yield itemPostRequest.makeRequest('potion', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target)\n    let addPotion = this.addPotion(data);\n    addPotion.next().value.then(() => {\n      this.props.fetchPotions();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.potion, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n    \n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newPotionType = '';\n    let newLevel = '';\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit && !this.props.refresh) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" required name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" required name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" required name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" required name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestSupplier: async function(payload) {\n      const {\n        route, id, offeringIds\n      } = payload;\n\n      let data = {\n        id: id,\n        offeringIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestDropList: async function(payload) {\n      const {\n        route, id, monsterDroplistId, dropIds\n      } = payload;\n\n      let data = {\n        id: id,\n        monsterDroplistId: monsterDroplistId,\n        dropIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n    \n    this.deletePotion = this.deletePotion.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deletePotion() {\n    yield deleteRequests.makeRequest('potion', this.props.displayId);\n  }\n\n  handleYes() {\n    let deletePotion = this.deletePotion();\n    deletePotion.next().value.then(() => {\n      this.props.fetchPotions();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: formTypes.potion, edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons} from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass WeaponForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addWeapon = this.addWeapon.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.weapon, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addWeapon(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('weapon', data);\n    } else {\n      yield itemPostRequest.makeRequest('weapon', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let addWeapon = this.addWeapon(data);\n    addWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.weapon, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" required defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" required defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" required name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteWeapon = this.deleteWeapon.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteWeapon() {\n    yield deleteRequests.makeRequest('weapon', this.props.displayId);\n  }\n\n  handleYes() {\n    let deleteWeapon = this.deleteWeapon();\n    deleteWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.weapon, edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass ArmorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addArmor = this.addArmor.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.armor, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addArmor(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('armor', data);\n    } else {\n      yield itemPostRequest.makeRequest('armor', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addArmor = this.addArmor(data);\n    this.addArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.armor, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          onSubmit={this.handleSubmit}\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteArmor = this.deleteArmor.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteArmor() {\n    yield deleteRequests.makeRequest('armor', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteArmor = this.deleteArmor();\n    deleteArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n    \n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.armor, edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","import React from 'react';\nimport './DeleteOfferingButton.css';\n\nclass DeleteOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteOfferingButton\">\n        <span className=\"offeringButtonIcon\">X</span>\n      </div>\n    )\n  }\n}\n\nexport default DeleteOfferingButton;","import React from 'react';\nimport './AddOfferingButton.css';\n\nclass AddOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddOfferingButton\">\n        <span className=\"addOfferingButtonIcon\">+</span>\n      </div>\n    )\n  }\n}\n\nexport default AddOfferingButton;","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport formTypes from '../../utilities/formTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addFormOffering = this.addFormOffering.bind(this);\n    this.deleteOffering = this.deleteOffering.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateSupplier = this.updateSupplier.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.suppliers) return;\n    let newName = '';\n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      newName = thisSupplier.name;\n      offerings = thisSupplier.offerings;\n    }\n   \n\n    let initialState = {};\n\n    initialState['name'] = newName;\n    let presentIds = [];\n    if (offerings.length > 0) {\n      for (const offering of offerings) {\n        initialState[`offering-${offering.id}-type`] = offering.type;\n        initialState[`offering-${offering.id}-markup`] = offering.markup;\n        presentIds.push(offering.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = offerings.length;\n    initialState.deletedIds = [];\n    initialState.newOfferingIndex = 0;\n    initialState.newOfferingKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.supplier, targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  addFormOffering() {\n    // limit offerings to 5\n    const totalCount = this.state.newOfferingKeys.length + this.state.existingIdCount;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newOfferingIndex = this.state.newOfferingIndex;\n    updatedState[`new-offering-${newOfferingIndex}-type`] = 1;\n    updatedState[`new-offering-${newOfferingIndex}-markup`] = 100;\n    let newOfferingKeys = this.state.newOfferingKeys;\n    newOfferingKeys.push(newOfferingIndex);\n    updatedState.newOfferingKeys = newOfferingKeys;\n    newOfferingIndex += 1;\n    updatedState.newOfferingIndex = newOfferingIndex;\n    this.setState(updatedState);\n    \n  }\n\n  deleteOffering(payload) {\n    const { existing, offeringId } = payload\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(offeringId);\n      newCount -= 1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newOfferingKeys = this.state.newOfferingKeys;\n      const offeringIndex = newOfferingKeys.indexOf(offeringId);\n      if (offeringIndex < 0 || (offeringIndex !== 0 && !offeringIndex)) return;\n      newOfferingKeys.splice(offeringIndex, 1);\n      updatedState.newOfferingKeys = newOfferingKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value\n    this.setState(stateUpdate);\n  }\n\n  *updateSupplier(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('supplier', data);\n    } else {\n      yield itemPostRequest.makeRequest('supplier', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateSupplier = this.updateSupplier(data);\n    updateSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.supplier, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n    \n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      offerings = thisSupplier.offerings;\n    }\n    \n    let newHeading = 'New Supplier';\n    if (this.props.edit) {\n      newHeading = this.state.name;\n    }\n    let newId = null;\n    if (this.props.edit) {\n      newId = this.props.displayId;\n    }\n    const newOfferingKeys = this.state.newOfferingKeys;\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/supplier'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"supplier name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group form-subgroup\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.length <= 0 ? '' : offerings.map(offering => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(offering.id)) {\n                  return ''\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"offering-select\" \n                        name={`offering-${offering.id}-type`} \n                        id={`offering-${offering.id}-type`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-type`]}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\" \n                        type=\"number\" \n                        name={`offering-${offering.id}-markup`} \n                        id={`offering-${offering.id}-markup`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-markup`]}>\n                      </input>\n                      <span className=\"offeringDelete\"\n                        onClick={() => this.deleteOffering({ existing: true, offeringId: offering.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n            {newOfferingKeys.length <= 0 ? '' : newOfferingKeys.map(index => {\n              return (\n                <div className=\"form-inner-span\">\n                  <div className=\"form-half-span form-left-half\">\n                    <select className=\"offering-select\"\n                      name={`new-offering-${index}-type`}\n                      id={`new-offering-${index}-type`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-type`]}>\n                        {this.getOfferingOptions()}\n                    </select>\n                  </div>\n                  <div className=\"form-half-span form-right-half\">\n                    <input className=\"input-number\"\n                      type=\"number\"\n                      name={`new-offering-${index}-markup`}\n                      id={`new-offering-${index}-markup`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-markup`]}>\n                    </input>\n                    <span className=\"offeringDelete\"\n                      onClick={() => this.deleteOffering({ existing: false, offeringId: index })}\n                    >\n                      <DeleteOfferingButton />\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n            <div className=\"offeringAdd form-full-span form-center-content\"\n              onClick={this.addFormOffering}\n            >\n              <AddOfferingButton />\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n          <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n          <input type=\"hidden\" name=\"newIndexes\" value={this.state.newOfferingKeys} />\n          <input type=\"hidden\" name=\"newOfferingsCount\" value={this.state.newOfferingsCount} />\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <div className=\"supplier-submit-container\">\n          <input type=\"submit\" value={this.props.edit ? 'Update Supplier' : 'Create Supplier' } className=\"button create-button\"></input>\n          </div>          \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass SupplierDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteSupplier = this.deleteSupplier.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteSupplierButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Supplier and Offerings from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteSupplier(payload) {\n    yield deleteRequests.makeRequestSupplier(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'supplier';\n    payload.id = this.props.displayId;\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const offerings = thisSupplier.offerings;\n    let offeringIds = [];\n    if (offerings.length > 0) {\n      offerings.forEach(refOffering => {\n        offeringIds.push(refOffering.id);\n      });\n    }\n    payload.offeringIds = offeringIds;\n\n    // invoke delete request\n    let deleteSupplier = this.deleteSupplier(payload);\n    deleteSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.supplier, edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display subgroup-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './TownBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass TownBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteTownBehavior = this.deleteTownBehavior.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteTownBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Town Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteTownBehavior() {\n    yield deleteRequests.makeRequest('town_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteTownBehavior = this.deleteTownBehavior();\n    deleteTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n    const { name,\n      buy_potion,\n      sell_potion,\n      upgrade_potion,\n      buy_weapon,\n      sell_weapon,\n      upgrade_weapon,\n      buy_armor,\n      sell_armor,\n      upgrade_armor,\n      wealth,\n      enter_dungeon,\n      use_tavern,\n      retire,\n      emigrate,\n      garrison_wall\n    } = thisTownBehavior;\n\n    return (\n      <div className=\"TownBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"TownBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.town_behavior, edit: true, targetId: thisTownBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy potion</span>\n            <span className=\"display-text\">{buy_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell potion</span>\n            <span className=\"display-text\">{sell_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade potion</span>\n            <span className=\"display-text\">{upgrade_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy weapon</span>\n            <span className=\"display-text\">{buy_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell weapon</span>\n            <span className=\"display-text\">{sell_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade weapon</span>\n            <span className=\"display-text\">{upgrade_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy armor</span>\n            <span className=\"display-text\">{buy_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell armor</span>\n            <span className=\"display-text\">{sell_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade armor</span>\n            <span className=\"display-text\">{upgrade_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">wealth</span>\n            <span className=\"display-text\">{wealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">enter dungeon</span>\n            <span className=\"display-text\">{enter_dungeon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use tavern</span>\n            <span className=\"display-text\">{use_tavern}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">retire</span>\n            <span className=\"display-text\">{retire}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">emigrate</span>\n            <span className=\"display-text\">{emigrate}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">garrison wall</span>\n            <span className=\"display-text\">{garrison_wall}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorDisplay);","import React from 'react';\nimport './TownBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass TownBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addTownBehavior = this.addTownBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.town_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addTownBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('town_behavior', data);\n    } else {\n      yield postRequest.makeRequest('town_behavior', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addTownBehavior = this.addTownBehavior(data);\n    this.addTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.town_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false })\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Town Behavior';\n    let newName = '';\n    let newId;\n    let newBuyPotion = 0;\n    let newSellPotion = 0;\n    let newUpgradePotion = 0;\n    let newBuyWeapon = 0;\n    let newSellWeapon = 0;\n    let newUpgradeWeapon = 0;\n    let newBuyArmor = 0;\n    let newSellArmor = 0;\n    let newUpgradeArmor = 0;\n    let newWealth = 0;\n    let newEnterDungeon = 0;\n    let newUseTavern = 0;\n    let newRetire = 0;\n    let newEmigrate = 0;\n    let newGarisonWall = 0;\n\n    if (this.props.edit) {\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n      newName = thisTownBehavior.name;\n      newHeading = newName;\n      newId = thisTownBehavior.id;\n      newBuyPotion = thisTownBehavior.buy_potion;\n      newSellPotion = thisTownBehavior.sell_potion;\n      newUpgradePotion = thisTownBehavior.upgrade_potion;\n      newBuyWeapon = thisTownBehavior.buy_weapon;\n      newSellWeapon= thisTownBehavior.sell_weapon;\n      newUpgradeWeapon = thisTownBehavior.upgrade_weapon;\n      newBuyArmor = thisTownBehavior.buy_armor;\n      newSellArmor = thisTownBehavior.sell_armor;\n      newUpgradeArmor = thisTownBehavior.upgrade_armor;\n      newWealth = thisTownBehavior.wealth;\n      newEnterDungeon = thisTownBehavior.enter_dungeon;\n      newUseTavern = thisTownBehavior.use_tavern;\n      newRetire = thisTownBehavior.retire;\n      newEmigrate = thisTownBehavior.emigrate;\n      newGarisonWall = thisTownBehavior.garrison_wall;\n    }\n    return (\n      <div className=\"TownBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Town Behavior: {newHeading}</h2>\n          <div className=\"close-town-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n      <form action={'/town_behaviors'}\n        className=\"input-fields-area\"\n        id=\"TownBehaviorPostForm\"\n        method=\"POST\"\n        onSubmit={this.handleSubmit}>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n              maxLength=\"26\" required defaultValue={newName}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_potion\">buy potion</label>\n            <input type=\"number\" name=\"buy_potion\" id=\"buy_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_potion\">sell potion</label>\n            <input type=\"number\" name=\"sell_potion\" id=\"sell_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_potion\">upgrade potion</label>\n            <input type=\"number\" name=\"upgrade_potion\" id=\"upgrade_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradePotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_weapon\">buy weapon</label>\n            <input type=\"number\" name=\"buy_weapon\" id=\"buy_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_weapon\">sell weapon</label>\n            <input type=\"number\" name=\"sell_weapon\" id=\"sell_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_weapon\">upgrade weapon</label>\n            <input type=\"number\" name=\"upgrade_weapon\" id=\"upgrade_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_armor\">buy armor</label>\n            <input type=\"number\" name=\"buy_armor\" id=\"buy_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_armor\">sell armor</label>\n            <input type=\"number\" name=\"sell_armor\" id=\"sell_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_armor\">upgrade armor</label>\n            <input type=\"number\" name=\"upgrade_armor\" id=\"upgrade_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"wealth\">wealth</label>\n            <input type=\"number\" name=\"wealth\" id=\"wealth\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newWealth}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"enter_dungeon\">enter dungeon</label>\n            <input type=\"number\" name=\"enter_dungeon\" id=\"enter_dungeon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEnterDungeon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"use_tavern\">use tavern</label>\n            <input type=\"number\" name=\"use_tavern\" id=\"use_tavern\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUseTavern}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"retire\">retire</label>\n            <input type=\"number\" name=\"retire\" id=\"retire\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRetire}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"emigrate\">emigrate</label>\n            <input type=\"number\" name=\"emigrate\" id=\"emigrate\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEmigrate}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"garrison_wall\">garrison wall</label>\n            <input type=\"number\" name=\"garrison_wall\" id=\"garrison_wall\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newGarisonWall}></input>\n          </div>\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <input type=\"submit\" value={this.props.edit ? 'Update Town Behavior' : 'Create Town Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorForm);","import React from 'react';\nimport './DungeonBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass DungeonBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteDungeonBehavior = this.deleteDungeonBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteDungeonBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Dungeon Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteDungeonBehavior() {\n    yield deleteRequests.makeRequest('dungeon_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteDungeonBehavior = this.deleteDungeonBehavior();\n    deleteDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n    const {\n      name,\n      advance_tile,\n      conserve_health,\n      use_potion,\n      rest,\n      return_to_town,\n      check_for_traps,\n      disarm_trap,\n      avoid_trap,\n      search_for_treasure,\n      fight_monster,\n      flee_encounter,\n      defend,\n      attack,\n      check_monster_weakness,\n      explore_level,\n      advance_next_level,\n      fill_inventory,\n      upgrade_inventory,\n      fight_boss_monster,\n      prefer_weaker_monster,\n      try_for_level\n    } = thisDungeonBehavior;\n\n    return (\n      <div className=\"DungeonBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"DungeonBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.dungeon_behavior, edit: true, targetId: thisDungeonBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance tile</span>\n            <span className=\"display-text\">{advance_tile}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">conserve health</span>\n            <span className=\"display-text\">{conserve_health}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use potion</span>\n            <span className=\"display-text\">{use_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">rest</span>\n            <span className=\"display-text\">{rest}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">return to town</span>\n            <span className=\"display-text\">{return_to_town}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check for traps</span>\n            <span className=\"display-text\">{check_for_traps}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">disarm trap</span>\n            <span className=\"display-text\">{disarm_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">avoid trap</span>\n            <span className=\"display-text\">{avoid_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">search for treasure</span>\n            <span className=\"display-text\">{search_for_treasure}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight monster</span>\n            <span className=\"display-text\">{fight_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">flee encounter</span>\n            <span className=\"display-text\">{flee_encounter}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defend</span>\n            <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">attack</span>\n            <span className=\"display-text\">{attack}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check monster weakness</span>\n            <span className=\"display-text\">{check_monster_weakness}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">explore level</span>\n            <span className=\"display-text\">{explore_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance next level</span>\n            <span className=\"display-text\">{advance_next_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fill inventory</span>\n            <span className=\"display-text\">{fill_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade inventory</span>\n            <span className=\"display-text\">{upgrade_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight boss monster</span>\n            <span className=\"display-text\">{fight_boss_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">prefer weaker monster</span>\n            <span className=\"display-text\">{prefer_weaker_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">try for level</span>\n            <span className=\"display-text\">{try_for_level}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorDisplay);","import React from 'react';\nimport './DungeonBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass DungeonBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addDungeonBehavior = this.addDungeonBehavior.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.dungeon_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addDungeonBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('dungeon_behavior', data);\n    } else {\n      yield postRequest.makeRequest('dungeon_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addDungeonBehavior = this.addDungeonBehavior(data);\n    this.addDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.dungeon_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading ='New Dungeon Behavior';\n    let newName = '';\n    let newId;\n    let newAdvanceTile = 0;\n    let newConserveHealth = 0;\n    let newUsePotion = 0;\n    let newRest = 0;\n    let newReturnToTown = 0;\n    let newCheckForTraps = 0;\n    let newDisarmTrap = 0;\n    let newAvoidTrap = 0;\n    let newSearchForTreasure = 0;\n    let newFightMonster = 0;\n    let newFleeEncounter = 0;\n    let newDefend = 0;\n    let newAttack = 0;\n    let newCheckMonsterWeakness = 0;\n    let newExploreLevel = 0;\n    let newAdvanceNextLevel = 0;\n    let newFillInventory = 0;\n    let newUpgradeInventory = 0;\n    let newFightBossMonster = 0;\n    let newPreferWeakerMonster = 0;\n    let newTryForLevel = 0;\n\n    if (this.props.edit) {\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n      newName = thisDungeonBehavior.name;\n      newHeading = newName;\n      newId = thisDungeonBehavior.id;\n      newAdvanceTile = thisDungeonBehavior.advance_tile;\n      newConserveHealth = thisDungeonBehavior.conserve_health;\n      newUsePotion = thisDungeonBehavior.use_potion;\n      newRest = thisDungeonBehavior.rest;\n      newReturnToTown = thisDungeonBehavior.return_to_town;\n      newCheckForTraps = thisDungeonBehavior.check_for_traps;\n      newDisarmTrap = thisDungeonBehavior.disarm_trap;\n      newAvoidTrap = thisDungeonBehavior.avoid_trap;\n      newSearchForTreasure = thisDungeonBehavior.search_for_treasure;\n      newFightMonster = thisDungeonBehavior.fight_monster;\n      newFleeEncounter = thisDungeonBehavior.flee_encounter;\n      newDefend = thisDungeonBehavior.defend;\n      newAttack = thisDungeonBehavior.attack;\n      newCheckMonsterWeakness = thisDungeonBehavior.check_monster_weakness;\n      newExploreLevel = thisDungeonBehavior.explore_level;\n      newAdvanceNextLevel = thisDungeonBehavior.advance_next_level;\n      newFillInventory = thisDungeonBehavior.fill_inventory;\n      newUpgradeInventory = thisDungeonBehavior.upgrade_inventory;\n      newFightBossMonster = thisDungeonBehavior.fight_boss_monster;\n      newPreferWeakerMonster = thisDungeonBehavior.prefer_weaker_monster;\n      newTryForLevel = thisDungeonBehavior.try_for_level;\n    }\n    return (\n      <div className=\"DungeonBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Dungeon Behavior: {newHeading}</h2>\n          <div className=\"close-dungeon-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        <form action={'/dungeon_behavior'}\n          className=\"input-fields-area\"\n          id=\"DungeonBehaviorPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_tile\">advance tile</label>\n              <input type=\"number\" name=\"advance_tile\" id=\"advance_tile\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceTile}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"conserve_health\">conserve health</label>\n              <input type=\"number\" name=\"conserve_health\" id=\"conserve_health\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConserveHealth}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"use_potion\">use potion</label>\n              <input type=\"number\" name=\"use_potion\" id=\"use_potion\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUsePotion}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rest\">rest</label>\n              <input type=\"number\" name=\"rest\" id=\"rest\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRest}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"return_to_town\">return to town</label>\n              <input type=\"number\" name=\"return_to_town\" id=\"return_to_town\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newReturnToTown}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_for_traps\">check for traps</label>\n              <input type=\"number\" name=\"check_for_traps\" id=\"check_for_traps\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckForTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"disarm_trap\">disarm trap</label>\n              <input type=\"number\" name=\"disarm_trap\" id=\"disarm_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDisarmTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"avoid_trap\">avoid trap</label>\n              <input type=\"number\" name=\"avoid_trap\" id=\"avoid_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAvoidTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"search_for_treasure\">search for treasure</label>\n              <input type=\"number\" name=\"search_for_treasure\" id=\"search_for_treasure\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSearchForTreasure}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_monster\">fight monster</label>\n              <input type=\"number\" name=\"fight_monster\" id=\"fight_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"flee_encounter\">flee encounter</label>\n              <input type=\"number\" name=\"flee_encounter\" id=\"flee_encounter\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFleeEncounter}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"attack\">attack</label>\n              <input type=\"number\" name=\"attack\" id=\"attack\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAttack}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_monster_weakness\">check monster weakness</label>\n              <input type=\"number\" name=\"check_monster_weakness\" id=\"check_monster_weakness\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckMonsterWeakness}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"explore_level\">explore level</label>\n              <input type=\"number\" name=\"explore_level\" id=\"explore_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newExploreLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_next_level\">advance next level</label>\n              <input type=\"number\" name=\"advance_next_level\" id=\"advance_next_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceNextLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fill_inventory\">fill inventory</label>\n              <input type=\"number\" name=\"fill_inventory\" id=\"fill_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFillInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"upgrade_inventory\">upgrade inventory</label>\n              <input type=\"number\" name=\"upgrade_inventory\" id=\"upgrade_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_boss_monster\">fight boss monster</label>\n              <input type=\"number\" name=\"fight_boss_monster\" id=\"fight_boss_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightBossMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"prefer_weaker_monster\">prefer weaker monster</label>\n              <input type=\"number\" name=\"prefer_weaker_monster\" id=\"prefer_weaker_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newPreferWeakerMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"try_for_level\">try for level</label>\n              <input type=\"number\" name=\"try_for_level\" id=\"try_for_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newTryForLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Dungeon Behavior' : 'Create Dungeon Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorForm);","import React from 'react';\nimport './AdventurerClassDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerClassDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteAdventurerClass = this.deleteAdventurerClass.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerClassButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer Class from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurerClass() {\n    yield deleteRequests.makeRequest('adventurer_class', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurerClass = this.deleteAdventurerClass();\n    deleteAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n    const {\n      name,\n      bargaining,\n      perception,\n      artifacts,\n      traps,\n      agility,\n      tactics,\n      martial_weapons,\n      armor,\n      anatomy\n    } = thisAdventurerClass;\n\n    return (\n      <div className=\"AdventurerClassDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerClassEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.adventurerClass, edit: true, targetId: thisAdventurerClass.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Bargaining</span>\n              <span className=\"display-text\">{bargaining}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Perception</span>\n              <span className=\"display-text\">{perception}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Artifacts</span>\n              <span className=\"display-text\">{artifacts}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Traps</span>\n              <span className=\"display-text\">{traps}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Agility</span>\n              <span className=\"display-text\">{agility}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Tactics</span>\n              <span className=\"display-text\">{tactics}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Martial Weapons</span>\n              <span className=\"display-text\">{martial_weapons}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Armor</span>\n              <span className=\"display-text\">{armor}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Anatomy</span>\n              <span className=\"display-text\">{anatomy}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassDisplay);","import React from 'react';\nimport './AdventurerClassForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerClassForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addAdventurerClass = this.addAdventurerClass.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.adventurerClass, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurerClass(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer_class', data);\n    } else {\n      yield postRequest.makeRequest('adventurer_class', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurerClass = this.addAdventurerClass(data);\n    this.addAdventurerClass.next().value.then(() => {\n      this.props.fetchAdventurerClasses();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.adventurerClass, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Adventurer Class';\n    let newName = '';\n    let newId;\n    let newBargaining = 0;\n    let newPerception = 0;\n    let newArtifacts = 0;\n    let newTraps = 0;\n    let newAgility = 0;\n    let newTactics = 0;\n    let newMartialWeapons = 0;\n    let newArmor = 0;\n    let newAnatomy = 0;\n\n    if (this.props.edit) {\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n      newName = thisAdventurerClass.name;\n      newHeading = newName;\n      newId = thisAdventurerClass.id;\n      newBargaining = thisAdventurerClass.bargaining;\n      newPerception = thisAdventurerClass.perception;\n      newArtifacts = thisAdventurerClass.artifacts;\n      newTraps = thisAdventurerClass.traps;\n      newAgility = thisAdventurerClass.agility;\n      newTactics = thisAdventurerClass.tactics;\n      newMartialWeapons = thisAdventurerClass.martial_weapons;\n      newArmor = thisAdventurerClass.armor;\n      newAnatomy = thisAdventurerClass.anatomy;\n    }\n    return (\n      <div className=\"AdventurerClassForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer Class: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer_class'}\n          className=\"input-fields-area\"\n          id=\"AdventurerClassPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"class name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"bargaining\">bargaining</label>\n              <input type=\"number\" name=\"bargaining\" id=\"bargaining\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newBargaining}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"perception\">perception</label>\n              <input type=\"number\" name=\"perception\" id=\"perception\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newPerception}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"artifacts\">artifacts</label>\n              <input type=\"number\" name=\"artifacts\" id=\"artifacts\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArtifacts}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"traps\">traps</label>\n              <input type=\"number\" name=\"traps\" id=\"traps\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"agility\">agility</label>\n              <input type=\"number\" name=\"agility\" id=\"agility\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAgility}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"tactics\">tactics</label>\n              <input type=\"number\" name=\"tactics\" id=\"tactics\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newTactics}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"martial_weapons\">martial weapon</label>\n              <input type=\"number\" name=\"martial_weapons\" id=\"martial_weapons\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newMartialWeapons}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newArmor}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"anatomy\">anatomy</label>\n              <input type=\"number\" name=\"anatomy\" id=\"anatomy\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newAnatomy}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer Class' : 'Create Adventurer Class' } className=\"button create-button\"></input>\n          </form>\n          <p>Points should total 45</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassForm);\n","import React from 'react';\nimport './AdventurerDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass AdventurerDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.deleteAdventurer = this.deleteAdventurer.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.adventurerClasses || !this.props.townBehaviors || !this.props.dungeonBehaviors) {\n      this.props.loadAdventurerDetails();\n    }\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteAdventurerButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Adventurer from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  *deleteAdventurer() {\n    yield deleteRequests.makeRequest('adventurer', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteAdventurer = this.deleteAdventurer();\n    deleteAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    console.log(this.props.form);\n    console.log(this.props.displayId);\n    if (!this.props.adventurers) return '';\n    const allAdventurers = this.props.adventurers;\n    const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n    const {\n      name,\n      strength,\n      speed,\n      cunning,\n      intelligence,\n      constitution,\n      dungeon_behavior_id,\n      town_behavior_id,\n      adventurer_class_id\n    } = thisAdventurer;\n    if (!this.props.dungeonBehaviors || !this.props.townBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === dungeon_behavior_id);\n    const dungeonBehaviorName = thisDungeonBehavior.name;\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === town_behavior_id);\n    const townBehaviorName = thisTownBehavior.name;\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === adventurer_class_id);\n    const adventurerClassname = thisAdventurerClass.name;\n\n    return (\n      <div className=\"AdventurerDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.adventurer, edit: true, targetId: thisAdventurer.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Strength</span>\n            <span className=\"display-text\">{strength}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Speed</span>\n            <span className=\"display-text\">{speed}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Cunning</span>\n            <span className=\"display-text\">{cunning}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Intelligence</span>\n            <span className=\"display-text\">{intelligence}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Constitution</span>\n            <span className=\"display-text\">{constitution}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Dungeon Behavior</span>\n            <span className=\"display-text\">{dungeonBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Town Behavior</span>\n            <span className=\"display-text\">{townBehaviorName}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Class</span>\n            <span className=\"display-text\">{adventurerClassname}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurers: state.adventurers.adventurers,\n    displayId: state.detail.targetId,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerDisplay);","import React from 'react'\nimport './AdventurerForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurers, loadAdventurerDetails } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass AdventurerForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDungeonBehaviorOptions = this.getDungeonBehaviorOptions.bind(this);\n    this.getTownBehaviorOptions = this.getTownBehaviorOptions.bind(this);\n    this.getAdventurerClassOptions = this.getAdventurerClassOptions.bind(this);\n    this.addAdventurer = this.addAdventurer.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getDungeonBehaviorOptions() {\n    const dungeonOptions = this.props.dungeonBehaviors;\n    return dungeonOptions.map(dungeonOption => {\n      return <option value={dungeonOption.id}>{dungeonOption.name}</option>\n    });\n  }\n\n  getTownBehaviorOptions() {\n    const townOptions = this.props.townBehaviors;\n    return townOptions.map(townOption => {\n      return <option value={townOption.id}>{townOption.name}</option>\n    });\n  }\n\n  getAdventurerClassOptions() {\n    const classOptions = this.props.adventurerClasses;\n    return classOptions.map(classOption => {\n      return <option value={classOption.id}>{classOption.name}</option>\n    });\n  }\n\n  componentDidMount() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      this.props.loadAdventurerDetails();\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.adventurer, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addAdventurer(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('adventurer', data);\n    } else {\n      yield postRequest.makeRequest('adventurer', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addAdventurer = this.addAdventurer(data);\n    this.addAdventurer.next().value.then(() => {\n      this.props.fetchAdventurers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.adventurer, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.props.townBehaviors || !this.props.dungeonBehaviors || !this.props.adventurerClasses) {\n      return '';\n    }\n    let newHeading = 'New Adventurer';\n    let newId;\n    let newName = '';\n    let newStrength = 0;\n    let newSpeed = 0;\n    let newCunning = 0;\n    let newIntelligence = 0;\n    let newConstitution = 0;\n    let newDungeonBehavior, newTownBehavior, newAdventurerClass;\n\n    if (this.props.edit) {\n      const allAdventurers = this.props.adventurers;\n      const thisAdventurer = allAdventurers.find(adventurer => adventurer.id === this.props.displayId);\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === thisAdventurer.dungeoBehaviorId);\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === thisAdventurer.townBehaviorId);\n      const allAdventurerClasses = this.props.adventurerClasses;\n      const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === thisAdventurer.adventurerClassId);\n      newId = thisAdventurer.id;\n      newName = thisAdventurer.name;\n      newHeading = newName;\n      newStrength = thisAdventurer.strength;\n      newSpeed = thisAdventurer.speed;\n      newCunning = thisAdventurer.cunning;\n      newIntelligence = thisAdventurer.intelligence;\n      newConstitution = thisAdventurer.constitution;\n      newDungeonBehavior = thisDungeonBehavior;\n      newTownBehavior = thisTownBehavior;\n      newAdventurerClass = thisAdventurerClass;\n    }\n\n    return (\n      <div className=\"AdventurerForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Adventurer Class: {newHeading}</h2>\n          <div className=\"close-adventurer-class-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/adventurer'}\n          className=\"input-fields-area\"\n          id=\"AdventurerPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"adventurer name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"strength\">strength</label>\n              <input type=\"number\" name=\"strength\" id=\"strength\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newStrength}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"speed\">speed</label>\n              <input type=\"number\" name=\"speed\" id=\"speed\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newSpeed}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"cunning\">cunning</label>\n              <input type=\"number\" name=\"cunning\" id=\"cunning\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newCunning}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"intelligence\">intelligence</label>\n              <input type=\"number\" name=\"intelligence\" id=\"intelligence\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newIntelligence}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"constitution\">constitution</label>\n              <input type=\"number\" name=\"constitution\" id=\"constitution\" className=\"input-number\" placeholder=\"#\"\n                min=\"0\" max=\"10\" required defaultValue={newConstitution}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"dungeonBehaviorId\">dungeon behavior</label>\n              <select className=\"dungeon-behavior-select\"\n                name=\"dungeonBehaviorId\"\n                id=\"dungeonBehaviorId\"\n                defaultValue={newDungeonBehavior === undefined ? null : newDungeonBehavior.id}>\n                  {this.getDungeonBehaviorOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"townBehaviorId\">town behavior</label>\n              <select className=\"town-behavior-select\"\n                name=\"townBehaviorId\"\n                id=\"townBehaviorId\"\n                defaultValue={newTownBehavior === undefined ? null : newTownBehavior.id}>\n                  {this.getTownBehaviorOptions()}\n              </select>  \n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"adventurerClassId\">class</label>\n              <select className=\"adventurer-class-select\"\n                name=\"adventurerClassId\"\n                id=\"adventurerClassId\"\n                defaultValue={newAdventurerClass === undefined ? null : newAdventurerClass.id}>\n                  {this.getAdventurerClassOptions()}\n              </select>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Adventurer' : 'Create Adventurer' } className=\"button create-button\"></input>\n        </form>\n        <p>Points should total 15</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    adventurers: state.adventurers.adventurers,\n    townBehaviors: state.behaviors.townBehaviors,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurers: () => dispatch(fetchAdventurers()),\n    loadAdventurerDetails: () => dispatch(loadAdventurerDetails())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerForm);","import React from 'react';\nimport './MonsterDropListDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists, loadItems } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\nimport itemTypes from '../../utilities/itemTypes';\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass MonsterDropListDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDrops = this.getDrops.bind(this);\n    this.deleteDropList = this.deleteDropList.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) {\n      this.props.loadItems();\n    }\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteMonsterDropListButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Monster DropList and Drops from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  getDrops(drops) {\n    if (!drops) return '';\n    return (\n      <div className=\"monster-drops-display subgroup-display\">\n          <span className=\"display-label full-span\">Drops</span>\n          <span className=\"display-label pad half-span\">Item</span>\n          <span className=\"display-label pad half-span\">Drop Chance</span>\n          {drops.map(drop => {\n            let itemName = ''\n            switch (drop.drop_type) {\n              case itemTypes.armor:\n                let allArmor = this.props.armor;\n                let thisArmor = allArmor.find(armor => armor.id === drop.itemId);\n                itemName = thisArmor.item.name;\n                break;\n              case itemTypes.potion:\n                let allPotions = this.props.potions;\n                let thisPotion = allPotions.find(potion => potion.id === drop.itemId);\n                itemName = thisPotion.item.name;\n                break;\n              case itemTypes.weapon:\n                let allWeapons = this.props.weapons;\n                let thisWeapon = allWeapons.find(weapon => weapon.id === drop.itemId);\n                itemName = thisWeapon.item.name;\n                break;\n              default:\n                itemName = 'Unknown Item Type'\n            }\n\n            return (\n              <div className=\"inner-span\">\n                <span className=\"display-text half-span left-half\">\n                  {itemName}\n                </span>\n                <span className=\"display-text half-span right-half\">\n                  {drop.dropChance}\n                </span>\n              </div>\n            )            \n          })}\n        </div>\n    )\n  }\n\n  *deleteDropList(payload) {\n    yield deleteRequests.makeRequestDropList(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'monster_drop_list';\n    payload.id = this.props.displayId;\n    const allDropLists = this.props.monsterDropLists;\n    const thisDropList = allDropLists.find(dropList => dropList.id === this.props.displayId);\n    const monsterDroplistId = thisDropList.monster_drop_list.id;\n    payload.monsterDroplistId = monsterDroplistId;\n    const drops = thisDropList.drops;\n    let dropIds = [];\n    if (drops.length > 0) {\n      drops.forEach(drop => {\n        dropIds.push(drop.id);\n      });\n    }\n    payload.dropIds = dropIds;\n\n    // invoke delete request\n    let deleteDropList = this.deleteDropList(payload);\n    deleteDropList.next().value.then(() => {\n      this.props.fetchMonsterDropLists();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null })\n    })\n  }\n\n  getDisplay() {\n    if (!this.props.monsterDropLists || !this.props.armor || !this.props.potions || !this.props.weapons) return '';\n    const allMonsterDropLists = this.props.monsterDropLists;\n    const thisDropList = allMonsterDropLists.find(monsterDropList => monsterDropList.id === this.props.displayId);\n    const thisMonsterDropList = thisDropList.monster_drop_list;\n    const thisName = thisMonsterDropList.name;\n    const thisGoldMin = thisDropList.gold_min;\n    const thisGoldMax = thisDropList.gold_max;\n    const thisGoldChance = thisDropList.gold_chance;\n    const thisDrops = thisDropList.drops;\n\n    return (\n      <div className=\"MonsterDropListDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{thisName}</h2>\n          <div className=\"MonsterDropListEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster_drop_list, edit: true, targetId: this.props.displayId })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold min</span>\n          <span className=\"display-text\">{thisGoldMin}</span>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold max</span>\n          <span className=\"display-text\">{thisGoldMax}</span>\n        </div>\n        <div className=\"display-group\">\n          <span className=\"display-label\">gold chance</span>\n          <span className=\"display-text\">{thisGoldChance}</span>\n        </div>\n        {this.getDrops(thisDrops)}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterDropLists: state.dropLists.monster,\n    displayId: state.detail.targetId,\n    armor: state.armor.armor,\n    potions: state.potions.potions,\n    weapons: state.weapons.weapons\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    loadItems: () => dispatch(loadItems()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListDisplay);","import React from 'react';\nimport './MonsterDropListForm.css';\n\n//component imports\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterDropLists, loadItems } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport formTypes from '../../utilities/formTypes';\nimport postRequests from '../../utilities/itemPostRequests';\nimport putRequests from '../../utilities/itemPutRequests';\n\nclass MonsterDropListForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getDropListOptions = this.getDropListOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.addFormDrop = this.addFormDrop.bind(this);\n    this.deleteDrop = this.deleteDrop.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getForm = this.getForm.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateMonsterDropList = this.updateMonsterDropList.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) {\n      this.props.loadItems();\n    }\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.monsterDropLists) return;\n    let newName = '';\n    let newGoldMin = 0;\n    let newGoldMax = 0;\n    let newGoldChance = 0;\n    let newDrops = [];\n    if (this.props.edit) {\n      const allDropLists = this.props.monsterDropLists;\n      const thisDropList = allDropLists.find(dropList => dropList.id === this.props.displayId);\n      const thisMonsterDropList = thisDropList.monster_drop_list;\n      newName = thisMonsterDropList.name;\n      newGoldMin = thisDropList.gold_min;\n      newGoldMax = thisDropList.gold_max;\n      newGoldChance = thisDropList.gold_chance;\n      newDrops = thisDropList.drops;\n    }\n\n    let initialState = {};\n    initialState['name'] = newName;\n    initialState['gold_min'] = newGoldMin;\n    initialState['gold_max'] = newGoldMax;\n    initialState['gold_chance'] = newGoldChance;\n    let presentIds = [];\n    if (newDrops.length > 0) {\n      for (const drop of newDrops) {\n        initialState[`drop-${drop.id}-item-id`] = `{ \"id\":\"${drop.itemId}\", \"type\":\"${drop.drop_type}\"}`;\n        initialState[`drop-${drop.id}-drop-chance`] = drop.dropChance;\n        presentIds.push(drop.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = newDrops.length;\n    initialState.deletedIds = [];\n    initialState.newDropIndex = 0;\n    initialState.newDropKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  getDropListOptions() {\n    if (!this.props.armor || !this.props.potions || !this.props.weapons) return '';\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      let propName = itemType;\n      if (itemType !== itemTypes.armor) {\n        propName += 's';\n      }\n      const allItemsOfType = this.props[`${propName}`];\n      return (\n        <optgroup label={itemType}>\n          {allItemsOfType.map(item => {\n            return <option value={`{ \"id\":\"${item.id}\", \"type\":\"${itemType}\"}`}>{item.item.name}</option>\n          })}\n        </optgroup>\n      )\n    });\n  }\n\n  addFormDrop() {\n    // limit drops to 5\n    const totalCount = this.state.newDropKeys.length;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newDropIndex = this.state.newDropIndex;\n    updatedState[`new-drop-${newDropIndex}-item-id`] = `{ \"id\":\"${0}\", \"type\":\"${itemTypes.potion}\"}`;\n    updatedState[`new-drop-${newDropIndex}-drop-chance`] = 0;\n    let newDropKeys = this.state.newDropKeys;\n    newDropKeys.push(newDropIndex);\n    updatedState.newDropKeys = newDropKeys;\n    newDropIndex += 1;\n    updatedState.newDropIndex = newDropIndex;\n    this.setState(updatedState);\n  }\n\n  deleteDrop(payload) {\n    const { existing, dropId } = payload;\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(dropId);\n      newCount -=1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newDropKeys = this.state.newDropKeys;\n      const dropIndex = newDropKeys.indexOf(dropId);\n      if (dropIndex < 0 || (dropIndex !== 0 && !dropIndex)) return;\n      newDropKeys.splice(dropIndex, 1);\n      updatedState.newDropKeys = newDropKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster_drop_list, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value;\n    this.setState(stateUpdate);\n  }\n\n  *updateMonsterDropList(data) {\n    if (this.props.edit) {\n      yield putRequests.makeRequest('monster_drop_list', data);\n    } else {\n      yield postRequests.makeRequest('monster_drop_list', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateMonsterDropList = this.updateMonsterDropList(data);\n    updateMonsterDropList.next().value.then(() => {\n      this.props.fetchMonsterDropLists();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.monster_drop_list, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n\n    let drops = [];\n    let newMonsterDroplistId = null;\n    if (this.props.edit) {\n      const allDropsLists = this.props.monsterDropLists;\n      const thisDropList = allDropsLists.find(dropList => dropList.id === this.props.displayId);\n      drops = thisDropList.drops;\n      newMonsterDroplistId = thisDropList.monster_drop_list.id\n    }\n\n    let newHeading = 'New Monster Drop List';\n    let newId = null;\n    \n    if (this.props.edit) {\n      newHeading = this.state.name;\n      newId = this.props.displayId;\n\n    }\n\n    const newDropKeys = this.state.newDropKeys;\n\n    return (\n      <div className=\"MonsterDropListForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-monster-droplist-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster_drop_list'}\n          className=\"input-fields-area\"\n          id=\"MonsterDropListPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"monster droplist name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div> \n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_min\">gold min</label>\n              <input type=\"number\" name=\"gold_min\" id=\"gold_min\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_min}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_max\">gold max</label>\n              <input type=\"number\" name=\"gold_max\" id=\"gold_max\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_max}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"gold_chance\">gold chance</label>\n              <input type=\"number\" name=\"gold_chance\" id=\"gold_chance\" className=\"input-number\" placeholder=\"#\"\n                step=\"1\" min=\"0\" max=\"12000\" required onChange={this.handleChange} value={this.state.gold_chance}></input>\n            </div>\n            <div className=\"drops-group form-subgroup\">\n              <span className=\"item-label form-full-span\">Drops</span>\n              <span className=\"item-label form-pad form-half-span\">Item</span>\n              <span className=\"item-label form-pad form-half-span\">Drop Chance</span>\n              {drops.length <= 0 ? '' : drops.map(drop => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(drop.id)) {\n                  return '';\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"drop-select\"\n                        name={`drop-${drop.id}-item-id`}\n                        id={`drop-${drop.id}-item-id`}\n                        onChange={this.handleChange}\n                        value={this.state[`drop-${drop.id}-item-id`]}>\n                          {this.getDropListOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\"\n                        type=\"number\"\n                        name={`drop-${drop.id}-drop-chance`}\n                        id={`drop-${drop.id}-drop-chance`}\n                        onChange={this.handleChange}\n                        value={this.state[`drop-${drop.id}-drop-chance`]}>\n                      </input>\n                      <span className=\"dropDelete\"\n                        onClick={() => this.deleteDrop({ existing: true, dropId: drop.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n              {newDropKeys.length <= 0 ? '' : newDropKeys.map(index => {\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"drop-select\"\n                        name={`new-drop-${index}-item-id`}\n                        id={`new-drop-${index}-item-id`}\n                        onChange={this.handleChange}\n                        value={this.state[`new-drop-${index}-item-id`]}>\n                          {this.getDropListOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\"\n                        type=\"number\"\n                        name={`new-drop-${index}-drop-chance`}\n                        id={`new-drop-${index}-drop-chance`}\n                        onChange={this.handleChange}\n                        value={this.state[`new-drop-${index}-drop-chance`]}>\n                      </input>\n                      <span className=\"dropDelete\"\n                        onClick={() => this.deleteDrop({ existing: false, dropId: index })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n              <div className=\"dropAdd form-full-span form-center-content\"\n                onClick={this.addFormDrop}\n              >\n                <AddOfferingButton />\n              </div>\n              <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n              <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n              <input type=\"hidden\" name=\"newIndexes\" value={this.state.newDropKeys} />\n              {/* <input type=\"hidden\" name=\"newDropsCount\" value={this.state.newD} */}\n              <input type=\"hidden\" name=\"id\" value={newId} />\n              <input type=\"hidden\" name=\"monsterDroplistId\" value={newMonsterDroplistId} />\n              <input type=\"submit\" value={this.props.edit ? 'Update Monster Droplist' : 'Create Monster Droplist'} className=\"button create-button\"></input>\n            </div>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    displayId: state.detail.targetId,\n    monsterDropLists: state.dropLists.monster,\n    armor: state.armor.armor,\n    potions: state.potions.potions,\n    weapons: state.weapons.weapons\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterDropLists: () => dispatch(fetchMonsterDropLists()),\n    loadItems: () => dispatch(loadItems())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterDropListForm);","import React from 'react';\nimport './MonsterBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\nclass MonsterBehaviorDisplay extends DisplayStatic {\n  getDeleteButton() {\n    return (\n      <div className=\"DeleteMonsterBehaviorButton\">\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  getDisplay() {\n    const allMonsterBehaviors = this.props.monsterBehaviors;\n    const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === this.props.displayId);\n    const {\n      name,\n      confront_weakened_adventurer,\n      special_move,\n      defend,\n      heal,\n      block_flee,\n      migrate\n    } = thisMonsterBehavior;\n\n    return (\n      <div className=\"MonsterBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"MonsterBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: formTypes.monster_behavior, edit: true, targetId: thisMonsterBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">confront weakened adventuer</span>\n              <span className=\"display-text\">{confront_weakened_adventurer}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">special move</span>\n              <span className=\"display-text\">{special_move}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">defend</span>\n              <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">heal</span>\n              <span className=\"display-text\">{heal}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">block flee</span>\n              <span className=\"display-text\">{block_flee}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">migrate</span>\n              <span className=\"display-text\">{migrate}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorDisplay);","import React from 'react';\nimport './MonsterBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchMonsterBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport formTypes from '../../utilities/formTypes';\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass MonsterBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addMonsterBehavior = this.addMonsterBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: formTypes.monster_behavior, targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addMonsterBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('monster_behavior', data);\n    } else {\n      yield postRequest.makeRequest('monster_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addMonsterBehavior = this.addMonsterBehavior(data);\n    this.addMonsterBehavior.next().value.then(() => {\n      this.props.fetchMonsterBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: formTypes.monster_behavior, targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Monster Behavior';\n    let newName = '';\n    let newId;\n    let newConfrontWeakenedAdventurer = 0;\n    let newSpecialMove = 0;\n    let newDefend = 0;\n    let newHeal = 0;\n    let newBlockFlee = 0;\n    let newMigrate = 0;\n\n    if (this.props.edit) {\n      const allMonsterBehaviors = this.props.monsterBehaviors;\n      const thisMonsterBehavior = allMonsterBehaviors.find(monsterBehavior => monsterBehavior.id === this.props.displayId);\n      newName = thisMonsterBehavior.name;\n      newHeading = newName;\n      newId = thisMonsterBehavior.id;\n      newConfrontWeakenedAdventurer = thisMonsterBehavior.confront_weakened_adventurer;\n      newSpecialMove = thisMonsterBehavior.special_move;\n      newDefend = thisMonsterBehavior.defend;\n      newHeal = thisMonsterBehavior.heal;\n      newBlockFlee = thisMonsterBehavior.block_flee;\n      newMigrate = thisMonsterBehavior.migrate;\n    }\n    return (\n      <div className=\"MonsterBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Monster Behavior: {newHeading}</h2>\n          <div className=\"close-monster-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/monster_behaviors'}\n          className=\"input-fields-area\"\n          id=\"MonsterBehavior\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"confront_weakened_adventurer\">confront weakened adventurer</label>\n              <input type=\"number\" name=\"confront_weakened_adventurer\" id=\"confront_weakened_adventurer\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConfrontWeakenedAdventurer}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"special_move\">special move</label>\n              <input type=\"number\" name=\"special_move\" id=\"special_move\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSpecialMove}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"heal\">heal</label>\n              <input type=\"number\" name=\"heal\" id=\"heal\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newHeal}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"block_flee\">block flee</label>\n              <input type=\"number\" name=\"block_flee\" id=\"block_flee\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBlockFlee}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"migrate\">migrate</label>\n              <input type=\"number\" name=\"migrate\" id=\"migrate\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newMigrate}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <div className=\"supplier-submit-container\">\n            <input type=\"submit\" value={this.props.edit ? 'Update Monster Behavior' : 'Create Monster Behavior' } className=\"button create-button\"></input>\n            </div>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    monsterBehaviors: state.monsterBehaviors.behaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchMonsterBehaviors: () => dispatch(fetchMonsterBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonsterBehaviorForm);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\n// item components\nimport PotionForm from '../../Components/PotionForm/PotionForm';\nimport PotionDisplay from '../../Components/PotionDisplay/PotionDisplay';\nimport WeaponForm from '../../Components/WeaponForm/WeaponForm';\nimport WeaponDisplay from '../../Components/WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../../Components/ArmorForm/ArmorForm';\nimport ArmorDisplay from '../../Components/ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../../Components/SupplierForm/SupplierForm';\nimport SupplierDisplay from '../../Components/SupplierDisplay/SupplierDisplay';\n// npc components\nimport TownBehaviorDisplay from '../../Components/TownBehaviorDisplay/TownBehaviorDisplay';\nimport TownBehaviorForm from '../../Components/TownBehaviorForm/TownBehaviorForm';\nimport DungeonBehaviorDisplay from '../../Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay';\nimport DungeonBehaviorForm from '../../Components/DungeonBehaviorForm/DungeonBehaviorForm';\nimport AdventurerClassDisplay from '../../Components/AdventurerClassDisplay/AdventurerClassDisplay';\nimport AdventurerClassForm from '../../Components/AdventurerClassForm/AdventurerClassForm';\nimport AdventurerDisplay from '../../Components/AdventurerDisplay/AdventurerDisplay';\nimport AdventurerForm from '../../Components/AdventurerForm/AdventurerForm';\n// monster components\nimport MonsterDropListDisplay from '../../Components/MonsterDropListDisplay/MonsterDropListDisplay';\nimport MonsterDropListForm from '../../Components/MonsterDropListForm/MonsterDropListForm';\nimport MonsterBehaviorDisplay from '../../Components/MonsterBehaviorDisplay/MonsterBehaviorDisplay'\nimport MonsterBehaviorForm from '../../Components/MonsterBehaviorForm/MonsterBehaviorForm';\n\n// js utility imports\nimport formTypes from '../../utilities/formTypes';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.getPotionDetail = this.getPotionDetail.bind(this);\n    this.getWeaponDetail = this.getWeaponDetail.bind(this);\n    this.getArmorDetail = this.getArmorDetail.bind(this);\n    this.getSupplierDetail = this.getSupplierDetail.bind(this);\n    this.getTownBehaviorDetail = this.getTownBehaviorDetail.bind(this);\n    this.getDungeonBehaviorDetail = this.getDungeonBehaviorDetail.bind(this);\n    this.getAdventurerClassDetail = this.getAdventurerClassDetail.bind(this);\n    this.getAdventurerDetail = this.getAdventurerDetail.bind(this);\n    this.getMonsterDropListDetail = this.getMonsterDropListDetail.bind(this);\n    this.getMonsterBehaviorDetail = this.getMonsterBehaviorDetail.bind(this);\n  }\n\n  getPotionDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <PotionForm />\n    } else {\n      return <PotionDisplay />\n    }\n  }\n\n  getWeaponDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <WeaponForm />\n    } else {\n      return <WeaponDisplay />\n    }\n  }\n\n  getArmorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <ArmorForm />\n    } else {\n      return <ArmorDisplay />\n    }\n  }\n\n  getSupplierDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <SupplierForm />\n    } else {\n      return <SupplierDisplay />\n    }\n  }\n\n  getTownBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <TownBehaviorForm />\n    } else {\n      return <TownBehaviorDisplay />\n    }\n  }\n\n  getDungeonBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <DungeonBehaviorForm />;\n    } else {\n      return <DungeonBehaviorDisplay />\n    }\n  }\n\n  getAdventurerClassDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <AdventurerClassForm />\n    } else {\n      return <AdventurerClassDisplay />\n    }\n  }\n\n  getAdventurerDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <AdventurerForm />;\n    } else {\n      return <AdventurerDisplay />;\n    }\n  }\n\n  getMonsterDropListDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <MonsterDropListForm />;\n    } else {\n      return <MonsterDropListDisplay />;\n    }\n  }\n\n  getMonsterBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <MonsterBehaviorForm />;\n    } else {\n      return <MonsterBehaviorDisplay />;\n    }\n  }\n\n  getDetail() {\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n    if (this.props.refresh) {\n      this.props.setRefresh(false);\n      return '';\n    }\n\n    switch(this.props.formType) {\n      case formTypes.potion:\n        return this.getPotionDetail();\n      case formTypes.weapon:\n        return this.getWeaponDetail();\n      case formTypes.armor:\n        return this.getArmorDetail();\n      case formTypes.supplier:\n        return this.getSupplierDetail();\n      case formTypes.town_behavior:\n        return this.getTownBehaviorDetail();\n      case formTypes.dungeon_behavior:\n        return this.getDungeonBehaviorDetail();\n      case formTypes.adventurer_class:\n        return this.getAdventurerClassDetail();\n      case formTypes.adventurer:\n        return this.getAdventurerDetail();\n      case formTypes.monster_drop_list:\n        return this.getMonsterDropListDetail();\n      case formTypes.monster_behavior:\n        return this.getMonsterBehaviorDetail();\n      default:\n        return (<div className=\"BlankForm\">detail type unknown</div>)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit,\n    refresh: state.detail.refresh\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../../Containers/ObjectListColumn/ObjectListColumn';\nimport DetailView from '../../Containers/DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false,\n  refresh: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    case SET_DETAIL_REFRESH:\n      return {\n        ...state,\n        refresh: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_TOWN_BEHAVIORS, SET_DUNGEON_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  townBehaviors: null,\n  dungeonBehaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SET_TOWN_BEHAVIORS:\n      return {\n        ...state,\n        townBehaviors: action.payload\n      }\n    case SET_DUNGEON_BEHAVIORS:\n      return {\n        ...state,\n        dungeonBehaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURER_CLASSES } from '../actions/types';\n\nconst initialState = {\n  classes: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURER_CLASSES:\n      return {\n        ...state,\n        classes: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURERS } from '../actions/types';\n\nconst initialState = {\n  adventurers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURERS:\n      return {\n        ...state,\n        adventurers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_DROP_LISTS } from '../actions/types';\n\nconst initialState = {\n  monster: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_DROP_LISTS:\n      return {\n        ...state,\n        monster: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_MONSTER_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  behaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_MONSTER_BEHAVIORS:\n      return {\n        ...state,\n        behaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\nimport behaviorsReducer from './behaviorsReducer';\nimport adventurerClassReducer from './adventurerClassReducer';\nimport adventurerReducer from './adventurerReducer';\nimport dropListReducer from './dropListReducer';\nimport monsterBehaviorReducer from './monsterBehaviorReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer,\n  behaviors: behaviorsReducer,\n  adventurerClasses: adventurerClassReducer,\n  adventurers: adventurerReducer,\n  dropLists: dropListReducer,\n  monsterBehaviors: monsterBehaviorReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}