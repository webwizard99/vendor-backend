{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","Components/PotionsList/PotionsList.jsx","actions/types.js","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","actions/index.js","Components/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","Components/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","PotionsList","setDisplayForm","form","edit","targetId","potions","newPotions","map","potion","potionClass","id","item","name","detail","dispatch","payload","WeaponsList","weapons","newWeapons","weapon","weaponClass","ArmorList","armor","newArmor","armorClass","target","ItemList","fetchUser","a","axios","get","res","data","fetchPotions","fetchWeapons","fetchArmor","ObjectListColumn","shouldComponentUpdate","componentDidMount","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","getMethod","handleCloseButton","CloseFormButton","PotionForm","potionType","value","e","preventDefault","displayId","newHeading","newName","newValue","newDetails","newPotionType","newLevel","newRarity","newId","newItemId","thisPotion","find","details","rarity","level","itemId","action","method","htmlFor","placeholder","maxLength","defaultValue","min","max","getPotionOptions","class","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","makeRequest","deleteType","deleteId","fetch","deleteRes","PotionDisplay","window","dialogRef","setDialog","text","console","log","WeaponForm","newDamage","thisWeapon","damage","WeaponDisplay","ArmorDisplay","DetailView","getDetail","getPotionDetail","getWeaponDetail","getArmorDetail","formType","DialogBox","handleNo","clicked","classList","contains","ref","yesCallback","noCallback","App","getDialog","initialState","combineReducers","newTargetId","newEdit","newForm","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a08c4f34.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: null })}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === \"potion\" && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: null })}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === \"weapon\" && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" >\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === 'armor' && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'armor', edit: false, target: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import axios from 'axios';\nimport { FETCH_USER, SET_POTIONS, SET_WEAPONS, SET_ARMOR } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../ItemList/ItemList';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.fetchPotions();\n    this.props.fetchWeapons();\n    this.props.fetchArmor();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.getMethod = this.getMethod.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  getMethod() {\n    return ''\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass PotionForm extends DisplayForm {\n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newPotionType = '';\n    let newLevel = '';\n    let newRarity = 1000;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"hidden\" name=\"_METHOD\" value={this.getMethod()}/>\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } class=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deletButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  handleYes() {\n    console.log('Delete handler in potion display component reached!');\n    deleteRequests.makeRequest('potion', this.props.displayId);\n    this.props.setDialog({ active: false, text: ''});\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: 'potion', edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\nclass WeaponForm extends DisplayForm {\n  getMethod() {\n    if (!this.props.edit) {\n      return '_post'\n    } else {\n      return '_put'\n    }\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"hidden\" name=\"_METHOD\" value={this.getMethod()}/>\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } class=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  handleYes() {\n    deleteRequests.makeRequest('weapon', this.props.displayId);\n    this.props.setDialog({ active: false, text: '' });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\n// import EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass ArmorDisplay extends DisplayStatic {\n  getDeleteButton() {\n    return (\n      <div className=\"DeleteArmorButton\"\n      >\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  getDisplay() {\n    return (\n      <div className=\"ArmorDisplay\">\n        ArmorDisplay\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nexport default connect(mapStateToProps)(ArmorDisplay);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\nimport PotionForm from '../PotionForm/PotionForm';\nimport PotionDisplay from '../PotionDisplay/PotionDisplay';\nimport WeaponForm from '../WeaponForm/WeaponForm';\nimport WeaponDisplay from '../WeaponDisplay/WeaponDisplay';\nimport ArmorDisplay from '../ArmorDisplay/ArmorDisplay';\n\n// redux imports\nimport { connect } from 'react-redux';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.getPotionDetail = this.getPotionDetail.bind(this);\n    this.getWeaponDetail = this.getWeaponDetail.bind(this);\n    this.getArmorDetail = this.getArmorDetail.bind(this);\n  }\n\n  getPotionDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <PotionForm />\n    } else {\n      return <PotionDisplay />\n    }\n  }\n\n  getWeaponDetail() {\n    if (this.props.targetId == null || this.props.edit) {\n      return <WeaponForm />\n    } else {\n      return <WeaponDisplay />\n    }\n  }\n\n  getArmorDetail() {\n    if (this.props.targetId == null || this.props.edit) {\n      return ''\n    } else {\n      return <ArmorDisplay />\n    }\n  }\n\n  getDetail() {\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n\n    switch(this.props.formType) {\n      case 'potion':\n        return this.getPotionDetail();\n      case 'weapon':\n        return this.getWeaponDetail();\n      case 'armor':\n        return this.getArmorDetail();\n      default:\n        return (<div className=\"BlankForm\">detail type unknown</div>)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit\n  }\n}\n\nexport default connect(mapStateToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../ObjectListColumn/ObjectListColumn';\nimport DetailView from '../DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      // if (!newTargetId && newTargetId !== 0) {\n      //   newTargetId = state.targetId;\n      // }\n      // if (!newEdit) {\n      //   newEdit = state.edit;\n      // }\n      // if (!newForm) {\n      //   newForm = state.form;\n      // }\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}