{"version":3,"sources":["Components/MenuBar/MenuBar.jsx","Components/ExpandableList/ExpandableList.jsx","Components/NewButton/NewButton.jsx","actions/types.js","actions/index.js","Components/PotionsList/PotionsList.jsx","Components/WeaponsList/WeaponsList.jsx","Components/ArmorList/ArmorList.jsx","Components/ItemList/ItemList.jsx","Components/SupplierList/SupplierList.jsx","Components/TownBehaviorList/TownBehaviorList.jsx","Components/DungeonBehaviorList/DungeonBehaviorList.jsx","Components/BehaviorList/BehaviorList.jsx","Components/AdventurerClassList/AdventurerClassList.jsx","Components/AdventurerList/AdventurerList.jsx","Components/NPCList/NPCList.jsx","Containers/ObjectListColumn/ObjectListColumn.jsx","utilities/potionTypes.js","Components/DisplayForm/DisplayForm.jsx","Components/CloseFormButton/CloseFormButton.jsx","utilities/itemPostRequests.js","utilities/itemPutRequests.js","Components/PotionForm/PotionForm.jsx","Components/DisplayStatic/DisplayStatic.jsx","Components/EditButton/EditButton.jsx","Components/DeleteButton/DeleteButton.jsx","utilities/deleteRequests.js","Components/PotionDisplay/PotionDisplay.jsx","Components/WeaponForm/WeaponForm.jsx","Components/WeaponDisplay/WeaponDisplay.jsx","Components/ArmorForm/ArmorForm.jsx","Components/ArmorDisplay/ArmorDisplay.jsx","Components/DeleteOfferingButton/DeleteOfferingButton.jsx","Components/AddOfferingButton/AddOfferingButton.jsx","utilities/itemTypes.js","Components/SupplierForm/SupplierForm.jsx","Components/SupplierDisplay/SupplierDisplay.jsx","Components/TownBehaviorDisplay/TownBehaviorDisplay.jsx","Components/TownBehaviorForm/TownBehaviorForm.jsx","Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay.jsx","Components/DungeonBehaviorForm/DungeonBehaviorForm.jsx","Components/AdventurerClassDisplay/AdventurerClassDisplay.jsx","Containers/DetailView/DetailView.jsx","Components/DialogBox/DialogBox.jsx","Components/App/App.jsx","reducers/potionsReducer.js","reducers/detailReducer.js","reducers/dialogReducer.js","reducers/weaponsReducer.js","reducers/armorReducer.js","reducers/supplierReducer.js","reducers/behaviorsReducer.js","reducers/adventurerClassReducer.js","reducers/index.js","reducers/authReducer.js","serviceWorker.js","index.js"],"names":["MenuBar","props","renderLogin","bind","renderGameLink","this","auth","href","type","key","className","React","Component","connect","state","ExpandableList","expanded","setExpansion","currentState","setState","onClick","getTitle","getNewButton","displayContents","NewButton","SET_DETAIL_FORM","fetchUser","dispatch","a","axios","get","res","payload","data","fetchPotions","fetchWeapons","fetchArmor","fetchSuppliers","fetchTownBehaviors","fetchDungeonBehaviors","fetchAdventurerClasses","PotionsList","componentDidMount","handleNew","setRefresh","setDisplayForm","form","edit","targetId","potions","newPotions","map","potion","potionClass","id","item","name","detail","value","WeaponsList","weapons","newWeapons","weapon","weaponClass","ArmorList","armor","newArmor","armorClass","ItemList","SupplierList","suppliers","newSuppliers","supplier","supplierClass","TownBehaviorList","townBehaviors","newTownBehaviors","townBehavior","townBehaviorClass","behaviors","DungeonBehaviorList","dungeonBehaviors","newDungeonBehaviors","dungeonBehavior","dungeonBehaviorClass","BehaviorList","AdventurerClassList","adventurerClasses","newAdventurerClasses","adventurerClass","adventurerClassClass","classes","AdventurerList","NPCList","ObjectListColumn","shouldComponentUpdate","nextProps","nextState","dialogActive","dialog","active","actions","potionTypes","DisplayForm","getForm","handleCloseButton","CloseFormButton","itemPostRequests","makeRequest","postRoute","postBody","subBody","JSON","stringify","postRes","fetch","method","headers","body","itemPutRequests","putRoute","putBody","putRes","PotionForm","addPotion","handleSubmit","potionType","e","preventDefault","displayId","itemPutRequest","itemPostRequest","FormData","target","next","then","newHeading","newName","newValue","newDetails","newRarity","newPotionType","newLevel","newId","newItemId","refresh","thisPotion","find","details","rarity","level","itemId","action","onSubmit","htmlFor","required","placeholder","maxLength","defaultValue","min","max","getPotionOptions","DisplayStatic","getDisplay","getDeleteButton","handleYes","EditButton","DeleteButton","deleteRequests","deleteType","deleteId","response","json","deleteRes","makeRequestSupplier","route","offeringIds","PotionDisplay","deletePotion","window","dialogRef","setDialog","text","WeaponForm","addWeapon","newDamage","thisWeapon","damage","WeaponDisplay","deleteWeapon","ArmorForm","addArmor","thisArmor","ArmorDisplay","deleteArmor","DeleteOfferingButton","AddOfferingButton","itemTypes","SupplierForm","initialized","initializeFields","getOfferingOptions","handleChange","addFormOffering","deleteOffering","updateSupplier","offerings","thisSupplier","initialState","presentIds","length","offering","markup","push","existingIdCount","deletedIds","newOfferingIndex","newOfferingKeys","Object","values","itemType","updatedState","existing","offeringId","newDeleted","newCount","offeringIndex","indexOf","splice","stateUpdate","getAttribute","onChange","deletedMap","includes","index","newOfferingsCount","SupplierDisplay","deleteSupplier","forEach","refOffering","TownBehaviorDisplay","deleteTownBehavior","thisTownBehavior","buy_potion","sell_potion","upgrade_potion","buy_weapon","sell_weapon","upgrade_weapon","buy_armor","sell_armor","upgrade_armor","wealth","enter_dungeon","use_tavern","retire","emigrate","garrison_wall","TownBehaviorForm","addTownBehavior","putRequest","postRequest","newBuyPotion","newSellPotion","newUpgradePotion","newBuyWeapon","newSellWeapon","newUpgradeWeapon","newBuyArmor","newSellArmor","newUpgradeArmor","newWealth","newEnterDungeon","newUseTavern","newRetire","newEmigrate","newGarisonWall","step","DungeonBehaviorDisplay","deleteDungeonBehavior","thisDungeonBehavior","advance_tile","conserve_health","use_potion","rest","return_to_town","check_for_traps","disarm_trap","avoid_trap","search_for_treasure","fight_monster","flee_encounter","defend","attack","check_monster_weakness","explore_level","advance_next_level","fill_inventory","upgrade_inventory","fight_boss_monster","prefer_weaker_monster","try_for_level","DungeonBehaviorForm","addDungeonBehavior","newAdvanceTile","newConserveHealth","newUsePotion","newRest","newReturnToTown","newCheckForTraps","newDisarmTrap","newAvoidTrap","newSearchForTreasure","newFightMonster","newFleeEncounter","newDefend","newAttack","newCheckMonsterWeakness","newExploreLevel","newAdvanceNextLevel","newFillInventory","newUpgradeInventory","newFightBossMonster","newPreferWeakerMonster","newTryForLevel","AdventurerClassDisplay","thisAdventurerClass","bargaining","perception","artifacts","traps","agility","tactics","martial_weapons","anatomy","DetailView","getDetail","getPotionDetail","getWeaponDetail","getArmorDetail","getSupplierDetail","getTownBehaviorDetail","getDungeonBehaviorDetail","getAdventurerClassDetail","formType","DialogBox","handleNo","clicked","classList","contains","ref","yesCallback","noCallback","App","getDialog","combineReducers","newTargetId","newEdit","newForm","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.53de5b50.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuBar.css';\n\nimport { connect } from 'react-redux';\n\nclass MenuBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderGameLink = this.renderGameLink.bind(this);\n  }\n\n  renderLogin() {\n    \n    switch(this.props.auth) {\n      case null:\n        return;\n      case false:\n        return (\n          <li><a href=\"/auth/facebook\">Login with Facebook</a></li>\n        );\n      default:\n        return (\n          <li><a href=\"/api/logout\">Logout</a></li>\n        );\n    }\n  }\n\n  renderGameLink() {\n    switch(this.props.auth) {\n      case null:\n        return false;\n      case false:\n        return false;\n      default:\n        const userType = this.props.auth.type;\n        if (userType === 'owner') {\n          return (\n            <li key=\"gameLink\"><a className=\"GameLink\" href=\"/\">game</a></li>\n          )\n        } else {\n          return false;\n        }\n    }\n\n  }\n  \n  render() {\n    return (\n      <div className=\"MenuBar\">\n        <span className=\"MenuTitle\"><a href=\"/\">VENDOR</a></span>\n        <ul className=\"LoginContainer\">\n          {this.renderGameLink()}\n          {this.renderLogin()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(MenuBar);","import React from 'react';\nimport './ExpandableList.css';\n\nclass ExpandableList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false\n    }\n\n    this.setExpansion = this.setExpansion.bind(this);\n  }\n\n  getNewButton() {\n    return ''\n  }\n\n  getTitle() {\n    return 'Item'\n  }\n\n  setExpansion() {\n    const currentState = this.state.expanded;\n    this.setState({\n      expanded: !currentState\n    });\n  }\n\n  displayContents() {\n    return (\n      <div>\n        <p>contents</p>\n        <p>contents</p>\n        <p>contents</p>\n      </div>\n    )\n  }\n  \n  render() {\n    return (\n      <div className=\"ExpandableList\">\n        <div className=\"TitleBar\">\n          <span className=\"expansionBtn\" onClick={this.setExpansion}>\n            {this.state.expanded ? '-' : '+'}\n          </span>\n          <span className=\"ExpanderTitle\">{this.getTitle()}</span>\n          {this.getNewButton()}\n        </div>\n        {this.state.expanded ? this.displayContents() : ''}\n      </div>\n    )\n  }\n}\n\nexport default ExpandableList;","import React from 'react';\nimport './NewButton.css';\n\nclass NewButton extends React.Component {\n  render() {\n    return (\n      <div className=\"NewButton\">\n        <div className=\"buttonIcon\">+</div>\n      </div>\n    )\n  }\n}\n\nexport default NewButton;","export const FETCH_USER = \"FETCH_USER\";\nexport const SET_POTIONS = \"SET_POTIONS\";\nexport const SET_DETAIL_FORM = \"SET_DETAIL_FORM\";\nexport const SET_DIALOG = \"SET_DIALOG\";\nexport const SET_WEAPONS = \"SET_WEAPONS\";\nexport const SET_ARMOR = \"SET_ARMOR\";\nexport const SET_SUPPLIERS = \"SET_SUPPLIERS\";\nexport const SET_DETAIL_REFRESH = \"SET_DETAIL_REFRESH\";\nexport const SET_TOWN_BEHAVIORS = \"SET_TOWN_BEHAVIORS\";\nexport const SET_DUNGEON_BEHAVIORS = \"SET_DUNGEON_BEHAVIORS\";\nexport const SET_ADVENTURER_CLASSES = \"SET_ADVENTURER_CLASSES\";","import axios from 'axios';\nimport { FETCH_USER,\n  SET_POTIONS, \n  SET_WEAPONS, \n  SET_ARMOR, \n  SET_SUPPLIERS,\n  SET_TOWN_BEHAVIORS,\n  SET_DUNGEON_BEHAVIORS,\n  SET_ADVENTURER_CLASSES } from './types';\n\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: res.data });\n}\n\nexport const fetchPotions = () => async dispatch => {\n  const res = await axios.get('/potions');\n  dispatch({ type: SET_POTIONS, payload: res.data });\n}\n\nexport const fetchWeapons = () => async dispatch => {\n  const res = await axios.get('/weapons');\n  dispatch({ type: SET_WEAPONS, payload: res.data });\n}\n\nexport const fetchArmor = () => async dispatch => {\n  const res = await axios.get('/armor');\n  dispatch({ type: SET_ARMOR, payload: res.data });\n}\n\nexport const fetchSuppliers = () => async dispatch => {\n  const res = await axios.get('/suppliers');\n  dispatch({ type: SET_SUPPLIERS, payload: res.data });\n}\n\nexport const fetchTownBehaviors = () => async dispatch => {\n  const res = await axios.get('/town_behaviors');\n  dispatch({ type: SET_TOWN_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchDungeonBehaviors = () => async dispatch => {\n  const res = await axios.get('/dungeon_behaviors');\n  dispatch({ type: SET_DUNGEON_BEHAVIORS, payload: res.data });\n}\n\nexport const fetchAdventurerClasses = () => async dispatch => {\n  const res = await axios.get('/adventurer_classes');\n  dispatch({ type: SET_ADVENTURER_CLASSES, payload: res.data });\n}","import React from 'react';\nimport './PotionsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect  } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass PotionsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPotions();\n  }\n\n  getTitle() {\n    return 'Potions'\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'potion', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewPotionButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.potions) {\n      return '';\n    } else {\n      const newPotions = this.props.potions;\n      return (\n        <div className=\"detailList\">\n          { newPotions.map(potion => {\n            let potionClass = \"ListDetail\";\n            if (this.props.form === \"potion\" && this.props.targetId === potion.id) {\n              potionClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={potionClass} \n                onClick={() => this.props.setDisplayForm({ form: 'potion', edit: false, targetId: potion.id })}>{potion.item.name}</span>\n              </p>\n            )\n            })}\n        </div>);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionsList);","import React from 'react';\nimport './WeaponsList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass WeaponsList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchWeapons();\n  }\n\n  getTitle() {\n    return 'Weapons';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: null });\n  }\n  \n  getNewButton() {\n    return (\n      <div className=\"NewWeaponButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.weapons) {\n      return '';\n    } else {\n      const newWeapons = this.props.weapons;\n      return (\n        <div className=\"detailList\">\n          { newWeapons.map(weapon => {\n            let weaponClass = \"ListDetail\";\n            if (this.props.form === \"weapon\" && this.props.targetId === weapon.id) {\n              weaponClass += \" activeItem\"\n            }\n            return (\n              <p>\n                <span className={weaponClass}\n                onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: false, targetId: weapon.id })}\n                >{weapon.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponsList);","import React from 'react';\nimport './ArmorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass ArmorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchArmor();\n  }\n\n  getTitle() {\n    return 'Armor';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'armor', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewArmorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.armor) {\n      return '';\n    } else {\n      const newArmor = this.props.armor;\n      return (\n        <div className=\"detailList\">\n          { newArmor.map(armor => {\n            let armorClass = \"ListDetail\";\n            if (this.props.form === 'armor' && this.props.targetId === armor.id) {\n              armorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={armorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'armor', edit: false, targetId: armor.id })}\n                >{armor.item.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorList);","import React from 'react';\nimport './ItemList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport PotionList from '../PotionsList/PotionsList';\nimport WeaponList from '../WeaponsList/WeaponsList';\nimport ArmorList from '../ArmorList/ArmorList';\n\nclass ItemList extends ExpandableList {\n  getTitle() {\n    return 'Items'\n  }\n\n  displayContents() {\n   return (\n     <div className=\"detailList\">\n       <PotionList />\n       <WeaponList />\n       <ArmorList />\n     </div>\n   ) \n  }\n}\n\nexport default ItemList;","import React from 'react';\nimport './SupplierList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass SupplierList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchSuppliers();\n  }\n\n  getTitle() {\n    return 'Suppliers';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'supplier', edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewSupplierButton\"\n        onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.suppliers) {\n      return '';\n    } else {\n      const newSuppliers = this.props.suppliers;\n      return (\n        <div className=\"detailList\">\n          { newSuppliers.map(supplier => {\n            let supplierClass = \"ListDetail\";\n            if (this.props.form === 'supplier' && this.props.targetId === supplier.id) {\n              supplierClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={supplierClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: false, targetId: supplier.id })}>{supplier.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierList);","import React from 'react';\nimport './TownBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass TownBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.props.fetchTownBehaviors();\n  }\n\n  getTitle() {\n    return 'Town Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'town_behavior', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewTownBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.townBehaviors) {\n      return '';\n    } else {\n      const newTownBehaviors = this.props.townBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newTownBehaviors.map(townBehavior => {\n            let townBehaviorClass = \"ListDetail\";\n            if (this.props.form === 'town_behavior' && this.props.targetId === townBehavior.id) {\n              townBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={townBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'town_behavior', edit: false, targetId: townBehavior.id })}\n                >{townBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorList);","import React from 'react';\nimport './DungeonBehaviorList.css';\n\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DungeonBehaviorList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDungeonBehaviors();\n  }\n\n  getTitle() {\n    return 'Dungeon Behaviors';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'dungeon_behavior', edit: false, targetId: null })\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewDungeonBehaviorButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.dungeonBehaviors) {\n      return '';\n    } else {\n      const newDungeonBehaviors = this.props.dungeonBehaviors;\n      return (\n        <div className=\"detailList\">\n          {newDungeonBehaviors.map(dungeonBehavior => {\n            let dungeonBehaviorClass = \"ListDetail\";\n            if (this.props.form === 'dungeon_behavior' && dungeonBehavior.id === this.props.targetId) {\n              dungeonBehaviorClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={dungeonBehaviorClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'dungeon_behavior', edit: false, targetId: dungeonBehavior.id })}\n                >{dungeonBehavior.name}</span>\n              </p>\n            )\n          })}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorList);","import React from 'react';\nimport './BehaviorList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport TownBehaviorList from '../TownBehaviorList/TownBehaviorList';\nimport DungeonBehaviorList from '../DungeonBehaviorList/DungeonBehaviorList';\n\nclass BehaviorList extends ExpandableList {\n  getTitle() {\n    return 'Behaviors';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <TownBehaviorList />\n        <DungeonBehaviorList />\n      </div>\n    )\n  }\n}\n\nexport default BehaviorList;","import React from 'react';\nimport './AdventurerClassList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport NewButton from '../NewButton/NewButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass AdventurerClassList extends ExpandableList {\n  constructor(props) {\n    super(props);\n\n    this.displayContents = this.displayContents.bind(this);\n    this.getNewButton = this.getNewButton.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNew = this.handleNew.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchAdventurerClasses();\n  }\n  \n  getTitle() {\n    return 'Classes';\n  }\n\n  handleNew() {\n    this.props.setRefresh(true);\n    this.props.setDisplayForm({ form: 'adventurer_class', edit: false, targetId: null });\n  }\n\n  getNewButton() {\n    return (\n      <div className=\"NewAdventurerClassButton\" onClick={this.handleNew}>\n        <NewButton />\n      </div>\n    )\n  }\n\n  displayContents() {\n    if (!this.props.adventurerClasses) {\n      return '';\n    } else {\n      const newAdventurerClasses = this.props.adventurerClasses;\n      return (\n        <div className=\"detailList\">\n          {newAdventurerClasses.map(adventurerClass => {\n            let adventurerClassClass = \"ListDetail\";\n            if (this.props.form === 'adventurer_class' && this.props.targetId === adventurerClass.id) {\n              adventurerClassClass += \" activeItem\";\n            }\n            return (\n              <p>\n                <span className={adventurerClassClass}\n                  onClick={() => this.props.setDisplayForm({ form: 'adventurer_class', edit: false, targetId: adventurerClass.id })}\n                >{adventurerClass.name}</span>\n              </p>\n            );\n          })}\n        </div>\n      )\n    }\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    form: state.detail.type,\n    targetId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses()),\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassList);","import React from 'react';\nimport './AdventurerList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport AdventurerClassList from '../AdventurerClassList/AdventurerClassList';\n\nclass AdventurerList extends ExpandableList {\n  getTitle() {\n    return 'Adventurers';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <AdventurerClassList />\n      </div>\n    )\n  }\n}\n\nexport default AdventurerList;","import React from 'react';\nimport './NPCList.css';\n\n// component imports\nimport ExpandableList from '../ExpandableList/ExpandableList';\nimport BehaviorList from '../BehaviorList/BehaviorList';\nimport AdventurerList from '../AdventurerList/AdventurerList';\n\nclass NPCList extends ExpandableList {\n  getTitle() {\n    return 'NPCs';\n  }\n\n  displayContents() {\n    return (\n      <div className=\"detailList\">\n        <BehaviorList />\n        <AdventurerList />\n      </div>\n    )\n  }\n}\n\nexport default NPCList;","import React from 'react';\nimport './ObjectListColumn.css';\n\n// component imports\nimport ItemList from '../../Components/ItemList/ItemList';\nimport SupplierList from '../../Components/SupplierList/SupplierList';\nimport NPCList from '../../Components/NPCList/NPCList';\n\n// redux imports\n// comment to update code\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass ObjectListColumn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.dialogActive & !nextProps.dialogActive) {\n      return true;\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"ObjectListColumn\">\n        <ItemList />\n        <SupplierList />\n        <NPCList />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(ObjectListColumn);","const potionTypes = [\n  'healing'\n];\n\nexport default potionTypes;","import React from 'react';\nimport './DisplayForm.css';\n\nclass DisplayForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getForm = this.getForm.bind(this);\n    this.handleCloseButton = this.handleCloseButton.bind(this);\n  }\n\n  getForm() {\n    return '';\n  }\n\n  handleCloseButton() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayForm\">\n        {this.getForm()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayForm;","import React from 'react';\nimport './CloseFormButton.css';\n\nclass CloseFormButton extends React.Component {\n  render() {\n    return (\n      <div className=\"CloseFormButton\">\n        <p className=\"closeButtonIcon\">X</p>\n      </div>\n    )\n  }\n}\n\nexport default CloseFormButton;","const itemPostRequests = (function() {\n  return {\n    makeRequest: async function(postRoute, postBody) {\n      let subBody = {};\n      for ( let [ key, value ] of postBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const postRes = fetch(`/${postRoute}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return postRes;\n    }\n  }\n}());\n\nexport default itemPostRequests;","const itemPutRequests = (function(){\n  return {\n    makeRequest: async function(putRoute, putBody) {\n      let subBody = {};\n      for ( let [ key, value ] of putBody) {\n        subBody[key] = value\n      }\n\n      subBody = JSON.stringify(subBody)\n\n      const putRes = fetch(`/${putRoute}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: subBody\n      });\n\n      return putRes;\n    }\n  }\n}());\n\nexport default itemPutRequests;","import React from 'react';\nimport './PotionForm.css';\n\nimport potionTypes from '../../utilities/potionTypes';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\n// gratitous comment to push code.\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass PotionForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addPotion = this.addPotion.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  getPotionOptions() {\n    return potionTypes.map(potionType => {\n      return <option value={potionType}>{potionType}</option>\n    })\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addPotion(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('potion', data);\n    } else {\n      yield itemPostRequest.makeRequest('potion', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target)\n    let addPotion = this.addPotion(data);\n    addPotion.next().value.then(() => {\n      this.props.fetchPotions();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'potion', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n    \n  }\n\n  getForm() {\n    let newHeading = 'New Potion';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newPotionType = '';\n    let newLevel = '';\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit && !this.props.refresh) {\n      const allPotions = this.props.potions;\n      const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n      newName = thisPotion.item.name;\n      newValue = thisPotion.item.value;\n      newDetails = thisPotion.item.details;\n      newRarity = thisPotion.item.rarity;\n      newPotionType = thisPotion.type;\n      newLevel = thisPotion.level;\n      newHeading = newName;\n      newId = thisPotion.id;\n      newItemId = thisPotion.itemId;\n    }\n    \n    return (\n      <div className=\"PotionForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-potion-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        \n        <form action={'/potions'}\n          className=\"input-fields-area\"\n          id=\"PotionPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" required name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"potion name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" required name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" required name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"type\">Type</label>\n              <select className=\"potion-select\" required name=\"type\" id=\"type\" defaultValue={newPotionType}>\n                {this.getPotionOptions()}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Potion' : 'Create Potion' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionForm);","import React from 'react';\nimport './DisplayStatic.css';\n\nclass DisplayStatic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDisplay = this.getDisplay.bind(this);\n    this.getDeleteButton = this.getDeleteButton.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n\n  getDisplay() {\n    return '';\n  }\n\n  getDeleteButton() {\n    return '';\n  }\n\n  handleYes() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"DisplayStatic\">\n        {this.getDisplay()}\n        {this.getDeleteButton()}\n      </div>\n    )\n  }\n}\n\nexport default DisplayStatic;\n\n","import React from 'react';\nimport './EditButton.css';\n\nclass EditButton extends React.Component {\n  render() {\n    return (\n      <div className=\"EditButton\">\n        <div className=\"editButtonIcon\">edit</div>\n      </div>\n    )\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport './DeleteButton.css';\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <div className=\"deleteButtonIcon\">\n          DELETE\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DeleteButton;","const deleteRequests = (function(){\n  return {\n    makeRequest: async function(deleteType, deleteId) {\n      const deleteRes = await fetch(`/${deleteType}/${deleteId}`, {\n        method: 'DELETE'\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    },\n    makeRequestSupplier: async function(payload) {\n      const {\n        route, id, offeringIds\n      } = payload;\n\n      let data = {\n        id: id,\n        offeringIds\n      }\n\n      data = JSON.stringify(data);\n\n      const deleteRes = await fetch(`/${route}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: data\n      })\n        .then(response => response.json())\n        .then(data => {\n          return data\n        });\n      return deleteRes;\n    }\n  }\n}());\n\nexport default deleteRequests;","import React from 'react';\nimport './PotionDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchPotions } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass PotionDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n    \n    this.deletePotion = this.deletePotion.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeletePotionButton\" \n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Potion from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deletePotion() {\n    yield deleteRequests.makeRequest('potion', this.props.displayId);\n  }\n\n  handleYes() {\n    let deletePotion = this.deletePotion();\n    deletePotion.next().value.then(() => {\n      this.props.fetchPotions();\n      this.props.setDialog({ active: false, text: ''});\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n  \n  getDisplay() {\n    const allPotions = this.props.potions;\n    const thisPotion = allPotions.find(potion => potion.id === this.props.displayId);\n    const name = thisPotion.item.name;\n    const value = thisPotion.item.value;\n    const details = thisPotion.item.details;\n    const rarity = thisPotion.item.rarity;\n    const potionType = thisPotion.type;\n    const level = thisPotion.level;\n    \n    return (\n      <div className=\"PotionDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"PotionEditButton\" onClick={()=> this.props.setDisplayForm({ form: 'potion', edit: true, targetId: thisPotion.id })}>\n            <EditButton />\n          </div>\n        </div>\n        \n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Type</span>\n            <span className=\"display-text\">{potionType}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    potions: state.potions.potions,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchPotions: () => dispatch(fetchPotions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotionDisplay);","import React from 'react';\nimport './WeaponForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons} from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass WeaponForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addWeapon = this.addWeapon.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addWeapon(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('weapon', data);\n    } else {\n      yield itemPostRequest.makeRequest('weapon', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let addWeapon = this.addWeapon(data);\n    addWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'weapon', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    });\n  }\n\n  getForm() {\n    let newHeading = 'New Weapon';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newDamage = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allWeapons = this.props.weapons;\n      const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n      newName = thisWeapon.item.name;\n      newValue = thisWeapon.item.value;\n      newDetails = thisWeapon.item.details;\n      newRarity = thisWeapon.item.rarity;\n      newLevel = thisWeapon.level;\n      newDamage = thisWeapon.damage;\n      newHeading = newName;\n      newId = thisWeapon.id;\n      newItemId = thisWeapon.itemId;\n    }\n\n\n    return (\n      <div className=\"WeaponForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-weapon-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/weapons'}\n          className=\"input-fields-area\"\n          id=\"WeaponPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"weapon name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" required defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" required defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" required name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"damage\">Damage</label>\n              <input type=\"number\" required name=\"damage\" id=\"damage\" className=\"input-number\" placeholder=\"#\" defaultValue={newDamage}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Weapon' : 'Create Weapon' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponForm);","import React from 'react';\nimport './WeaponDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n//redux imports\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass WeaponDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteWeapon = this.deleteWeapon.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteWeaponButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Weapon from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteWeapon() {\n    yield deleteRequests.makeRequest('weapon', this.props.displayId);\n  }\n\n  handleYes() {\n    let deleteWeapon = this.deleteWeapon();\n    deleteWeapon.next().value.then(() => {\n      this.props.fetchWeapons();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    });\n  }\n\n  getDisplay() {\n    const allWeapons = this.props.weapons;\n    const thisWeapon = allWeapons.find(weapon => weapon.id === this.props.displayId);\n    const name = thisWeapon.item.name;\n    const value = thisWeapon.item.value;\n    const details = thisWeapon.item.details;\n    const rarity = thisWeapon.item.rarity;\n    const level = thisWeapon.level;\n    const damage = thisWeapon.damage;\n\n    return (\n      <div className=\"WeaponDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'weapon', edit: true, targetId: thisWeapon.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Damage</span>\n            <span className=\"display-text\">{damage}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    weapons: state.weapons.weapons,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchWeapons: () => dispatch(fetchWeapons())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeaponDisplay);","import React from 'react';\nimport './ArmorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions'\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass ArmorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addArmor = this.addArmor.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'armor', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  *addArmor(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('armor', data);\n    } else {\n      yield itemPostRequest.makeRequest('armor', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addArmor = this.addArmor(data);\n    this.addArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'armor', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Armor';\n    let newName = '';\n    let newValue = '';\n    let newDetails = '';\n    let newRarity = 1000;\n    let newLevel = '';\n    let newArmor = 1;\n    let newId = null;\n    let newItemId = null;\n\n    if (this.props.edit) {\n      const allArmor = this.props.armor;\n      const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n      newName = thisArmor.item.name;\n      newValue = thisArmor.item.value;\n      newDetails = thisArmor.item.details;\n      newRarity = thisArmor.item.rarity;\n      newLevel = thisArmor.level;\n      newArmor = thisArmor.armor;\n      newHeading = newName;\n      newId = thisArmor.id;\n      newItemId = thisArmor.itemId;\n    }\n\n\n    \n    return (\n      <div className=\"ArmorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-armor-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/armor'}\n          className=\"input-fields-area\"\n          id=\"ArmorPostForm\"\n          onSubmit={this.handleSubmit}\n          method=\"POST\">\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"armor name\"\n                maxLength=\"26\" defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"value\">Value</label>\n              <input type=\"number\" name=\"value\" id=\"value\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"10000\" defaultValue={newValue}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"details\">Details</label>\n              <input type=\"text\" name=\"details\" id=\"details\" className=\"input-text\" placeholder=\"details...\"\n                maxLength=\"200\" defaultValue={newDetails}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rarity\">Rarity</label>\n              <input type=\"number\" name=\"rarity\" id=\"rarity\" className=\"input-number\" placeholder=\"#\"\n                min=\"1\" max=\"1000\" defaultValue={newRarity}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"level\">Level</label>\n              <input type=\"number\" name=\"level\" id=\"level\" className=\"input-number\" placeholder=\"#\" defaultValue={newLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"armor\">Armor</label>\n              <input type=\"number\" name=\"armor\" id=\"armor\" className=\"input-number\" placeholder=\"#\" defaultValue={newArmor}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"hidden\" name=\"itemId\" value={newItemId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Armor' : 'Create Armor' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorForm);","import React from 'react';\nimport './ArmorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchArmor } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass ArmorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteArmor = this.deleteArmor.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteArmorButton\"\n      onClick={() => this.props.setDialog({\n        active: true,\n        text: 'Delete Armor from Database?'\n      })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteArmor() {\n    yield deleteRequests.makeRequest('armor', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteArmor = this.deleteArmor();\n    deleteArmor.next().value.then(() => {\n      this.props.fetchArmor();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n    \n  }\n\n  getDisplay() {\n    const allArmor = this.props.armor;\n    const thisArmor = allArmor.find(armor => armor.id === this.props.displayId);\n    const name = thisArmor.item.name;\n    const value = thisArmor.item.value;\n    const details = thisArmor.item.details;\n    const rarity = thisArmor.item.rarity;\n    const level = thisArmor.level;\n    const armor = thisArmor.armor;\n\n    return (\n      <div className=\"ArmorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"WeaponEditButton\" onClick={() => this.props.setDisplayForm({ form: 'armor', edit: true, targetId: thisArmor.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Value</span>\n            <span className=\"display-number\">{value}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Details</span>\n            <span className=\"display-text\">{details}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Rarity</span>\n            <span className=\"display-text\">{rarity}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Level</span>\n            <span className=\"display-number\">{level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">Armor</span>\n            <span className=\"display-text\">{armor}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    armor: state.armor.armor,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchArmor: () => dispatch(fetchArmor())\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArmorDisplay);","import React from 'react';\nimport './DeleteOfferingButton.css';\n\nclass DeleteOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteOfferingButton\">\n        <span className=\"offeringButtonIcon\">X</span>\n      </div>\n    )\n  }\n}\n\nexport default DeleteOfferingButton;","import React from 'react';\nimport './AddOfferingButton.css';\n\nclass AddOfferingButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddOfferingButton\">\n        <span className=\"addOfferingButtonIcon\">+</span>\n      </div>\n    )\n  }\n}\n\nexport default AddOfferingButton;","const itemTypes = {\n  potion: 'potion',\n  weapon: 'weapon',\n  armor: 'armor'\n}\n\nexport default itemTypes;","import React from 'react';\nimport './SupplierForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\nimport DeleteOfferingButton from '../DeleteOfferingButton/DeleteOfferingButton';\nimport AddOfferingButton from '../AddOfferingButton/AddOfferingButton';\n\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport itemTypes from '../../utilities/itemTypes';\nimport itemPostRequest from '../../utilities/itemPostRequests';\nimport itemPutRequest from '../../utilities/itemPutRequests';\n\nclass SupplierForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false\n    }\n\n    this.initializeFields = this.initializeFields.bind(this);\n    this.getOfferingOptions = this.getOfferingOptions.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addFormOffering = this.addFormOffering.bind(this);\n    this.deleteOffering = this.deleteOffering.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateSupplier = this.updateSupplier.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeFields();\n  }\n\n  initializeFields() {\n    if (this.props.edit && !this.props.suppliers) return;\n    let newName = '';\n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      newName = thisSupplier.name;\n      offerings = thisSupplier.offerings;\n    }\n   \n\n    let initialState = {};\n\n    initialState['name'] = newName;\n    let presentIds = [];\n    if (offerings.length > 0) {\n      for (const offering of offerings) {\n        initialState[`offering-${offering.id}-type`] = offering.type;\n        initialState[`offering-${offering.id}-markup`] = offering.markup;\n        presentIds.push(offering.id);\n      }\n    }\n    initialState.presentIds = presentIds;\n    initialState.existingIdCount = offerings.length;\n    initialState.deletedIds = [];\n    initialState.newOfferingIndex = 0;\n    initialState.newOfferingKeys = [];\n    initialState.initialized = true;\n    this.setState(initialState);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'supplier', targetId: this.props.displayId, edit: false});\n    }\n  }\n\n  getOfferingOptions() {\n    const itemArr = Object.values(itemTypes);\n    return itemArr.map(itemType => {\n      return <option value={itemType}>{itemType}</option>\n    })\n  }\n\n  addFormOffering() {\n    // limit offerings to 5\n    const totalCount = this.state.newOfferingKeys.length + this.state.existingIdCount;\n    if (totalCount >= 5) return;\n\n    let updatedState = {};\n    let newOfferingIndex = this.state.newOfferingIndex;\n    updatedState[`new-offering-${newOfferingIndex}-type`] = 1;\n    updatedState[`new-offering-${newOfferingIndex}-markup`] = 100;\n    let newOfferingKeys = this.state.newOfferingKeys;\n    newOfferingKeys.push(newOfferingIndex);\n    updatedState.newOfferingKeys = newOfferingKeys;\n    newOfferingIndex += 1;\n    updatedState.newOfferingIndex = newOfferingIndex;\n    this.setState(updatedState);\n    \n  }\n\n  deleteOffering(payload) {\n    const { existing, offeringId } = payload\n    let updatedState = {};\n    if (existing) {\n      let newDeleted = this.state.deletedIds;\n      let newCount = this.state.existingIdCount;\n      newDeleted.push(offeringId);\n      newCount -= 1;\n      updatedState.deletedIds = newDeleted;\n      updatedState.existingIdCount = newCount;\n    } else {\n      let newOfferingKeys = this.state.newOfferingKeys;\n      const offeringIndex = newOfferingKeys.indexOf(offeringId);\n      if (offeringIndex < 0 || (offeringIndex !== 0 && !offeringIndex)) return;\n      newOfferingKeys.splice(offeringIndex, 1);\n      updatedState.newOfferingKeys = newOfferingKeys;\n    }\n\n    this.setState(updatedState);\n  }\n\n  handleChange(e) {\n    const eleName = e.target.getAttribute('name');\n    let stateUpdate = {};\n    stateUpdate[eleName] = e.target.value\n    this.setState(stateUpdate);\n  }\n\n  *updateSupplier(data) {\n    if (this.props.edit) {\n      yield itemPutRequest.makeRequest('supplier', data);\n    } else {\n      yield itemPostRequest.makeRequest('supplier', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    let updateSupplier = this.updateSupplier(data);\n    updateSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'supplier', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    if (!this.state.initialized) return '';\n    \n    let offerings = [];\n    if (this.props.edit) {\n      const allSuppliers = this.props.suppliers;\n      const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n      offerings = thisSupplier.offerings;\n    }\n    \n    let newHeading = 'New Supplier';\n    if (this.props.edit) {\n      newHeading = this.state.name;\n    }\n    let newId = null;\n    if (this.props.edit) {\n      newId = this.props.displayId;\n    }\n    const newOfferingKeys = this.state.newOfferingKeys;\n    \n    return (\n      <div className=\"SupplierForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">{newHeading}</h2>\n          <div className=\"close-supplier-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n        <form action={'/supplier'}\n          className=\"input-fields-area\"\n          id=\"SupplierPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"supplier name\"\n                maxLength=\"26\" onChange={this.handleChange} value={this.state.name}></input>\n            </div>\n            <div className=\"input-group-blank\">\n            </div>\n            <div className=\"offerings-group\">\n              <span className=\"item-label form-full-span\">Offerings</span>\n              <span className=\"item-label form-pad form-half-span\">Type</span>\n              <span className=\"item-label form-pad form-half-span\">Markup</span>\n              {offerings.length <= 0 ? '' : offerings.map(offering => {\n                let deletedMap = this.state.deletedIds;\n                if (deletedMap.length > 0 && deletedMap.includes(offering.id)) {\n                  return ''\n                }\n                return (\n                  <div className=\"form-inner-span\">\n                    <div className=\"form-half-span form-left-half\">\n                      <select className=\"offering-select\" \n                        name={`offering-${offering.id}-type`} \n                        id={`offering-${offering.id}-type`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-type`]}>\n                        {this.getOfferingOptions()}\n                      </select>\n                    </div>\n                    <div className=\"form-half-span form-right-half\">\n                      <input className=\"input-number\" \n                        type=\"number\" \n                        name={`offering-${offering.id}-markup`} \n                        id={`offering-${offering.id}-markup`} \n                        onChange={this.handleChange} \n                        value={this.state[`offering-${offering.id}-markup`]}>\n                      </input>\n                      <span className=\"offeringDelete\"\n                        onClick={() => this.deleteOffering({ existing: true, offeringId: offering.id })}\n                      >\n                        <DeleteOfferingButton />\n                      </span>\n                    </div>\n                  </div>\n                )\n              })}\n            {newOfferingKeys.length <= 0 ? '' : newOfferingKeys.map(index => {\n              return (\n                <div className=\"form-inner-span\">\n                  <div className=\"form-half-span form-left-half\">\n                    <select className=\"offering-select\"\n                      name={`new-offering-${index}-type`}\n                      id={`new-offering-${index}-type`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-type`]}>\n                        {this.getOfferingOptions()}\n                    </select>\n                  </div>\n                  <div className=\"form-half-span form-right-half\">\n                    <input className=\"input-number\"\n                      type=\"number\"\n                      name={`new-offering-${index}-markup`}\n                      id={`new-offering-${index}-markup`}\n                      onChange={this.handleChange}\n                      value={this.state[`new-offering-${index}-markup`]}>\n                    </input>\n                    <span className=\"offeringDelete\"\n                      onClick={() => this.deleteOffering({ existing: false, offeringId: index })}\n                    >\n                      <DeleteOfferingButton />\n                    </span>\n                  </div>\n                </div>\n              )\n            })}\n            <div className=\"offeringAdd form-full-span form-center-content\"\n              onClick={this.addFormOffering}\n            >\n              <AddOfferingButton />\n            </div>\n          </div>\n          <input type=\"hidden\" name=\"existingIds\" value={this.state.presentIds} />\n          <input type=\"hidden\" name=\"deletedIds\" value={this.state.deletedIds} />\n          <input type=\"hidden\" name=\"newIndexes\" value={this.state.newOfferingKeys} />\n          <input type=\"hidden\" name=\"newOfferingsCount\" value={this.state.newOfferingsCount} />\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <div className=\"supplier-submit-container\">\n          <input type=\"submit\" value={this.props.edit ? 'Update Supplier' : 'Create Supplier' } className=\"button create-button\"></input>\n          </div>          \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierForm);","import React from 'react';\nimport './SupplierDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchSuppliers } from '../../actions'\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass SupplierDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteSupplier = this.deleteSupplier.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteSupplierButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Supplier and Offerings from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteSupplier(payload) {\n    yield deleteRequests.makeRequestSupplier(payload);\n  }\n\n  handleYes() {\n    // compose payload for delete request\n    let payload = {};\n    payload.route = 'supplier';\n    payload.id = this.props.displayId;\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const offerings = thisSupplier.offerings;\n    let offeringIds = [];\n    if (offerings.length > 0) {\n      offerings.forEach(refOffering => {\n        offeringIds.push(refOffering.id);\n      });\n    }\n    payload.offeringIds = offeringIds;\n\n    // invoke delete request\n    let deleteSupplier = this.deleteSupplier(payload);\n    deleteSupplier.next().value.then(() => {\n      this.props.fetchSuppliers();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, displayId: null });\n    });\n  }\n\n  getDisplay() {\n    if (!this.props.suppliers) return '';\n    const allSuppliers = this.props.suppliers;\n    const thisSupplier = allSuppliers.find(supplier => supplier.id === this.props.displayId);\n    const name = thisSupplier.name;\n    const offerings = thisSupplier.offerings;\n\n    return (\n      <div className=\"SupplierDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"SupplierEditButton\" onClick={() => this.props.setDisplayForm({ form: 'supplier', edit: true, targetId: thisSupplier.id })}>\n            <EditButton />\n          </div>\n        </div>\n\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n            <span className=\"display-label\">Name</span>\n            <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group-blank\">\n          </div>\n          <div className=\"offerings-display\">\n            <span className=\"display-label full-span\">Offerings</span>\n            <span className=\"display-label pad half-span\">Type</span>\n            <span className=\"display-label pad half-span\">Markup</span>\n            { offerings.map(offering => {\n              return (\n                <div className=\"inner-span\">\n                  <span className=\"display-text half-span left-half\">\n                    {offering.type}\n                  </span>\n                  <span className=\"display-text half-span right-half\">\n                    {offering.markup}\n                  </span>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    suppliers: state.suppliers.suppliers,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchSuppliers: () => dispatch(fetchSuppliers())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierDisplay);","import React from 'react';\nimport './TownBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass TownBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteTownBehavior = this.deleteTownBehavior.bind(this);\n  }\n\n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteTownBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Town Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteTownBehavior() {\n    yield deleteRequests.makeRequest('town_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteTownBehavior = this.deleteTownBehavior();\n    deleteTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allTownBehaviors = this.props.townBehaviors;\n    const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n    const { name,\n      buy_potion,\n      sell_potion,\n      upgrade_potion,\n      buy_weapon,\n      sell_weapon,\n      upgrade_weapon,\n      buy_armor,\n      sell_armor,\n      upgrade_armor,\n      wealth,\n      enter_dungeon,\n      use_tavern,\n      retire,\n      emigrate,\n      garrison_wall\n    } = thisTownBehavior;\n\n    return (\n      <div className=\"TownBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"TownBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: 'town_behavior', edit: true, targetId: thisTownBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy potion</span>\n            <span className=\"display-text\">{buy_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell potion</span>\n            <span className=\"display-text\">{sell_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade potion</span>\n            <span className=\"display-text\">{upgrade_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy weapon</span>\n            <span className=\"display-text\">{buy_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell weapon</span>\n            <span className=\"display-text\">{sell_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade weapon</span>\n            <span className=\"display-text\">{upgrade_weapon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">buy armor</span>\n            <span className=\"display-text\">{buy_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">sell armor</span>\n            <span className=\"display-text\">{sell_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade armor</span>\n            <span className=\"display-text\">{upgrade_armor}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">wealth</span>\n            <span className=\"display-text\">{wealth}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">enter dungeon</span>\n            <span className=\"display-text\">{enter_dungeon}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use tavern</span>\n            <span className=\"display-text\">{use_tavern}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">retire</span>\n            <span className=\"display-text\">{retire}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">emigrate</span>\n            <span className=\"display-text\">{emigrate}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">garrison wall</span>\n            <span className=\"display-text\">{garrison_wall}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorDisplay);","import React from 'react';\nimport './TownBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchTownBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass TownBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.addTownBehavior = this.addTownBehavior.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'town_behavior', targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addTownBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('town_behavior', data);\n    } else {\n      yield postRequest.makeRequest('town_behavior', data);\n    }\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addTownBehavior = this.addTownBehavior(data);\n    this.addTownBehavior.next().value.then(() => {\n      this.props.fetchTownBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'town_behavior', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false })\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading = 'New Town Behavior';\n    let newName = '';\n    let newId;\n    let newBuyPotion = 0;\n    let newSellPotion = 0;\n    let newUpgradePotion = 0;\n    let newBuyWeapon = 0;\n    let newSellWeapon = 0;\n    let newUpgradeWeapon = 0;\n    let newBuyArmor = 0;\n    let newSellArmor = 0;\n    let newUpgradeArmor = 0;\n    let newWealth = 0;\n    let newEnterDungeon = 0;\n    let newUseTavern = 0;\n    let newRetire = 0;\n    let newEmigrate = 0;\n    let newGarisonWall = 0;\n\n    if (this.props.edit) {\n      const allTownBehaviors = this.props.townBehaviors;\n      const thisTownBehavior = allTownBehaviors.find(townBehavior => townBehavior.id === this.props.displayId);\n      newName = thisTownBehavior.name;\n      newHeading = newName;\n      newId = thisTownBehavior.id;\n      newBuyPotion = thisTownBehavior.buy_potion;\n      newSellPotion = thisTownBehavior.sell_potion;\n      newUpgradePotion = thisTownBehavior.upgrade_potion;\n      newBuyWeapon = thisTownBehavior.buy_weapon;\n      newSellWeapon= thisTownBehavior.sell_weapon;\n      newUpgradeWeapon = thisTownBehavior.upgrade_weapon;\n      newBuyArmor = thisTownBehavior.buy_armor;\n      newSellArmor = thisTownBehavior.sell_armor;\n      newUpgradeArmor = thisTownBehavior.upgrade_armor;\n      newWealth = thisTownBehavior.wealth;\n      newEnterDungeon = thisTownBehavior.enter_dungeon;\n      newUseTavern = thisTownBehavior.use_tavern;\n      newRetire = thisTownBehavior.retire;\n      newEmigrate = thisTownBehavior.emigrate;\n      newGarisonWall = thisTownBehavior.garrison_wall;\n    }\n    return (\n      <div className=\"TownBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Town Behavior: {newHeading}</h2>\n          <div className=\"close-town-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n\n      <form action={'/town_behaviors'}\n        className=\"input-fields-area\"\n        id=\"TownBehaviorPostForm\"\n        method=\"POST\"\n        onSubmit={this.handleSubmit}>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n              maxLength=\"26\" required defaultValue={newName}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_potion\">buy potion</label>\n            <input type=\"number\" name=\"buy_potion\" id=\"buy_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_potion\">sell potion</label>\n            <input type=\"number\" name=\"sell_potion\" id=\"sell_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellPotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_potion\">upgrade potion</label>\n            <input type=\"number\" name=\"upgrade_potion\" id=\"upgrade_potion\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradePotion}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_weapon\">buy weapon</label>\n            <input type=\"number\" name=\"buy_weapon\" id=\"buy_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_weapon\">sell weapon</label>\n            <input type=\"number\" name=\"sell_weapon\" id=\"sell_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_weapon\">upgrade weapon</label>\n            <input type=\"number\" name=\"upgrade_weapon\" id=\"upgrade_weapon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeWeapon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"buy_armor\">buy armor</label>\n            <input type=\"number\" name=\"buy_armor\" id=\"buy_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newBuyArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"sell_armor\">sell armor</label>\n            <input type=\"number\" name=\"sell_armor\" id=\"sell_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSellArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"upgrade_armor\">upgrade armor</label>\n            <input type=\"number\" name=\"upgrade_armor\" id=\"upgrade_armor\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeArmor}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"wealth\">wealth</label>\n            <input type=\"number\" name=\"wealth\" id=\"wealth\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newWealth}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"enter_dungeon\">enter dungeon</label>\n            <input type=\"number\" name=\"enter_dungeon\" id=\"enter_dungeon\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEnterDungeon}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"use_tavern\">use tavern</label>\n            <input type=\"number\" name=\"use_tavern\" id=\"use_tavern\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUseTavern}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"retire\">retire</label>\n            <input type=\"number\" name=\"retire\" id=\"retire\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRetire}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"emigrate\">emigrate</label>\n            <input type=\"number\" name=\"emigrate\" id=\"emigrate\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newEmigrate}></input>\n          </div>\n          <div className=\"input-group\">\n            <label className=\"item-label\" htmlFor=\"garrison_wall\">garrison wall</label>\n            <input type=\"number\" name=\"garrison_wall\" id=\"garrison_wall\" className=\"input-number\" placeholder=\"#\"\n              step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newGarisonWall}></input>\n          </div>\n          <input type=\"hidden\" name=\"id\" value={newId} />\n          <input type=\"submit\" value={this.props.edit ? 'Update Town Behavior' : 'Create Town Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    townBehaviors: state.behaviors.townBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchTownBehaviors: () => dispatch(fetchTownBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TownBehaviorForm);","import React from 'react';\nimport './DungeonBehaviorDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM, SET_DIALOG } from '../../actions/types';\n\n// js utility imports\nimport deleteRequests from '../../utilities/deleteRequests';\n\nclass DungeonBehaviorDisplay extends DisplayStatic {\n  constructor(props) {\n    super(props);\n\n    this.deleteDungeonBehavior = this.deleteDungeonBehavior.bind(this);\n  }\n  \n  getDeleteButton() {\n    const thisRef = this;\n    window.dialogRef = thisRef;\n    return (\n      <div className=\"DeleteDungeonBehaviorButton\"\n        onClick={() => this.props.setDialog({\n          active: true,\n          text: 'Delete Dungeon Behavior from Database?'\n        })}>\n        <DeleteButton />\n      </div>\n    )\n  }\n\n  *deleteDungeonBehavior() {\n    yield deleteRequests.makeRequest('dungeon_behavior', this.props.displayId);\n  }\n\n  handleYes() {\n    const deleteDungeonBehavior = this.deleteDungeonBehavior();\n    deleteDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      this.props.setDialog({ active: false, text: '' });\n      this.props.setDisplayForm({ form: false, edit: false, targetId: null });\n    })\n  }\n\n  getDisplay() {\n    const allDungeonBehaviors = this.props.dungeonBehaviors;\n    const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n    const {\n      name,\n      advance_tile,\n      conserve_health,\n      use_potion,\n      rest,\n      return_to_town,\n      check_for_traps,\n      disarm_trap,\n      avoid_trap,\n      search_for_treasure,\n      fight_monster,\n      flee_encounter,\n      defend,\n      attack,\n      check_monster_weakness,\n      explore_level,\n      advance_next_level,\n      fill_inventory,\n      upgrade_inventory,\n      fight_boss_monster,\n      prefer_weaker_monster,\n      try_for_level\n    } = thisDungeonBehavior;\n\n    return (\n      <div className=\"DungeonBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"DungeonBehaviorEditButton\" onClick={() => this.props.setDisplayForm({ form: 'dungeon_behavior', edit: true, targetId: thisDungeonBehavior.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance tile</span>\n            <span className=\"display-text\">{advance_tile}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">conserve health</span>\n            <span className=\"display-text\">{conserve_health}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">use potion</span>\n            <span className=\"display-text\">{use_potion}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">rest</span>\n            <span className=\"display-text\">{rest}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">return to town</span>\n            <span className=\"display-text\">{return_to_town}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check for traps</span>\n            <span className=\"display-text\">{check_for_traps}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">disarm trap</span>\n            <span className=\"display-text\">{disarm_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">avoid trap</span>\n            <span className=\"display-text\">{avoid_trap}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">search for treasure</span>\n            <span className=\"display-text\">{search_for_treasure}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight monster</span>\n            <span className=\"display-text\">{fight_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">flee encounter</span>\n            <span className=\"display-text\">{flee_encounter}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">defend</span>\n            <span className=\"display-text\">{defend}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">attack</span>\n            <span className=\"display-text\">{attack}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">check monster weakness</span>\n            <span className=\"display-text\">{check_monster_weakness}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">explore level</span>\n            <span className=\"display-text\">{explore_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">advance next level</span>\n            <span className=\"display-text\">{advance_next_level}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fill inventory</span>\n            <span className=\"display-text\">{fill_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">upgrade inventory</span>\n            <span className=\"display-text\">{upgrade_inventory}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">fight boss monster</span>\n            <span className=\"display-text\">{fight_boss_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">prefer weaker monster</span>\n            <span className=\"display-text\">{prefer_weaker_monster}</span>\n          </div>\n          <div className=\"display-group\">\n            <span className=\"display-label\">try for level</span>\n            <span className=\"display-text\">{try_for_level}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors()),\n    setDialog: (payload) => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorDisplay);","import React from 'react';\nimport './DungeonBehaviorForm.css';\n\nimport DisplayForm from '../DisplayForm/DisplayForm';\nimport CloseFormButton from '../CloseFormButton/CloseFormButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchDungeonBehaviors } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js imports\nimport postRequest from '../../utilities/itemPostRequests';\nimport putRequest from '../../utilities/itemPutRequests';\n\nclass DungeonBehaviorForm extends DisplayForm {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addDungeonBehavior = this.addDungeonBehavior.bind(this);\n  }\n\n  handleCloseButton(e) {\n    e.preventDefault();\n    if (this.props.edit === false) {\n      this.props.setDisplayForm({ form: false, targetId: null, edit: false });\n    } else {\n      this.props.setDisplayForm({ form: 'dungeon_behavior', targetId: this.props.displayId, edit: false });\n    }\n  }\n\n  *addDungeonBehavior(data) {\n    if (this.props.edit) {\n      yield putRequest.makeRequest('dungeon_behavior', data);\n    } else {\n      yield postRequest.makeRequest('dungeon_behavior', data);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.addDungeonBehavior = this.addDungeonBehavior(data);\n    this.addDungeonBehavior.next().value.then(() => {\n      this.props.fetchDungeonBehaviors();\n      if (this.props.edit) {\n        this.props.setDisplayForm({ form: 'dungeon_behavior', targetId: this.props.displayId, edit: false });\n      } else {\n        this.props.setDisplayForm({ form: null, targetId: null, edit: false });\n      }\n    })\n  }\n\n  getForm() {\n    let newHeading ='New Dungeon Behavior';\n    let newName = '';\n    let newId;\n    let newAdvanceTile = 0;\n    let newConserveHealth = 0;\n    let newUsePotion = 0;\n    let newRest = 0;\n    let newReturnToTown = 0;\n    let newCheckForTraps = 0;\n    let newDisarmTrap = 0;\n    let newAvoidTrap = 0;\n    let newSearchForTreasure = 0;\n    let newFightMonster = 0;\n    let newFleeEncounter = 0;\n    let newDefend = 0;\n    let newAttack = 0;\n    let newCheckMonsterWeakness = 0;\n    let newExploreLevel = 0;\n    let newAdvanceNextLevel = 0;\n    let newFillInventory = 0;\n    let newUpgradeInventory = 0;\n    let newFightBossMonster = 0;\n    let newPreferWeakerMonster = 0;\n    let newTryForLevel = 0;\n\n    if (this.props.edit) {\n      const allDungeonBehaviors = this.props.dungeonBehaviors;\n      const thisDungeonBehavior = allDungeonBehaviors.find(dungeonBehavior => dungeonBehavior.id === this.props.displayId);\n      newName = thisDungeonBehavior.name;\n      newHeading = newName;\n      newId = thisDungeonBehavior.id;\n      newAdvanceTile = thisDungeonBehavior.advance_tile;\n      newConserveHealth = thisDungeonBehavior.conserve_health;\n      newUsePotion = thisDungeonBehavior.use_potion;\n      newRest = thisDungeonBehavior.rest;\n      newReturnToTown = thisDungeonBehavior.return_to_town;\n      newCheckForTraps = thisDungeonBehavior.check_for_traps;\n      newDisarmTrap = thisDungeonBehavior.disarm_trap;\n      newAvoidTrap = thisDungeonBehavior.avoid_trap;\n      newSearchForTreasure = thisDungeonBehavior.search_for_treasure;\n      newFightMonster = thisDungeonBehavior.fight_monster;\n      newFleeEncounter = thisDungeonBehavior.flee_encounter;\n      newDefend = thisDungeonBehavior.defend;\n      newAttack = thisDungeonBehavior.attack;\n      newCheckMonsterWeakness = thisDungeonBehavior.check_monster_weakness;\n      newExploreLevel = thisDungeonBehavior.explore_level;\n      newAdvanceNextLevel = thisDungeonBehavior.advance_next_level;\n      newFillInventory = thisDungeonBehavior.fill_inventory;\n      newUpgradeInventory = thisDungeonBehavior.upgrade_inventory;\n      newFightBossMonster = thisDungeonBehavior.fight_boss_monster;\n      newPreferWeakerMonster = thisDungeonBehavior.prefer_weaker_monster;\n      newTryForLevel = thisDungeonBehavior.try_for_level;\n    }\n    return (\n      <div className=\"DungeonBehaviorForm\">\n        <div className=\"form-heading-bar\">\n          <h2 className=\"form-heading\">Dungeon Behavior: {newHeading}</h2>\n          <div className=\"close-dungeon-behavior-btn\" onClick={this.handleCloseButton}>\n            <CloseFormButton />\n          </div>\n        </div>\n        <form action={'/dungeon_behavior'}\n          className=\"input-fields-area\"\n          id=\"DungeonBehaviorPostForm\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" id=\"name\" className=\"input-text\" placeholder=\"behavior name\"\n                maxLength=\"26\" required defaultValue={newName}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_tile\">advance tile</label>\n              <input type=\"number\" name=\"advance_tile\" id=\"advance_tile\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceTile}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"conserve_health\">conserve health</label>\n              <input type=\"number\" name=\"conserve_health\" id=\"conserve_health\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newConserveHealth}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"use_potion\">use potion</label>\n              <input type=\"number\" name=\"use_potion\" id=\"use_potion\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUsePotion}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"rest\">rest</label>\n              <input type=\"number\" name=\"rest\" id=\"rest\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newRest}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"return_to_town\">return to town</label>\n              <input type=\"number\" name=\"return_to_town\" id=\"return_to_town\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newReturnToTown}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_for_traps\">check for traps</label>\n              <input type=\"number\" name=\"check_for_traps\" id=\"check_for_traps\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckForTraps}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"disarm_trap\">disarm trap</label>\n              <input type=\"number\" name=\"disarm_trap\" id=\"disarm_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDisarmTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"avoid_trap\">avoid trap</label>\n              <input type=\"number\" name=\"avoid_trap\" id=\"avoid_trap\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAvoidTrap}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"search_for_treasure\">search for treasure</label>\n              <input type=\"number\" name=\"search_for_treasure\" id=\"search_for_treasure\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newSearchForTreasure}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_monster\">fight monster</label>\n              <input type=\"number\" name=\"fight_monster\" id=\"fight_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"flee_encounter\">flee encounter</label>\n              <input type=\"number\" name=\"flee_encounter\" id=\"flee_encounter\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFleeEncounter}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"defend\">defend</label>\n              <input type=\"number\" name=\"defend\" id=\"defend\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newDefend}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"attack\">attack</label>\n              <input type=\"number\" name=\"attack\" id=\"attack\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAttack}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"check_monster_weakness\">check monster weakness</label>\n              <input type=\"number\" name=\"check_monster_weakness\" id=\"check_monster_weakness\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newCheckMonsterWeakness}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"explore_level\">explore level</label>\n              <input type=\"number\" name=\"explore_level\" id=\"explore_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newExploreLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"advance_next_level\">advance next level</label>\n              <input type=\"number\" name=\"advance_next_level\" id=\"advance_next_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newAdvanceNextLevel}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fill_inventory\">fill inventory</label>\n              <input type=\"number\" name=\"fill_inventory\" id=\"fill_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFillInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"upgrade_inventory\">upgrade inventory</label>\n              <input type=\"number\" name=\"upgrade_inventory\" id=\"upgrade_inventory\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newUpgradeInventory}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"fight_boss_monster\">fight boss monster</label>\n              <input type=\"number\" name=\"fight_boss_monster\" id=\"fight_boss_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newFightBossMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"prefer_weaker_monster\">prefer weaker monster</label>\n              <input type=\"number\" name=\"prefer_weaker_monster\" id=\"prefer_weaker_monster\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newPreferWeakerMonster}></input>\n            </div>\n            <div className=\"input-group\">\n              <label className=\"item-label\" htmlFor=\"try_for_level\">try for level</label>\n              <input type=\"number\" name=\"try_for_level\" id=\"try_for_level\" className=\"input-number\" placeholder=\"#\"\n                step=\"50\" min=\"0\" max=\"1000\" required defaultValue={newTryForLevel}></input>\n            </div>\n            <input type=\"hidden\" name=\"id\" value={newId} />\n            <input type=\"submit\" value={this.props.edit ? 'Update Dungeon Behavior' : 'Create Dungeon Behavior' } className=\"button create-button\"></input>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    edit: state.detail.edit,\n    dungeonBehaviors: state.behaviors.dungeonBehaviors,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchDungeonBehaviors: () => dispatch(fetchDungeonBehaviors())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DungeonBehaviorForm);","import React from 'react';\nimport './AdventurerClassDisplay.css';\n\nimport DisplayStatic from '../DisplayStatic/DisplayStatic';\nimport EditButton from '../EditButton/EditButton';\nimport DeleteButton from '../DeleteButton/DeleteButton';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { fetchAdventurerClasses } from '../../actions';\nimport { SET_DETAIL_FORM } from '../../actions/types';\n\n// js utility imports\n\nclass AdventurerClassDisplay extends DisplayStatic {\n  getDeleteButton() {\n    return (\n      <div className=\"DeleteAdventurerClassButton\">\n        <DeleteButton />\n      </div>\n    );\n  }\n\n  getDisplay() {\n    const allAdventurerClasses = this.props.adventurerClasses;\n    const thisAdventurerClass = allAdventurerClasses.find(adventurerClass => adventurerClass.id === this.props.displayId);\n    const {\n      name,\n      bargaining,\n      perception,\n      artifacts,\n      traps,\n      agility,\n      tactics,\n      martial_weapons,\n      armor,\n      anatomy\n    } = thisAdventurerClass;\n\n    return (\n      <div className=\"TownBehaviorDisplay\">\n        <div className=\"heading-bar\">\n          <h2 className=\"display-heading\">{name}</h2>\n          <div className=\"AdventurerClassEditButton\" onClick={() => this.props.setDisplayForm({ form: 'adventurer_class', edit: true, targetId: thisAdventurerClass.id })}>\n            <EditButton />\n          </div>\n        </div>\n        <div className=\"display-fields-area\">\n          <div className=\"display-group\">\n              <span className=\"display-label\">Name</span>\n              <span className=\"display-text\">{name}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Bargaining</span>\n              <span className=\"display-text\">{bargaining}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Perception</span>\n              <span className=\"display-text\">{perception}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Artifacts</span>\n              <span className=\"display-text\">{artifacts}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Traps</span>\n              <span className=\"display-text\">{traps}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Agility</span>\n              <span className=\"display-text\">{agility}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Tactics</span>\n              <span className=\"display-text\">{tactics}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Martial Weapons</span>\n              <span className=\"display-text\">{martial_weapons}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Armor</span>\n              <span className=\"display-text\">{armor}</span>\n          </div>\n          <div className=\"display-group\">\n              <span className=\"display-label\">Anatomy</span>\n              <span className=\"display-text\">{anatomy}</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    adventurerClasses: state.adventurerClasses.classes,\n    displayId: state.detail.targetId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDisplayForm: (payload) => dispatch({ type: SET_DETAIL_FORM, payload: payload }),\n    fetchAdventurerClasses: () => dispatch(fetchAdventurerClasses())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdventurerClassDisplay);","import React from 'react';\nimport './DetailView.css';\n\n// React component imports\n// item components\nimport PotionForm from '../../Components/PotionForm/PotionForm';\nimport PotionDisplay from '../../Components/PotionDisplay/PotionDisplay';\nimport WeaponForm from '../../Components/WeaponForm/WeaponForm';\nimport WeaponDisplay from '../../Components/WeaponDisplay/WeaponDisplay';\nimport ArmorForm from '../../Components/ArmorForm/ArmorForm';\nimport ArmorDisplay from '../../Components/ArmorDisplay/ArmorDisplay';\nimport SupplierForm from '../../Components/SupplierForm/SupplierForm';\nimport SupplierDisplay from '../../Components/SupplierDisplay/SupplierDisplay';\n// npc components\nimport TownBehaviorDisplay from '../../Components/TownBehaviorDisplay/TownBehaviorDisplay';\nimport TownBehaviorForm from '../../Components/TownBehaviorForm/TownBehaviorForm';\nimport DungeonBehaviorDisplay from '../../Components/DungeonBehaviorDisplay/DungeonBehaviorDisplay';\nimport DungeonBehaviorForm from '../../Components/DungeonBehaviorForm/DungeonBehaviorForm';\nimport AdventurerClassDisplay from '../../Components/AdventurerClassDisplay/AdventurerClassDisplay';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport { SET_DETAIL_REFRESH } from '../../actions/types';\n\nclass DetailView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = this.getDetail.bind(this);\n    this.getPotionDetail = this.getPotionDetail.bind(this);\n    this.getWeaponDetail = this.getWeaponDetail.bind(this);\n    this.getArmorDetail = this.getArmorDetail.bind(this);\n    this.getSupplierDetail = this.getSupplierDetail.bind(this);\n    this.getTownBehaviorDetail = this.getTownBehaviorDetail.bind(this);\n    this.getDungeonBehaviorDetail = this.getDungeonBehaviorDetail.bind(this);\n    this.getAdventurerClassDetail = this.getAdventurerClassDetail.bind(this);\n  }\n\n  getPotionDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <PotionForm />\n    } else {\n      return <PotionDisplay />\n    }\n  }\n\n  getWeaponDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <WeaponForm />\n    } else {\n      return <WeaponDisplay />\n    }\n  }\n\n  getArmorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <ArmorForm />\n    } else {\n      return <ArmorDisplay />\n    }\n  }\n\n  getSupplierDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <SupplierForm />\n    } else {\n      return <SupplierDisplay />\n    }\n  }\n\n  getTownBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <TownBehaviorForm />\n    } else {\n      return <TownBehaviorDisplay />\n    }\n  }\n\n  getDungeonBehaviorDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return <DungeonBehaviorForm />;\n    } else {\n      return <DungeonBehaviorDisplay />\n    }\n  }\n\n  getAdventurerClassDetail() {\n    if (this.props.targetId === null || this.props.edit) {\n      return 'AdventurerClassForm'\n    } else {\n      return <AdventurerClassDisplay />\n    }\n  }\n\n  getDetail() {\n    if (!this.props.formType) {\n      return (<div className=\"BlankForm\">no details to display</div>);\n    }\n    if (this.props.refresh) {\n      this.props.setRefresh(false);\n      return '';\n    }\n\n    switch(this.props.formType) {\n      case 'potion':\n        return this.getPotionDetail();\n      case 'weapon':\n        return this.getWeaponDetail();\n      case 'armor':\n        return this.getArmorDetail();\n      case 'supplier':\n        return this.getSupplierDetail();\n      case 'town_behavior':\n        return this.getTownBehaviorDetail();\n      case 'dungeon_behavior':\n        return this.getDungeonBehaviorDetail();\n      case 'adventurer_class':\n        return this.getAdventurerClassDetail();\n      default:\n        return (<div className=\"BlankForm\">detail type unknown</div>)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"DetailView\">\n        {this.getDetail()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    formType: state.detail.type,\n    targetId: state.detail.targetId,\n    edit: state.detail.edit,\n    refresh: state.detail.refresh\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRefresh: (value) => dispatch({ type: SET_DETAIL_REFRESH, value: value })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailView);","import React from 'react';\nimport './DialogBox.css';\n\nimport { connect } from 'react-redux';\nimport { SET_DIALOG } from '../../actions/types';\n\nclass DialogBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNo = this.handleNo.bind(this);\n    this.handleYes = this.handleYes.bind(this);\n  }\n  \n  handleNo(e) {\n    const clicked = e.target.classList;\n    if (clicked.contains('DialogBoxContainer') || clicked.contains('dialog-no-btn')) {\n      this.props.setDialog({ active: false, text: '', ref: null, yesCallback: null, noCallback: null })\n    }\n  }\n\n  handleYes() {\n    // dialogRef is attached to window method in component method\n    // that invokes dialogReducer to bring up dialog box\n    window.dialogRef.handleYes();\n  }\n  \n  render() {\n    return (\n      <div className=\"DialogBoxContainer\" \n        onClick={this.handleNo}>\n        <div className=\"DialogBox\">\n          <div className=\"dialog-heading-bar\">\n            <h2 className=\"dialog-heading\">Confirm Choice</h2>\n          </div>\n          <div className=\"dialog-prompt\">\n            {this.props.text}\n          </div>\n          <div className=\"dialog-button-bar\">\n            <button className=\"dialog-no-btn\" onClick={this.handleNo}>\n              NO\n            </button>\n            <button className=\"dialog-yes-btn\" onClick={this.handleYes}>\n              YES\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    text: state.dialog.text\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDialog: payload => dispatch({ type: SET_DIALOG, payload: payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogBox);","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport MenuBar from '../MenuBar/MenuBar';\nimport ObjectListColumn from '../../Containers/ObjectListColumn/ObjectListColumn';\nimport DetailView from '../../Containers/DetailView/DetailView';\nimport DialogBox from '../DialogBox/DialogBox';\n\n// redux imports\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getDialog = this.getDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  getDialog() {\n    if (!this.props.dialogActive) {\n      return ''\n    } else {\n      return <DialogBox />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <div className=\"AppContainer\">\n          <ObjectListColumn />\n          <DetailView />\n        </div>\n        {this.getDialog()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dialogActive: state.dialog.active\n  }\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import { SET_POTIONS } from '../actions/types';\n\nconst initialState = {\n  potions: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_POTIONS:\n      return {\n        ...state,\n        potions: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_DETAIL_FORM, SET_DETAIL_REFRESH } from '../actions/types';\n\nconst initialState = {\n  type: false,\n  targetId: null,\n  edit: false,\n  refresh: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DETAIL_FORM:\n      let newTargetId = action.payload.targetId;\n      let newEdit = action.payload.edit;\n      let newForm = action.payload.form;\n      return {\n        ...state,\n        type: newForm,\n        targetId: newTargetId,\n        edit: newEdit\n      }\n    case SET_DETAIL_REFRESH:\n      return {\n        ...state,\n        refresh: action.value\n      }\n    default:\n      return state;\n  }\n}","import { SET_DIALOG } from '../actions/types';\n\nconst initialState = {\n  active: false,\n  text: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIALOG:\n      return {\n        ...state,\n        active: action.payload.active,\n        text: action.payload.text\n      }\n    default:\n      return state;\n  }\n}","import { SET_WEAPONS } from '../actions/types';\n\nconst initialState = {\n  weapons: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEAPONS:\n      return {\n        ...state,\n        weapons: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ARMOR } from '../actions/types';\n\nconst initialState = {\n  armor: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ARMOR:\n      return {\n        ...state,\n        armor: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_SUPPLIERS } from '../actions/types';\n\nconst initialState = {\n  suppliers: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SUPPLIERS:\n      return {\n        ...state,\n        suppliers: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_TOWN_BEHAVIORS, SET_DUNGEON_BEHAVIORS } from '../actions/types';\n\nconst initialState = {\n  townBehaviors: null,\n  dungeonBehaviors: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SET_TOWN_BEHAVIORS:\n      return {\n        ...state,\n        townBehaviors: action.payload\n      }\n    case SET_DUNGEON_BEHAVIORS:\n      return {\n        ...state,\n        dungeonBehaviors: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { SET_ADVENTURER_CLASSES } from '../actions/types';\n\nconst initialState = {\n  classes: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_ADVENTURER_CLASSES:\n      return {\n        ...state,\n        classes: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport potionsReducer from './potionsReducer';\nimport detailReducer from './detailReducer';\nimport dialogReducer from './dialogReducer';\nimport weaponsReducer from './weaponsReducer';\nimport armorReducer from './armorReducer';\nimport supplierReducer from './supplierReducer';\nimport behaviorsReducer from './behaviorsReducer';\nimport adventurerClassReducer from './adventurerClassReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  potions: potionsReducer,\n  weapons: weaponsReducer,\n  detail: detailReducer,\n  dialog: dialogReducer,\n  armor: armorReducer,\n  suppliers: supplierReducer,\n  behaviors: behaviorsReducer,\n  adventurerClasses: adventurerClassReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch(action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './Components/App/App.jsx';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}